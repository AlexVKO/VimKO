!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
"	plugged/vim-notes/ftplugin/notes.vim	/^inoremap <buffer> <expr> " xolox#notes#insert_quote('"')$/;"	m
#	plugged/vim-polyglot/indent/ps1.vim	/^inoremap <buffer> # X#$/;"	m
$	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal \$$/;"	m
$	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! \$$/;"	m
$	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        normal! \$$/;"	m
$PYTHONWARNINGS	plugged/vim-polyglot/compiler/python.vim	/^  let $PYTHONWARNINGS="ignore"$/;"	v
%	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^	nmap <buffer> % <Plug>LatexBox_JumpToMatch$/;"	m
%	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^	omap <buffer> % <Plug>LatexBox_JumpToMatch$/;"	m
%	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^	vmap <buffer> % <Plug>LatexBox_JumpToMatch$/;"	m
'	plugged/vim-notes/ftplugin/notes.vim	/^inoremap <buffer> <expr> ' xolox#notes#insert_quote("'")$/;"	m
*	plugged/vim-notes/ftplugin/notes.vim	/^  inoremap <buffer> <expr> * xolox#notes#insert_bullet('*')$/;"	m
***	plugged/vim-notes/ftplugin/notes.vim	/^inoremap <buffer> *** <C-o>:call xolox#notes#insert_ruler()<CR>$/;"	m
+	plugged/vim-notes/ftplugin/notes.vim	/^  inoremap <buffer> <expr> + xolox#notes#insert_bullet('+')$/;"	m
,	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map , <Plug>(easymotion-prev)$/;"	m
,	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal ,$/;"	m
-	plugged/vim-notes/ftplugin/notes.vim	/^  inoremap <buffer> <expr> - xolox#notes#insert_bullet('-')$/;"	m
--	plugged/vim-notes/ftplugin/notes.vim	/^inoremap <buffer> <expr> -- xolox#notes#insert_em_dash()$/;"	m
->	plugged/vim-notes/ftplugin/notes.vim	/^inoremap <buffer> <expr> -> xolox#notes#insert_right_arrow()$/;"	m
.	plugged/vim-repeat/autoload/repeat.vim	/^    nmap . <Plug>(RepeatDot)$/;"	m
/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
/	plugged/vim-easymotion/t/smartsign_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
/,,1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal \/,,1$/;"	m
/,<1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal \/,<1$/;"	m
0	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! 0$/;"	m
0	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        normal! 0$/;"	m
0	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal! 0$/;"	m
1000mg	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 1000mg$/;"	m
10G	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 10G$/;"	m
10gg	plugged/vim-textobj-entire/t/jumplist.vim	/^    normal! 10gg$/;"	m
11gg	plugged/vim-textobj-entire/t/jumplist.vim	/^    normal! 11gg$/;"	m
12G	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 12G$/;"	m
1Gvany	plugged/vim-textobj-user/t/single-character-objects.vim	/^    normal 1Gvany$/;"	m
2,	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal 2,$/;"	m
2G	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 2G$/;"	m
2Gf2vany	plugged/vim-textobj-user/t/single-character-objects.vim	/^    normal 2Gf2vany$/;"	m
2Gvany	plugged/vim-textobj-user/t/single-character-objects.vim	/^    normal 2Gvany$/;"	m
2gg	plugged/vim-textobj-entire/t/jumplist.vim	/^    normal! 2gg$/;"	m
2mg	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 2mg$/;"	m
2mjj	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 2mjj$/;"	m
3;	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal 3;$/;"	m
3G	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 3G$/;"	m
3Gcilxyzzy	plugged/vim-textobj-user/t/keep-marks.vim	/^      normal 3Gcilxyzzy$/;"	m
3Gyal	plugged/vim-textobj-user/t/keep-marks.vim	/^      normal 3Gyal$/;"	m
3Gyil	plugged/vim-textobj-user/t/keep-marks.vim	/^      normal 3Gyil$/;"	m
3gg	plugged/vim-textobj-entire/t/jumplist.vim	/^    normal! 3gg$/;"	m
3mjj	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 3mjj$/;"	m
3mkk	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 3mkk$/;"	m
4,	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal 4,$/;"	m
4G	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 4G$/;"	m
4G	plugged/vim-textobj-indent/t/basics.vim	/^    normal! 4G$/;"	m
4gg	plugged/vim-textobj-entire/t/jumplist.vim	/^    normal! 4gg$/;"	m
5G	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 5G$/;"	m
5gg	plugged/vim-textobj-entire/t/jumplist.vim	/^    normal! 5gg$/;"	m
5gg9|	plugged/vim-textobj-entire/t/mark.vim	/^    normal! 5gg9|$/;"	m
6gg	plugged/vim-textobj-entire/t/jumplist.vim	/^    normal! 6gg$/;"	m
7gg	plugged/vim-textobj-entire/t/jumplist.vim	/^    normal! 7gg$/;"	m
8G	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 8G$/;"	m
8mg	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 8mg$/;"	m
999mjj	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 999mjj$/;"	m
999mkk	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal 999mkk$/;"	m
;	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map ; <Plug>(easymotion-next)$/;"	m
;	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal ;$/;"	m
<-	plugged/vim-notes/ftplugin/notes.vim	/^inoremap <buffer> <expr> <- xolox#notes#insert_left_arrow()$/;"	m
<->	plugged/vim-notes/ftplugin/notes.vim	/^inoremap <buffer> <expr> <-> xolox#notes#insert_bidi_arrow()$/;"	m
<2-leftmouse>	plugged/vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <2-leftmouse> :call <SID>TOCActivate(1)<cr>$/;"	m
<A-Left>	plugged/vim-notes/ftplugin/notes.vim	/^  inoremap <buffer> <silent> <A-Left> <C-o>:call xolox#notes#indent_list(-1, line('.'), line('.'))<CR>$/;"	m
<A-Right>	plugged/vim-notes/ftplugin/notes.vim	/^  inoremap <buffer> <silent> <A-Right> <C-o>:call xolox#notes#indent_list(1, line('.'), line('.'))<CR>$/;"	m
<C-G>S	plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	plugged/vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-R>	plugged/vim-repeat/autoload/repeat.vim	/^    nmap <C-R> <Plug>(RepeatRedo)$/;"	m
<C-S>	plugged/vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<C-W><C-D>	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W><C-D>  :<C-U>exe <SID>jump('split',v:count)<SID>foldopen<CR>$/;"	m
<C-W>d	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> <C-W>d      :<C-U>exe <SID>jump('split',v:count)<SID>foldopen<CR>$/;"	m
<C-W>m	plugged/vim-zoom/plugin/zoom.vim	/^  nmap <C-W>m <Plug>(zoom-toggle)$/;"	m
<C-X><CR>	plugged/vim-endwise/plugin/endwise.vim	/^    imap <script> <C-X><CR> <CR><SID>AlwaysEnd$/;"	m
<CR>	plugged/vim-endwise/plugin/endwise.vim	/^    imap <CR> <CR><Plug>DiscretionaryEnd$/;"	m
<CR>	plugged/vim-notes/ftplugin/notes.vim	/^inoremap <buffer> <silent> <expr> <CR> xolox#notes#cleanup_list()$/;"	m
<CR>	plugged/vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <CR> :call <SID>TOCActivate(1)<CR>$/;"	m
<D-R>	plugged/vim-polyglot/ftplugin/rust.vim	/^nnoremap <buffer> <D-R> :RustRun! <C-r>=join(b:rust_last_rustc_args)<CR><C-\\>erust#AppendCmdLine(' -- ' . join(b:rust_last_args))<CR>$/;"	m
<D-r>	plugged/vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> <D-r> :RustRun<CR>$/;"	m
<Esc>	plugged/vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc> :call <SID>TOCClose()<CR>$/;"	m
<Esc>OA	plugged/vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc>OA k$/;"	m
<Esc>OB	plugged/vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc>OB j$/;"	m
<Esc>OC	plugged/vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc>OC l$/;"	m
<Esc>OD	plugged/vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Esc>OD h$/;"	m
<F2>	plugged/vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F2> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R && echo -e 'Interpreter has finished. Exiting. Goodbye.\\n'"&<CR><CR>$/;"	m
<F2>	plugged/vim-polyglot/ftplugin/rhelp.vim	/^noremap <buffer> <F2> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R && echo -e 'Interpreter has finished. Exiting. Goodbye.\\n'"&<CR><CR>$/;"	m
<F2>	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^noremap <buffer> <F2> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R && echo -e 'Interpreter has finished. Exiting. Goodbye.\\n'"&<CR><CR>$/;"	m
<F3>	plugged/vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F3> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R-devel && echo 'Interpreter has finished. Exiting. Goodbye.'"&<CR><CR>$/;"	m
<F4>	plugged/vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F4> :!xterm -T 'R' -e funnel.pl ~\/.r-pipe "R -vanilla && echo 'Interpreter has finished. Exiting. Goodbye.'"&<CR><CR>$/;"	m
<F5>	plugged/vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F5> :execute '1 ,' line("$") 'w >> ~\/.r-pipe' <CR><CR>$/;"	m
<F9>	plugged/vim-polyglot/ftplugin/r.vim	/^inoremap <buffer> <F9> <Esc> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	plugged/vim-polyglot/ftplugin/r.vim	/^noremap <buffer> <F9> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	plugged/vim-polyglot/ftplugin/rhelp.vim	/^inoremap <buffer> <F9> <Esc> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	plugged/vim-polyglot/ftplugin/rhelp.vim	/^noremap <buffer> <F9> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^inoremap <buffer> <F9> <Esc> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<F9>	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^noremap <buffer> <F9> :execute line(".") 'w >> ~\/.r-pipe'<CR>$/;"	m
<Leader><Leader>	plugged/vim-easymotion/plugin/EasyMotion.vim	/^            map <Leader><Leader> <Plug>(easymotion-prefix)$/;"	m
<Leader>B	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>B <Plug>(easymotion-B)$/;"	m
<Leader>E	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>E <Plug>(easymotion-E)$/;"	m
<Leader>W	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>W <Plug>(easymotion-W)$/;"	m
<Leader>b	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>b <Plug>(easymotion-iskeyword-b)$/;"	m
<Leader>b	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map <Leader>b <Plug>(easymotion-iskeyword-b)$/;"	m
<Leader>e	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>e <Plug>(easymotion-iskeyword-e)$/;"	m
<Leader>en	plugged/vim-notes/ftplugin/notes.vim	/^vnoremap <buffer> <silent> <Leader>en :NoteFromSelectedText<CR>$/;"	m
<Leader>fr	plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fr :FufFile <c-r>=scala#GetRootDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
<Leader>fs	plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>fs :FufFile <c-r>=scala#GetMainDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
<Leader>ft	plugged/vim-polyglot/ftplugin/scala.vim	/^      nnoremap <buffer> <silent> <Leader>ft :FufFile <c-r>=scala#GetTestDirForFuzzyFinder('%:p:h')<cr><cr>$/;"	m
<Leader>gE	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>gE <Plug>(easymotion-gE)$/;"	m
<Leader>ge	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>ge <Plug>(easymotion-iskeyword-ge)$/;"	m
<Leader>ig	plugged/vim-indent-guides/plugin/indent_guides.vim	/^  nmap <silent><unique> <Leader>ig <Plug>IndentGuidesToggle$/;"	m
<Leader>rf	plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rf :TextileRenderFile<CR>$/;"	m
<Leader>rp	plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rp :TextilePreview<CR>$/;"	m
<Leader>rt	plugged/vim-polyglot/ftplugin/textile.vim	/^noremap <buffer> <Leader>rt :TextileRenderTab<CR>$/;"	m
<Leader>sn	plugged/vim-notes/ftplugin/notes.vim	/^vnoremap <buffer> <silent> <Leader>sn :SplitNoteFromSelectedText<CR>$/;"	m
<Leader>tn	plugged/vim-notes/ftplugin/notes.vim	/^vnoremap <buffer> <silent> <Leader>tn :TabNoteFromSelectedText<CR>$/;"	m
<Leader>w	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap <Leader>w <Plug>(easymotion-iskeyword-w)$/;"	m
<Leader>w	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map <Leader>w <Plug>(easymotion-iskeyword-w)$/;"	m
<LocalLeader>C	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>C <Plug>LUncomOff$/;"	m
<LocalLeader>C	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    vmap <buffer> <LocalLeader>C <Plug>BUncomOff$/;"	m
<LocalLeader>S	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  map <LocalLeader>S :call OCaml_switch(1)<CR>$/;"	m
<LocalLeader>b	plugged/vim-polyglot/ftplugin/elm.vim	/^  nmap <buffer> <LocalLeader>b <Plug>(elm-make-main)$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    nmap <buffer> <LocalLeader>c <Plug>LUncomOn$/;"	m
<LocalLeader>c	plugged/vim-polyglot/ftplugin/ocaml.vim	/^    vmap <buffer> <LocalLeader>c <Plug>BUncomOn$/;"	m
<LocalLeader>d	plugged/vim-polyglot/ftplugin/elm.vim	/^  nmap <buffer> <LocalLeader>d <Plug>(elm-show-docs)$/;"	m
<LocalLeader>d	plugged/vim-polyglot/ftplugin/ocaml.vim	/^map <LocalLeader>d :call OCamlGotoDefinition("normal")<RETURN>$/;"	m
<LocalLeader>d	plugged/vim-polyglot/ftplugin/ocaml.vim	/^vmap <LocalLeader>d :call OCamlGotoDefinition("visual")<RETURN>$/;"	m
<LocalLeader>e	plugged/vim-polyglot/ftplugin/elm.vim	/^  nmap <buffer> <LocalLeader>e <Plug>(elm-error-detail)$/;"	m
<LocalLeader>lC	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lC :LatexmkClean!<CR>$/;"	m
<LocalLeader>lG	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lG :LatexmkStatus!<CR>$/;"	m
<LocalLeader>lL	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lL :Latexmk!<CR>$/;"	m
<LocalLeader>lc	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lc :LatexmkClean<CR>$/;"	m
<LocalLeader>le	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>le :LatexErrors<CR>$/;"	m
<LocalLeader>lf	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^	noremap <buffer> <LocalLeader>lf :LatexFold<CR>$/;"	m
<LocalLeader>lg	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lg :LatexmkStatus<CR>$/;"	m
<LocalLeader>lj	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <silent> <buffer> <LocalLeader>lj :LatexLabels<CR>$/;"	m
<LocalLeader>lk	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lk :LatexmkStop<CR>$/;"	m
<LocalLeader>ll	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>ll :Latexmk<CR>$/;"	m
<LocalLeader>lt	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <silent> <buffer> <LocalLeader>lt :LatexTOC<CR>$/;"	m
<LocalLeader>lv	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap <buffer> <LocalLeader>lv :LatexView<CR>$/;"	m
<LocalLeader>m	plugged/vim-polyglot/ftplugin/elm.vim	/^  nmap <buffer> <LocalLeader>m <Plug>(elm-make)$/;"	m
<LocalLeader>r	plugged/vim-polyglot/ftplugin/elm.vim	/^  nmap <buffer> <LocalLeader>r <Plug>(elm-repl)$/;"	m
<LocalLeader>s	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  map <LocalLeader>s :call OCaml_switch(0)<CR>$/;"	m
<LocalLeader>t	plugged/vim-polyglot/ftplugin/elm.vim	/^  nmap <buffer> <LocalLeader>t <Plug>(elm-test)$/;"	m
<LocalLeader>t	plugged/vim-polyglot/ftplugin/ocaml.vim	/^map <LocalLeader>t :call OCamlPrintType("normal")<RETURN>$/;"	m
<LocalLeader>t	plugged/vim-polyglot/ftplugin/ocaml.vim	/^vmap <LocalLeader>t :call OCamlPrintType("visual")<RETURN>$/;"	m
<LocalLeader>w	plugged/vim-polyglot/ftplugin/elm.vim	/^  nmap <buffer> <LocalLeader>w <Plug>(elm-browse-docs)$/;"	m
<M-Enter>	plugged/vim-polyglot/ftplugin/r.vim	/^inoremap <M-Enter> <Esc>:execute line(".") 'w >> ~\/.r-pipe'<CR>o$/;"	m
<M-Enter>	plugged/vim-polyglot/ftplugin/rhelp.vim	/^inoremap <M-Enter> <Esc>:execute line(".") 'w >> ~\/.r-pipe'<CR>o$/;"	m
<M-Enter>	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^inoremap <M-Enter> <Esc>:execute line(".") 'w >> ~\/.r-pipe'<CR>o$/;"	m
<Plug>(-fzf-complete-trigger)	plugged/fzf.vim/autoload/fzf/vim.vim	/^inoremap <silent> <Plug>(-fzf-complete-trigger) <c-o>:call <sid>complete_trigger()<cr>$/;"	m
<Plug>(RepeatDot)	plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatDot)      :<C-U>exe repeat#run(v:count)<CR>$/;"	m
<Plug>(RepeatRedo)	plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatRedo)     :<C-U>call repeat#wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<Plug>(RepeatUndo)	plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndo)     :<C-U>call repeat#wrap('u',v:count)<CR>$/;"	m
<Plug>(RepeatUndoLine)	plugged/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <Plug>(RepeatUndoLine) :<C-U>call repeat#wrap('U',v:count)<CR>$/;"	m
<Plug>(crystal-format)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-format) :<C-u>CrystalFormat<CR>$/;"	m
<Plug>(crystal-jump-to-definition)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-jump-to-definition) :<C-u>CrystalDef<CR>$/;"	m
<Plug>(crystal-show-context)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-show-context) :<C-u>CrystalContext<CR>$/;"	m
<Plug>(crystal-spec-run-all)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-run-all) :<C-u>CrystalSpecRunAll<CR>$/;"	m
<Plug>(crystal-spec-run-current)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-run-current) :<C-u>CrystalSpecRunCurrent<CR>$/;"	m
<Plug>(crystal-spec-switch)	plugged/vim-polyglot/ftplugin/crystal.vim	/^nnoremap <buffer><Plug>(crystal-spec-switch) :<C-u>CrystalSpecSwitch<CR>$/;"	m
<Plug>(easymotion-activate)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-activate) :<C-u>call EasyMotion#activate(0)<CR>$/;"	m
<Plug>(easymotion-dotrepeat)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-dotrepeat)$/;"	m
<Plug>(easymotion-next)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-next)$/;"	m
<Plug>(easymotion-overwin-f)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-f) :<C-u>call EasyMotion#OverwinF(1)<CR>$/;"	m
<Plug>(easymotion-overwin-f2)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-f2) :<C-u>call EasyMotion#OverwinF(2)<CR>$/;"	m
<Plug>(easymotion-overwin-line)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-line) :<C-u>call EasyMotion#overwin#line()<CR>$/;"	m
<Plug>(easymotion-overwin-w)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^nnoremap <silent> <Plug>(easymotion-overwin-w) :<C-u>call EasyMotion#overwin#w()<CR>$/;"	m
<Plug>(easymotion-prev)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-prev)$/;"	m
<Plug>(easymotion-repeat)	plugged/vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-repeat)$/;"	m
<Plug>(multiple-cursors-apply)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-apply) <C-o>:call <SID>apply_user_input_next('i')<CR>$/;"	m
<Plug>(multiple-cursors-apply)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-apply) :call <SID>apply_user_input_next('n')<CR>$/;"	m
<Plug>(multiple-cursors-detect)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-detect) <C-o>:call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(multiple-cursors-detect)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-detect) :call <SID>detect_bad_input()<CR>$/;"	m
<Plug>(multiple-cursors-input)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-input) <C-o>:call <SID>process_user_input()<CR>$/;"	m
<Plug>(multiple-cursors-input)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-input) :call <SID>process_user_input()<CR>$/;"	m
<Plug>(multiple-cursors-new)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-new) :<C-u>call multiple_cursors#new('v', 0)<CR>$/;"	m
<Plug>(multiple-cursors-new-word)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-new-word) :<C-u>call multiple_cursors#new('v', 1)<CR>$/;"	m
<Plug>(multiple-cursors-prev)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-prev) :<C-u>call multiple_cursors#prev()<CR>$/;"	m
<Plug>(multiple-cursors-skip)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-skip) :<C-u>call multiple_cursors#skip()<CR>$/;"	m
<Plug>(multiple-cursors-wait)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^inoremap <silent> <Plug>(multiple-cursors-wait) <C-o>:call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>(multiple-cursors-wait)	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^nnoremap <silent> <Plug>(multiple-cursors-wait) :call <SID>wait_for_user_input('')<CR>$/;"	m
<Plug>(peekaboo)	plugged/vim-peekaboo/plugin/peekaboo.vim	/^inoremap <silent> <Plug>(peekaboo) <c-\\><c-o>:<c-u>call peekaboo#aboo()<cr>$/;"	m
<Plug>(peekaboo)	plugged/vim-peekaboo/plugin/peekaboo.vim	/^nnoremap <silent> <Plug>(peekaboo) :<c-u>call peekaboo#aboo()<cr>$/;"	m
<Plug>(textobj-datetime-time2)	plugged/vim-textobj-user/t/map.vim	/^    noremap <buffer> <Plug>(textobj-datetime-time2)  <Nop>$/;"	m
<Plug>(textobj-datetime-time3)	plugged/vim-textobj-user/t/map.vim	/^    noremap <buffer> <Plug>(textobj-datetime-time3)  <Nop>$/;"	m
<Plug>(zoom-toggle)	plugged/vim-zoom/plugin/zoom.vim	/^nnoremap <silent> <Plug>(zoom-toggle) :call zoom#toggle()<CR>$/;"	m
<Plug><cfile>	plugged/vim-polyglot/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><cfile> substitute(RubyCursorFile(),'^$',"\\022\\006",'')$/;"	m
<Plug><cfile>	plugged/vim-ruby/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><cfile> substitute(RubyCursorFile(),'^$',"\\022\\006",'')$/;"	m
<Plug><cword>	plugged/vim-polyglot/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><cword> substitute(RubyCursorIdentifier(),'^$',"\\022\\027",'')$/;"	m
<Plug><cword>	plugged/vim-ruby/ftplugin/ruby.vim	/^cmap <buffer><script><expr> <Plug><cword> substitute(RubyCursorIdentifier(),'^$',"\\022\\027",'')$/;"	m
<Plug>AlwaysEnd	plugged/vim-endwise/plugin/endwise.vim	/^  imap    <script> <Plug>AlwaysEnd        <SID>AlwaysEnd$/;"	m
<Plug>AutoPairsReturn	plugged/auto-pairs/plugin/auto-pairs.vim	/^imap <script> <Plug>AutoPairsReturn <SID>AutoPairsReturn$/;"	m
<Plug>BUncomOff	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  vnoremap <buffer> <Plug>BUncomOff <ESC>:'<,'><CR>`<dd`>dd`<$/;"	m
<Plug>BUncomOn	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  vnoremap <buffer> <Plug>BUncomOn <ESC>:'<,'><CR>`<O<ESC>0i(*<ESC>`>o<ESC>0i*)<ESC>`<$/;"	m
<Plug>CSurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>ChangeCommentary	plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <silent> <Plug>ChangeCommentary c:<C-U>call <SID>textobject(1)<CR>$/;"	m
<Plug>Commentary	plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>Commentary     <SID>go()$/;"	m
<Plug>Commentary	plugged/vim-commentary/plugin/commentary.vim	/^onoremap <silent> <Plug>Commentary        :<C-U>call <SID>textobject(0)<CR>$/;"	m
<Plug>CommentaryLine	plugged/vim-commentary/plugin/commentary.vim	/^nnoremap <expr>   <Plug>CommentaryLine <SID>go() . '_'$/;"	m
<Plug>CommentaryUndo	plugged/vim-commentary/plugin/commentary.vim	/^nmap <silent> <Plug>CommentaryUndo :echoerr "Change your <Plug>CommentaryUndo map to <Plug>Commentary<Plug>Commentary"<CR>$/;"	m
<Plug>Csurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>DiscretionaryEnd	plugged/vim-endwise/plugin/endwise.vim	/^  imap    <script> <Plug>DiscretionaryEnd <SID>DiscretionaryEnd$/;"	m
<Plug>Dsurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>GitGutterNextHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk &diff ? ']c' : ":\\<C-U>execute v:count1 . 'GitGutterNextHunk'\\<CR>"$/;"	m
<Plug>GitGutterPrevHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk &diff ? '[c' : ":\\<C-U>execute v:count1 . 'GitGutterPrevHunk'\\<CR>"$/;"	m
<Plug>GitGutterPreviewHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk :GitGutterPreviewHunk<CR>$/;"	m
<Plug>GitGutterStageHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk   :GitGutterStageHunk<CR>$/;"	m
<Plug>GitGutterTextObjectInnerPending	plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>GitGutterTextObjectInnerPending :<C-U>call gitgutter#hunk#text_object(1)<CR>$/;"	m
<Plug>GitGutterTextObjectOuterPending	plugged/vim-gitgutter/plugin/gitgutter.vim	/^onoremap <silent> <Plug>GitGutterTextObjectOuterPending :<C-U>call gitgutter#hunk#text_object(0)<CR>$/;"	m
<Plug>GitGutterUndoHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterUndoHunk    :GitGutterUndoHunk<CR>$/;"	m
<Plug>ISurround	plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>IndentGuidesDisable	plugged/vim-indent-guides/plugin/indent_guides.vim	/^nnoremap <unique><script> <Plug>IndentGuidesDisable :IndentGuidesDisable<CR>$/;"	m
<Plug>IndentGuidesEnable	plugged/vim-indent-guides/plugin/indent_guides.vim	/^nnoremap <unique><script> <Plug>IndentGuidesEnable  :IndentGuidesEnable<CR>$/;"	m
<Plug>IndentGuidesToggle	plugged/vim-indent-guides/plugin/indent_guides.vim	/^nnoremap <unique><script> <Plug>IndentGuidesToggle  :IndentGuidesToggle<CR>$/;"	m
<Plug>Isurround	plugged/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>LUncomOff	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOff :s\/^(\\* \\(.*\\) \\*)\/\\1\/<CR>:noh<CR>$/;"	m
<Plug>LUncomOn	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  nnoremap <buffer> <Plug>LUncomOn mz0i(* <ESC>$A *)<ESC>`z$/;"	m
<Plug>LatexBox_JumpToMatch	:call	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^nnoremap <silent> <Plug>LatexBox_JumpToMatch	:call <SID>FindMatchingPair('n')<CR>$/;"	m
<Plug>LatexBox_JumpToMatch	:call	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_JumpToMatch	:call <SID>FindMatchingPair('v')<CR>$/;"	m
<Plug>LatexBox_JumpToMatch	v:call	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^onoremap <silent> <Plug>LatexBox_JumpToMatch	v:call <SID>FindMatchingPair('o')<CR>$/;"	m
<Plug>LatexBox_SelectCurrentEnvInner	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_SelectCurrentEnvInner :<C-U>call <SID>SelectCurrentEnv('inner')<CR>$/;"	m
<Plug>LatexBox_SelectCurrentEnvOuter	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_SelectCurrentEnvOuter :<C-U>call <SID>SelectCurrentEnv('outer')<CR>$/;"	m
<Plug>LatexBox_SelectInlineMathInner	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_SelectInlineMathInner$/;"	m
<Plug>LatexBox_SelectInlineMathOuter	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^vnoremap <silent> <Plug>LatexBox_SelectInlineMathOuter$/;"	m
<Plug>LatexChangeEnv				:call	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^nnoremap <silent> <Plug>LatexChangeEnv				:call <SID>ChangeEnvPrompt()<CR>$/;"	m
<Plug>LatexCloseCurEnv			<C-R>=<SID>CloseCurEnv()<CR>	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^inoremap <silent> <Plug>LatexCloseCurEnv			<C-R>=<SID>CloseCurEnv()<CR>$/;"	m
<Plug>LatexEnvWrapFmtSelection	:<c-u>call	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^vnoremap <silent> <Plug>LatexEnvWrapFmtSelection	:<c-u>call <SID>PromptEnvWrapSelection(1)<CR>$/;"	m
<Plug>LatexEnvWrapSelection		:<c-u>call	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^vnoremap <silent> <Plug>LatexEnvWrapSelection		:<c-u>call <SID>PromptEnvWrapSelection()<CR>$/;"	m
<Plug>LatexToggleStarEnv			:call	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^nnoremap <silent> <Plug>LatexToggleStarEnv			:call <SID>LatexToggleStarEnv()<CR>$/;"	m
<Plug>LatexWrapSelection			:<c-u>call	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^vnoremap <silent> <Plug>LatexWrapSelection			:<c-u>call <SID>WrapSelection('')<CR>i$/;"	m
<Plug>SuperTabBackward	plugged/supertab/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabBackward <c-r>=SuperTab('p')<cr>$/;"	m
<Plug>SuperTabForward	plugged/supertab/plugin/supertab.vim	/^  imap <script> <Plug>SuperTabForward <c-r>=SuperTab('n')<cr>$/;"	m
<Plug>SurroundRepeat	plugged/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>VSurround	plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	plugged/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>XTablineCdCurrent	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdCurrent :cd %:p:h<cr>:doautocmd BufAdd<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdDown1	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown1   :cd %:p:h:h<cr>:doautocmd BufAdd<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdDown2	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown2   :cd %:p:h:h:h<cr>:doautocmd BufAdd<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdDown3	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdDown3   :cd %:p:h:h:h:h<cr>:doautocmd BufAdd<cr>:pwd<cr>$/;"	m
<Plug>XTablineCdHome	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        nnoremap <unique> <script> <Plug>XTablineCdHome    :cd ~<cr>:doautocmd BufAdd<cr>:pwd<cr>$/;"	m
<Plug>XTablineNextBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineNextBuffer <SID>NextBuffer$/;"	m
<Plug>XTablinePrevBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablinePrevBuffer <SID>PrevBuffer$/;"	m
<Plug>XTablineReopen	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineReopen <SID>ReopenLastTab$/;"	m
<Plug>XTablineSelectBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineSelectBuffer <SID>SelectBuffer$/;"	m
<Plug>XTablineToggleFiltering	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleFiltering <SID>ToggleFiltering$/;"	m
<Plug>XTablineToggleTabs	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <unique> <script> <Plug>XTablineToggleTabs <SID>ToggleTabs$/;"	m
<Plug>YSsurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSsurround <SID>opfunc2('setup').'_'$/;"	m
<Plug>YSurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>YSurround  <SID>opfunc2('setup')$/;"	m
<Plug>Yssurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Yssurround <SID>opfunc('setup').'g_'$/;"	m
<Plug>Ysurround	plugged/vim-surround/plugin/surround.vim	/^nnoremap <expr>   <Plug>Ysurround  <SID>opfunc('setup')$/;"	m
<S-Tab>	plugged/vim-notes/ftplugin/notes.vim	/^  inoremap <buffer> <silent> <S-Tab> <C-o>:call xolox#notes#indent_list(-1, line('.'), line('.'))<CR>$/;"	m
<SID>	plugged/vim-textobj-user/autoload/textobj/user.vim	/^nnoremap <SID>  <SID>$/;"	m
<SID>:	plugged/vim-fugitive/plugin/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>:	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>:  :<C-U>$/;"	m
<SID>:	plugged/vim-rails/autoload/rails.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>:	plugged/vim-ruby/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>:  :<C-U>$/;"	m
<SID>AlwaysEnd	plugged/vim-endwise/plugin/endwise.vim	/^  inoremap <silent> <SID>AlwaysEnd        <C-R>=<SID>crend(1)<CR>$/;"	m
<SID>AutoPairsReturn	plugged/auto-pairs/plugin/auto-pairs.vim	/^inoremap <silent> <SID>AutoPairsReturn <C-R>=AutoPairsReturn()<CR>$/;"	m
<SID>DiscretionaryEnd	plugged/vim-endwise/plugin/endwise.vim	/^  inoremap <silent> <SID>DiscretionaryEnd <C-R>=<SID>crend(0)<CR>$/;"	m
<SID>NextBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>NextBuffer airline#extensions#tabline#xtabline#next_buffer(v:count1)$/;"	m
<SID>PrevBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>PrevBuffer airline#extensions#tabline#xtabline#prev_buffer(v:count1)$/;"	m
<SID>ReopenLastTab	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ReopenLastTab :XTabReopen<cr>$/;"	m
<SID>SelectBuffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <expr> <SID>SelectBuffer g:xtabline_changing_buffer ? "\\<C-c>" : ":<C-u>call airline#extensions#tabline#xtabline#select_buffer(v:count)\\<cr>"$/;"	m
<SID>ToggleFiltering	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleFiltering :call airline#extensions#tabline#xtabline#toggle_buffers()<cr>$/;"	m
<SID>ToggleTabs	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^    nnoremap <silent> <SID>ToggleTabs :call airline#extensions#tabline#xtabline#toggle_tabs()<cr>$/;"	m
<SID>c:	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>c: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>c:	plugged/vim-ruby/ftplugin/ruby.vim	/^  nmap <buffer><script> <SID>c: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>foldopen	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  cnoremap <SID>foldopen <Bar>if &foldopen =~# 'tag'<Bar>exe 'norm! zv'<Bar>endif$/;"	m
<SID>tagzv	plugged/vim-polyglot/ftplugin/ruby.vim	/^  cmap <buffer><script><expr> <SID>tagzv &foldopen =~# 'tag' ? '<Bar>norm! zv' : ''$/;"	m
<SID>tagzv	plugged/vim-ruby/ftplugin/ruby.vim	/^  cmap <buffer><script><expr> <SID>tagzv &foldopen =~# 'tag' ? '<Bar>norm! zv' : ''$/;"	m
<SID>xx	plugged/vim-rails/autoload/rails.vim	/^map <SID>xx <SID>xx$/;"	m
<Space>	plugged/vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <Space> :call <SID>TOCActivate(0)<CR>$/;"	m
<Tab>	plugged/vim-notes/ftplugin/notes.vim	/^  inoremap <buffer> <silent> <Tab> <C-o>:call xolox#notes#indent_list(1, line('.'), line('.'))<CR>$/;"	m
<c-\>	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-\\> :TmuxNavigatePrevious<cr>$/;"	m
<c-h>	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-h> :TmuxNavigateLeft<cr>$/;"	m
<c-j>	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-j> :TmuxNavigateDown<cr>$/;"	m
<c-k>	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-k> :TmuxNavigateUp<cr>$/;"	m
<c-l>	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  nnoremap <silent> <c-l> :TmuxNavigateRight<cr>$/;"	m
<c-x>	plugged/supertab/plugin/supertab.vim	/^  inoremap <silent> <c-x> <c-r>=<SID>ManualCompletionEnter()<cr>$/;"	m
<cr>	plugged/supertab/plugin/supertab.vim	/^      inoremap <silent> <cr> <c-r>=<SID>SelectCompletion(1)<cr>$/;"	m
<f9>	plugged/vim-polyglot/ftplugin/racket.vim	/^nnoremap <buffer> <f9> :!racket -t %<cr>$/;"	m
<leader>cd2	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd2 <Plug>XTablineCdDown2$/;"	m
<leader>cd3	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cd3 <Plug>XTablineCdDown3$/;"	m
<leader>cdc	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdc <Plug>XTablineCdCurrent$/;"	m
<leader>cdd	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdd <Plug>XTablineCdDown1$/;"	m
<leader>cdh	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^        map <unique> <leader>cdh <Plug>XTablineCdHome$/;"	m
<leader>rap	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rap  :RAddParameter<cr>$/;"	m
<leader>rapn	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rapn :RAddParameterNB<cr>$/;"	m
<leader>rcpc	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rcpc :RConvertPostConditional<cr>$/;"	m
<leader>rec	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>rec  :RExtractConstant<cr>$/;"	m
<leader>rel	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rel  :RExtractLet<cr>$/;"	m
<leader>relv	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>relv :RExtractLocalVariable<cr>$/;"	m
<leader>rem	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>rem  :RExtractMethod<cr>$/;"	m
<leader>rit	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>rit  :RInlineTemp<cr>$/;"	m
<leader>riv	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  nnoremap <leader>riv  :RIntroduceVariable<cr>$/;"	m
<leader>rriv	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>rriv :RRenameInstanceVariable<cr>$/;"	m
<leader>rrlv	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  vnoremap <leader>rrlv :RRenameLocalVariable<cr>$/;"	m
<leftrelease>	plugged/vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> <leftrelease> :call <SID>TOCActivate(0)<cr>$/;"	m
<localleader>a	plugged/vim-polyglot/ftplugin/mail_vifm.vim	/^nnoremap <buffer> <silent> <localleader>a :call <sid>AddMailAttachments()<cr>$/;"	m
<plug>(-fzf-vim-do)	plugged/fzf.vim/autoload/fzf/vim.vim	/^nnoremap <plug>(-fzf-vim-do) :execute g:__fzf_command<cr>$/;"	m
<plug>(fzf-complete-buffer-line)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-buffer-line) fzf#vim#complete#buffer_line()$/;"	m
<plug>(fzf-complete-file)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -type f -print -o -type l -print \\| sed 's:^..::'")$/;"	m
<plug>(fzf-complete-file)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-file)      fzf#vim#complete#path('dir \/s\/b\/a:-d')$/;"	m
<plug>(fzf-complete-file-ag)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-file-ag)     fzf#vim#complete#path('ag -l -g ""')$/;"	m
<plug>(fzf-complete-line)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-line)        fzf#vim#complete#line()$/;"	m
<plug>(fzf-complete-path)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path("find . -path '*\/\\.*' -prune -o -print \\| sed '1d;s:^..::'")$/;"	m
<plug>(fzf-complete-path)	plugged/fzf.vim/plugin/fzf.vim	/^  inoremap <expr> <plug>(fzf-complete-path)      fzf#vim#complete#path('dir \/s\/b')$/;"	m
<plug>(fzf-complete-word)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <expr> <plug>(fzf-complete-word)        fzf#vim#complete#word()$/;"	m
<plug>(fzf-maps-i)	plugged/fzf.vim/plugin/fzf.vim	/^inoremap <silent> <plug>(fzf-maps-i) <c-o>:call fzf#vim#maps('i', 0)<cr>$/;"	m
<plug>(fzf-maps-n)	plugged/fzf.vim/plugin/fzf.vim	/^nnoremap <silent> <plug>(fzf-maps-n) :<c-u>call fzf#vim#maps('n', 0)<cr>$/;"	m
<plug>(fzf-maps-o)	plugged/fzf.vim/plugin/fzf.vim	/^onoremap <silent> <plug>(fzf-maps-o) <c-c>:<c-u>call fzf#vim#maps('o', 0)<cr>$/;"	m
<plug>(goyo-resize)	plugged/goyo.vim/autoload/goyo.vim	/^nnoremap <silent> <plug>(goyo-resize) :<c-u>call <sid>resize_pads()<cr>$/;"	m
<plug>(startify-open-buffers)	plugged/vim-startify/plugin/startify.vim	/^nnoremap <silent><plug>(startify-open-buffers) :<c-u>call startify#open_buffers()<cr>$/;"	m
<space>	plugged/vim-polyglot/after/ftplugin/terraform.vim	/^  nnoremap <space> za$/;"	m
<space>	plugged/vim-polyglot/after/ftplugin/terraform.vim	/^  onoremap <space> <C-C>za$/;"	m
<space>	plugged/vim-polyglot/after/ftplugin/terraform.vim	/^  vnoremap <space> zf$/;"	m
=	plugged/vim-polyglot/after/ftplugin/terraform.vim	/^  inoremap <buffer> <silent> = =<Esc>:call <SID>terraformalign()<CR>a$/;"	m
>	plugged/vim-polyglot/after/ftplugin/puppet.vim	/^    inoremap <buffer> <silent> > ><Esc>:call <SID>puppetalign()<CR>a$/;"	m
@	plugged/vim-notes/ftplugin/notes.vim	/^inoremap <buffer> <silent> <expr> @ xolox#notes#auto_complete_tags()$/;"	m
ALL	plugged/deoplete-jedi/tests/sphinx-3000.py	/^ALL = object()$/;"	v
ALWAYS	plugged/vim-snippets/pythonx/javascript_snippets.py	/^ALWAYS = 'always'$/;"	v
AR	plugged/vim-rails/autoload/rails.vim	/^function! s:AR(cmd,related,line1,line2,count,...) abort$/;"	f
ARR_D	plugged/ultisnips/test/constant.py	/^ARR_D = '\\x1bOB'$/;"	v
ARR_D	plugged/ultisnips/test/vim_interface.py	/^from test.constant import (ARR_D, ARR_L, ARR_R, ARR_U, BS, ESC, PYTHON3,$/;"	i
ARR_L	plugged/ultisnips/test/constant.py	/^ARR_L = '\\x1bOD'$/;"	v
ARR_L	plugged/ultisnips/test/vim_interface.py	/^from test.constant import (ARR_D, ARR_L, ARR_R, ARR_U, BS, ESC, PYTHON3,$/;"	i
ARR_R	plugged/ultisnips/test/constant.py	/^ARR_R = '\\x1bOC'$/;"	v
ARR_R	plugged/ultisnips/test/vim_interface.py	/^from test.constant import (ARR_D, ARR_L, ARR_R, ARR_U, BS, ESC, PYTHON3,$/;"	i
ARR_U	plugged/ultisnips/test/constant.py	/^ARR_U = '\\x1bOA'$/;"	v
ARR_U	plugged/ultisnips/test/vim_interface.py	/^from test.constant import (ARR_D, ARR_L, ARR_R, ARR_U, BS, ESC, PYTHON3,$/;"	i
ASE_IMAGE	plugged/ultisnips/Makefile	/^	docker build -t ultisnips:repro --build-arg BASE_IMAGE=$< -f Dockerfile.repro .$/;"	m
ATOM_EXT	plugged/alchemist.vim/erl_terms.py	/^ATOM_EXT = struct.pack("b", 100)          # 100 [UInt16:Len, Len:AtomName] max Len is 255$/;"	v
Abbrev	plugged/vim-rails/autoload/rails.vim	/^function! s:Abbrev(bang,...) abort$/;"	f
AccessModifier	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AccessModifier(cline_info) abort$/;"	f
AccessModifier	plugged/vim-ruby/indent/ruby.vim	/^function! s:AccessModifier(cline_info) abort$/;"	f
Add	plugged/vim-polyglot/syntax/cucumber.vim	/^function! s:Add(name)$/;"	f
AddBlockTag	plugged/vim-polyglot/indent/html.vim	/^func! s:AddBlockTag(tag, id, ...)$/;"	f
AddBookmarkRoot	plugged/vim-bookmarks/examples/bm-autoload-example.vim	/^function! AddBookmarkRoot(root)$/;"	f
AddBracketExpand	plugged/vim-rails/autoload/rails.vim	/^function! s:AddBracketExpand(abbr,expn)$/;"	f
AddColonExpand	plugged/vim-rails/autoload/rails.vim	/^function! s:AddColonExpand(abbr,expn)$/;"	f
AddFunc_Opt	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Opt(_AddFuncBase):$/;"	c
AddFunc_Simple	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddFunc_Simple(_AddFuncBase):$/;"	c
AddHighlighting	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^augroup AddHighlighting$/;"	a
AddHighlighting	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:AddHighlighting()$/;"	f
AddITags	plugged/vim-polyglot/indent/html.vim	/^func! s:AddITags(tags, taglist)$/;"	f
AddIndentByInd	plugged/vim-polyglot/indent/autohotkey.vim	/^function! AddIndentByInd(indent)$/;"	f
AddLine	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	plugged/vim-easymotion/t/easymotion_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	plugged/vim-easymotion/t/operator_pending_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	plugged/vim-easymotion/t/smartsign_spec.vim	/^function! AddLine(str)$/;"	f
AddMailAttachments	plugged/vim-polyglot/ftplugin/mail_vifm.vim	/^function! s:AddMailAttachments()$/;"	f
AddNewSnippetSource	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class AddNewSnippetSource(_VimTest):$/;"	c
AddParameter	plugged/vim-ruby-refactoring/plugin/refactorings/general/addparameter.vim	/^function! AddParameter()$/;"	f
AddParameterNB	plugged/vim-ruby-refactoring/plugin/refactorings/general/addparameternb.vim	/^function! AddParameterNB()$/;"	f
AddParenExpand	plugged/vim-rails/autoload/rails.vim	/^function! s:AddParenExpand(abbr,expn,...)$/;"	f
AddSelectiveExpand	plugged/vim-rails/autoload/rails.vim	/^function! s:AddSelectiveExpand(abbr,pat,expn,...)$/;"	f
AddTabExpand	plugged/vim-rails/autoload/rails.vim	/^function! s:AddTabExpand(abbr,expn)$/;"	f
AddTabularPattern	plugged/tabular/plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPattern$/;"	c
AddTabularPattern	plugged/tabular/plugin/Tabular.vim	/^function! AddTabularPattern(command, force)$/;"	f
AddTabularPipeline	plugged/tabular/plugin/Tabular.vim	/^com! -nargs=+ -bang AddTabularPipeline$/;"	c
AddTabularPipeline	plugged/tabular/plugin/Tabular.vim	/^function! AddTabularPipeline(command, force)$/;"	f
AddedSnippetsSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/__init__.py	/^from UltiSnips.snippet.source.added import AddedSnippetsSource$/;"	i
AddedSnippetsSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^class AddedSnippetsSource(SnippetSource):$/;"	c
AddedSnippetsSource	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    find_all_snippet_files, find_snippet_files, AddedSnippetsSource$/;"	i
AfterAccessModifier	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterAccessModifier(pline_info) abort$/;"	f
AfterAccessModifier	plugged/vim-ruby/indent/ruby.vim	/^function! s:AfterAccessModifier(pline_info) abort$/;"	f
AfterBlockOpening	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterBlockOpening(pline_info) abort$/;"	f
AfterBlockOpening	plugged/vim-ruby/indent/ruby.vim	/^function! s:AfterBlockOpening(pline_info) abort$/;"	f
AfterEndKeyword	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterEndKeyword(pline_info) abort$/;"	f
AfterEndKeyword	plugged/vim-ruby/indent/ruby.vim	/^function! s:AfterEndKeyword(pline_info) abort$/;"	f
AfterHangingSplat	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterHangingSplat(pline_info) abort$/;"	f
AfterHangingSplat	plugged/vim-ruby/indent/ruby.vim	/^function! s:AfterHangingSplat(pline_info) abort$/;"	f
AfterIndentKeyword	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterIndentKeyword(pline_info) abort$/;"	f
AfterIndentKeyword	plugged/vim-ruby/indent/ruby.vim	/^function! s:AfterIndentKeyword(pline_info) abort$/;"	f
AfterLeadingOperator	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterLeadingOperator(pline_info) abort$/;"	f
AfterLeadingOperator	plugged/vim-ruby/indent/ruby.vim	/^function! s:AfterLeadingOperator(pline_info) abort$/;"	f
AfterUnbalancedBracket	plugged/vim-polyglot/indent/ruby.vim	/^function! s:AfterUnbalancedBracket(pline_info) abort$/;"	f
AfterUnbalancedBracket	plugged/vim-ruby/indent/ruby.vim	/^function! s:AfterUnbalancedBracket(pline_info) abort$/;"	f
AirlineRefresh	plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineRefresh call s:airline_refresh()$/;"	c
AirlineTheme	plugged/vim-airline/plugin/airline.vim	/^command! -bar -nargs=? -complete=customlist,<sid>get_airline_themes AirlineTheme call <sid>airline_theme(<f-args>)$/;"	c
AirlineToggle	plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggle call s:airline_toggle()$/;"	c
AirlineToggleWhitespace	plugged/vim-airline/plugin/airline.vim	/^command! -bar AirlineToggleWhitespace call airline#extensions#whitespace#toggle()$/;"	c
AirlineWebDevIcons	plugged/vim-devicons/plugin/webdevicons.vim	/^function! AirlineWebDevIcons(...)$/;"	f
Alien2	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien2()$/;"	f
Alien3	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien3()$/;"	f
Alien4	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien4()$/;"	f
Alien5	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien5()$/;"	f
Alien6	plugged/vim-polyglot/indent/html.vim	/^func! s:Alien6()$/;"	f
Align	plugged/vim-gitgutter/test/runner.vim	/^function Align(left, right)$/;"	f
Alternate	plugged/vim-rails/autoload/rails.vim	/^function! s:Alternate(cmd,line1,line2,count,...) abort$/;"	f
AlternatePair	plugged/vim-polyglot/indent/javascript.vim	/^function s:AlternatePair()$/;"	f
Annotate	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! -nargs=* Annotate call CallDeprecatedCommand('BookmarkAnnotate', [<q-args>, 0])$/;"	c
Anon_NoTrigger_AfterSpace	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_AfterSpace(_AnonBase):$/;"	c
Anon_NoTrigger_BeginningOfLine	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_BeginningOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_FirstCharOfLine	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_FirstCharOfLine(_AnonBase):$/;"	c
Anon_NoTrigger_Multi	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Multi(_AnonBase):$/;"	c
Anon_NoTrigger_Simple	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_NoTrigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Multi	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Multi(_AnonBase):$/;"	c
Anon_Trigger_Opts	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Opts(_AnonBase):$/;"	c
Anon_Trigger_Simple	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Simple(_AnonBase):$/;"	c
Anon_Trigger_Twice	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class Anon_Trigger_Twice(_AnonBase):$/;"	c
AppleHelpBuilder	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class AppleHelpBuilder(StandaloneHTMLBuilder):$/;"	c
AppleHelpCodeSigningFailed	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class AppleHelpCodeSigningFailed(SphinxError):$/;"	c
AppleHelpIndexerFailed	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class AppleHelpIndexerFailed(SphinxError):$/;"	c
AssetEdit	plugged/vim-rails/autoload/rails.vim	/^function! s:AssetEdit(cmd, name, dir, suffix, fallbacks) abort$/;"	f
AutoLoadBookmarks	plugged/vim-bookmarks/examples/bm-autoload-example.vim	/^augroup AutoLoadBookmarks$/;"	a
AutoPairsBackInsert	plugged/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsBackInsert()$/;"	f
AutoPairsDelete	plugged/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsDelete()$/;"	f
AutoPairsFastWrap	plugged/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsFastWrap()$/;"	f
AutoPairsInit	plugged/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsInit()$/;"	f
AutoPairsInsert	plugged/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsInsert(key)$/;"	f
AutoPairsJump	plugged/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsJump()$/;"	f
AutoPairsMap	plugged/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsMap(key)$/;"	f
AutoPairsMoveCharacter	plugged/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsMoveCharacter(key)$/;"	f
AutoPairsReturn	plugged/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsReturn()$/;"	f
AutoPairsSpace	plugged/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsSpace()$/;"	f
AutoPairsToggle	plugged/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsToggle()$/;"	f
AutoPairsTryInit	plugged/auto-pairs/plugin/auto-pairs.vim	/^function! AutoPairsTryInit()$/;"	f
AutoUpdate	plugged/tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force, ...) abort$/;"	f
Autocommands	plugged/ultisnips/test/test_Autocommands.py	/^class Autocommands(_VimTest):$/;"	c
AutodocReporter	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class AutodocReporter(object):$/;"	c
AutoloadBookmarks	plugged/vim-bookmarks/examples/bm-autoload-example.vim	/^function! AutoloadBookmarks(file_name)$/;"	f
Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne(_VimTest):$/;"	c
Autotrigger_CanMatchContext	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchContext(_VimTest):$/;"	c
Autotrigger_CanMatchPreviouslySelectedPlaceholder	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchPreviouslySelectedPlaceholder(_VimTest):$/;"	c
Autotrigger_CanMatchSimpleTrigger	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_CanMatchSimpleTrigger(_VimTest):$/;"	c
Autotrigger_WillProduceNoExceptionWithVimLowerThan214	plugged/ultisnips/test/test_Autotrigger.py	/^class Autotrigger_WillProduceNoExceptionWithVimLowerThan214(_VimTest):$/;"	c
BASE_DIR	plugged/deoplete.nvim/test/conftest.py	/^BASE_DIR = os.path.dirname(os.path.dirname(__file__))$/;"	v
BINARY_EXT	plugged/alchemist.vim/erl_terms.py	/^BINARY_EXT = struct.pack("b", 109)        # [UInt32:Len, Len:Data]$/;"	v
BIT_BINARY_EXT	plugged/alchemist.vim/erl_terms.py	/^BIT_BINARY_EXT = 77     # [UInt32:Len, UInt8:Bits, Len:Data]$/;"	v
BRACES	plugged/ultisnips/test/vim_interface.py	/^    BRACES = re.compile('([}{])')$/;"	v	class:VimInterfaceWindows
BS	plugged/ultisnips/test/constant.py	/^BS = '\\x7f'$/;"	v
BS	plugged/ultisnips/test/vim_interface.py	/^from test.constant import (ARR_D, ARR_L, ARR_R, ARR_U, BS, ESC, PYTHON3,$/;"	i
BUILTIN_BUILDERS	plugged/deoplete-jedi/tests/sphinx-3000.py	/^BUILTIN_BUILDERS = {$/;"	v
Backspace_TabStop_NotZero	plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_NotZero(_VimTest):$/;"	c
Backspace_TabStop_Zero	plugged/ultisnips/test/test_Editing.py	/^class Backspace_TabStop_Zero(_VimTest):$/;"	c
Balanced	plugged/vim-polyglot/indent/javascript.vim	/^function s:Balanced(lnum,line)$/;"	f
Balanced	plugged/vim-polyglot/indent/typescript.vim	/^function s:Balanced(lnum)$/;"	f
Base	plugged/alchemist.vim/rplugin/python3/deoplete/sources/alchemist.py	/^from .base import Base$/;"	i
Base	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^from .base import Base$/;"	i
Base	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^from deoplete.source.base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^class Base(LoggingMixin):$/;"	c
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^class Base(LoggingMixin):$/;"	c
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^from .base import Base$/;"	i
Base	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^from .base import Base$/;"	i
Base	plugged/tmux-complete.vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^from .base import Base$/;"	i
Base	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^from .base import Base$/;"	i
Base	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^from .base import Base$/;"	i
BeginElementFound	plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginElementFound(stack, token, curr_vcol, stored_vcol, end_token, sw)$/;"	f
BeginElementFoundIfEmpty	plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginElementFoundIfEmpty(stack, token, curr_vcol, stored_vcol, sw)$/;"	f
BeginningOfClauseFound	plugged/vim-polyglot/indent/erlang.vim	/^function! s:BeginningOfClauseFound(stack, token, stored_vcol, lnum, i)$/;"	f
Blame	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
BlockComment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:BlockComment(cline_info) abort$/;"	f
BlockComment	plugged/vim-ruby/indent/ruby.vim	/^function! s:BlockComment(cline_info) abort$/;"	f
Bookmark.AddBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.CompareBookmarksByName	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CompareBookmarksByName(firstBookmark, secondBookmark)$/;"	f
Bookmark.GetNodeForName	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
Bookmark.GetSelected	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.SortBookmarksList	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.SortBookmarksList()$/;"	f
Bookmark.ToRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
Bookmark.Write	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
Bookmark.delete	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
Bookmark.openInNewTab	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
Bookmark.validate	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
BookmarkAnnotate	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! -nargs=* BookmarkAnnotate call BookmarkAnnotate(<q-args>, 0)$/;"	c
BookmarkAnnotate	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! BookmarkAnnotate(...)$/;"	f
BookmarkClear	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! BookmarkClear call BookmarkClear()$/;"	c
BookmarkClear	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! BookmarkClear()$/;"	f
BookmarkClearAll	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! BookmarkClearAll call BookmarkClearAll(0)$/;"	c
BookmarkClearAll	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! BookmarkClearAll(silent)$/;"	f
BookmarkLoad	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! -nargs=1 BookmarkLoad call BookmarkLoad(<f-args>, 0, 0)$/;"	c
BookmarkLoad	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! BookmarkLoad(target_file, startup, silent)$/;"	f
BookmarkModify	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! BookmarkModify(diff)$/;"	f
BookmarkMoveDown	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! -nargs=? BookmarkMoveDown call s:move_relative(<q-args>, 1)$/;"	c
BookmarkMoveToLine	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! -nargs=? BookmarkMoveToLine call s:move_absolute(<q-args>)$/;"	c
BookmarkMoveToLine	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! BookmarkMoveToLine(target)$/;"	f
BookmarkMoveUp	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! -nargs=? BookmarkMoveUp call s:move_relative(<q-args>, -1)$/;"	c
BookmarkNext	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! BookmarkNext call BookmarkNext()$/;"	c
BookmarkNext	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! BookmarkNext()$/;"	f
BookmarkPrev	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! BookmarkPrev call BookmarkPrev()$/;"	c
BookmarkPrev	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! BookmarkPrev()$/;"	f
BookmarkSave	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! -nargs=1 BookmarkSave call BookmarkSave(<f-args>, 0)$/;"	c
BookmarkSave	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! BookmarkSave(target_file, silent)$/;"	f
BookmarkShowAll	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! BookmarkShowAll call BookmarkShowAll()$/;"	c
BookmarkShowAll	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! BookmarkShowAll()$/;"	f
BookmarkToggle	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! BookmarkToggle call BookmarkToggle()$/;"	c
BookmarkToggle	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! BookmarkToggle()$/;"	f
Browse	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BrowserTest	plugged/vim-test/spec/fixtures/dusk/BrowserTest.php	/^class BrowserTest extends PHPUnit_Framework_TestCase$/;"	c
BufAbbreviations	plugged/vim-rails/autoload/rails.vim	/^function! s:BufAbbreviations()$/;"	f
BufCommands	plugged/vim-rails/autoload/rails.vim	/^function! s:BufCommands()$/;"	f
BufDatabase	plugged/vim-rails/autoload/rails.vim	/^function! s:BufDatabase(level, ...)$/;"	f
BufMappings	plugged/vim-rails/autoload/rails.vim	/^function! s:BufMappings() abort$/;"	f
BufNavCommands	plugged/vim-rails/autoload/rails.vim	/^function! s:BufNavCommands()$/;"	f
BufProjectionCommands	plugged/vim-rails/autoload/rails.vim	/^function! s:BufProjectionCommands() abort$/;"	f
BufReadIndex	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex() abort$/;"	f
BufReadIndexFile	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile() abort$/;"	f
BufReadObject	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject() abort$/;"	f
BufScriptWrappers	plugged/vim-rails/autoload/rails.vim	/^function! s:BufScriptWrappers()$/;"	f
BufWriteIndexFile	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile() abort$/;"	f
Bug1251994	plugged/ultisnips/test/test_Fixes.py	/^class Bug1251994(_VimTest):$/;"	c
BuildStructures	plugged/vim-polyglot/indent/twig.vim	/^fun! s:BuildStructures()$/;"	f
Builder	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class Builder(object):$/;"	c
BuiltinTemplateLoader	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            from sphinx.jinja2glue import BuiltinTemplateLoader$/;"	i
CBLACK	plugged/deoplete-jedi/mk/color.mk	/^CBLACK := \\x1b[30;01m$/;"	m
CBLUE	plugged/deoplete-jedi/mk/color.mk	/^CBLUE := \\x1b[34;01m$/;"	m
CCYAN	plugged/deoplete-jedi/mk/color.mk	/^CCYAN := \\x1b[36;01m$/;"	m
CGREEN	plugged/deoplete-jedi/mk/color.mk	/^CGREEN := \\x1b[32;01m$/;"	m
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r"^\\${VISUAL[:}\/]")$/;"	v	class:VisualToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^\\$\\d+')$/;"	v	class:MirrorToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^\\${\\d+[:}]')$/;"	v	class:TabStopToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^\\${\\d+\\\/')$/;"	v	class:TransformationToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^`!p\\s')$/;"	v	class:PythonCodeToken
CHECK	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    CHECK = re.compile(r'^`!v\\s')$/;"	v	class:VimLCodeToken
CJSX	plugged/vim-polyglot/ftdetect/polyglot.vim	/^augroup CJSX$/;"	a
CMAGENTA	plugged/deoplete-jedi/mk/color.mk	/^CMAGENTA := \\x1b[35;01m$/;"	m
CMakeGetIndent	plugged/vim-polyglot/indent/cmake.vim	/^fun! CMakeGetIndent(lnum)$/;"	f
COMPLETION_OPTIONS	plugged/ultisnips/test/test_Completion.py	/^COMPLETION_OPTIONS = 'completion1\\ncompletion2\\n'$/;"	v
COMPL_ACCEPT	plugged/ultisnips/test/constant.py	/^COMPL_ACCEPT = chr(25)$/;"	v
COMPL_KW	plugged/ultisnips/test/constant.py	/^COMPL_KW = chr(24) + chr(14)$/;"	v
COMPRESSED	plugged/alchemist.vim/erl_terms.py	/^COMPRESSED = 80         # [UInt4:UncompressedSize, N:ZlibCompressedData]$/;"	v
CONFIG_FILENAME	plugged/deoplete-jedi/tests/sphinx-3000.py	/^CONFIG_FILENAME = 'conf.py'$/;"	v
CRED	plugged/deoplete-jedi/mk/color.mk	/^CRED := \\x1b[31;01m$/;"	m
CRESET	plugged/deoplete-jedi/mk/color.mk	/^CRESET := \\x1b[0m$/;"	m
CSSIndent	plugged/vim-polyglot/indent/html.vim	/^func! s:CSSIndent()$/;"	f
CWHITE	plugged/deoplete-jedi/mk/color.mk	/^CWHITE := \\x1b[37;01m$/;"	m
CYELLOW	plugged/deoplete-jedi/mk/color.mk	/^CYELLOW := \\x1b[33;01m$/;"	m
CacheEntry	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^class CacheEntry(object):$/;"	c
CalcVCol	plugged/vim-polyglot/indent/erlang.vim	/^function! s:CalcVCol(line, first_index, last_index, vcol, tabstop)$/;"	f
CallBaseIndent	plugged/vim-polyglot/indent/twig.vim	/^function! s:CallBaseIndent()$/;"	f
CallDeprecatedCommand	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! CallDeprecatedCommand(fun, args)$/;"	f
Cancell	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:Cancell() " {{{$/;"	f
CannotSelect	plugged/vim-textobj-user/t/failed-selection.vim	/^function! CannotSelect()$/;"	f
CaptionEnv	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:CaptionEnv()$/;"	f
CaptionFrame	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:CaptionFrame(line)$/;"	f
CaptionTable	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:CaptionTable()$/;"	f
CaptureKeyMap	plugged/supertab/plugin/supertab.vim	/^function! s:CaptureKeyMap(key) " {{{$/;"	f
CaptureKeyPresses	plugged/supertab/plugin/supertab.vim	/^function! s:CaptureKeyPresses() " {{{$/;"	f
Center	plugged/tabular/autoload/tabular.vim	/^function! s:Center(string, fieldwidth)$/;"	f
ChangeEnvPrompt	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:ChangeEnvPrompt()$/;"	f
ChangeFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! s:ChangeFoldLevel(diff, force) abort$/;"	f
CharacterwiseSelectA	plugged/vim-textobj-user/t/selection.vim	/^function! CharacterwiseSelectA()$/;"	f
CharacterwiseSelectI	plugged/vim-textobj-user/t/selection.vim	/^function! CharacterwiseSelectI()$/;"	f
CheckBlockTag	plugged/vim-polyglot/indent/html.vim	/^func! s:CheckBlockTag(blocktag, ind)$/;"	f
CheckCustomTag	plugged/vim-polyglot/indent/html.vim	/^func! s:CheckCustomTag(ctag)$/;"	f
CheckDefined	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:CheckDefined(colors)$/;"	f
CheckExCtagsVersion	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
CheckFTCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
CheckForExCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
CheckForFunctions	plugged/vim-polyglot/syntax/octave.vim	/^function! s:CheckForFunctions()$/;"	f
CheckMouseClick	plugged/tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
CheckTag	plugged/vim-polyglot/indent/html.vim	/^func! s:CheckTag(itag)$/;"	f
Child	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^class Child(logger.LoggingMixin):$/;"	c
Child	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^    from deoplete.child import Child$/;"	i
Child	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^            from deoplete.child import Child$/;"	i
ChooseCommandMap	plugged/tabular/plugin/Tabular.vim	/^function! s:ChooseCommandMap(commandline)$/;"	f
ClassLevelDocumenter	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class ClassLevelDocumenter(Documenter):$/;"	c
ClearAllBookmarks	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! ClearAllBookmarks call CallDeprecatedCommand('BookmarkClearAll', [0])$/;"	c
ClearBookmarks	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! ClearBookmarks call CallDeprecatedCommand('BookmarkClear', [])$/;"	c
ClearTokenCacheIfNeeded	plugged/vim-polyglot/indent/erlang.vim	/^function! s:ClearTokenCacheIfNeeded()$/;"	f
Client	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^class Client(object):$/;"	c
Client	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^from .server import Client$/;"	i
Clog	plugged/vim-rails/autoload/rails.vim	/^function! s:Clog(bang, mods, arg) abort$/;"	f
CloseCurEnv	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:CloseCurEnv()$/;"	f
CloseFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
ClosePreview	plugged/supertab/plugin/supertab.vim	/^function! s:ClosePreview() " {{{$/;"	f
CloseWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
ClosingBracketOnEmptyLine	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ClosingBracketOnEmptyLine(cline_info) abort$/;"	f
ClosingBracketOnEmptyLine	plugged/vim-ruby/indent/ruby.vim	/^function! s:ClosingBracketOnEmptyLine(cline_info) abort$/;"	f
ClosingHeredocDelimiter	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ClosingHeredocDelimiter(cline_info) abort$/;"	f
ClosingHeredocDelimiter	plugged/vim-ruby/indent/ruby.vim	/^function! s:ClosingHeredocDelimiter(cline_info) abort$/;"	f
CoffeeBufNew	plugged/vim-polyglot/ftplugin/coffee.vim	/^augroup CoffeeBufNew | augroup END$/;"	a
CoffeeBufUpdate	plugged/vim-polyglot/ftplugin/coffee.vim	/^augroup CoffeeBufUpdate | augroup END$/;"	a
CoffeeCompile	plugged/vim-polyglot/ftplugin/coffee.vim	/^\\        CoffeeCompile call s:CoffeeCompile(<line1>, <line2>, <q-args>)$/;"	c
CoffeeCompile	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompile(startline, endline, args)$/;"	f
CoffeeCompileClose	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileClose()$/;"	f
CoffeeCompileResetVars	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileResetVars()$/;"	f
CoffeeCompileToBuf	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeCompileToBuf(buf, startline, endline)$/;"	f
CoffeeComplete	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeComplete(cmd, cmdline, cursor)$/;"	f
CoffeeLint	plugged/vim-polyglot/ftplugin/coffee.vim	/^command! -buffer -range=% -bang -bar -nargs=* CoffeeLint$/;"	c
CoffeeLint	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeLint(startline, endline, bang, args)$/;"	f
CoffeeMake	plugged/vim-polyglot/compiler/coffee.vim	/^command! -bang -bar -nargs=* CoffeeMake$/;"	c
CoffeeMakeDeprecated	plugged/vim-polyglot/compiler/coffee.vim	/^function! s:CoffeeMakeDeprecated(bang, args)$/;"	f
CoffeeRun	plugged/vim-polyglot/ftplugin/coffee.vim	/^command! -buffer -range=% -bar -nargs=* CoffeeRun$/;"	c
CoffeeRun	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRun(startline, endline, args)$/;"	f
CoffeeRunClose	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRunClose()$/;"	f
CoffeeRunResetVars	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeRunResetVars()$/;"	f
CoffeeUpdateMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^augroup CoffeeUpdateMakePrg$/;"	a
CoffeeWatch	plugged/vim-polyglot/ftplugin/coffee.vim	/^\\        CoffeeWatch call s:CoffeeWatch(<q-args>)$/;"	c
CoffeeWatch	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatch(args)$/;"	f
CoffeeWatchClose	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchClose()$/;"	f
CoffeeWatchResetVars	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchResetVars()$/;"	f
CoffeeWatchUpdate	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:CoffeeWatchUpdate()$/;"	f
CommandEdit	plugged/vim-rails/autoload/rails.vim	/^function! s:CommandEdit(cmd, name, projections, ...)$/;"	f
CommandLineCompletion	plugged/supertab/plugin/supertab.vim	/^function! s:CommandLineCompletion() " {{{$/;"	f
CommandList	plugged/vim-rails/autoload/rails.vim	/^function! s:CommandList(A,L,P)$/;"	f
CommentKeywordMatch	plugged/vim-polyglot/syntax/swift.vim	/^function! s:CommentKeywordMatch(keyword)$/;"	f
Commentary	plugged/vim-commentary/plugin/commentary.vim	/^command! -range -bar Commentary call s:go(<line1>,<line2>)$/;"	c
Commit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(mods, args, ...) abort$/;"	f
CommitComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompareMovements	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! CompareMovements(movement1, movement2, backward)$/;"	f
CompilerSet	plugged/vim-polyglot/compiler/cargo.vim	/^	command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/cucumber.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/eslint.vim	/^  command! -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/exunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/go.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/haml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/nim.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/python.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/rustc.vim	/^	command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/sbt.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-polyglot/compiler/typescript.vim	/^  command! -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-ruby/compiler/eruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-ruby/compiler/rake.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-ruby/compiler/rspec.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-ruby/compiler/ruby.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	plugged/vim-ruby/compiler/rubyunit.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompleteLabels	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:CompleteLabels(regex)$/;"	f
CompleteTabularizeCommand	plugged/tabular/plugin/Tabular.vim	/^function! s:CompleteTabularizeCommand(argstart, cmdline, cursorpos)$/;"	f
Complete_alternate	plugged/vim-rails/autoload/rails.vim	/^function! s:Complete_alternate(A,L,P) abort$/;"	f
Complete_cd	plugged/vim-rails/autoload/rails.vim	/^function! s:Complete_cd(ArgLead, CmdLine, CursorPos) abort$/;"	f
Complete_console	plugged/vim-rails/autoload/rails.vim	/^function! s:Complete_console(A,L,P) abort$/;"	f
Complete_destroy	plugged/vim-rails/autoload/rails.vim	/^function! s:Complete_destroy(A,L,P) abort$/;"	f
Complete_edit	plugged/vim-rails/autoload/rails.vim	/^function! s:Complete_edit(ArgLead, CmdLine, CursorPos) abort$/;"	f
Complete_environments	plugged/vim-rails/autoload/rails.vim	/^function! s:Complete_environments(...) abort$/;"	f
Complete_generate	plugged/vim-rails/autoload/rails.vim	/^function! s:Complete_generate(A,L,P) abort$/;"	f
Complete_log	plugged/vim-rails/autoload/rails.vim	/^function! s:Complete_log(A, L, P) abort$/;"	f
Complete_preview	plugged/vim-rails/autoload/rails.vim	/^function! s:Complete_preview(A,L,P) abort$/;"	f
Complete_related	plugged/vim-rails/autoload/rails.vim	/^function! s:Complete_related(A,L,P) abort$/;"	f
Complete_ruby	plugged/vim-rails/autoload/rails.vim	/^function! s:Complete_ruby(A,L,P) abort$/;"	f
Complete_server	plugged/vim-rails/autoload/rails.vim	/^function! s:Complete_server(A,L,P) abort$/;"	f
CompletionMode	plugged/supertab/plugin/supertab.vim	/^function! s:CompletionMode() " {{{$/;"	f
CompletionReset	plugged/supertab/plugin/supertab.vim	/^function! s:CompletionReset(char) " {{{$/;"	f
Completion_BackwardsJumpWithoutCOMPL_ACCEPT	plugged/ultisnips/test/test_Completion.py	/^class Completion_BackwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_ForwardsJumpWithoutCOMPL_ACCEPT	plugged/ultisnips/test/test_Completion.py	/^class Completion_ForwardsJumpWithoutCOMPL_ACCEPT(_VimTest):$/;"	c
Completion_SimpleExample_ECR	plugged/ultisnips/test/test_Completion.py	/^class Completion_SimpleExample_ECR(_VimTest):$/;"	c
ContainedGroup	plugged/vim-polyglot/syntax/scala.vim	/^function! s:ContainedGroup()$/;"	f
ContextCompletion	plugged/supertab/plugin/supertab.vim	/^function! s:ContextCompletion() " {{{$/;"	f
ContextDiscover	plugged/supertab/plugin/supertab.vim	/^function! s:ContextDiscover() " {{{$/;"	f
ContextSnippets_ContextHasAccessToVisual	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextHasAccessToVisual(_VimTest):$/;"	c
ContextSnippets_ContextIsClearedBeforeExpand	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ContextIsClearedBeforeExpand(_VimTest):$/;"	c
ContextSnippets_CursorIsZeroBased	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_CursorIsZeroBased(_VimTest):$/;"	c
ContextSnippets_DoNotExpandOnFalse	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_ExpandOnTrue	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_Header_DoNotExpandOnFalse	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_DoNotExpandOnFalse(_VimTest):$/;"	c
ContextSnippets_Header_ExpandOnTrue	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_Header_ExpandOnTrue(_VimTest):$/;"	c
ContextSnippets_PriorityKeyword	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_PriorityKeyword(_VimTest):$/;"	c
ContextSnippets_ReportError	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportError(_VimTest):$/;"	c
ContextSnippets_ReportErrorOnIndexOutOfRange	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_ReportErrorOnIndexOutOfRange(_VimTest):$/;"	c
ContextSnippets_SimpleSnippet	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SimpleSnippet(_VimTest):$/;"	c
ContextSnippets_SnippetPriority	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_SnippetPriority(_VimTest):$/;"	c
ContextSnippets_UseContext	plugged/ultisnips/test/test_ContextSnippets.py	/^class ContextSnippets_UseContext(_VimTest):$/;"	c
ContextText	plugged/supertab/plugin/supertab.vim	/^function! s:ContextText() " {{{$/;"	f
ContinuedHangingOperator	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ContinuedHangingOperator(msl_info) abort$/;"	f
ContinuedHangingOperator	plugged/vim-ruby/indent/ruby.vim	/^function! s:ContinuedHangingOperator(msl_info) abort$/;"	f
ContinuedLine	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ContinuedLine(pline_info) abort$/;"	f
ContinuedLine	plugged/vim-ruby/indent/ruby.vim	/^function! s:ContinuedLine(pline_info) abort$/;"	f
Continues	plugged/vim-polyglot/indent/javascript.vim	/^function s:Continues()$/;"	f
ConvertBack	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:ConvertBack(line)$/;"	f
ConvertPostConditional	plugged/vim-ruby-refactoring/plugin/refactorings/general/postconditional.vim	/^function! ConvertPostConditional()$/;"	f
CorrectFocusOnStartup	plugged/tagbar/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
CountITags	plugged/vim-polyglot/indent/html.vim	/^func! s:CountITags(text)$/;"	f
CountMatches	plugged/vim-polyglot/indent/tex.vim	/^function! s:CountMatches(str, pat)$/;"	f
CountTagsAndState	plugged/vim-polyglot/indent/html.vim	/^func! s:CountTagsAndState(text)$/;"	f
CreateAutocommands	plugged/tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
CreateCoordKeyDict	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:CreateCoordKeyDict(groups, ...)$/;"	f
CreateOrExpression	plugged/vim-polyglot/ftplugin/scala.vim	/^function! s:CreateOrExpression(keywords)$/;"	f
Creator.BufNamePrefix	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreateTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
Creator.CreateWindowTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
Creator.New	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.ToggleTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
Creator._bindMappings	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createNERDTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
Creator._createTreeWin	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._isBufHidden	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
Creator._nextBufferName	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._removeTreeBufForTab	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
Creator._setCommonBufOptions	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator._tabpagevar	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
Creator._uniq	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
Creator.createMirror	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
Creator.createWindowTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
Creator.toggleTabTree	plugged/nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
CrystalContext	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalContext echo crystal_lang#context(expand('%'), getpos('.'), <q-args>).output$/;"	c
CrystalDef	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=0 CrystalDef call crystal_lang#jump_to_definition(expand('%'), getpos('.'))$/;"	c
CrystalFormat	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* -bar CrystalFormat call crystal_lang#format(<q-args>, 0)$/;"	c
CrystalHierarchy	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalHierarchy echo crystal_lang#type_hierarchy(expand('%'), <q-args>)$/;"	c
CrystalImpl	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=* CrystalImpl echo crystal_lang#impl(expand('%'), getpos('.'), <q-args>).output$/;"	c
CrystalSpecRunAll	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecRunAll call crystal_lang#run_all_spec(<f-args>)$/;"	c
CrystalSpecRunCurrent	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecRunCurrent call crystal_lang#run_current_spec(<f-args>)$/;"	c
CrystalSpecSwitch	plugged/vim-polyglot/ftplugin/crystal.vim	/^command! -buffer -nargs=? CrystalSpecSwitch call crystal_lang#switch_spec_file(<f-args>)$/;"	c
CssFirstUnfinished	plugged/vim-polyglot/indent/html.vim	/^func! s:CssFirstUnfinished(lnum, min_lnum)$/;"	f
CssPrevNonComment	plugged/vim-polyglot/indent/html.vim	/^func! s:CssPrevNonComment(lnum, stopline)$/;"	f
CssUnfinished	plugged/vim-polyglot/indent/html.vim	/^func! s:CssUnfinished(text)$/;"	f
CtagsErrMsg	plugged/tagbar/autoload/tagbar.vim	/^function! s:CtagsErrMsg(errmsg, infomsg, silent, ...) abort$/;"	f
CtrlPBookmark	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! CtrlPBookmark call ctrlp#init(ctrlp#bookmarks#id()) $/;"	c
CucumberComplete	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! CucumberComplete(findstart,base) abort$/;"	f
CurrentLineWhitespaceOff	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -nargs=* CurrentLineWhitespaceOff call <SID>CurrentLineWhitespaceOff( <f-args> )$/;"	c
CurrentLineWhitespaceOff	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:CurrentLineWhitespaceOff( level )$/;"	f
CurrentLineWhitespaceOn	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! CurrentLineWhitespaceOn call <SID>CurrentLineWhitespaceOn()$/;"	c
CurrentLineWhitespaceOn	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:CurrentLineWhitespaceOn()$/;"	f
Cursor.column	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.column() dict$/;"	f
Cursor.line	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.line() dict$/;"	f
Cursor.move	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.move(line, column) dict$/;"	f
Cursor.new	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.new(position)$/;"	f
Cursor.remove_visual_selection	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.remove_visual_selection() dict$/;"	f
Cursor.restore_unnamed_register	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.restore_unnamed_register() dict$/;"	f
Cursor.save_unnamed_register	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.save_unnamed_register() dict$/;"	f
Cursor.update_highlight	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_highlight() dict$/;"	f
Cursor.update_line_length	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_line_length() dict$/;"	f
Cursor.update_position	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_position(pos) dict$/;"	f
Cursor.update_visual_selection	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:Cursor.update_visual_selection(region) dict$/;"	f
CursorHoldUpdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:CursorHoldUpdate()$/;"	f
CursorHoldUpdate	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:CursorHoldUpdate()$/;"	f
CursorManager.add	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.add(pos, ...) dict$/;"	f
CursorManager.debug	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.debug() dict$/;"	f
CursorManager.delete_current	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.delete_current() dict$/;"	f
CursorManager.get	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.get(i) dict$/;"	f
CursorManager.get_current	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.get_current() dict$/;"	f
CursorManager.initialize	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.initialize() dict$/;"	f
CursorManager.is_empty	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.is_empty() dict$/;"	f
CursorManager.loop_done	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.loop_done() dict$/;"	f
CursorManager.new	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.new()$/;"	f
CursorManager.next	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.next() dict$/;"	f
CursorManager.reapply_visual_selection	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reapply_visual_selection() dict$/;"	f
CursorManager.remove_highlight	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.remove_highlight(hi_id) dict$/;"	f
CursorManager.reposition_all_within_region	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reposition_all_within_region(start) dict$/;"	f
CursorManager.reset	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.reset(restore_view, restore_setting, ...) dict$/;"	f
CursorManager.restore_user_settings	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.restore_user_settings() dict$/;"	f
CursorManager.size	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.size() dict$/;"	f
CursorManager.start_loop	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.start_loop() dict$/;"	f
CursorManager.update_current	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:CursorManager.update_current() dict$/;"	f
CursorMovement_BS_InEditMode	plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_BS_InEditMode(_VimTest):$/;"	c
CursorMovement_Multiline_ECR	plugged/ultisnips/test/test_Movement.py	/^class CursorMovement_Multiline_ECR(_VimTest):$/;"	c
CursorPos	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	plugged/vim-easymotion/t/easymotion_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	plugged/vim-easymotion/t/operator_pending_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	plugged/vim-easymotion/t/smartsign_spec.vim	/^function! CursorPos()$/;"	f
CustomComplete	plugged/vim-rails/autoload/rails.vim	/^function! s:CustomComplete(A,L,P,cmd) abort$/;"	f
CustomException	plugged/vim-test/spec/fixtures/nose/test_method.py	/^    class CustomException(Exception):$/;"	c	function:test_foo
CustomStrategy	plugged/vim-test/spec/strategy_spec.vim	/^    function! CustomStrategy(cmd)$/;"	f
Cycle	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar Cycle  :call s:cycle()$/;"	c
DEBUG	plugged/alchemist.vim/rplugin/python3/deoplete/sources/alchemist.py	/^DEBUG = False$/;"	v
DEBUG	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/helper.py	/^    from logging import FileHandler, Formatter, DEBUG$/;"	i
DUMP_FILENAME	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^    else 'C:\/windows\/temp\/ultisnips.txt'$/;"	v
DartIndent	plugged/vim-polyglot/indent/dart.vim	/^function! DartIndent()$/;"	f
DefDict	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class DefDict(dict):$/;"	c
DefRuby	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DefRuby	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:DefRuby()$/;"	f
DeindentingKeyword	plugged/vim-polyglot/indent/ruby.vim	/^function! s:DeindentingKeyword(cline_info) abort$/;"	f
DeindentingKeyword	plugged/vim-ruby/indent/ruby.vim	/^function! s:DeindentingKeyword(cline_info) abort$/;"	f
DeleteCurrentTabStop1_JumpBack	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop1_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop2_JumpBack	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop2_JumpBack(_VimTest):$/;"	c
DeleteCurrentTabStop3_JumpAround	plugged/ultisnips/test/test_Editing.py	/^class DeleteCurrentTabStop3_JumpAround(_VimTest):$/;"	c
DeleteLastTwoLinesInSnippet	plugged/ultisnips/test/test_Editing.py	/^class DeleteLastTwoLinesInSnippet(_VimTest):$/;"	c
DeleteNote	plugged/vim-notes/plugin/notes.vim	/^command! -bar -bang -nargs=? -complete=customlist,xolox#notes#cmd_complete DeleteNote call xolox#notes#delete(<q-bang>, <q-args>)$/;"	c
DeleteSnippetInsertion0	plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion0(_VimTest):$/;"	c
DeleteSnippetInsertion1	plugged/ultisnips/test/test_Editing.py	/^class DeleteSnippetInsertion1(_VimTest):$/;"	c
Deoplete	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^from deoplete.deoplete import Deoplete$/;"	i
Deoplete	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^class Deoplete(logger.LoggingMixin):$/;"	c
DeopleteHandlers	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    class DeopleteHandlers(object):$/;"	c
DeopleteLogFilter	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^class DeopleteLogFilter(logging.Filter):$/;"	c
DetectFiletype	plugged/tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
DetectPerl6	plugged/vim-polyglot/ftdetect/polyglot.vim	/^function! s:DetectPerl6()$/;"	f
DevIconsGetArtifactFix	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:DevIconsGetArtifactFix()$/;"	f
DictCacheItem	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^DictCacheItem = namedtuple('DictCacheItem', 'mtime candidates')$/;"	v
Diff	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(vert,keepfocus,...) abort$/;"	f
DiffGitCached	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^command! -bang -bar -buffer -complete=custom,s:diffcomplete -nargs=* DiffGitCached :call s:gitdiffcached(<bang>0,b:git_dir,<f-args>)$/;"	c
DirComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Disable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:Disable()$/;"	f
DisableStripWhitespaceOnSave	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! DisableStripWhitespaceOnSave call <SID>DisableStripWhitespaceOnSave()$/;"	c
DisableStripWhitespaceOnSave	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:DisableStripWhitespaceOnSave()$/;"	f
DisableWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! DisableWhitespace call <SID>DisableWhitespace()$/;"	c
DisableWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:DisableWhitespace()$/;"	f
Dispatch	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
Do	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:Do(action)$/;"	f
DoNotCrashOnUndoAndJumpInNestedSnippet	plugged/ultisnips/test/test_Editing.py	/^class DoNotCrashOnUndoAndJumpInNestedSnippet(_VimTest):$/;"	c
DoNotExpandAfterSpace_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class DoNotExpandAfterSpace_ExpectCorrectResult(_SimpleExpands):$/;"	c
DoNotTrimSpacesAtEndOfLinesByDefault	plugged/ultisnips/test/test_Chars.py	/^class DoNotTrimSpacesAtEndOfLinesByDefault(_VimTest):$/;"	c
DoWhile	plugged/vim-polyglot/indent/javascript.vim	/^function s:DoWhile()$/;"	f
DocstringSignatureMixin	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class DocstringSignatureMixin(object):$/;"	c
Documenter	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class Documenter(object):$/;"	c
DotPackagesFile	plugged/vim-polyglot/autoload/dart.vim	/^function! s:DotPackagesFile() abort$/;"	f
DotPromptUser	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:DotPromptUser(groups) "{{{$/;"	f
Drop	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Drop   :<line1>,<line2>call s:choose('drop')$/;"	c
EA	plugged/ultisnips/test/constant.py	/^EA = '#'  # Expand anonymous$/;"	v
EMCommandLineMap	plugged/vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineMap$/;"	c
EMCommandLineNoreMap	plugged/vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineNoreMap$/;"	c
EMCommandLineUnMap	plugged/vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineUnMap$/;"	c
ENV_PICKLE_FILENAME	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            from sphinx.application import ENV_PICKLE_FILENAME$/;"	i
ENV_PICKLE_FILENAME	plugged/deoplete-jedi/tests/sphinx-3000.py	/^ENV_PICKLE_FILENAME = 'environment.pickle'$/;"	v
ESC	plugged/ultisnips/test/constant.py	/^ESC = '\\x1b'$/;"	v
ESC	plugged/ultisnips/test/test_Interpolation.py	/^from test.constant import EX, JF, ESC$/;"	i
ESC	plugged/ultisnips/test/test_SnippetPriorities.py	/^from test.constant import EX, ESC$/;"	i
ESC	plugged/ultisnips/test/vim_interface.py	/^from test.constant import (ARR_D, ARR_L, ARR_R, ARR_U, BS, ESC, PYTHON3,$/;"	i
EX	plugged/ultisnips/test/constant.py	/^EX = '\\t'  # EXPAND$/;"	v
EX	plugged/ultisnips/test/test_Interpolation.py	/^from test.constant import EX, JF, ESC$/;"	i
EX	plugged/ultisnips/test/test_SnippetPriorities.py	/^from test.constant import EX, ESC$/;"	i
EX	plugged/ultisnips/test/vim_test_case.py	/^from test.constant import PYTHON3, SEQUENCES, EX$/;"	i
EXPORT_EXT	plugged/alchemist.vim/erl_terms.py	/^EXPORT_EXT = 113        # [atom:Module, atom:Function, smallint:Arity]$/;"	v
EasyMotion	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:EasyMotion(regexp, direction, visualmode, is_inclusive, ...) " {{{$/;"	f
EasyMotion#DotRepeat	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#DotRepeat() " {{{$/;"	f
EasyMotion#E	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#E(visualmode, direction) " {{{$/;"	f
EasyMotion#EK	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EK(visualmode, direction) " {{{$/;"	f
EasyMotion#EL	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EL(visualmode, direction) " {{{$/;"	f
EasyMotion#EW	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EW(visualmode, direction) " {{{$/;"	f
EasyMotion#Eol	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Eol(visualmode, direction) " {{{$/;"	f
EasyMotion#JK	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#JK(visualmode, direction) " {{{$/;"	f
EasyMotion#JumpToAnywhere	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#JumpToAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#LineAnywhere	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#LineAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#NextPrevious	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#NextPrevious(visualmode, direction) " {{{$/;"	f
EasyMotion#OverwinF	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#OverwinF(num_strokes) " {{{$/;"	f
EasyMotion#Repeat	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Repeat(visualmode) " {{{$/;"	f
EasyMotion#S	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#S(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#SL	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#SL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#Search	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Search(visualmode, direction, respect_direction) " {{{$/;"	f
EasyMotion#Sol	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Sol(visualmode, direction) " {{{$/;"	f
EasyMotion#T	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#T(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#TL	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#TL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#User	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#User(pattern, visualmode, direction, inclusive, ...) " {{{$/;"	f
EasyMotion#WB	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WB(visualmode, direction) " {{{$/;"	f
EasyMotion#WBK	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBK(visualmode, direction) " {{{$/;"	f
EasyMotion#WBL	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBL(visualmode, direction) " {{{$/;"	f
EasyMotion#WBW	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBW(visualmode, direction) " {{{$/;"	f
EasyMotion#activate	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#activate(is_visual) "{{{$/;"	f
EasyMotion#attach_active_autocmd	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#attach_active_autocmd() "{{{$/;"	f
EasyMotion#cmigemo#getMigemoPattern	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! EasyMotion#cmigemo#getMigemoPattern(input) "{{{$/;"	f
EasyMotion#cmigemo#system	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! EasyMotion#cmigemo#system(...) "{{{$/;"	f
EasyMotion#command_line#GetInput	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#GetInput(num_strokes, prev, direction) "{{{$/;"	f
EasyMotion#command_line#cmap	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cmap(args)$/;"	f
EasyMotion#command_line#cnoremap	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cnoremap(args)$/;"	f
EasyMotion#command_line#cunmap	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cunmap(lhs)$/;"	f
EasyMotion#go	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#go(...) abort$/;"	f
EasyMotion#helper#VarReset	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#VarReset(var, ...) "{{{$/;"	f
EasyMotion#helper#get_char_by_coord	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#get_char_by_coord(coord) "{{{$/;"	f
EasyMotion#helper#include_multibyte_char	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#include_multibyte_char(str) "{{{$/;"	f
EasyMotion#helper#is_folded	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#is_folded(line) "{{{$/;"	f
EasyMotion#helper#is_greater_coords	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#is_greater_coords(coords1, coords2) "{{{$/;"	f
EasyMotion#helper#load_migemo_dict	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#load_migemo_dict() "{{{$/;"	f
EasyMotion#helper#mode	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#mode(flag) "{{{$/;"	f
EasyMotion#helper#should_case_sensitive	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#should_case_sensitive(input, is_search) "{{{$/;"	f
EasyMotion#helper#silent_feedkeys	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#silent_feedkeys(expr, name, ...) "{{{$/;"	f
EasyMotion#helper#strchars	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^    function! EasyMotion#helper#strchars(str)$/;"	f
EasyMotion#helper#vcol	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#vcol(expr) abort$/;"	f
EasyMotion#highlight#InitHL	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#InitHL(group, colors) " {{{$/;"	f
EasyMotion#highlight#add_color_group	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_color_group(new_groups) "{{{$/;"	f
EasyMotion#highlight#add_highlight	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_highlight(re, group) "{{{$/;"	f
EasyMotion#highlight#add_pos_highlight	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_pos_highlight(line_num, col_num, group) "{{{$/;"	f
EasyMotion#highlight#attach_autocmd	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#attach_autocmd() "{{{$/;"	f
EasyMotion#highlight#capture	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#capture(hlname) "{{{$/;"	f
EasyMotion#highlight#delete_highlight	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#delete_highlight(...) "{{{$/;"	f
EasyMotion#highlight#init	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#init() "{{{$/;"	f
EasyMotion#highlight#load	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#load()$/;"	f
EasyMotion#highlight#turn_off	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#turn_off(hl) "{{{$/;"	f
EasyMotion#highlight#turn_on	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#turn_on(hl) "{{{$/;"	f
EasyMotion#init	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#init()$/;"	f
EasyMotion#is_active	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#is_active() "{{{$/;"	f
EasyMotion#migemo#cp932#load_dict	plugged/vim-easymotion/autoload/EasyMotion/migemo/cp932.vim	/^function! EasyMotion#migemo#cp932#load_dict()$/;"	f
EasyMotion#migemo#eucjp#load_dict	plugged/vim-easymotion/autoload/EasyMotion/migemo/eucjp.vim	/^function! EasyMotion#migemo#eucjp#load_dict()$/;"	f
EasyMotion#migemo#utf8#load_dict	plugged/vim-easymotion/autoload/EasyMotion/migemo/utf8.vim	/^function! EasyMotion#migemo#utf8#load_dict()$/;"	f
EasyMotion#overwin#line	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#line() abort$/;"	f
EasyMotion#overwin#move	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#move(pattern) abort$/;"	f
EasyMotion#overwin#w	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^function! EasyMotion#overwin#w() abort$/;"	f
EasyMotion#reset	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#reset()$/;"	f
EasyMotion#sticky_table#jp	plugged/vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let EasyMotion#sticky_table#jp = {$/;"	v
EasyMotion#sticky_table#us	plugged/vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let EasyMotion#sticky_table#us = {$/;"	v
EasyMotion#undo#save	plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! EasyMotion#undo#save() abort$/;"	f
EasyMotionInitHL	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^augroup EasyMotionInitHL$/;"	a
Echo	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:Echo(message)$/;"	f
EchoTransformation	plugged/vim-test/spec/commands_spec.vim	/^    function! EchoTransformation(cmd)$/;"	f
Edit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd, bang, mods, ...) abort$/;"	f
Edit	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Edit   :<line1>,<line2>call s:choose('edit')$/;"	c
EditComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^class EditableTextObject(TextObject):$/;"	c
EditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    NoneditableTextObject$/;"	i
EditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_tabstop.py	/^from UltiSnips.text_objects._base import EditableTextObject$/;"	i
ElementTree	plugged/ultisnips/utils/get_tm_snippets.py	/^from xml.etree import ElementTree$/;"	i
ElixirSenseClient	plugged/alchemist.vim/elixir_sense.py	/^class ElixirSenseClient:$/;"	c
ElixirSenseClient	plugged/alchemist.vim/elixir_sense_client	/^from elixir_sense import ElixirSenseClient$/;"	i
ElixirSenseClient	plugged/alchemist.vim/rplugin/python3/deoplete/sources/alchemist.py	/^from elixir_sense import ElixirSenseClient$/;"	i
ElmBrowseDocs	plugged/vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmBrowseDocs call elm#BrowseDocs()$/;"	c
ElmErrorDetail	plugged/vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmErrorDetail call elm#ErrorDetail()$/;"	c
ElmFormat	plugged/vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmFormat call elm#Format()$/;"	c
ElmMake	plugged/vim-polyglot/ftplugin/elm.vim	/^command -buffer -nargs=? -complete=file ElmMake call elm#Make(<f-args>)$/;"	c
ElmMakeMain	plugged/vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmMakeMain call elm#Make("Main.elm")$/;"	c
ElmRepl	plugged/vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmRepl call elm#Repl()$/;"	c
ElmShowDocs	plugged/vim-polyglot/ftplugin/elm.vim	/^command -buffer ElmShowDocs call elm#ShowDocs()$/;"	c
ElmTest	plugged/vim-polyglot/ftplugin/elm.vim	/^command -buffer -nargs=? -complete=file ElmTest call elm#Test(<f-args>)$/;"	c
Emit	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Emit(dict, type, args)$/;"	f
Emmet	plugged/emmet-vim/plugin/emmet.vim	/^  command! -nargs=1 Emmet call emmet#expandAbbr(4, <q-args>)$/;"	c
EmmetInstall	plugged/emmet-vim/plugin/emmet.vim	/^command! -nargs=0 -bar EmmetInstall call <SID>install_plugin(get(g:, 'user_emmet_mode', 'a'), 1)$/;"	c
EmmetUnitTest	plugged/emmet-vim/unittest.vim	/^command! -bang -nargs=* -complete=customlist,<SID>emmet_unittest_complete EmmetUnitTest call s:do_tests("<bang>", <f-args>)$/;"	c
EmptyInsideString	plugged/vim-polyglot/indent/ruby.vim	/^function! s:EmptyInsideString(pline_info) abort$/;"	f
EmptyInsideString	plugged/vim-ruby/indent/ruby.vim	/^function! s:EmptyInsideString(pline_info) abort$/;"	f
EnableByDefault	plugged/vim-polyglot/syntax/python.vim	/^function! s:EnableByDefault(name)$/;"	f
EnableJSX	plugged/vim-polyglot/ftdetect/polyglot.vim	/^fu! <SID>EnableJSX()$/;"	f
EnableLongestEnhancement	plugged/supertab/plugin/supertab.vim	/^function! s:EnableLongestEnhancement() " {{{$/;"	f
EnableNoCompleteAfterReset	plugged/supertab/plugin/supertab.vim	/^function! s:EnableNoCompleteAfterReset() " {{{$/;"	f
EnableStripWhitespaceOnSave	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! EnableStripWhitespaceOnSave call <SID>EnableStripWhitespaceOnSave()$/;"	c
EnableStripWhitespaceOnSave	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:EnableStripWhitespaceOnSave()$/;"	f
EnableWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! EnableWhitespace call <SID>EnableWhitespace()$/;"	c
EnableWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:EnableWhitespace()$/;"	f
Enabled	plugged/vim-polyglot/syntax/python.vim	/^function! s:Enabled(name)$/;"	f
EndOfTextToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class EndOfTextToken(Token):$/;"	c
EndStructure	plugged/vim-polyglot/indent/twig.vim	/^function! s:EndStructure(name)$/;"	f
EndwiseAlways	plugged/vim-endwise/plugin/endwise.vim	/^function! EndwiseAlways()$/;"	f
EndwiseDiscretionary	plugged/vim-endwise/plugin/endwise.vim	/^function! EndwiseDiscretionary()$/;"	f
ErlangCalcIndent	plugged/vim-polyglot/indent/erlang.vim	/^function! s:ErlangCalcIndent(lnum, stack)$/;"	f
ErlangCalcIndent2	plugged/vim-polyglot/indent/erlang.vim	/^function! s:ErlangCalcIndent2(lnum, stack)$/;"	f
ErlangIndent	plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangIndent()$/;"	f
ErlangShowTokensInCurrentLine	plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangShowTokensInCurrentLine()$/;"	f
ErlangShowTokensInLine	plugged/vim-polyglot/indent/erlang.vim	/^function! ErlangShowTokensInLine(line)$/;"	f
ErrMsg	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
ErrMsg	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:ErrMsg(msg)$/;"	f
EscapeCharToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class EscapeCharToken(Token):$/;"	c
EscapeCharToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^    VisualToken, TabStopToken, MirrorToken, ShellCodeToken$/;"	i
EscapeCharToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
EscapeCtagsCmd	plugged/tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
EscapeTitle	plugged/vim-polyglot/ftplugin/latextoc.vim	/^function! s:EscapeTitle(titlestr)$/;"	f
EscapedChar	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.text_objects import EscapedChar, Mirror, VimLCode, Visual$/;"	i
EscapedChar	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
EscapedChar	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._escaped_char import EscapedChar$/;"	i
EscapedChar	plugged/ultisnips/pythonx/UltiSnips/text_objects/_escaped_char.py	/^class EscapedChar(NoneditableTextObject):$/;"	c
Event.New	plugged/nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
ExDef	plugged/alchemist.vim/after/plugin/alchemist.vim	/^command! -nargs=? -complete=customlist,elixircomplete#ex_doc_complete ExDef$/;"	c
ExDoc	plugged/alchemist.vim/after/plugin/alchemist.vim	/^command! -nargs=? -complete=customlist,elixircomplete#ex_doc_complete ExDoc$/;"	c
Exception	plugged/vim-gitgutter/test/runner.vim	/^function Exception()$/;"	f
ExcludeOther	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludeOther(nr, exclude_preview)$/;"	f
ExcludePaths	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! s:ExcludePaths(nr, exclude_paths)$/;"	f
ExclusiveSelection_RealWorldCase_Test	plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_RealWorldCase_Test(_ES_Base):$/;"	c
ExclusiveSelection_SimpleTabstop_Test	plugged/ultisnips/test/test_Selection.py	/^class ExclusiveSelection_SimpleTabstop_Test(_ES_Base):$/;"	c
ExecuteCtags	plugged/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
ExecuteCtagsOnFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, realfname, typeinfo) abort$/;"	f
ExecuteInRoot	plugged/vim-polyglot/autoload/elm.vim	/^function! s:ExecuteInRoot(cmd) abort$/;"	f
ExecuteInTree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExitSnippetModeAfterTabstopZero	plugged/ultisnips/test/test_Expand.py	/^class ExitSnippetModeAfterTabstopZero(_VimTest):$/;"	c
ExitingOneLineScope	plugged/vim-polyglot/indent/solidity.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
Expand	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Expand(dict, pretty, args)$/;"	f
ExpandInTheMiddleOfLine_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class ExpandInTheMiddleOfLine_ExpectCorrectResult(_SimpleExpands):$/;"	c
ExpandMap	plugged/auto-pairs/plugin/auto-pairs.vim	/^function! s:ExpandMap(map)$/;"	f
ExpandMap	plugged/supertab/plugin/supertab.vim	/^function! s:ExpandMap(map) " {{{$/;"	f
ExpatError	plugged/ultisnips/utils/get_tm_snippets.py	/^from xml.parsers.expat import ExpatError$/;"	i
ExprCol	plugged/vim-polyglot/indent/javascript.vim	/^function s:ExprCol()$/;"	f
ExtraBrackets	plugged/vim-polyglot/indent/crystal.vim	/^function s:ExtraBrackets(lnum)$/;"	f
ExtraBrackets	plugged/vim-polyglot/indent/ruby.vim	/^function! s:ExtraBrackets(lnum) abort$/;"	f
ExtraBrackets	plugged/vim-ruby/indent/ruby.vim	/^function! s:ExtraBrackets(lnum) abort$/;"	f
ExtractConstant	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractconstant.vim	/^function! ExtractConstant()$/;"	f
ExtractInputs	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:ExtractInputs()$/;"	f
ExtractIntoRspecLet	plugged/vim-ruby-refactoring/plugin/refactorings/general/rspec_extractlet.vim	/^function! ExtractIntoRspecLet()$/;"	f
ExtractLabels	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:ExtractLabels()$/;"	f
ExtractLocalVariable	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractvariable.vim	/^function! ExtractLocalVariable()$/;"	f
ExtractMethod	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! ExtractMethod() range$/;"	f
F	plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FindComplete -nargs=1 -range=-1 F$/;"	c
F	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map F <Plug>(easymotion-F)$/;"	m
F/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map F\/ <Plug>(easymotion-Fn)$/;"	m
FH	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal FH$/;"	m
FLOAT_EXT	plugged/alchemist.vim/erl_terms.py	/^FLOAT_EXT = 99          # [31:Float String] Float in string format (formatted "%.20e", sscanf "%lf"). Superseded by NEW_FLOAT_EXT$/;"	v
FNameEscape	plugged/vim-polyglot/ftplugin/tex_LatexBox.vim	/^	function! s:FNameEscape(s)$/;"	f
FORMAT_VERSION	plugged/alchemist.vim/erl_terms.py	/^FORMAT_VERSION = '\\x83' #struct.pack("b", 131)$/;"	v
FOSimple_Break_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOSimple_Break_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOTextAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOTextBeforeAndAfter_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOTextBeforeAndAfter_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FOWrapOnLongWord_ExpectCorrectResult	plugged/ultisnips/test/test_Format.py	/^class FOWrapOnLongWord_ExpectCorrectResult(_FormatoptionsBase):$/;"	c
FUN_EXT	plugged/alchemist.vim/erl_terms.py	/^FUN_EXT = 117           # [UInt4:NumFree, pid:Pid, atom:Module, int:Index, int:Uniq, NumFree*ext:FreeVars]$/;"	v
Faa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Faa$/;"	m
Far	plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarComplete -nargs=1 -range=-1 Far$/;"	c
Far	plugged/far.vim/plugin/far.vim	/^function! Far(rngmode, rngline1, rngline2, cmdline) range abort "{{{$/;"	f
FarDo	plugged/far.vim/plugin/far.vim	/^function! FarDo(...) abort "{{{$/;"	f
FarPlugin	plugged/far.vim/rplugin/python3/far/__init__.py	/^    class FarPlugin(object):$/;"	c
FarPrompt	plugged/far.vim/plugin/far.vim	/^function! FarPrompt(rngmode, rngline1, rngline2, ...) abort range "{{{$/;"	f
FarUndo	plugged/far.vim/plugin/far.vim	/^function! FarUndo(...) abort "{{{$/;"	f
Fardo	plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FardoComplete -nargs=* Fardo call FarDo(<f-args>)$/;"	c
Farp	plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarArgsComplete -nargs=* -range=-1 Farp$/;"	c
Farundo	plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#FarundoComplete -nargs=* Farundo call FarUndo(<f-args>)$/;"	c
FastFold	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^	augroup FastFold$/;"	a
Fb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Fb$/;"	m
Fba	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Fba$/;"	m
FeatureContext	plugged/vim-test/spec/fixtures/behat/features/bootstrap/FeatureContext.php	/^class FeatureContext extends Context {$/;"	c
Fha	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Fha$/;"	m
FileHandler	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/helper.py	/^    from logging import FileHandler, Formatter, DEBUG$/;"	i
FileRead	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead() abort$/;"	f
FileUpdate	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:FileUpdate(fname)$/;"	f
FillBuffer	plugged/vim-textobj-entire/t/basics.vim	/^function! FillBuffer()$/;"	f
FillBuffer	plugged/vim-textobj-entire/t/jumplist.vim	/^function! FillBuffer()$/;"	f
FillBuffer	plugged/vim-textobj-entire/t/mark.vim	/^function! FillBuffer()$/;"	f
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^class Filter(Base):$/;"	c
Filter	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_full_fuzzy.py	/^from deoplete.filter.matcher_full_fuzzy import Filter$/;"	i
Filter	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_fuzzy.py	/^from deoplete.filter.matcher_fuzzy import Filter$/;"	i
Filter	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:Filter()$/;"	f
Filter	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^class Filter(Base):$/;"	c
FilterString	plugged/tabular/autoload/tabular.vim	/^function! s:FilterString(lines, commandstring)$/;"	f
Find	plugged/far.vim/plugin/far.vim	/^function! Find(rngmode, rngline1, rngline2, cmdline, ...) range abort "{{{$/;"	f
FindBibData	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:FindBibData(...)$/;"	f
FindClosestSection	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:FindClosestSection(toc, fileindices)$/;"	f
FindContainingClass	plugged/vim-polyglot/indent/crystal.vim	/^function! s:FindContainingClass()$/;"	f
FindContainingClass	plugged/vim-polyglot/indent/ruby.vim	/^function! s:FindContainingClass() abort$/;"	f
FindContainingClass	plugged/vim-ruby/indent/ruby.vim	/^function! s:FindContainingClass() abort$/;"	f
FindIndToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:FindIndToken(lnum, dir)$/;"	f
FindLet	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
FindLet	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:FindLet(pstart, pmid, pend)$/;"	f
FindMatchingPair	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:FindMatchingPair(mode)$/;"	f
FindPair	plugged/vim-polyglot/indent/elm.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
FindPair	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
FindPair	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:FindPair(pstart, pmid, pend)$/;"	f
FindPreviousOpenStructure	plugged/vim-polyglot/indent/twig.vim	/^function! s:FindPreviousOpenStructure(lineNumber)$/;"	f
FindStartLine	plugged/vim-polyglot/indent/nim.vim	/^function! s:FindStartLine(fromln, pattern)$/;"	f
FinishCommit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
Fixup	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Fixup  :<line1>,<line2>call s:choose('fixup')$/;"	c
FlagSet.New	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
FlagSet._flagsForScope	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
FlagSet.addFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
FlagSet.clearFlags	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
FlagSet.removeFlag	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
FlagSet.renderToString	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
FoldOverwrite_Simple_ECR	plugged/ultisnips/test/test_Folding.py	/^class FoldOverwrite_Simple_ECR(_VimTest):$/;"	c
FoldSectionLevels	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:FoldSectionLevels()$/;"	f
Fold_DeleteMiddleLine_ECR	plugged/ultisnips/test/test_Folding.py	/^class Fold_DeleteMiddleLine_ECR(_VimTest):$/;"	c
FoldableRegion	plugged/vim-polyglot/syntax/lua.vim	/^function! s:FoldableRegion(tag, name, expr)$/;"	f
FoldingEnabled_SnippetWithFold_ExpectNoFolding	plugged/ultisnips/test/test_Folding.py	/^class FoldingEnabled_SnippetWithFold_ExpectNoFolding(_VimTest):$/;"	c
Foo	plugged/vim-ruby-refactoring/test/testcases.rb	/^class Foo$/;"	c
Foo	plugged/vim-ruby/spec/indent/method_definitions_spec.rb	/^      class Foo$/;"	c
FormatChunk	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:FormatChunk(open, close)$/;"	f
Formatter	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/helper.py	/^    from logging import FileHandler, Formatter, DEBUG$/;"	i
Fpa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Fpa$/;"	m
Fpb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Fpb$/;"	m
Fpc	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Fpc$/;"	m
FreshState	plugged/vim-polyglot/indent/html.vim	/^func! s:FreshState(lnum)$/;"	f
FriendlyName	plugged/vim-gitgutter/test/runner.vim	/^function FriendlyName(test_name)$/;"	f
FugitiveDetect	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveDetect(path) abort$/;"	f
FugitiveExtractGitDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveExtractGitDir(path) abort$/;"	f
FugitiveHead	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveHead(...) abort$/;"	f
FugitiveIsGitDir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveIsGitDir(path) abort$/;"	f
FugitiveStatusline	plugged/vim-fugitive/plugin/fugitive.vim	/^function! FugitiveStatusline(...) abort$/;"	f
G	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal G$/;"	m
G	plugged/vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> G G4k$/;"	m
G	plugged/vim-rails/ftplugin/railslog.vim	/^nnoremap <buffer> <silent> G :<C-U>call <SID>reload_log()<Bar>exe v:count ? v:count : '$'<CR>$/;"	m
GF	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GFInit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:GFInit(...) abort$/;"	f
GTabularize	plugged/tabular/plugin/Tabular.vim	/^   \\ GTabularize <line1>,<line2>$/;"	c
Get	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:Get(dict, key, prefix)$/;"	f
GetAnsibleIndent	plugged/vim-polyglot/indent/ansible.vim	/^function GetAnsibleIndent(lnum)$/;"	f
GetAppleScriptIndent	plugged/vim-polyglot/indent/applescript.vim	/^func! GetAppleScriptIndent()$/;"	f
GetAutoHotkeyIndent	plugged/vim-polyglot/indent/autohotkey.vim	/^function! GetAutoHotkeyIndent()$/;"	f
GetBladeIndent	plugged/vim-polyglot/indent/blade.vim	/^function! GetBladeIndent()$/;"	f
GetBufferRubyClass	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyClass	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyClass(name, ...)$/;"	f
GetBufferRubyEntity	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyEntity	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyEntity( name, type, ... )$/;"	f
GetBufferRubyModule	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubyModule	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubyModule(name, ...)$/;"	f
GetBufferRubySingletonMethods	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetBufferRubySingletonMethods	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetBufferRubySingletonMethods(name)$/;"	f
GetCabalIndent	plugged/vim-polyglot/indent/cabal.vim	/^function! GetCabalIndent()$/;"	f
GetCaddyfileIndent	plugged/vim-polyglot/indent/caddyfile.vim	/^function! GetCaddyfileIndent(lnum)$/;"	f
GetChar	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GetChar(...) abort "{{{$/;"	f
GetClojureIndent	plugged/vim-polyglot/indent/clojure.vim	/^	function! GetClojureIndent()$/;"	f
GetCoffeeHtmlIndent	plugged/vim-polyglot/after/indent/html.vim	/^function! GetCoffeeHtmlIndent(curlinenum)$/;"	f
GetCoffeeIndent	plugged/vim-polyglot/indent/coffee.vim	/^function! GetCoffeeIndent(curlnum)$/;"	f
GetContents	plugged/vim-polyglot/indent/lua.vim	/^function s:GetContents(lnum)$/;"	f
GetCrystalIndent	plugged/vim-polyglot/indent/crystal.vim	/^function GetCrystalIndent(...)$/;"	f
GetCucumberIndent	plugged/vim-polyglot/indent/cucumber.vim	/^function! GetCucumberIndent()$/;"	f
GetDefaultPolicy	plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetDefaultPolicy(curlnum)$/;"	f
GetEelixirIndent	plugged/vim-polyglot/indent/eelixir.vim	/^function! GetEelixirIndent(...)$/;"	f
GetElmFilename	plugged/vim-polyglot/ftplugin/elm.vim	/^function! GetElmFilename(word)$/;"	f
GetElmIndent	plugged/vim-polyglot/indent/elm.vim	/^function! GetElmIndent()$/;"	f
GetEnvironmentList	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:GetEnvironmentList(lead, cmdline, pos)$/;"	f
GetErubyIndent	plugged/vim-polyglot/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetErubyIndent	plugged/vim-ruby/indent/eruby.vim	/^function! GetErubyIndent(...)$/;"	f
GetFileWinnr	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetFileWinnr(fileinfo) abort$/;"	f
GetFsharpIndent	plugged/vim-polyglot/indent/fsharp.vim	/^function! GetFsharpIndent()$/;"	f
GetGitconfigIndent	plugged/vim-polyglot/indent/gitconfig.vim	/^function! GetGitconfigIndent()$/;"	f
GetGoHTMLTmplIndent	plugged/vim-polyglot/indent/gohtmltmpl.vim	/^function! GetGoHTMLTmplIndent(lnum)$/;"	f
GetGraphQLIndent	plugged/vim-polyglot/indent/graphql.vim	/^function GetGraphQLIndent()$/;"	f
GetHamlIndent	plugged/vim-polyglot/indent/haml.vim	/^function! GetHamlIndent()$/;"	f
GetHandlebarsIndent	plugged/vim-polyglot/indent/handlebars.vim	/^function! GetHandlebarsIndent(...)$/;"	f
GetHaskellIndent	plugged/vim-polyglot/indent/haskell.vim	/^function! GetHaskellIndent()$/;"	f
GetInd	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
GetInd	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:GetInd(lnum, pat, lim)$/;"	f
GetIndtokenAtCol	plugged/vim-polyglot/indent/erlang.vim	/^function! s:GetIndtokenAtCol(indtokens, col)$/;"	f
GetJSONIndent	plugged/vim-polyglot/indent/json.vim	/^function GetJSONIndent()$/;"	f
GetJavascriptIndent	plugged/vim-polyglot/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetJsIndent	plugged/vim-polyglot/indent/qml.vim	/^function! GetJsIndent()$/;"	f
GetJstIndent	plugged/vim-polyglot/indent/jst.vim	/^function! GetJstIndent(...)$/;"	f
GetJsxIndent	plugged/vim-polyglot/after/indent/jsx.vim	/^fu! GetJsxIndent()$/;"	f
GetJuliaIndent	plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaIndent()$/;"	f
GetJuliaNestingBrackets	plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaNestingBrackets(lnum, c)$/;"	f
GetJuliaNestingStruct	plugged/vim-polyglot/indent/julia.vim	/^function GetJuliaNestingStruct(lnum, ...)$/;"	f
GetKotlinIndent	plugged/vim-polyglot/indent/kotlin.vim	/^function! GetKotlinIndent()$/;"	f
GetLabelCache	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:GetLabelCache(file)$/;"	f
GetLineWithoutFullComment	plugged/vim-polyglot/indent/fsharp.vim	/^function! s:GetLineWithoutFullComment(lnum)$/;"	f
GetLineWithoutFullComment	plugged/vim-polyglot/indent/ocaml.vim	/^function! s:GetLineWithoutFullComment(lnum)$/;"	f
GetLiquidIndent	plugged/vim-polyglot/indent/liquid.vim	/^function! GetLiquidIndent(...)$/;"	f
GetLitCoffeeIndent	plugged/vim-polyglot/indent/litcoffee.vim	/^function GetLitCoffeeIndent()$/;"	f
GetLiveScriptIndent	plugged/vim-polyglot/indent/ls.vim	/^function! GetLiveScriptIndent(curlinenum)$/;"	f
GetLiveScriptIndent	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetLiveScriptIndent(curlinenum)$/;"	f
GetLuaIndent	plugged/vim-polyglot/indent/lua.vim	/^function GetLuaIndent()$/;"	f
GetMSL	plugged/vim-polyglot/indent/crystal.vim	/^function s:GetMSL(lnum)$/;"	f
GetMSL	plugged/vim-polyglot/indent/ruby.vim	/^function! s:GetMSL(lnum) abort$/;"	f
GetMSL	plugged/vim-polyglot/indent/solidity.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
GetMSL	plugged/vim-ruby/indent/ruby.vim	/^function! s:GetMSL(lnum) abort$/;"	f
GetMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^function! s:GetMakePrg()$/;"	f
GetMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^function! s:GetMakePrg()$/;"	f
GetMakoIndent	plugged/vim-polyglot/indent/mako.vim	/^function GetMakoIndent()$/;"	f
GetMarkdownIndent	plugged/vim-polyglot/indent/markdown.vim	/^function GetMarkdownIndent()$/;"	f
GetMatch	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetMatch(curline)$/;"	f
GetNearbyTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag(all, forcecurrent, ...) abort$/;"	f
GetNimIndent	plugged/vim-polyglot/indent/nim.vim	/^function! GetNimIndent(lnum)$/;"	f
GetNixIndent	plugged/vim-polyglot/indent/nix.vim	/^function! GetNixIndent()$/;"	f
GetOCamlIndent	plugged/vim-polyglot/indent/ocaml.vim	/^function! GetOCamlIndent()$/;"	f
GetObjCIndentImproved	plugged/vim-polyglot/after/indent/objc.vim	/^function! GetObjCIndentImproved()$/;"	f
GetPair	plugged/vim-polyglot/indent/javascript.vim	/^  function s:GetPair(start,end,flags,skip)$/;"	f
GetPair	plugged/vim-polyglot/indent/typescript.vim	/^  function s:GetPair(start,end,flags,skip,...)$/;"	f
GetPair	plugged/vim-polyglot/indent/typescript.vim	/^  function s:GetPair(start,end,flags,skip,time,...)$/;"	f
GetPerlIndent	plugged/vim-polyglot/indent/perl.vim	/^function! GetPerlIndent()$/;"	f
GetPlantUMLIndent	plugged/vim-polyglot/indent/plantuml.vim	/^function! GetPlantUMLIndent(...) abort$/;"	f
GetPotionFold	plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! GetPotionFold(lnum)$/;"	f
GetPrevNormalLine	plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetPrevNormalLine(startlnum)$/;"	f
GetPrevNormalLine	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetPrevNormalLine(startlinenum)$/;"	f
GetPugIndent	plugged/vim-polyglot/indent/pug.vim	/^function! GetPugIndent()$/;"	f
GetPuppetIndent	plugged/vim-polyglot/indent/puppet.vim	/^function! GetPuppetIndent()$/;"	f
GetPurescriptIndent	plugged/vim-polyglot/indent/purescript.vim	/^function! GetPurescriptIndent()$/;"	f
GetPythonPEPIndent	plugged/vim-polyglot/indent/cython.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
GetPythonPEPIndent	plugged/vim-polyglot/indent/python.vim	/^function! GetPythonPEPIndent(lnum)$/;"	f
GetRubyIndent	plugged/vim-polyglot/indent/ruby.vim	/^function! GetRubyIndent(...) abort$/;"	f
GetRubyIndent	plugged/vim-ruby/indent/ruby.vim	/^function! GetRubyIndent(...) abort$/;"	f
GetRubyVarType	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetRubyVarType	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:GetRubyVarType(v)$/;"	f
GetRustIndent	plugged/vim-polyglot/indent/rust.vim	/^function GetRustIndent(lnum)$/;"	f
GetSID	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:GetSID()$/;"	f
GetScalaIndent	plugged/vim-polyglot/indent/scala.vim	/^function! GetScalaIndent()$/;"	f
GetScriptType	plugged/vim-polyglot/indent/html.vim	/^func! s:GetScriptType(str)$/;"	f
GetSlimIndent	plugged/vim-polyglot/indent/slim.vim	/^function! GetSlimIndent()$/;"	f
GetSlimeIndent	plugged/vim-polyglot/indent/slime.vim	/^function! GetSlimeIndent()$/;"	f
GetSolidityIndent	plugged/vim-polyglot/indent/solidity.vim	/^function GetSolidityIndent()$/;"	f
GetStylusIndent	plugged/vim-polyglot/indent/stylus.vim	/^function! GetStylusIndent()$/;"	f
GetSupportedFiletypes	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
GetSynStack	plugged/vim-polyglot/indent/purescript.vim	/^function! s:GetSynStack(lnum, col)$/;"	f
GetTagInfo	plugged/tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
GetTokensFromLine	plugged/vim-polyglot/indent/erlang.vim	/^function! s:GetTokensFromLine(line, string_continuation, atom_continuation,$/;"	f
GetTrimmedLine	plugged/vim-polyglot/indent/coffee.vim	/^function! s:GetTrimmedLine(lnum)$/;"	f
GetTrimmedLine	plugged/vim-polyglot/indent/ls.vim	/^function! s:GetTrimmedLine(linenum)$/;"	f
GetTwigIndent	plugged/vim-polyglot/indent/twig.vim	/^fun! GetTwigIndent(currentLineNumber)$/;"	f
GetTypescriptIndent	plugged/vim-polyglot/indent/typescript.vim	/^function GetTypescriptIndent()$/;"	f
GetValaIndent	plugged/vim-polyglot/indent/vala.vim	/^function GetValaIndent(lnum)$/;"	f
GetVarIndent	plugged/vim-polyglot/indent/solidity.vim	/^function s:GetVarIndent(lnum)$/;"	f
GetVars	plugged/vim-polyglot/indent/javascript.vim	/^function s:GetVars()$/;"	f
GetVisualStartPosition	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GetVisualStartPosition(c_pos, v_start, v_end, search_direction) "{{{$/;"	f
GetVueIndent	plugged/vim-polyglot/indent/vue.vim	/^function! GetVueIndent()$/;"	f
Git	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang, mods, args) abort$/;"	f
GitComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
GitGutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutter    call gitgutter#process_buffer(bufnr(''), 1)$/;"	c
GitGutterAll	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterAll call gitgutter#all(1)$/;"	c
GitGutterDebug	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterGetHunkSummary	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsDisable call gitgutter#highlight#line_disable()$/;"	c
GitGutterLineHighlightsEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsEnable  call gitgutter#highlight#line_enable()$/;"	c
GitGutterLineHighlightsToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterLineHighlightsToggle  call gitgutter#highlight#line_toggle()$/;"	c
GitGutterNextHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterPreviewHunk call gitgutter#hunk#preview()$/;"	c
GitGutterSignsDisable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsDisable call gitgutter#sign#disable()$/;"	c
GitGutterSignsEnable	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsEnable  call gitgutter#sign#enable()$/;"	c
GitGutterSignsToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterSignsToggle  call gitgutter#sign#toggle()$/;"	c
GitGutterStageHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterStageHunk   call gitgutter#hunk#stage()$/;"	c
GitGutterToggle	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterToggle  call gitgutter#toggle()$/;"	c
GitGutterUndoHunk	plugged/vim-gitgutter/plugin/gitgutter.vim	/^command! -bar GitGutterUndoHunk    call gitgutter#hunk#undo()$/;"	c
GoIndent	plugged/vim-polyglot/indent/go.vim	/^function! GoIndent(lnum)$/;"	f
GotoFileWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoFileWindow(fileinfo, ...) abort$/;"	f
GotoNextFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoNextFold() abort$/;"	f
GotoNextToplevelTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
GotoPrevFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:GotoPrevFold() abort$/;"	f
GotoTrailingWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:GotoTrailingWhitespace(search_backwards, from, to)$/;"	f
Goyo	plugged/goyo.vim/plugin/goyo.vim	/^command! -nargs=? -bar -bang Goyo call goyo#execute(<bang>0, <q-args>)$/;"	c
Grep	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GroovyHiLink	plugged/vim-polyglot/syntax/groovy.vim	/^  command! -nargs=+ GroovyHiLink hi def link <args>$/;"	c
GroovyHiLink	plugged/vim-polyglot/syntax/groovy.vim	/^  command! -nargs=+ GroovyHiLink hi link <args>$/;"	c
GroupingAlgorithmOriginal	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GroupingAlgorithmOriginal(targets, keys)$/;"	f
GroupingAlgorithmSCTree	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:GroupingAlgorithmSCTree(targets, keys) "{{{$/;"	f
GruvboxHlsHideCursor	plugged/gruvbox/colors/gruvbox.vim	/^function! GruvboxHlsHideCursor()$/;"	f
GruvboxHlsShowCursor	plugged/gruvbox/colors/gruvbox.vim	/^function! GruvboxHlsShowCursor()$/;"	f
HL	plugged/gruvbox/colors/gruvbox.vim	/^function! s:HL(group, fg, ...)$/;"	f
HTTPError	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^from urllib.error import HTTPError$/;"	i
HandleBufDelete	plugged/tagbar/autoload/tagbar.vim	/^function! s:HandleBufDelete(bufname, bufnr) abort$/;"	f
HandleBufWrite	plugged/tagbar/autoload/tagbar.vim	/^function! s:HandleBufWrite(fname) abort$/;"	f
HandleOnlyWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:HandleOnlyWindow() abort$/;"	f
HandleRunResults	plugged/vim-polyglot/ftplugin/mail_vifm.vim	/^function! s:HandleRunResults(exitcode, listf)$/;"	f
HasOpenFileWindows	plugged/tagbar/autoload/tagbar.vim	/^function! s:HasOpenFileWindows() abort$/;"	f
HasSyntax	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:HasSyntax(syntaxName, ...)$/;"	f
HaxeHiLink	plugged/vim-polyglot/syntax/haxe.vim	/^  command! -nargs=+ HaxeHiLink hi def link <args>$/;"	c
HaxeHiLink	plugged/vim-polyglot/syntax/haxe.vim	/^  command! -nargs=+ HaxeHiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/after/syntax/cpp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/after/syntax/cpp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/extras/flow.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/extras/flow.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/extras/jsdoc.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/carp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/carp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/cql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/cql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/cryptol.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/cryptol.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/fsharp.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/fsharp.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/gnuplot.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/gnuplot.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/haproxy.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/haproxy.vim	/^  command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/jinja2.vim	/^  command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/lua.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/lua.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/mako.vim	/^    com -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/mako.vim	/^    com -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/mma.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/mma.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/nim.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/nim.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/ocaml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/ocaml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/octave.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/octave.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/pgsql.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/pgsql.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/proto.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/proto.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/ps1.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/ps1.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/puppet.vim	/^command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/python.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/python.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/qml.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/qml.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/racket.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/racket.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/rhelp.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/stylus.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/stylus.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/textile.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/textile.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/thrift.vim	/^    command! -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/thrift.vim	/^    command! -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/twig.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/twig.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/vbnet.vim	/^        command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/vbnet.vim	/^        command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/velocity.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	plugged/vim-polyglot/syntax/velocity.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HighlightEOLWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:HighlightEOLWhitespace(type)$/;"	f
HighlightEOLWhitespaceExceptCurrentLine	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:HighlightEOLWhitespaceExceptCurrentLine(type)$/;"	f
HighlightTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
HighlightTags	plugged/vim-easytags/plugin/easytags.vim	/^command! -bar HighlightTags call xolox#easytags#highlight()$/;"	c
Hinter._pos2hint_to_line2col2hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._pos2hint_to_line2col2hint(pos2hint) abort$/;"	f
Hinter._replace_line_for_hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_line_for_hint(col_num, line, hint) abort$/;"	f
Hinter._replace_tab_target	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_tab_target(col_num, line) abort$/;"	f
Hinter._replace_text_to_space	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._replace_text_to_space(line, col_num, len) abort$/;"	f
Hinter._save_lines	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._save_lines() abort$/;"	f
Hinter._show_hint_for_line	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._show_hint_for_line(winnr, lnum, col2hint) abort$/;"	f
Hinter._show_hint_for_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter._show_hint_for_win(winnr) abort$/;"	f
Hinter.after	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.after() abort$/;"	f
Hinter.before	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.before() abort$/;"	f
Hinter.disable_conceal_in_other_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.disable_conceal_in_other_win() abort$/;"	f
Hinter.init	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.init(hint_dict) abort$/;"	f
Hinter.modify_env_for_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.modify_env_for_win(winnr) abort$/;"	f
Hinter.new	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.new(hint_dict, config) abort$/;"	f
Hinter.remove_hints	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.remove_hints(winnr) abort$/;"	f
Hinter.restore_conceal_in_other_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_conceal_in_other_win() abort$/;"	f
Hinter.restore_env	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_env() abort$/;"	f
Hinter.restore_lines_for_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_lines_for_win(winnr) abort$/;"	f
Hinter.restore_options	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.restore_options() abort$/;"	f
Hinter.save_options	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.save_options() abort$/;"	f
Hinter.show_hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.show_hint() abort$/;"	f
Hinter.show_hint_pos	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:Hinter.show_hint_pos(lnum, cnum, char, winnr) abort$/;"	f
Hoge	plugged/vim-textobj-ruby/test/test.rb	/^  class Hoge$/;"	c	class:Main
HtmlHiLink	plugged/vim-polyglot/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	plugged/vim-polyglot/syntax/markdown.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlHiLink	plugged/vim-polyglot/syntax/mustache.vim	/^  command! -nargs=+ HtmlHiLink hi def link <args>$/;"	c
HtmlHiLink	plugged/vim-polyglot/syntax/mustache.vim	/^  command! -nargs=+ HtmlHiLink hi link <args>$/;"	c
HtmlIndent	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent()$/;"	f
HtmlIndentClose	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentClose(lnum)$/;"	f
HtmlIndentCloseAlt	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentCloseAlt(lnum)$/;"	f
HtmlIndentOpen	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentOpen(lnum)$/;"	f
HtmlIndentOpenAlt	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentOpenAlt(lnum)$/;"	f
HtmlIndentPush	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentPush(tag)$/;"	f
HtmlIndentSum	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>HtmlIndentSum(lnum, style)$/;"	f
HtmlIndent_CheckUserSettings	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_CheckUserSettings()$/;"	f
HtmlIndent_CountBraces	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_CountBraces(lnum)$/;"	f
HtmlIndent_FindStartTag	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindStartTag()$/;"	f
HtmlIndent_FindTagEnd	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindTagEnd()$/;"	f
HtmlIndent_FindTagStart	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_FindTagStart(lnum)$/;"	f
HtmlIndent_IsOpenTag	plugged/vim-polyglot/indent/html.vim	/^func! HtmlIndent_IsOpenTag(tagname)$/;"	f
I	plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalCept.php	/^$I = new FunctionalTester($scenario);$/;"	v
IEx	plugged/alchemist.vim/after/plugin/alchemist.vim	/^command! -nargs=* -complete=customlist,elixircomplete#ex_doc_complete IEx$/;"	c
IExHide	plugged/alchemist.vim/after/plugin/alchemist.vim	/^command! -nargs=0 IExHide call alchemist#hide_iex()$/;"	c
IMMoving_AcceptInputWhenMoved_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_AcceptInputWhenMoved_ECR(_VimTest):$/;"	c
IMMoving_CursorsKeys_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_CursorsKeys_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideAbove_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideAbove_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideBelow_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideBelow_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideLeft_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideLeft_ECR(_VimTest):$/;"	c
IMMoving_ExitWhenOutsideRight_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_ExitWhenOutsideRight_ECR(_VimTest):$/;"	c
IMMoving_NoExitingEventAtEnd_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExitingEventAtEnd_ECR(_VimTest):$/;"	c
IMMoving_NoExiting_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NoExiting_ECR(_VimTest):$/;"	c
IMMoving_NotExitingWhenBarelyOutsideLeft_ECR	plugged/ultisnips/test/test_Movement.py	/^class IMMoving_NotExitingWhenBarelyOutsideLeft_ECR(_VimTest):$/;"	c
IMPORT_LOGGER	plugged/deoplete-jedi/mk/debug_code.mk	/^IMPORT_LOGGER := from logging import getLogger\\nlogger = getLogger(__name__)$/;"	m
IMPORT_PYVMMONITOR	plugged/deoplete-jedi/mk/debug_code.mk	/^IMPORT_PYVMMONITOR := import sys\\nsys.path.append("\\\/Applications\\\/PyVmMonitor.app\\\/Contents\\\/MacOS\\\/public_api")\\nimport pyvmmonitor$/;"	m
IMPORT_TIMEIT	plugged/deoplete-jedi/mk/debug_code.mk	/^IMPORT_TIMEIT := from profiler import timeit$/;"	m
INDEX_VERSION	plugged/vim-notes/misc/notes/search-notes.py	/^INDEX_VERSION = 2$/;"	v
INITPY	plugged/deoplete-jedi/tests/sphinx-3000.py	/^INITPY = '__init__.py'$/;"	v
INSTANCEATTR	plugged/deoplete-jedi/tests/sphinx-3000.py	/^INSTANCEATTR = object()$/;"	v
INTEGER_EXT	plugged/alchemist.vim/erl_terms.py	/^INTEGER_EXT = struct.pack("b", 98)        # [Int32:Int]$/;"	v
InAllWindows	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:InAllWindows(command)$/;"	f
InMultiVarStatement	plugged/vim-polyglot/indent/solidity.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
InOneLineScope	plugged/vim-polyglot/indent/solidity.vim	/^function s:InOneLineScope(lnum)$/;"	f
InString	plugged/vim-polyglot/indent/graphql.vim	/^function s:InString(lnum, col)$/;"	f
IndentError	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IndentError(msg, token, stack)$/;"	f
IndentGuidesDisable	plugged/vim-indent-guides/plugin/indent_guides.vim	/^command! -bar IndentGuidesDisable call s:IndentGuidesDisable()$/;"	c
IndentGuidesDisable	plugged/vim-indent-guides/plugin/indent_guides.vim	/^function! s:IndentGuidesDisable()$/;"	f
IndentGuidesEnable	plugged/vim-indent-guides/plugin/indent_guides.vim	/^command! -bar IndentGuidesEnable  call s:IndentGuidesEnable()$/;"	c
IndentGuidesEnable	plugged/vim-indent-guides/plugin/indent_guides.vim	/^function! s:IndentGuidesEnable()$/;"	f
IndentGuidesToggle	plugged/vim-indent-guides/plugin/indent_guides.vim	/^command! -bar IndentGuidesToggle  call s:IndentGuidesToggle()$/;"	c
IndentGuidesToggle	plugged/vim-indent-guides/plugin/indent_guides.vim	/^function! s:IndentGuidesToggle()$/;"	f
IndentLevel	plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! IndentLevel(lnum)$/;"	f
IndentLinesDisable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! IndentLinesDisable call <SID>IndentLinesDisable()$/;"	c
IndentLinesDisable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! IndentLinesDisable let b:indentLine_enabled = 0 | call <SID>IndentLinesDisable()$/;"	c
IndentLinesDisable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesDisable()$/;"	f
IndentLinesEnable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! IndentLinesEnable call <SID>IndentLinesEnable()$/;"	c
IndentLinesEnable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! IndentLinesEnable let b:indentLine_enabled = 1 | call <SID>IndentLinesEnable()$/;"	c
IndentLinesEnable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesEnable()$/;"	f
IndentLinesReset	plugged/indentLine/after/plugin/indentLine.vim	/^command! -nargs=? IndentLinesReset call <SID>ResetWidth(<f-args>)$/;"	c
IndentLinesToggle	plugged/indentLine/after/plugin/indentLine.vim	/^command! IndentLinesToggle call <SID>IndentLinesToggle()$/;"	c
IndentLinesToggle	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:IndentLinesToggle()$/;"	f
IndentUtil	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^class IndentUtil(object):$/;"	c
IndentUtil	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^from UltiSnips.indent_util import IndentUtil$/;"	i
IndentUtil	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^from UltiSnips.indent_util import IndentUtil$/;"	i
IndentUtil	plugged/ultisnips/pythonx/UltiSnips/text_objects/_visual.py	/^from UltiSnips.indent_util import IndentUtil$/;"	i
IndentWithContinuation	plugged/vim-polyglot/indent/solidity.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
IndentingKeywordInMSL	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IndentingKeywordInMSL(msl_info) abort$/;"	f
IndentingKeywordInMSL	plugged/vim-ruby/indent/ruby.vim	/^function! s:IndentingKeywordInMSL(msl_info) abort$/;"	f
IndexTaggedNotes	plugged/vim-notes/plugin/notes.vim	/^command! -bar IndexTaggedNotes call xolox#notes#tags#create_index()$/;"	c
Init	plugged/supertab/plugin/supertab.vim	/^function! s:Init() " {{{$/;"	f
Init	plugged/tagbar/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
InitBuffer	plugged/supertab/plugin/supertab.vim	/^function! s:InitBuffer() " {{{$/;"	f
InitColor	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:InitColor()$/;"	f
InitCwds	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:InitCwds()$/;"	f
InitPureScript	plugged/vim-polyglot/ftplugin/purescript.vim	/^fun! InitPureScript()$/;"	f
InitTypes	plugged/tagbar/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
InitVariable	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:InitVariable(var, value)$/;"	f
InitVariable	plugged/vim-indent-guides/plugin/indent_guides.vim	/^function s:InitVariable(var, value)$/;"	f
InitWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
InlineTemp	plugged/vim-ruby-refactoring/plugin/refactorings/general/inlinetemp.vim	/^function! InlineTemp()$/;"	f
InnerClass	plugged/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^        class InnerClass$/;"	c	class:OuterClass
InsertTestText1	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! InsertTestText1()$/;"	f
InsideTag	plugged/vim-polyglot/indent/html.vim	/^func! s:InsideTag(foundHtmlString)$/;"	f
IntroduceVariable	plugged/vim-ruby-refactoring/plugin/refactorings/general/introducevariable.vim	/^function! IntroduceVariable()$/;"	f
Invert	plugged/vim-rails/autoload/rails.vim	/^function! s:Invert(bang)$/;"	f
IsAssignment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsAssignment(str, pos) abort$/;"	f
IsAssignment	plugged/vim-ruby/indent/ruby.vim	/^function! s:IsAssignment(str, pos) abort$/;"	f
IsBeginBlockByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsBeginBlockByStr(str)$/;"	f
IsBlankLine	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsBlankLine(line)$/;"	f
IsBlock	plugged/vim-polyglot/indent/javascript.vim	/^function s:IsBlock()$/;"	f
IsBlock	plugged/vim-polyglot/indent/typescript.vim	/^function s:IsBlock()$/;"	f
IsCatchStandalone	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsCatchStandalone(lnum, i)$/;"	f
IsComment	plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsComment(lnum, col)$/;"	f
IsComment	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsComment(linenum, col)$/;"	f
IsCommentLine	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsCommentLine(linenum)$/;"	f
IsCommentLine	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsCommentLine(lnum)$/;"	f
IsCommentOrString	plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsCommentOrString(lnum, col)$/;"	f
IsCommentOrString	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsCommentOrString(linenum, col)$/;"	f
IsContOne	plugged/vim-polyglot/indent/javascript.vim	/^function s:IsContOne(cont)$/;"	f
IsDoubleCoronByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsDoubleCoronByStr(str)$/;"	f
IsEndBlockByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsEndBlockByStr(str)$/;"	f
IsExcludedFromIndent	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsExcludedFromIndent()$/;"	f
IsExcludedFromIndentAtPosition	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsExcludedFromIndentAtPosition(line, column)$/;"	f
IsHeaderLine	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsHeaderLine(line)$/;"	f
IsIfStatementByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsIfStatementByStr(str)$/;"	f
IsInBrackets	plugged/vim-polyglot/indent/julia.vim	/^function IsInBrackets(lnum, c)$/;"	f
IsInClassDef	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInClassDef	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsInClassDef()$/;"	f
IsInCommentOrString	plugged/vim-polyglot/indent/lua.vim	/^function s:IsInCommentOrString(lnum, col)$/;"	f
IsInMultilineComment	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f
IsInRubyGroup	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInRubyGroup(groups, lnum, col) abort$/;"	f
IsInRubyGroup	plugged/vim-ruby/indent/ruby.vim	/^function! s:IsInRubyGroup(groups, lnum, col) abort$/;"	f
IsInString	plugged/vim-polyglot/indent/crystal.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	plugged/vim-polyglot/indent/json.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInString(lnum, col) abort$/;"	f
IsInString	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInString	plugged/vim-ruby/indent/ruby.vim	/^function! s:IsInString(lnum, col) abort$/;"	f
IsInStringDelimiter	plugged/vim-polyglot/indent/crystal.vim	/^function s:IsInStringDelimiter(lnum, col)$/;"	f
IsInStringDelimiter	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringDelimiter(lnum, col) abort$/;"	f
IsInStringDelimiter	plugged/vim-ruby/indent/ruby.vim	/^function! s:IsInStringDelimiter(lnum, col) abort$/;"	f
IsInStringOrComment	plugged/vim-polyglot/indent/crystal.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrComment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringOrComment(lnum, col) abort$/;"	f
IsInStringOrComment	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsInStringOrComment	plugged/vim-ruby/indent/ruby.vim	/^function! s:IsInStringOrComment(lnum, col) abort$/;"	f
IsInStringOrDocumentation	plugged/vim-polyglot/indent/crystal.vim	/^function s:IsInStringOrDocumentation(lnum, col)$/;"	f
IsInStringOrDocumentation	plugged/vim-polyglot/indent/ruby.vim	/^function! s:IsInStringOrDocumentation(lnum, col) abort$/;"	f
IsInStringOrDocumentation	plugged/vim-ruby/indent/ruby.vim	/^function! s:IsInStringOrDocumentation(lnum, col) abort$/;"	f
IsInsideOfBlockByNum	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsInsideOfBlockByNum(line_num)$/;"	f
IsInsidePythonBlock	plugged/vim-polyglot/indent/mako.vim	/^function IsInsidePythonBlock(startline)$/;"	f
IsLiStart	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsLiStart(line)$/;"	f
IsLineAtomContinuation	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsLineAtomContinuation(lnum)$/;"	f
IsLineComment	plugged/vim-polyglot/indent/solidity.vim	/^function s:IsLineComment(lnum, col)$/;"	f
IsLineStringContinuation	plugged/vim-polyglot/indent/erlang.vim	/^function! s:IsLineStringContinuation(lnum)$/;"	f
IsMkdCode	plugged/vim-polyglot/indent/markdown.vim	/^function! s:IsMkdCode(lnum)$/;"	f
IsNoCompleteAfterReset	plugged/supertab/plugin/supertab.vim	/^function! s:IsNoCompleteAfterReset() " {{{$/;"	f
IsPosInClassDef	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsPosInClassDef	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:IsPosInClassDef(pos)$/;"	f
IsPreviewOpen	plugged/supertab/plugin/supertab.vim	/^function! s:IsPreviewOpen() " {{{$/;"	f
IsReturnByStr	plugged/vim-polyglot/indent/autohotkey.vim	/^function! IsReturnByStr(str)$/;"	f
IsStartingDelimiter	plugged/vim-polyglot/indent/blade.vim	/^function! s:IsStartingDelimiter(lnum)$/;"	f
IsString	plugged/vim-polyglot/indent/coffee.vim	/^function! s:IsString(lnum, col)$/;"	f
IsString	plugged/vim-polyglot/indent/ls.vim	/^function! s:IsString(linenum, col)$/;"	f
IsSwitch	plugged/vim-polyglot/indent/javascript.vim	/^function s:IsSwitch()$/;"	f
IsSyntaxNameExcludedFromIndent	plugged/vim-polyglot/indent/swift.vim	/^function! s:IsSyntaxNameExcludedFromIndent(name)$/;"	f
IsValidFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
JB	plugged/ultisnips/test/constant.py	/^JB = '+'  # Jump backwards$/;"	v
JF	plugged/ultisnips/test/constant.py	/^JF = '?'  # Jump forwards$/;"	v
JF	plugged/ultisnips/test/test_Interpolation.py	/^from test.constant import EX, JF, ESC$/;"	i
JuliaGetMatchWords	plugged/vim-polyglot/ftplugin/julia.vim	/^  function! JuliaGetMatchWords()$/;"	f
JuliaMatch	plugged/vim-polyglot/indent/julia.vim	/^function JuliaMatch(lnum, str, regex, st, ...)$/;"	f
JumpForward_DefSnippet	plugged/ultisnips/test/test_Editing.py	/^class JumpForward_DefSnippet(_VimTest):$/;"	c
JumpInit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit(...) abort$/;"	f
JumpToTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar) abort$/;"	f
Jump_Back	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Jump_Back()$/;"	f
Jump_Forward	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Jump_Forward()$/;"	f
K	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^nnoremap <buffer> <expr> K col('.') < 7 && expand('<Lt>cword>') =~ '\\X' && getline('.') =~ '^\\w\\+\\s\\+\\x\\+\\>' ? 'wK' : 'K'$/;"	m
K	plugged/vim-polyglot/ftplugin/racket.vim	/^nnoremap <buffer> K :silent !raco docs <cword><cr>:redraw!<cr>$/;"	m
K	plugged/vim-polyglot/ftplugin/racket.vim	/^vnoremap <buffer> K :call <SID>Racket_visual_doc()<cr>$/;"	m
KeyMap.Add	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	plugged/nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
L2U_ResetLastCompletionInfo	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_ResetLastCompletionInfo()$/;"	f
L2U_SetAutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetAutoSub(wait_insert_enter)$/;"	f
L2U_SetFallbackMapping	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetFallbackMapping(s, k)$/;"	f
L2U_SetTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetTab(wait_insert_enter)$/;"	f
L2U_Setup	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_Setup()$/;"	f
L2U_SetupGlobal	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_SetupGlobal()$/;"	f
L2U_UnsetAutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_UnsetAutoSub()$/;"	f
L2U_UnsetTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_UnsetTab()$/;"	f
L2U_deprecated_options	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_deprecated_options()$/;"	f
L2U_file_type_regex	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_file_type_regex(ft)$/;"	f
L2U_fix_compose_chars	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_fix_compose_chars(uni)$/;"	f
L2U_ismatch	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_ismatch()$/;"	f
L2U_longest_common_prefix	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_longest_common_prefix(partmatches)$/;"	f
L2U_partmatches_sort	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! s:L2U_partmatches_sort(p1, p2)$/;"	f
LARGE_BIG_EXT	plugged/alchemist.vim/erl_terms.py	/^LARGE_BIG_EXT = 111     # [UInt32:n, UInt8:Sign, n:nums]$/;"	v
LARGE_TUPLE_EXT	plugged/alchemist.vim/erl_terms.py	/^LARGE_TUPLE_EXT = 105   # [UInt32:Arity, N:Elements]$/;"	v
LEVENSHTEIN_SUPPORTED	plugged/vim-notes/misc/notes/search-notes.py	/^    LEVENSHTEIN_SUPPORTED = False$/;"	v
LEVENSHTEIN_SUPPORTED	plugged/vim-notes/misc/notes/search-notes.py	/^    LEVENSHTEIN_SUPPORTED = True$/;"	v
LINES_ABOVE	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^LINES_ABOVE = 20$/;"	v
LINES_BELOW	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^LINES_BELOW = 20$/;"	v
LIST_EXT	plugged/alchemist.vim/erl_terms.py	/^LIST_EXT = struct.pack("b", 108)          # [UInt32:Len, Elements, Tail]$/;"	v
LS	plugged/ultisnips/test/constant.py	/^LS = '@'  # List snippets$/;"	v
LaTeXBuilder	plugged/deoplete-jedi/tests/sphinx-3000.py	/^        from sphinx.builders.latex import LaTeXBuilder$/;"	i
LaTeXtoUnicode#AutoSub	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#AutoSub(...)$/;"	f
LaTeXtoUnicode#CmdTab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#CmdTab()$/;"	f
LaTeXtoUnicode#Disable	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Disable()$/;"	f
LaTeXtoUnicode#Enable	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Enable()$/;"	f
LaTeXtoUnicode#FallbackCallback	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#FallbackCallback()$/;"	f
LaTeXtoUnicode#Init	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Init(...)$/;"	f
LaTeXtoUnicode#PutLiteral	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#PutLiteral(k)$/;"	f
LaTeXtoUnicode#Refresh	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Refresh()$/;"	f
LaTeXtoUnicode#Tab	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Tab()$/;"	f
LaTeXtoUnicode#Toggle	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#Toggle()$/;"	f
LaTeXtoUnicode#omnifunc	plugged/vim-polyglot/autoload/LaTeXtoUnicode.vim	/^function! LaTeXtoUnicode#omnifunc(findstart, base)$/;"	f
Lab	plugged/vim-test/spec/fixtures/lab/test/normal.js	/^var Lab = require('Lab');$/;"	v
LabelEnv	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^function! s:LabelEnv()$/;"	f
LastBlockIndent	plugged/vim-polyglot/indent/julia.vim	/^function LastBlockIndent(lnum)$/;"	f
LatexBoxNextSection	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^function! s:LatexBoxNextSection(type, backwards, visual)$/;"	f
LatexBox_BibComplete	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! LatexBox_BibComplete(regexp)$/;"	f
LatexBox_BibSearch	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! LatexBox_BibSearch(regexp)$/;"	f
LatexBox_Complete	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! LatexBox_Complete(findstart, base)$/;"	f
LatexBox_Completion	plugged/vim-polyglot/indent/tex.vim	/^	augroup LatexBox_Completion$/;"	a
LatexBox_FoldLevel	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^function! LatexBox_FoldLevel(lnum)$/;"	f
LatexBox_FoldOnDemand	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^function! LatexBox_FoldOnDemand()$/;"	f
LatexBox_FoldText	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^function! LatexBox_FoldText()$/;"	f
LatexBox_FoldText_title	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^function! LatexBox_FoldText_title()$/;"	f
LatexBox_GetAuxFile	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetAuxFile()$/;"	f
LatexBox_GetBuildBasename	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetBuildBasename(with_dir)$/;"	f
LatexBox_GetCurrentEnvironment	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetCurrentEnvironment(...)$/;"	f
LatexBox_GetLogFile	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetLogFile()$/;"	f
LatexBox_GetMainFileName	plugged/vim-polyglot/ftplugin/latex-box/findmain.vim	/^function! LatexBox_GetMainFileName(...)$/;"	f
LatexBox_GetMainTexFile	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetMainTexFile()$/;"	f
LatexBox_GetOutputFile	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetOutputFile()$/;"	f
LatexBox_GetTexRoot	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_GetTexRoot()$/;"	f
LatexBox_HighlightPairs	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^	augroup LatexBox_HighlightPairs$/;"	a
LatexBox_InComment	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_InComment(...)$/;"	f
LatexBox_JumpToNextBraces	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^function! LatexBox_JumpToNextBraces(backward)$/;"	f
LatexBox_LatexErrors	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_LatexErrors(status, ...)$/;"	f
LatexBox_Latexmk	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_Latexmk(force)$/;"	f
LatexBox_LatexmkClean	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_LatexmkClean(cleanall)$/;"	f
LatexBox_LatexmkStatus	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_LatexmkStatus(detailed)$/;"	f
LatexBox_LatexmkStop	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! LatexBox_LatexmkStop(silent)$/;"	f
LatexBox_TOC	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^function! LatexBox_TOC(...)$/;"	f
LatexBox_TexIndent	plugged/vim-polyglot/indent/tex.vim	/^function! LatexBox_TexIndent()$/;"	f
LatexBox_TexToTree	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_TexToTree(str)$/;"	f
LatexBox_TreeToTex	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_TreeToTex(tree)$/;"	f
LatexBox_View	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^function! LatexBox_View(...)$/;"	f
LatexBox_complete_inlineMath_or_not	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:LatexBox_complete_inlineMath_or_not()$/;"	f
LatexBox_inlineMath_completion	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:LatexBox_inlineMath_completion(regex, ...)$/;"	f
LatexBox_inlineMath_mathlist	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:LatexBox_inlineMath_mathlist(line,inline_pattern, line_num)$/;"	f
LatexBox_kpsewhich	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! LatexBox_kpsewhich(file)$/;"	f
LatexErrors	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! LatexErrors			call LatexBox_LatexErrors(-1)$/;"	c
LatexFold	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^command! LatexFold  call LatexBox_FoldOnDemand()$/;"	c
LatexLabels	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^command! LatexLabels call <SID>PromptLabelList()$/;"	c
LatexTOC	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^command! LatexTOC call LatexBox_TOC()$/;"	c
LatexTOCToggle	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^command! LatexTOCToggle call LatexBox_TOC(1)$/;"	c
LatexToggleStarEnv	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:LatexToggleStarEnv()$/;"	f
LatexView	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^command! -nargs=* LatexView call LatexBox_View('<args>')$/;"	c
Latexbox_CallIndent	plugged/vim-polyglot/indent/tex.vim	/^function! Latexbox_CallIndent()$/;"	f
Latexmk	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! -bang	Latexmk			call LatexBox_Latexmk(<q-bang> == "!")$/;"	c
LatexmkCallback	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:LatexmkCallback(basename, status)$/;"	f
LatexmkClean	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! -bang	LatexmkClean	call LatexBox_LatexmkClean(<q-bang> == "!")$/;"	c
LatexmkSetPID	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:LatexmkSetPID(basename, pid)$/;"	f
LatexmkStatus	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! -bang	LatexmkStatus	call LatexBox_LatexmkStatus(<q-bang> == "!")$/;"	c
LatexmkStop	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^command! LatexmkStop			call LatexBox_LatexmkStop(0)$/;"	c
LeadingOperator	plugged/vim-polyglot/indent/ruby.vim	/^function! s:LeadingOperator(cline_info) abort$/;"	f
LeadingOperator	plugged/vim-ruby/indent/ruby.vim	/^function! s:LeadingOperator(cline_info) abort$/;"	f
LeadingSpaceDisable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! LeadingSpaceDisable call <SID>LeadingSpaceDisable()$/;"	c
LeadingSpaceDisable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! LeadingSpaceDisable let b:indentLine_leadingSpaceEnabled = 0 | call <SID>LeadingSpaceDisable()$/;"	c
LeadingSpaceDisable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceDisable()$/;"	f
LeadingSpaceEnable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! LeadingSpaceEnable call <SID>LeadingSpaceEnable()$/;"	c
LeadingSpaceEnable	plugged/indentLine/after/plugin/indentLine.vim	/^    command! LeadingSpaceEnable let b:indentLine_leadingSpaceEnabled = 1 | call <SID>LeadingSpaceEnable()$/;"	c
LeadingSpaceEnable	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceEnable()$/;"	f
LeadingSpaceToggle	plugged/indentLine/after/plugin/indentLine.vim	/^command! LeadingSpaceToggle call <SID>LeadingSpaceToggle()$/;"	c
LeadingSpaceToggle	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:LeadingSpaceToggle()$/;"	f
LeaveTrailingWhitespace	plugged/ultisnips/test/test_Chars.py	/^class LeaveTrailingWhitespace(_VimTest):$/;"	c
Left	plugged/tabular/autoload/tabular.vim	/^function! s:Left(string, fieldwidth)$/;"	f
Levenshtein	plugged/vim-notes/misc/notes/search-notes.py	/^    import Levenshtein$/;"	i
LineHasOpeningBrackets	plugged/vim-polyglot/indent/json.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
LineHasOpeningBrackets	plugged/vim-polyglot/indent/solidity.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
LineIterator	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.text import LineIterator, head_tail$/;"	i
LineIterator	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^from UltiSnips.text import LineIterator, head_tail$/;"	i
LineIterator	plugged/ultisnips/pythonx/UltiSnips/text.py	/^class LineIterator(object):$/;"	c
LinewiseSelectA	plugged/vim-textobj-user/t/selection.vim	/^function! LinewiseSelectA()$/;"	f
ListAllAvailable_BraceInFront_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_BraceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_NonDefined_NoExpectionShouldBeRaised	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NonDefined_NoExpectionShouldBeRaised(_ListAllSnippets):$/;"	c
ListAllAvailable_NothingTyped_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_NothingTyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_SpaceInFront_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_SpaceInFront_ExpectCorrectResult(_ListAllSnippets):$/;"	c
ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^        _ListAllSnippets):$/;"	c
ListAllAvailable_testtyped_ExpectCorrectResult	plugged/ultisnips/test/test_ListSnippets.py	/^class ListAllAvailable_testtyped_ExpectCorrectResult(_ListAllSnippets):$/;"	c
LiveScriptCompile	plugged/vim-polyglot/ftplugin/ls.vim	/^\\        LiveScriptCompile call s:LiveScriptCompile(<line1>, <line2>, <q-args>)$/;"	c
LiveScriptCompile	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompile(startline, endline, args)$/;"	f
LiveScriptCompileClose	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileClose()$/;"	f
LiveScriptCompileComplete	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileComplete(arg, cmdline, cursor)$/;"	f
LiveScriptCompileResetVars	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileResetVars()$/;"	f
LiveScriptCompileUpdate	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileUpdate(startline, endline)$/;"	f
LiveScriptCompileWatchUpdate	plugged/vim-polyglot/ftplugin/ls.vim	/^function! s:LiveScriptCompileWatchUpdate()$/;"	f
LiveScriptMake	plugged/vim-polyglot/compiler/ls.vim	/^command! -bang -bar -nargs=* LiveScriptMake make<bang> <args>$/;"	c
LiveScriptRun	plugged/vim-polyglot/ftplugin/ls.vim	/^command! -range=% -bar LiveScriptRun <line1>,<line2>:w !lsc -sp$/;"	c
LiveScriptUpdateMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^augroup LiveScriptUpdateMakePrg$/;"	a
LoadBookmarks	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! -nargs=1 LoadBookmarks call CallDeprecatedCommand('BookmarkLoad', [<f-args>, 0, 0])$/;"	c
LoadUserTypeDefs	plugged/tagbar/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
Log	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd, line1, line2, ...) abort$/;"	f
Log	plugged/vim-gitgutter/test/runner.vim	/^function Log(msg)$/;"	f
Log	plugged/vim-polyglot/indent/erlang.vim	/^function! s:Log(s)$/;"	f
LogDetect	plugged/vim-rails/plugin/rails.vim	/^function! s:LogDetect() abort$/;"	f
LoggingMixin	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^from deoplete.logger import LoggingMixin$/;"	i
LoggingMixin	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^class LoggingMixin(object):$/;"	c
LoggingMixin	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^from deoplete.logger import LoggingMixin$/;"	i
LookingAt	plugged/vim-polyglot/indent/javascript.vim	/^function s:LookingAt()$/;"	f
MAKEFILE_DIR	plugged/ultisnips/Makefile	/^MAKEFILE_DIR := $(dir ${MAKEFILE_PATH})$/;"	m
MAKEFILE_PATH	plugged/ultisnips/Makefile	/^MAKEFILE_PATH := $(abspath $(lastword $(MAKEFILE_LIST)))$/;"	m
MAP_EXT	plugged/alchemist.vim/erl_terms.py	/^MAP_EXT = struct.pack("b", 116)$/;"	v
Main	plugged/vim-textobj-ruby/test/test.rb	/^module Main$/;"	m
MakoIndentClose	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentClose(lnum)$/;"	f
MakoIndentOpen	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentOpen(lnum)$/;"	f
MakoIndentPush	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MakoIndentPush(tag)$/;"	f
ManualCompletionEnter	plugged/supertab/plugin/supertab.vim	/^function! s:ManualCompletionEnter() " {{{$/;"	f
Map	plugged/vim-polyglot/indent/twig.vim	/^function! s:Map(Fun, list)$/;"	f
MapKeys	plugged/tagbar/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
Match	plugged/vim-polyglot/indent/crystal.vim	/^function s:Match(lnum, regex)$/;"	f
Match	plugged/vim-polyglot/indent/json.vim	/^function s:Match(lnum, regex)$/;"	f
Match	plugged/vim-polyglot/indent/ruby.vim	/^function! s:Match(lnum, regex) abort$/;"	f
Match	plugged/vim-polyglot/indent/solidity.vim	/^function s:Match(lnum, regex)$/;"	f
Match	plugged/vim-ruby/indent/ruby.vim	/^function! s:Match(lnum, regex) abort$/;"	f
MatchCount	plugged/vim-polyglot/indent/mako.vim	/^fun! <SID>MatchCount(expr, pat)$/;"	f
MatchIsTooCheap	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MatchIsTooCheap(_Base, unittest.TestCase):$/;"	c
Math	plugged/vim-test/spec/fixtures/minitest/classic_spec_test.rb	/^module Math$/;"	m
Math	plugged/vim-test/spec/fixtures/minitest/classic_unit_test.rb	/^module Math$/;"	m
MathSpec	plugged/vim-test/spec/fixtures/minitest/explicit_spec_test.rb	/^class MathSpec < Minitest::Spec$/;"	c
MathTest	plugged/vim-test/spec/fixtures/maven/MathTest.java	/^	public MathTest(String testName) {$/;"	m	class:MathTest
MathTest	plugged/vim-test/spec/fixtures/maven/MathTest.java	/^public class MathTest extends TestCase {$/;"	c
MathTest	plugged/vim-test/spec/fixtures/minitest/rails_unit_test.rb	/^class MathTest < Minitest::Test$/;"	c
MathTestCase	plugged/vim-test/spec/fixtures/maven/MathTestCase.java	/^	public MathTestCase(String testName) {$/;"	m	class:MathTestCase
MathTestCase	plugged/vim-test/spec/fixtures/maven/MathTestCase.java	/^public class MathTestCase extends TestCase {$/;"	c
MathTests	plugged/vim-test/spec/fixtures/maven/MathTests.java	/^	public MathTests(String testName) {$/;"	m	class:MathTests
MathTests	plugged/vim-test/spec/fixtures/maven/MathTests.java	/^public class MathTests extends TestCase {$/;"	c
MaxLookback	plugged/vim-polyglot/indent/ls.vim	/^function! s:MaxLookback(startlinenum)$/;"	f
MenuController.New	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Merge	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Merge(cmd, bang, args) abort$/;"	f
Message	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:Message(message) " {{{$/;"	f
MinimizeMaxFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! s:MinimizeMaxFoldLevel(fileinfo, tags) abort$/;"	f
Mirror	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_base.py	/^from UltiSnips.text_objects import  Mirror$/;"	i
Mirror	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.text_objects import EscapedChar, Mirror, VimLCode, Visual$/;"	i
Mirror	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
Mirror	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._mirror import Mirror$/;"	i
Mirror	plugged/ultisnips/pythonx/UltiSnips/text_objects/_mirror.py	/^class Mirror(NoneditableTextObject):$/;"	c
Mirror	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^from UltiSnips.text_objects._mirror import Mirror$/;"	i
MirrorBeforeTabstopLeave_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopLeave_ExpectCorrectResult(_VimTest):$/;"	c
MirrorBeforeTabstopOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorBeforeTabstopOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
MirrorRealLifeExample_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MirrorRealLifeExample_ExpectCorrectResult(_VimTest):$/;"	c
MirrorToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_base.py	/^from UltiSnips.snippet.parsing._lexer import MirrorToken$/;"	i
MirrorToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class MirrorToken(Token):$/;"	c
MirrorToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^    VisualToken, TabStopToken, MirrorToken, ShellCodeToken$/;"	i
MirrorToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
Mirror_TestKillTabstop_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKillTabstop_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertAfter_NoKill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBefore_NoKill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Mirror_TestKill_InsertBeginning_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Mirror_TestKill_InsertEnd_Kill	plugged/ultisnips/test/test_Mirror.py	/^class Mirror_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
Mix	plugged/alchemist.vim/after/plugin/alchemist.vim	/^  command! -bar -nargs=? -complete=custom,alchemist#mix_complete Mix$/;"	c
ModuleDocumenter	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class ModuleDocumenter(Documenter):$/;"	c
ModuleLevelDocumenter	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class ModuleLevelDocumenter(Documenter):$/;"	c
MostRecentNote	plugged/vim-notes/plugin/notes.vim	/^command! -bar -bang MostRecentNote call xolox#notes#recent#edit(<q-bang>)$/;"	c
Move	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force, rename, destination) abort$/;"	f
MoveComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P) abort$/;"	f
MovePosition_DelSameLine	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSameLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine(_MPBase, unittest.TestCase):$/;"	c
MovePosition_DelSecondLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_DelSecondLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine1	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine1(_MPBase, unittest.TestCase):$/;"	c
MovePosition_InsSameLine2	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class MovePosition_InsSameLine2(_MPBase, unittest.TestCase):$/;"	c
Move_N	plugged/vim-textobj-user/t/move.vim	/^function! Move_N()$/;"	f
Move_P	plugged/vim-textobj-user/t/move.vim	/^function! Move_P()$/;"	f
Move_n	plugged/vim-textobj-user/t/move.vim	/^function! Move_n()$/;"	f
Move_p	plugged/vim-textobj-user/t/move.vim	/^function! Move_p()$/;"	f
MultiLine	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class MultiLine(_Base, unittest.TestCase):$/;"	c
MultiLineDefault_BS	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_BS(_MultiLineDefault):$/;"	c
MultiLineDefault_Jump	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Jump(_MultiLineDefault):$/;"	c
MultiLineDefault_Type	plugged/ultisnips/test/test_Chars.py	/^class MultiLineDefault_Type(_MultiLineDefault):$/;"	c
MultiWordSnippet_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWordSnippet_Simple(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix	plugged/ultisnips/test/test_SnippetOptions.py	/^        _MultiWord_SnippetOptions_ExpandWordSnippets):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^        _MultiWord_SnippetOptions_ExpandWordSnippets):$/;"	c
MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^        _MultiWord_SnippetOptions_ExpandWordSnippets):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	plugged/ultisnips/test/test_SnippetOptions.py	/^class MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	plugged/ultisnips/test/test_SnippetOptions.py	/^        _VimTest):$/;"	c
MultilineExpandTestTyping_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class MultilineExpandTestTyping_ExpectCorrectResult(_VimTest):$/;"	c
MultilineExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class MultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
MultilineStringOrLineComment	plugged/vim-polyglot/indent/ruby.vim	/^function! s:MultilineStringOrLineComment(cline_info) abort$/;"	f
MultilineStringOrLineComment	plugged/vim-ruby/indent/ruby.vim	/^function! s:MultilineStringOrLineComment(cline_info) abort$/;"	f
MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult(_VimTest):$/;"	c
MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
MultipleCursorsFind	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^command! -nargs=1 -range=% MultipleCursorsFind$/;"	c
Multiple_ManySnippetsOneTrigger_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_ManySnippetsOneTrigger_ECR(_VimTest):$/;"	c
Multiple_SimpleCaseEscapeOut_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseEscapeOut_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectFirst_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectFirst_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectSecond_ECR	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectSecond_ECR(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectTooHigh_ESelectLast	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectTooHigh_ESelectLast(_MultipleMatches):$/;"	c
Multiple_SimpleCaseSelectZero_EEscape	plugged/ultisnips/test/test_MultipleMatches.py	/^class Multiple_SimpleCaseSelectZero_EEscape(_MultipleMatches):$/;"	c
MyAppend1	plugged/vim-airline/t/airline.vim	/^function! MyAppend1(...)$/;"	f
MyAppend2	plugged/vim-airline/t/airline.vim	/^function! MyAppend2(...)$/;"	f
MyFixture	plugged/vim-test/spec/fixtures/dotnet-xunit/TestsWithFixture.cs	/^    public class MyFixture$/;"	c	namespace:Namespace
MyFuncref	plugged/vim-airline/t/airline.vim	/^function! MyFuncref(...)$/;"	f
MyIgnoreFuncref	plugged/vim-airline/t/airline.vim	/^function! MyIgnoreFuncref(...)$/;"	f
NERDTree	plugged/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree.AddPathFilter	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
NERDTree.Close	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
NERDTree.CloseIfQuitOnOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f
NERDTree.CursorToBookmarkTable	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
NERDTree.CursorToTreeWin	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin()$/;"	f
NERDTree.ExistsForBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
NERDTree.ExistsForTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
NERDTree.ForCurrentBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
NERDTree.ForCurrentTab	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
NERDTree.GetWinNum	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
NERDTree.IsOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
NERDTree.MustBeOpen	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
NERDTree.New	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
NERDTree.PathFilters	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
NERDTree.changeRoot	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
NERDTree.getRoot	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
NERDTree.isTabTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
NERDTree.isWinTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
NERDTree.previousBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
NERDTree.render	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
NERDTree.setPreviousBuf	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.setPreviousBuf(bnum)$/;"	f
NERDTreeAddKeyMap	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeAutoDeleteBuffer	config/plugins/nerdtree.vim	/^let NERDTreeAutoDeleteBuffer = 1$/;"	v
NERDTreeCWD	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeCacheDirtyDir	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeCacheDirtyDir(pathStr)$/;"	f
NERDTreeCopyNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeExecuteFileLinux	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFileLinux()$/;"	f
NERDTreeFocus	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeGetCWDGitStatus	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGetCWDGitStatus()$/;"	f
NERDTreeGetFileGitStatusKey	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGetFileGitStatusKey(us, them)$/;"	f
NERDTreeGetGitStatusPrefix	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGetGitStatusPrefix(path)$/;"	f
NERDTreeGetIndicator	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGetIndicator(statusKey)$/;"	f
NERDTreeGitStatusKeyMapping	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGitStatusKeyMapping()$/;"	f
NERDTreeGitStatusRefresh	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGitStatusRefresh()$/;"	f
NERDTreeGitStatusRefreshListener	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! NERDTreeGitStatusRefreshListener(event)$/;"	f
NERDTreeHijackNetrw	plugged/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeIgnore	config/plugins/nerdtree.vim	/^let NERDTreeIgnore = [$/;"	v
NERDTreeListNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMoveNode	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeQuitOnOpen	config/plugins/nerdtree.vim	/^let NERDTreeQuitOnOpen = 1$/;"	v
NERDTreeRender	plugged/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealFileLinux	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealFileLinux()$/;"	f
NERDTreeRevealInFinder	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeShowHidden	config/plugins/nerdtree.vim	/^let NERDTreeShowHidden=1$/;"	v
NERDTreeTrimDoubleQuotes	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeTrimDoubleQuotes(pathStr)$/;"	f
NERDTreeWebDevIconsRefreshListener	plugged/vim-devicons/plugin/webdevicons.vim	/^function! NERDTreeWebDevIconsRefreshListener(event)$/;"	f
NEVER	plugged/vim-snippets/pythonx/javascript_snippets.py	/^NEVER = 'never'$/;"	v
NEW_FLOAT_EXT	plugged/alchemist.vim/erl_terms.py	/^NEW_FLOAT_EXT = 70      # [Float64:IEEE float]$/;"	v
NEW_FUN_EXT	plugged/alchemist.vim/erl_terms.py	/^NEW_FUN_EXT = 112       # [UInt32:Size, UInt8:Arity, 16*Uint6-MD5:Uniq, UInt32:Index, UInt32:NumFree, atom:Module, int:OldIndex, int:OldUniq, pid:Pid, NunFree*ext:FreeVars]$/;"	v
NEW_REFERENCE_EXT	plugged/alchemist.vim/erl_terms.py	/^NEW_REFERENCE_EXT = 114 # [UInt16:Len, atom:Node, UInt8:Creation, Len*UInt32:ID]$/;"	v
NIL_EXT	plugged/alchemist.vim/erl_terms.py	/^NIL_EXT = struct.pack("b", 106)           # empty list$/;"	v
Namespace	plugged/vim-test/spec/fixtures/dotnet-xunit/NestedTests.cs	/^namespace Namespace$/;"	n
Namespace	plugged/vim-test/spec/fixtures/dotnet-xunit/Tests.cs	/^namespace Namespace$/;"	n
Namespace	plugged/vim-test/spec/fixtures/dotnet-xunit/TestsWithFixture.cs	/^namespace Namespace$/;"	n
Namespace	plugged/vim-test/spec/fixtures/dotnet/NestedTests.cs	/^namespace Namespace$/;"	n
Namespace	plugged/vim-test/spec/fixtures/dotnet/Tests.cs	/^namespace Namespace$/;"	n
Nat	plugged/vim-polyglot/indent/javascript.vim	/^function s:Nat(int)$/;"	f
NeedsVitalityRedraw	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:NeedsVitalityRedraw()$/;"	f
NeoVimLoggerHandler	plugged/far.vim/rplugin/python3/far/__init__.py	/^    class NeoVimLoggerHandler(logging.Handler):$/;"	c
NestedTests	plugged/vim-test/spec/fixtures/dotnet-xunit/NestedTests.cs	/^        public class NestedTests$/;"	c	class:Namespace.Parent
NestedTests	plugged/vim-test/spec/fixtures/dotnet/NestedTests.cs	/^        public class NestedTests$/;"	c	class:Namespace.Parent
NextBookmark	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! NextBookmark call CallDeprecatedCommand('BookmarkNext')$/;"	c
NextCharsMatch	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:NextCharsMatch(regex)$/;"	f
NextIndToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:NextIndToken(lnum, i)$/;"	f
NextNonBlankLine	plugged/vim-polyglot/ftplugin/cryptol/folding.vim	/^function! NextNonBlankLine(lnum)$/;"	f
NextSection	plugged/vim-polyglot/ftplugin/scala.vim	/^function! s:NextSection(backwards)$/;"	f
NextTrailingWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -range=% NextTrailingWhitespace call <SID>GotoTrailingWhitespace(0, <line1>, <line2>)$/;"	c
NoUmlautsBeforeTriggerAndCharsAfter	plugged/ultisnips/test/test_Chars.py	/^class NoUmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
No_Tab_Expand_ET	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_Leading_Spaces	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW(_No_Tab_Expand):$/;"	c
No_Tab_Expand_ET_SW_TS	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_ET_SW_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Spaces	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Spaces(_No_Tab_Expand):$/;"	c
No_Tab_Expand_Leading_Tabs	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Leading_Tabs(_No_Tab_Expand):$/;"	c
No_Tab_Expand_No_TS	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_No_TS(_No_Tab_Expand):$/;"	c
No_Tab_Expand_RealWorld	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_RealWorld(_TabExpand_RealWorld, _VimTest):$/;"	c
No_Tab_Expand_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class No_Tab_Expand_Simple(_No_Tab_Expand):$/;"	c
NonUnicodeDataInUnnamedRegister	plugged/ultisnips/test/test_Fixes.py	/^class NonUnicodeDataInUnnamedRegister(_VimTest):$/;"	c
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^class NoneditableTextObject(TextObject):$/;"	c
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_escaped_char.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_mirror.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    NoneditableTextObject$/;"	i
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_viml_code.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
NoneditableTextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_visual.py	/^from UltiSnips.text_objects._base import NoneditableTextObject$/;"	i
Normal	plugged/vim-textobj-user/t/map.vim	/^function! Normal(s)$/;"	f
NormalCest	plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalCest.php	/^class NormalCest$/;"	c
NormalSpec	plugged/vim-test/spec/fixtures/phpspec/NormalSpec.php	/^class NormalSpec extends ObjectBehavior$/;"	c
NormalTest	plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalTest.php	/^class NormalTest extends \\Codeception\\Test\\Unit$/;"	c
NormalTest	plugged/vim-test/spec/fixtures/phpunit/NormalTest.php	/^class NormalTest extends PHPUnit_Framework_TestCase$/;"	c
NotEnoughBuffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:NotEnoughBuffers()$/;"	f
Note	plugged/vim-notes/plugin/notes.vim	/^command! -bar -bang -nargs=? -complete=customlist,xolox#notes#cmd_complete Note call xolox#notes#edit(<q-bang>, <q-args>)$/;"	c
NoteFromSelectedText	plugged/vim-notes/plugin/notes.vim	/^command! -bar -bang -range NoteFromSelectedText call xolox#notes#from_selection(<q-bang>, 'edit')$/;"	c
NoteToHtml	plugged/vim-notes/plugin/notes.vim	/^command! -bar -nargs=? NoteToHtml call xolox#notes#html#view(<q-args>)$/;"	c
NoteToMarkdown	plugged/vim-notes/plugin/notes.vim	/^command! -bar NoteToMarkdown call xolox#notes#markdown#view()$/;"	c
NoteToMediawiki	plugged/vim-notes/plugin/notes.vim	/^command! -bar NoteToMediawiki call xolox#notes#mediawiki#view()$/;"	c
NotesIndex	plugged/vim-notes/misc/notes/search-notes.py	/^class NotesIndex(object):$/;"	c
Notifier.AddListener	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
Notifier.GetListenersForEvent	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
Notifier.GetListenersMap	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
Notifier.NotifyListeners	plugged/nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
NullHandler	plugged/vim-notes/misc/notes/search-notes.py	/^    class NullHandler(logging.Handler):$/;"	c
NullHandler	plugged/vim-notes/misc/notes/search-notes.py	/^    from logging import NullHandler$/;"	i
NumberOfMatches	plugged/vim-polyglot/indent/swift.vim	/^function! s:NumberOfMatches(char, string, index)$/;"	f
O	plugged/vim-test/spec/ava_spec.vim	/^    normal O$/;"	m
O	plugged/vim-test/spec/djangotest_spec.vim	/^    normal O$/;"	m
O	plugged/vim-test/spec/dotnet_spec.vim	/^    normal O$/;"	m
O	plugged/vim-test/spec/dotnet_xunit_spec.vim	/^    normal O$/;"	m
O	plugged/vim-test/spec/jest_spec.vim	/^    normal O$/;"	m
O	plugged/vim-test/spec/lab_spec.vim	/^    normal O$/;"	m
O	plugged/vim-test/spec/minitest_spec.vim	/^    normal O$/;"	m
O	plugged/vim-test/spec/mocha_spec.vim	/^    normal O$/;"	m
O	plugged/vim-test/spec/nose2_spec.vim	/^    normal O$/;"	m
O	plugged/vim-test/spec/nose_spec.vim	/^    normal O$/;"	m
O	plugged/vim-test/spec/pytest_spec.vim	/^    normal O$/;"	m
O	plugged/vim-test/spec/pyunit_spec.vim	/^    normal O$/;"	m
OCamlGotoDefinition	plugged/vim-polyglot/ftplugin/ocaml.vim	/^fun! OCamlGotoDefinition(current_mode)$/;"	f
OCamlParseAnnot	plugged/vim-polyglot/ftplugin/ocaml.vim	/^fun! OCamlParseAnnot()$/;"	f
OCamlPrintType	plugged/vim-polyglot/ftplugin/ocaml.vim	/^fun! OCamlPrintType(current_mode)$/;"	f
OCaml_switch	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  fun OCaml_switch(newwin)$/;"	f
OMLetFoldLevel	plugged/vim-polyglot/ftplugin/ocaml.vim	/^function OMLetFoldLevel(l)$/;"	f
OPTIONS	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    OPTIONS = [$/;"	v
OPTIONS	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    OPTIONS = os.environ['SPHINX_APIDOC_OPTIONS'].split(',')$/;"	v	class:termsep
OldSelection_RealWorldCase_Test	plugged/ultisnips/test/test_Selection.py	/^class OldSelection_RealWorldCase_Test(_OS_Base):$/;"	c
OldSelection_SimpleTabstop_Test	plugged/ultisnips/test/test_Selection.py	/^class OldSelection_SimpleTabstop_Test(_OS_Base):$/;"	c
OneScope	plugged/vim-polyglot/indent/javascript.vim	/^function s:OneScope()$/;"	f
OneScope	plugged/vim-polyglot/indent/typescript.vim	/^function s:OneScope(lnum)$/;"	f
OpenBrace	plugged/vim-polyglot/indent/puppet.vim	/^function! s:OpenBrace(lnum)$/;"	f
OpenFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
OpenParents	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
OpenWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
Opener.New	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._bufInWindows	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
Opener._checkToCloseTree	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._firstUsableWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
Opener._gotoTargetWin	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._isWindowUsable	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
Opener._newSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	plugged/nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
Options	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class Options(dict):$/;"	c
OuterClass	plugged/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^      class OuterClass$/;"	c
OutputMultilineTag	plugged/vim-textobj-erb/t/basics.vim	/^function! OutputMultilineTag()$/;"	f
OutputNestedTag	plugged/vim-textobj-erb/t/basics.vim	/^function! OutputNestedTag()$/;"	f
OutputToFirstLine	plugged/vim-textobj-erb/t/basics.vim	/^function! OutputToFirstLine(str)$/;"	f
PATH	plugged/deoplete.nvim/Makefile	/^PATH := .\/vim-themis\/bin:$(PATH)$/;"	m
PATTERNS_TO_IGNORE	plugged/vim-notes/misc/notes/search-notes.py	/^PATTERNS_TO_IGNORE = ('.swp', '.s??', '.*.s??', '*~')$/;"	v
PID_EXT	plugged/alchemist.vim/erl_terms.py	/^PID_EXT = 103           # [atom:Node, UInt32:ID, UInt32:Serial, UInt8:Creation]$/;"	v
PIPE	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^from subprocess import Popen, PIPE$/;"	i
PLUGIN_BASE_PATH	plugged/alchemist.vim/rplugin/python3/deoplete/sources/alchemist.py	/^PLUGIN_BASE_PATH = os.path.abspath("%s\/..\/..\/..\/..\/..\/" % __file__)$/;"	v
PORT_EXT	plugged/alchemist.vim/erl_terms.py	/^PORT_EXT = 102          # [atom:Node, UInt32:ID, UInt8:Creation]$/;"	v
PYTHON3	plugged/ultisnips/test/vim_interface.py	/^from test.constant import (ARR_D, ARR_L, ARR_R, ARR_U, BS, ESC, PYTHON3,$/;"	i
PYTHON3	plugged/ultisnips/test/vim_test_case.py	/^from test.constant import PYTHON3, SEQUENCES, EX$/;"	i
PYVMMONITOR_DECORATOR	plugged/deoplete-jedi/mk/debug_code.mk	/^PYVMMONITOR_DECORATOR := @pyvmmonitor.profile_method()$/;"	m
PY_SUFFIXES	plugged/deoplete-jedi/tests/sphinx-3000.py	/^PY_SUFFIXES = set(['.py', '.pyx'])$/;"	v
PackageMap	plugged/vim-polyglot/autoload/dart.vim	/^function! s:PackageMap() abort$/;"	f
ParallelTasks	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    parallel_available$/;"	i
Parent	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^from deoplete.parent import Parent$/;"	i
Parent	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^class Parent(logger.LoggingMixin):$/;"	c
Parent	plugged/vim-test/spec/fixtures/dotnet-xunit/NestedTests.cs	/^    public class Parent$/;"	c	namespace:Namespace
Parent	plugged/vim-test/spec/fixtures/dotnet/NestedTests.cs	/^    public class Parent$/;"	c	namespace:Namespace
ParseCino	plugged/vim-polyglot/indent/javascript.vim	/^function s:ParseCino(f)$/;"	f
ParseCoffeeError	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ParseCoffeeError(output, src, startline)$/;"	f
ParsePattern	plugged/tabular/plugin/Tabular.vim	/^function! s:ParsePattern(string)$/;"	f
ParseSnippets_ClearAll	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearAll(_VimTest):$/;"	c
ParseSnippets_ClearOne	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearOne(_VimTest):$/;"	c
ParseSnippets_ClearTwo	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ClearTwo(_VimTest):$/;"	c
ParseSnippets_ExtendsWithoutFiletype	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_ExtendsWithoutFiletype(_VimTest):$/;"	c
ParseSnippets_Global_Local_Python	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Local_Python(_VimTest):$/;"	c
ParseSnippets_Global_Python	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_Global_Python(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine(_VimTest):$/;"	c
ParseSnippets_InvalidPriorityLine1	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_InvalidPriorityLine1(_VimTest):$/;"	c
ParseSnippets_MissingEndSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MissingEndSnippet(_VimTest):$/;"	c
ParseSnippets_MultiWord_Description	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_Description_Option	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Description_Option(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_NoContainer	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_NoContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_Quotes	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Quotes(_VimTest):$/;"	c
ParseSnippets_MultiWord_RE1	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE1(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE2	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE2(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_RE3	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_RE3(_ParseSnippets_MultiWord_RE):$/;"	c
ParseSnippets_MultiWord_Simple	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_Simple(_ParseSnippets_MultiWord):$/;"	c
ParseSnippets_MultiWord_UnmatchedContainer	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_UnmatchedContainer(_VimTest):$/;"	c
ParseSnippets_MultiWord_WithQuotes	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_MultiWord_WithQuotes(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippet(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetContext	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetContext(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetLocation	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetLocation(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPostAction	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPostAction(_VimTest):$/;"	c
ParseSnippets_PrintErroneousSnippetPreAction	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintErroneousSnippetPreAction(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktrace	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktrace(_VimTest):$/;"	c
ParseSnippets_PrintPythonStacktraceMultiline	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_PrintPythonStacktraceMultiline(_VimTest):$/;"	c
ParseSnippets_SimpleSnippet	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_SimpleSnippet(_VimTest):$/;"	c
ParseSnippets_UnknownDirective	plugged/ultisnips/test/test_ParseSnippets.py	/^class ParseSnippets_UnknownDirective(_VimTest):$/;"	c
ParseTagline	plugged/tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
PartOfInclude	plugged/vim-polyglot/indent/puppet.vim	/^function! s:PartOfInclude(lnum)$/;"	f
Path.AbsolutePathFor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(pathStr)$/;"	f
Path.CopyingSupported	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(pathStr)$/;"	f
Path.Resolve	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._escChars	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
Path._ignorePatternMatches	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._splitChunks	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._splitChunks(path)$/;"	f
Path._str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
Path.changeToDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortKey	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
Path.getSortOrderIndex	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
Path.isAncestor	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(path)$/;"	f
Path.isHiddenUnder	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isHiddenUnder(path)$/;"	f
Path.isUnder	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
Path.refreshFlags	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
Path.rename	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	plugged/nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
PerformMatchHighlight	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:PerformMatchHighlight(pattern)$/;"	f
PerformSyntaxHighlight	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:PerformSyntaxHighlight(pattern)$/;"	f
PerlSyntaxFold	plugged/ultisnips/test/test_Folding.py	/^class PerlSyntaxFold(_VimTest):$/;"	c
Pick	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Pick   :<line1>,<line2>call s:choose('pick')$/;"	c
Plog	plugged/vim-rails/autoload/rails.vim	/^function! s:Plog(bang, arg) abort$/;"	f
PluginEasyTags	plugged/vim-easytags/plugin/easytags.vim	/^augroup PluginEasyTags$/;"	a
PluginNotes	plugged/vim-notes/plugin/notes.vim	/^augroup PluginNotes$/;"	a
PluginXoloxMisc	plugged/vim-misc/plugin/xolox/misc.vim	/^augroup PluginXoloxMisc$/;"	a
Plugin_SuperTab_SimpleTest	plugged/ultisnips/test/test_Plugin.py	/^class Plugin_SuperTab_SimpleTest(_VimTest):$/;"	c
Pop	plugged/vim-polyglot/indent/erlang.vim	/^function! s:Pop(stack)$/;"	f
Popen	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^from subprocess import Popen, PIPE$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/_diff.py	/^from UltiSnips.position import Position$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^from UltiSnips.position import Position$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^from UltiSnips.position import Position$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/position.py	/^class Position(object):$/;"	c
Position	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_base.py	/^from UltiSnips.position import Position$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^from UltiSnips.position import Position$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.position import Position$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^from position import Position$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^from position import Position$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^from UltiSnips.position import Position$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^from UltiSnips.position import Position$/;"	i
Position	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^from UltiSnips.position import Position$/;"	i
PrevBookmark	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! PrevBookmark call CallDeprecatedCommand('BookmarkPrev')$/;"	c
PrevCodeLine	plugged/vim-polyglot/indent/typescript.vim	/^function s:PrevCodeLine(lnum)$/;"	f
PrevIndToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:PrevIndToken(lnum, i)$/;"	f
PrevLineOfCode	plugged/vim-polyglot/indent/lua.vim	/^function s:PrevLineOfCode(lnum)$/;"	f
PrevNonBlank	plugged/vim-polyglot/indent/markdown.vim	/^function! s:PrevNonBlank(lnum)$/;"	f
PrevNonBlankNonString	plugged/vim-polyglot/indent/crystal.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	plugged/vim-polyglot/indent/json.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	plugged/vim-polyglot/indent/ruby.vim	/^function! s:PrevNonBlankNonString(lnum) abort$/;"	f
PrevNonBlankNonString	plugged/vim-polyglot/indent/solidity.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PrevNonBlankNonString	plugged/vim-ruby/indent/ruby.vim	/^function! s:PrevNonBlankNonString(lnum) abort$/;"	f
PrevTrailingWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -range=% PrevTrailingWhitespace call <SID>GotoTrailingWhitespace(1, <line1>, <line2>)$/;"	c
Preview	plugged/vim-rails/autoload/rails.vim	/^function! s:Preview(bang, lnum, uri) abort$/;"	f
PreviousNotMSL	plugged/vim-polyglot/indent/ruby.vim	/^function! s:PreviousNotMSL(msl_info) abort$/;"	f
PreviousNotMSL	plugged/vim-ruby/indent/ruby.vim	/^function! s:PreviousNotMSL(msl_info) abort$/;"	f
PreviousToken	plugged/vim-polyglot/indent/javascript.vim	/^function s:PreviousToken(...)$/;"	f
PrintHelp	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
PrintKinds	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
PrintTag	plugged/tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, output, fileinfo, typeinfo) abort$/;"	f
Process	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^from deoplete.process import Process$/;"	i
Process	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^class Process(asyncio.SubprocessProtocol):$/;"	c
ProcessFile	plugged/tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
ProcessTag	plugged/tagbar/autoload/tagbar.vim	/^function s:ProcessTag(name, filename, pattern, fields, is_split, typeinfo, fileinfo) abort$/;"	f
Prompt	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:Prompt(message) " {{{$/;"	f
PromptEnvWrapSelection	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:PromptEnvWrapSelection(...)$/;"	f
PromptForMainFile	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^function! s:PromptForMainFile()$/;"	f
PromptLabelList	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:PromptLabelList(...)$/;"	f
PromptUser	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:PromptUser(groups) "{{{$/;"	f
ProperIndenting_AutoIndentAndNewline_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_AutoIndentAndNewline_ECR(_VimTest):$/;"	c
ProperIndenting_FirstLineInFileComplete_ECR	plugged/ultisnips/test/test_Format.py	/^        ProperIndenting_FirstLineInFile_ECR):$/;"	c
ProperIndenting_FirstLineInFile_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_FirstLineInFile_ECR(_VimTest):$/;"	c
ProperIndenting_SimpleCase_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SimpleCase_ECR(_VimTest):$/;"	c
ProperIndenting_SingleLineNoReindenting_ECR	plugged/ultisnips/test/test_Format.py	/^class ProperIndenting_SingleLineNoReindenting_ECR(_VimTest):$/;"	c
Pure	plugged/vim-polyglot/indent/javascript.vim	/^function s:Pure(f,...)$/;"	f
Push	plugged/vim-polyglot/indent/erlang.vim	/^function! s:Push(stack, token)$/;"	f
Python2Syntax	plugged/vim-polyglot/syntax/python.vim	/^command! -buffer Python2Syntax let b:python_version_2 = 1 | let &syntax=&syntax$/;"	c
Python2Syntax	plugged/vim-polyglot/syntax/python.vim	/^function! s:Python2Syntax()$/;"	f
Python3Syntax	plugged/vim-polyglot/syntax/python.vim	/^command! -buffer Python3Syntax let b:python_version_2 = 0 | let &syntax=&syntax$/;"	c
PythonCode	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
PythonCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._python_code import PythonCode$/;"	i
PythonCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^class PythonCode(NoneditableTextObject):$/;"	c
PythonCodeOld_IndentedMultiline	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_IndentedMultiline(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderAfter	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderAfter(_VimTest):$/;"	c
PythonCodeOld_ReferencePlaceholderBefore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCodeOld_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_SimpleExample(_VimTest):$/;"	c
PythonCodeOld_TransformedBeforeMultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCodeOld_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class PythonCodeToken(Token):$/;"	c
PythonCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
PythonCode_AccessKilledTabstop_OverwriteFirst	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteFirst(_VimTest):$/;"	c
PythonCode_AccessKilledTabstop_OverwriteSecond	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_AccessKilledTabstop_OverwriteSecond(_VimTest):$/;"	c
PythonCode_CanOverwriteTabstop	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_CanOverwriteTabstop(_VimTest):$/;"	c
PythonCode_IndentEtSw	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSw(_VimTest):$/;"	c
PythonCode_IndentEtSwOffset	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentEtSwOffset(_VimTest):$/;"	c
PythonCode_IndentNoetSwTs	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentNoetSwTs(_VimTest):$/;"	c
PythonCode_IndentProblem	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_IndentProblem(_VimTest):$/;"	c
PythonCode_Locals	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_Locals(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_Chars	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_Chars(_VimTest):$/;"	c
PythonCode_LongerTextThanSource_MultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_LongerTextThanSource_MultiLine(_VimTest):$/;"	c
PythonCode_MultiAppend	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppend(_VimTest):$/;"	c
PythonCode_MultiAppendShift	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShift(_VimTest):$/;"	c
PythonCode_MultiAppendShiftMethods	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendShiftMethods(_VimTest):$/;"	c
PythonCode_MultiAppendSimpleIndent	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultiAppendSimpleIndent(_VimTest):$/;"	c
PythonCode_MultilineIndented	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_MultilineIndented(_VimTest):$/;"	c
PythonCode_OptExists	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptExists(_VimTest):$/;"	c
PythonCode_OptNoExists	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_OptNoExists(_VimTest):$/;"	c
PythonCode_ReferencePlaceholder	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholder(_VimTest):$/;"	c
PythonCode_ReferencePlaceholderBefore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ReferencePlaceholderBefore(_VimTest):$/;"	c
PythonCode_ResetIndent	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_ResetIndent(_VimTest):$/;"	c
PythonCode_SimpleAppend	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleAppend(_VimTest):$/;"	c
PythonCode_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample(_VimTest):$/;"	c
PythonCode_SimpleExample_ReturnValueIsEmptyString	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleExample_ReturnValueIsEmptyString(_VimTest):$/;"	c
PythonCode_SimpleMkline	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_SimpleMkline(_VimTest):$/;"	c
PythonCode_TransformedBeforeMultiLine	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TransformedBeforeMultiLine(_VimTest):$/;"	c
PythonCode_TrickyReferences	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_TrickyReferences(_VimTest):$/;"	c
PythonCode_UseNewOverOld	plugged/ultisnips/test/test_Interpolation.py	/^class PythonCode_UseNewOverOld(_VimTest):$/;"	c
PythonVisual_HasAccessToSelectedPlaceholders	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToSelectedPlaceholders(_VimTest):$/;"	c
PythonVisual_HasAccessToZeroPlaceholders	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_HasAccessToZeroPlaceholders(_VimTest):$/;"	c
PythonVisual_LineSelect_Simple	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_LineSelect_Simple(_VimTest):$/;"	c
PythonVisual_NoVisualSelection_Ignore	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_NoVisualSelection_Ignore(_VimTest):$/;"	c
PythonVisual_SelectOneWord	plugged/ultisnips/test/test_Interpolation.py	/^class PythonVisual_SelectOneWord(_VimTest):$/;"	c
Python_WeirdScoping_Error	plugged/ultisnips/test/test_Interpolation.py	/^class Python_WeirdScoping_Error(_VimTest):$/;"	c
Queue	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^from queue import Queue$/;"	i
QuitIfOnlyWindow	plugged/vim-polyglot/ftplugin/vifm-rename.vim	/^function! s:QuitIfOnlyWindow()$/;"	f
R	plugged/vim-rails/ftplugin/railslog.vim	/^nnoremap <buffer> <silent> R :<C-U>call <SID>reload_log()<CR>$/;"	m
RAddParameter	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RAddParameter                  call AddParameter()$/;"	c
RAddParameterNB	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RAddParameterNB                call AddParameterNB()$/;"	c
RConvertPostConditional	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RConvertPostConditional        call ConvertPostConditional()$/;"	c
REFERENCE_EXT	plugged/alchemist.vim/erl_terms.py	/^REFERENCE_EXT = 101     # 101 [atom:Node, UInt32:ID, UInt8:Creation]$/;"	v
RExtractConstant	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RExtractConstant        call ExtractConstant()$/;"	c
RExtractLet	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RExtractLet                    call ExtractIntoRspecLet()$/;"	c
RExtractLocalVariable	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RExtractLocalVariable   call ExtractLocalVariable()$/;"	c
RExtractMethod	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RExtractMethod          call ExtractMethod()$/;"	c
RInlineTemp	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RInlineTemp                    call InlineTemp()$/;"	c
RIntroduceVariable	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! RIntroduceVariable             call IntroduceVariable()$/;"	c
RPLUGIN_PATH	plugged/deoplete-jedi/Makefile	/^RPLUGIN_PATH := .\/rplugin\/python3\/deoplete\/sources$/;"	m
RRenameInstanceVariable	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RRenameInstanceVariable call RenameInstanceVariable()$/;"	c
RRenameLocalVariable	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^command! -range RRenameLocalVariable    call RenameLocalVariable()$/;"	c
Racket_visual_doc	plugged/vim-polyglot/ftplugin/racket.vim	/^function! s:Racket_visual_doc()$/;"	f
Rails	plugged/vim-rails/autoload/rails.vim	/^function! s:Rails(bang, count, arg) abort$/;"	f
Rails	plugged/vim-rails/plugin/rails.vim	/^command! -bang -bar -nargs=* -count -complete=customlist,rails#complete_rails Rails execute rails#command(<bang>0, '<mods>', !<count> && <line1> ? -1 : <count>, <q-args>)$/;"	c
RailsDetect	plugged/vim-rails/plugin/rails.vim	/^function! RailsDetect(...) abort$/;"	f
Rake	plugged/vim-rails/autoload/rails.vim	/^function! s:Rake(bang, lnum, arg) abort$/;"	f
Random	plugged/vim-gitgutter/test/runner.vim	/^function Random(min, max)$/;"	f
RandomID	plugged/vim-polyglot/ftplugin/mma.vim	/^	function! RandomID()$/;"	f
ReadOnPath	plugged/vim-polyglot/syntax/ragel.vim	/^fun! <SID>ReadOnPath(script)$/;"	f
ReadTOC	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:ReadTOC(auxfile, texfile, ...)$/;"	f
RecTabStopsWithExpandtab_SimpleExample_ECR	plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SimpleExample_ECR(_ExpandTabs):$/;"	c
RecTabStopsWithExpandtab_SpecialIndentProblem_ECR	plugged/ultisnips/test/test_Format.py	/^class RecTabStopsWithExpandtab_SpecialIndentProblem_ECR(_ExpandTabs):$/;"	c
RecTabStops_BarelyNotLeavingInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_BarelyNotLeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_ChildTriggerContainsParentTextObjects	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ChildTriggerContainsParentTextObjects(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSSecondTime_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSSecondTime_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTSTwice_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTSTwice_ECR(_VimTest):$/;"	c
RecTabStops_ExpandedInZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ExpandedInZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineInTabstop_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineInTabstop_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndentTextInFront_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndentTextInFront_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineManualIndent_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineManualIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithIndent_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithIndent_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultilineWithNonZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultilineWithNonZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_InNewlineMultiline_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InNewlineMultiline_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwiceDirectly_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwiceDirectly_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStopTwice_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStopTwice_ECR(_VimTest):$/;"	c
RecTabStops_InnerWOTabStop_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_InnerWOTabStop_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInnerTwo_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInnerTwo_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInnerInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInnerInner_ECR(_VimTest):$/;"	c
RecTabStops_LeavingInner_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_LeavingInner_ECR(_VimTest):$/;"	c
RecTabStops_MirrorInnerSnippet_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirrorInnerSnippet_ECR(_VimTest):$/;"	c
RecTabStops_MirroredZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_MirroredZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZeroTS_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZeroTS_ECR(_VimTest):$/;"	c
RecTabStops_OuterOnlyWithZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_OuterOnlyWithZero_ECR(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_SimpleCase_ExpectCorrectResult	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
RecTabStops_ZeroTSisNothingSpecial_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabStops_ZeroTSisNothingSpecial_ECR(_VimTest):$/;"	c
RecTabsStops_BackspaceZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_BackspaceZero_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero2_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero2_ECR(_VimTest):$/;"	c
RecTabsStops_TypeInZero_ECR	plugged/ultisnips/test/test_Recursive.py	/^class RecTabsStops_TypeInZero_ECR(_VimTest):$/;"	c
RecentNotes	plugged/vim-notes/plugin/notes.vim	/^command! -bar -bang -nargs=? RecentNotes call xolox#notes#recent#show(<q-bang>, <q-args>)$/;"	c
RedirectStream	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^class RedirectStream(io.IOBase):$/;"	c
Refar	plugged/far.vim/plugin/far.vim	/^command! -complete=customlist,far#RefarComplete -nargs=* -range=-1 Refar$/;"	c
Refar	plugged/far.vim/plugin/far.vim	/^function! Refar(rngmode, rngline1, rngline2, ...) abort "{{{$/;"	f
Refresh	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! s:Refresh()$/;"	f
Refresh	plugged/vim-rails/autoload/rails.vim	/^function! s:Refresh(bang)$/;"	f
RefreshBuffer	plugged/vim-rails/autoload/rails.vim	/^function! s:RefreshBuffer()$/;"	f
RefreshTabline	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:RefreshTabline()$/;"	f
RegexpQuote	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:RegexpQuote(str)$/;"	f
RegexpQuoteInSquare	plugged/auto-pairs/plugin/auto-pairs.vim	/^func! s:RegexpQuoteInSquare(str)$/;"	f
RehighlightBlame	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
Related	plugged/vim-rails/autoload/rails.vim	/^function! s:Related(cmd,line1,line2,count,...) abort$/;"	f
RelatedNotes	plugged/vim-notes/plugin/notes.vim	/^command! -bar -bang RelatedNotes call xolox#notes#related(<q-bang>)$/;"	c
ReleaseKeyPresses	plugged/supertab/plugin/supertab.vim	/^function! s:ReleaseKeyPresses() " {{{$/;"	f
RemoteComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
Remove	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(after, force) abort$/;"	f
RemoveITags	plugged/vim-polyglot/indent/html.vim	/^func! s:RemoveITags(tags, taglist)$/;"	f
RemoveTrailingComments	plugged/vim-polyglot/indent/solidity.vim	/^function s:RemoveTrailingComments(content)$/;"	f
RemoveTrailingWhitespace	plugged/ultisnips/test/test_Chars.py	/^class RemoveTrailingWhitespace(_VimTest):$/;"	c
RenameComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:RenameComplete(A,L,P) abort$/;"	f
RenameInstanceVariable	plugged/vim-ruby-refactoring/plugin/refactorings/general/renameinstancevariable.vim	/^function! RenameInstanceVariable()$/;"	f
RenameLocalVariable	plugged/vim-ruby-refactoring/plugin/refactorings/general/renamelocalvariable.vim	/^function! RenameLocalVariable()$/;"	f
RenderContent	plugged/tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
RenderKeepView	plugged/tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
ReopenWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:ReopenWindow(delbufname) abort$/;"	f
ReplaceCmd	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ResetConcealOption	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:ResetConcealOption()$/;"	f
ResetWidth	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:ResetWidth(...)$/;"	f
RestoreSession	plugged/tagbar/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
RestoreValue	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:RestoreValue() "{{{$/;"	f
RetainsTheUnnamedRegister	plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister(_VimTest):$/;"	c
RetainsTheUnnamedRegister_ButOnlyOnce	plugged/ultisnips/test/test_Fixes.py	/^class RetainsTheUnnamedRegister_ButOnlyOnce(_VimTest):$/;"	c
RevisionComplete	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
Reword	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Reword :<line1>,<line2>call s:choose('reword')$/;"	c
RhsesOf	plugged/vim-textobj-user/t/plugin.vim	/^function! RhsesOf(lhs)$/;"	f
Right	plugged/tabular/autoload/tabular.vim	/^function! s:Right(string, fieldwidth)$/;"	f
RmDir	plugged/vim-polyglot/autoload/rust.vim	/^function! s:RmDir(path)$/;"	f
RubyBalloonexpr	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyBalloonexpr() abort$/;"	f
RubyBalloonexpr	plugged/vim-ruby/ftplugin/ruby.vim	/^function! RubyBalloonexpr() abort$/;"	f
RubyCursorFile	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorFile() abort$/;"	f
RubyCursorFile	plugged/vim-ruby/ftplugin/ruby.vim	/^function! RubyCursorFile() abort$/;"	f
RubyCursorIdentifier	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! RubyCursorIdentifier() abort$/;"	f
RubyCursorIdentifier	plugged/vim-ruby/ftplugin/ruby.vim	/^function! RubyCursorIdentifier() abort$/;"	f
RubyExtract	plugged/vim-rails/autoload/rails.vim	/^function! s:RubyExtract(bang, mods, root, before, name) range abort$/;"	f
Run	plugged/vim-polyglot/autoload/rust.vim	/^function! s:Run(dict, rustc_args, args)$/;"	f
RunRustfmt	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RunRustfmt(command, curw, tmpname)$/;"	f
RunTest	plugged/vim-gitgutter/test/runner.vim	/^function RunTest(test)$/;"	f
RustEmitAsm	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitAsm call rust#Emit("asm", <q-args>)$/;"	c
RustEmitIr	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -buffer RustEmitIr call rust#Emit("llvm-ir", <q-args>)$/;"	c
RustExpand	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -complete=customlist,rust#CompleteExpand -bang -buffer RustExpand call rust#Expand(<bang>0, <q-args>)$/;"	c
RustFmt	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -buffer RustFmt call rustfmt#Format()$/;"	c
RustFmtRange	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -range -buffer RustFmtRange call rustfmt#FormatRange(<line1>, <line2>)$/;"	c
RustPlay	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -range=% RustPlay :call rust#Play(<count>, <line1>, <line2>, <f-args>)$/;"	c
RustRun	plugged/vim-polyglot/ftplugin/rust.vim	/^command! -nargs=* -complete=file -bang -buffer RustRun call rust#Run(<bang>0, <q-args>)$/;"	c
RustfmtCommand	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtCommand(filename)$/;"	f
RustfmtCommandRange	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! s:RustfmtCommandRange(filename, line1, line2)$/;"	f
SClose	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar SClose call startify#session_close()$/;"	c
SDelete	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SDelete call startify#session_delete(<bang>0, <f-args>)$/;"	c
SEP	plugged/deoplete-jedi/tests/sphinx-3000.py	/^from sphinx.util.osutil import SEP, relative_uri$/;"	i
SEQUENCES	plugged/ultisnips/test/constant.py	/^SEQUENCES = [ARR_L, ARR_R, ARR_U, ARR_D]$/;"	v
SEQUENCES	plugged/ultisnips/test/vim_test_case.py	/^from test.constant import PYTHON3, SEQUENCES, EX$/;"	i
SET_DEBUG	plugged/deoplete-jedi/mk/debug_code.mk	/^SET_DEBUG := try:\\n            from helper import set_debug\\n            if self.vim.vars["deoplete\\#enable_debug"]:\\n                log_file \\= self.vim.vars["deoplete\\#sources\\#jedi\\#debug\\#log_file"]\\n                set_debug(logger, os.path.expanduser(log_file))\\n        except Exception:\\n            pass\\n$/;"	m
SET_DEBUG_PREFIX	plugged/deoplete-jedi/mk/debug_code.mk	/^SET_DEBUG_PREFIX := jedi_settings.cache_directory \\= os.path.join\\(cache_home, 'jedi'\\)$/;"	m
SHELL	plugged/supertab/Makefile	/^SHELL=\/bin\/bash$/;"	m
SID	config/plugins/nerdtree.vim	/^function! s:SID()$/;"	f
SID	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function s:SID()$/;"	f
SID	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function s:SID()$/;"	f
SIDWrap	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:SIDWrap(func)$/;"	f
SIDWrap	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:SIDWrap(func)$/;"	f
SLoad	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar       -complete=customlist,startify#session_list SLoad   call startify#session_load(<f-args>)$/;"	c
SMALL_ATOM_EXT	plugged/alchemist.vim/erl_terms.py	/^SMALL_ATOM_EXT = 115    # [UInt8:Len, Len:AtomName]$/;"	v
SMALL_BIG_EXT	plugged/alchemist.vim/erl_terms.py	/^SMALL_BIG_EXT = 110     # [UInt8:n, UInt8:Sign, n:nums]$/;"	v
SMALL_INTEGER_EXT	plugged/alchemist.vim/erl_terms.py	/^SMALL_INTEGER_EXT = struct.pack("b", 97)  # [UInt8:Int]$/;"	v
SMALL_TUPLE_EXT	plugged/alchemist.vim/erl_terms.py	/^SMALL_TUPLE_EXT = 104   # [UInt8:Arity, N:Elements]$/;"	v
SNIPMATE_SNIPPET_PRIORITY	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    SNIPMATE_SNIPPET_PRIORITY = -1000$/;"	v	class:SnipMateSnippetDefinition
SSave	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=? -bar -bang -complete=customlist,startify#session_list SSave   call startify#session_save(<bang>0, <f-args>)$/;"	c
STRING_EXT	plugged/alchemist.vim/erl_terms.py	/^STRING_EXT = 107        # [UInt32:Len, Len:Characters]$/;"	v
SUPPRESS	plugged/deoplete-jedi/tests/sphinx-3000.py	/^SUPPRESS = object()$/;"	v
SaveBookmarks	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! -nargs=1 SaveBookmarks call CallDeprecatedCommand('BookmarkSave', [<f-args>, 0])$/;"	c
SaveValue	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:SaveValue() "{{{$/;"	f
ScratchBufBuild	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ScratchBufBuild(src, vert, size)$/;"	f
ScratchBufUpdate	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:ScratchBufUpdate(buf, text)$/;"	f
SearchAndSkipComments	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:SearchAndSkipComments(pat, ...)$/;"	f
SearchCode	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchCode(lnum, regex)$/;"	f
SearchDict	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:SearchDict() "{{{$/;"	f
SearchDict2	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:SearchDict2(name) "{{{$/;"	f
SearchEndPair	plugged/vim-polyglot/indent/erlang.vim	/^function! s:SearchEndPair(lnum, curr_col)$/;"	f
SearchLanguage	plugged/deoplete-jedi/tests/sphinx-3000.py	/^        from sphinx.search import languages, SearchLanguage$/;"	i
SearchLoop	plugged/vim-polyglot/indent/javascript.vim	/^function s:SearchLoop(pat,flags,expr)$/;"	f
SearchMatchingKeyword	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchMatchingKeyword(startlnum, open, close)$/;"	f
SearchNotes	plugged/vim-notes/plugin/notes.vim	/^command! -bang -nargs=? -complete=customlist,xolox#notes#keyword_complete SearchNotes call xolox#notes#search(<q-bang>, <q-args>)$/;"	c
SearchPair	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SearchPair(startlnum, lookback, skip, open, close)$/;"	f
SearchPair	plugged/vim-polyglot/indent/erlang.vim	/^function! s:SearchPair(lnum, curr_col, start, middle, end)$/;"	f
SearchPair	plugged/vim-polyglot/indent/ls.vim	/^function! s:SearchPair(start, end)$/;"	f
SectionSpec	plugged/vim-airline/t/section.vim	/^function! SectionSpec()$/;"	f
Select	plugged/vim-textobj-user/t/scan.vim	/^function! Select(lnum, col, object)$/;"	f
SelectA	plugged/vim-textobj-user/t/keep-marks.vim	/^function! SelectA()$/;"	f
SelectCompletion	plugged/supertab/plugin/supertab.vim	/^    function! s:SelectCompletion(cr)$/;"	f
SelectCurrentEnv	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:SelectCurrentEnv(seltype)$/;"	f
SelectInlineMath	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^function! s:SelectInlineMath(seltype)$/;"	f
SelectJavascript	plugged/vim-polyglot/ftdetect/polyglot.vim	/^fun! s:SelectJavascript()$/;"	f
SelectModeMappings_BufferLocalMappings_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_BufferLocalMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_DisableRemoveBeforeSelecting_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_DisableRemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings1_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings1_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings2_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings2_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_IgnoreMappings_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_IgnoreMappings_ECR(_SelectModeMappings):$/;"	c
SelectModeMappings_RemoveBeforeSelecting_ECR	plugged/ultisnips/test/test_Selection.py	/^class SelectModeMappings_RemoveBeforeSelecting_ECR(_SelectModeMappings):$/;"	c
SelectNthLine	plugged/vim-textobj-user/t/select-x-function-countability.vim	/^function! SelectNthLine()$/;"	f
SerialTasks	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    parallel_available$/;"	i
Server	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^class Server(object):$/;"	c
SetCompletionType	plugged/supertab/plugin/supertab.vim	/^function! s:SetCompletionType() " {{{$/;"	f
SetConcealOption	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:SetConcealOption()$/;"	f
SetDefault	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! s:SetDefault(var, val)$/;"	f
SetDefaultCompletionType	plugged/supertab/plugin/supertab.vim	/^function! s:SetDefaultCompletionType() " {{{$/;"	f
SetFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
SetFoldLevelRecursive	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
SetLines	plugged/tabular/autoload/tabular.vim	/^function! s:SetLines(start, len, strings)$/;"	f
SetLines	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:SetLines(lines, key) " {{{$/;"	f
SetMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^function! s:SetMakePrg()$/;"	f
SetMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^function! s:SetMakePrg()$/;"	f
SetStatusLine	plugged/tagbar/autoload/tagbar.vim	/^function! s:SetStatusLine()$/;"	f
SetTagbar	plugged/vim-polyglot/ftplugin/elm/tagbar.vim	/^function! s:SetTagbar()$/;"	f
SetUp	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function SetUp()$/;"	f
Setup	plugged/indentLine/after/plugin/indentLine.vim	/^function! s:Setup()$/;"	f
SetupAutoCommands	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! <SID>SetupAutoCommands()$/;"	f
SetupListeners	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:SetupListeners()$/;"	f
SetupListeners	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! s:SetupListeners()$/;"	f
ShellCode	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
ShellCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._shell_code import ShellCode$/;"	i
ShellCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^class ShellCode(NoneditableTextObject):$/;"	c
ShellCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class ShellCodeToken(Token):$/;"	c
ShellCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^    VisualToken, TabStopToken, MirrorToken, ShellCodeToken$/;"	i
ShellCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
ShellTokenize	plugged/vim-polyglot/autoload/rust.vim	/^function! s:ShellTokenize(text)$/;"	f
ShiftWidth	plugged/vim-polyglot/indent/coffee.vim	/^  function! s:ShiftWidth()$/;"	f
ShiftWidthZero	plugged/ultisnips/test/test_Fixes.py	/^class ShiftWidthZero(_VimTest):$/;"	c
ShouldForwardNavigationBackToTmux	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:ShouldForwardNavigationBackToTmux(tmux_last_pane, at_tab_page_edge)$/;"	f
ShouldHighlight	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ShouldHighlight()$/;"	f
ShouldSkip	plugged/vim-polyglot/indent/coffee.vim	/^function! s:ShouldSkip(startlnum, lnum, col)$/;"	f
ShouldSkip	plugged/vim-polyglot/indent/ls.vim	/^function! s:ShouldSkip(startlinenum, linenum, col)$/;"	f
ShouldStripWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ShouldStripWhitespace()$/;"	f
ShowAllBookmarks	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! ShowAllBookmarks call CallDeprecatedCommand('BookmarkShowAll')$/;"	c
ShowInPreviewWin	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShowInPreviewWin() abort$/;"	f
ShowPrototype	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
ShowTaggedNotes	plugged/vim-notes/plugin/notes.vim	/^command! -bar -count=1 ShowTaggedNotes call xolox#notes#tags#show_tags(<count>)$/;"	c
ShrinkIfExpanded	plugged/tagbar/autoload/tagbar.vim	/^function! s:ShrinkIfExpanded() abort$/;"	f
Shuffle	plugged/vim-gitgutter/test/runner.vim	/^function Shuffle(list)$/;"	f
SimpleExpandEndingWithNewline_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandEndingWithNewline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleExpandNewLineAndBackspae_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandNewLineAndBackspae_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTwice_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTwice_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAfterExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAfterExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpandTypeAndDelete_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpandTypeAndDelete_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleExpand_ExpectCorrectResult	plugged/ultisnips/test/test_Expand.py	/^class SimpleExpand_ExpectCorrectResult(_SimpleExpands):$/;"	c
SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorDelete_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorDelete_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorMultilineMany_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorMultilineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineBeforeTabDefVal_ECR	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineBeforeTabDefVal_ECR(_VimTest):$/;"	c
SimpleMirrorSameLineManyMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineManyMultiline_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLineMany_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLineMany_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_ExpectCorrectResult(_VimTest):$/;"	c
SimpleMirrorSameLine_InText_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleMirrorSameLine_InText_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultComplexType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultComplexType_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult(_VimTest):$/;"	c
SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult(_VimTest):$/;"	c
SkipExpr	plugged/vim-polyglot/indent/ls.vim	/^function! s:SkipExpr(startlinenum)$/;"	f
SkipFunc	plugged/vim-polyglot/indent/javascript.vim	/^function s:SkipFunc()$/;"	f
SmartSearch	plugged/vim-polyglot/indent/ls.vim	/^function! s:SmartSearch(linenum, regex)$/;"	f
SnipMateFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/__init__.py	/^from UltiSnips.snippet.source.file.snipmate import SnipMateFileSource$/;"	i
SnipMateFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^class SnipMateFileSource(SnippetFileSource):$/;"	c
SnipMateFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    find_all_snippet_files, find_snippet_files, AddedSnippetsSource$/;"	i
SnipMateSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/__init__.py	/^from UltiSnips.snippet.definition.snipmate import SnipMateSnippetDefinition$/;"	i
SnipMateSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^class SnipMateSnippetDefinition(SnippetDefinition):$/;"	c
SnipMateSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.snippet.definition import SnipMateSnippetDefinition$/;"	i
SnippetActions_CanEvenWrapSnippetInPreAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanEvenWrapSnippetInPreAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonOnPreExpand	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonOnPreExpand(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpAction(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected(_VimTest):$/;"	c
SnippetActions_CanExpandAnonSnippetOnFirstJump	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandAnonSnippetOnFirstJump(_VimTest):$/;"	c
SnippetActions_CanExpandSnippetInDifferentPlace	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanExpandSnippetInDifferentPlace(_VimTest):$/;"	c
SnippetActions_CanMirrorTabStopsOutsideOfSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanMirrorTabStopsOutsideOfSnippet(_VimTest):$/;"	c
SnippetActions_CanModifyParentBody	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanModifyParentBody(_VimTest):$/;"	c
SnippetActions_CanUseContextFromContextMatch	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanUseContextFromContextMatch(_VimTest):$/;"	c
SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre(_VimTest):$/;"	c
SnippetActions_DoNotBreakCursorOnSingleLikeChange	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_DoNotBreakCursorOnSingleLikeChange(_VimTest):$/;"	c
SnippetActions_EnsureIndent	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_EnsureIndent(_VimTest):$/;"	c
SnippetActions_ErrorOnBufferModificationThroughCommand	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnBufferModificationThroughCommand(_VimTest):$/;"	c
SnippetActions_ErrorOnModificationSnippetLine	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_ErrorOnModificationSnippetLine(_VimTest):$/;"	c
SnippetActions_MoveParentSnippetFromChildInPreAction	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveParentSnippetFromChildInPreAction(_VimTest):$/;"	c
SnippetActions_MoveVisual	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_MoveVisual(_VimTest):$/;"	c
SnippetActions_PostActionCanUseSnippetRange	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionCanUseSnippetRange(_VimTest):$/;"	c
SnippetActions_PostActionModifiesBuffer	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_PostActionModifiesCharAfterSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesCharAfterSnippet(_VimTest):$/;"	c
SnippetActions_PostActionModifiesLineAfterSnippet	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PostActionModifiesLineAfterSnippet(_VimTest):$/;"	c
SnippetActions_PreActionModifiesBuffer	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_PreActionModifiesBuffer(_VimTest):$/;"	c
SnippetActions_UseCorrectJumpActions	plugged/ultisnips/test/test_SnippetActions.py	/^class SnippetActions_UseCorrectJumpActions(_VimTest):$/;"	c
SnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^class SnippetDefinition(object):$/;"	c
SnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^from UltiSnips.snippet.definition._base import SnippetDefinition$/;"	i
SnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^from UltiSnips.snippet.definition._base import SnippetDefinition$/;"	i
SnippetDictionary	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^from UltiSnips.snippet.source._snippet_dictionary import SnippetDictionary$/;"	i
SnippetDictionary	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^class SnippetDictionary(object):$/;"	c
SnippetFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^class SnippetFileSource(SnippetSource):$/;"	c
SnippetFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.snippet.source.file._base import SnippetFileSource$/;"	i
SnippetFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^from UltiSnips.snippet.source.file._base import SnippetFileSource$/;"	i
SnippetInstance	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^from UltiSnips.text_objects import SnippetInstance$/;"	i
SnippetInstance	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._snippet_instance import SnippetInstance$/;"	i
SnippetInstance	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^class SnippetInstance(EditableTextObject):$/;"	c
SnippetManager	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^class SnippetManager(object):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_ExpandSingle	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_ExpandSingle(_VimTest):$/;"	c
SnippetOptions_ExpandInwordSnippets_SimpleExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_ExpandInwordSnippets_SimpleExpand(_VimTest):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix	plugged/ultisnips/test/test_SnippetOptions.py	/^        _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix2	plugged/ultisnips/test/test_SnippetOptions.py	/^        _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_ExpandSuffix3	plugged/ultisnips/test/test_SnippetOptions.py	/^        _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_NoExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^        _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_ExpandWordSnippets_NormalExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^        _SnippetOptions_ExpandWordSnippets):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_DontExpand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_DontExpand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_Expand2	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_Expand2(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO(_VimTest):$/;"	c
SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose(_VimTest):$/;"	c
SnippetOptions_Regex_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Expand(_VimTest):$/;"	c
SnippetOptions_Regex_Multiple	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Multiple(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockMatch	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockMatch(_VimTest):$/;"	c
SnippetOptions_Regex_PythonBlockNoMatch	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_PythonBlockNoMatch(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_End	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_End(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Long_Start	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Long_Start(_VimTest):$/;"	c
SnippetOptions_Regex_SameLine_Simple	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_SameLine_Simple(_VimTest):$/;"	c
SnippetOptions_Regex_Self_Space	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Space(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_Start	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_Start(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextAfter	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextAfter(_Regex_Self):$/;"	c
SnippetOptions_Regex_Self_TextBefore	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_Self_TextBefore(_Regex_Self):$/;"	c
SnippetOptions_Regex_WithSpace	plugged/ultisnips/test/test_SnippetOptions.py	/^class SnippetOptions_Regex_WithSpace(_VimTest):$/;"	c
SnippetPriorities_AddedHasHigherThanFile	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_AddedHasHigherThanFile(_VimTest):$/;"	c
SnippetPriorities_ClearedByChild	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByChild(_VimTest):$/;"	c
SnippetPriorities_ClearedByParent	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_ClearedByParent(_VimTest):$/;"	c
SnippetPriorities_DoNotCareAboutNonMatchings	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_DoNotCareAboutNonMatchings(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded(_VimTest):$/;"	c
SnippetPriorities_FileHasHigherThanAdded_neg_prio	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_FileHasHigherThanAdded_neg_prio(_VimTest):$/;"	c
SnippetPriorities_MultiWordTriggerOverwriteExisting	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_MultiWordTriggerOverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteExisting	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteExisting(_VimTest):$/;"	c
SnippetPriorities_OverwriteThenChoose_ECR	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteThenChoose_ECR(_VimTest):$/;"	c
SnippetPriorities_OverwriteTwice_ECR	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_OverwriteTwice_ECR(_VimTest):$/;"	c
SnippetPriorities_SimpleClear	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear(_VimTest):$/;"	c
SnippetPriorities_SimpleClear2	plugged/ultisnips/test/test_SnippetPriorities.py	/^class SnippetPriorities_SimpleClear2(_VimTest):$/;"	c
SnippetSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/__init__.py	/^from UltiSnips.snippet.source._base import SnippetSource$/;"	i
SnippetSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^class SnippetSource(object):$/;"	c
SnippetSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^from UltiSnips.snippet.source._base import SnippetSource$/;"	i
SnippetSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^from UltiSnips.snippet.source._base import SnippetSource$/;"	i
SnippetSyntaxError	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^class SnippetSyntaxError(RuntimeError):$/;"	c
SnippetUtil	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^class SnippetUtil(object):$/;"	c
SnippetUtilForAction	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^from UltiSnips.text_objects._python_code import SnippetUtilForAction$/;"	i
SnippetUtilForAction	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^class SnippetUtilForAction(dict):$/;"	c
Snippet_With_DoubleQuote	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote(_VimTest):$/;"	c
Snippet_With_DoubleQuote_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_DoubleQuote_List(_VimTest):$/;"	c
Snippet_With_SingleQuote	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote(_VimTest):$/;"	c
Snippet_With_SingleQuote_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_SingleQuote_List(_VimTest):$/;"	c
Snippet_With_Umlauts	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_List	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_List(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Mirrors	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Mirrors(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteFirst	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteFirst(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteNone	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteNone(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_OverwriteSecond	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_OverwriteSecond(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_Python	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_Python(_UmlautsBase):$/;"	c
Snippet_With_Umlauts_TypeOn	plugged/ultisnips/test/test_Chars.py	/^class Snippet_With_Umlauts_TypeOn(_UmlautsBase):$/;"	c
SomeTest	plugged/vim-test/spec/fixtures/nose/test_class.py	/^class SomeTest(TestCase):$/;"	c
Source	plugged/alchemist.vim/rplugin/python3/deoplete/sources/alchemist.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^class Source(Base):$/;"	c
Source	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^class Source(Base):$/;"	c
Source	plugged/tmux-complete.vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^class Source(Base):$/;"	c
Source	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^class Source(Base):$/;"	c
SourceFlowSyntax	plugged/vim-polyglot/ftdetect/polyglot.vim	/^fun! s:SourceFlowSyntax()$/;"	f
SourceInitError	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^            from deoplete.exceptions import SourceInitError$/;"	i
SourceInitError	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^from deoplete.exceptions import SourceInitError$/;"	i
SourceInitError	plugged/deoplete.nvim/rplugin/python3/deoplete/exceptions.py	/^class SourceInitError(Exception):$/;"	c
Sphinx	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class Sphinx(object):$/;"	c
Split	plugged/vim-polyglot/syntax/ragel.vim	/^function! <SID>Split(path) abort " {{{1$/;"	f
SplitCDeclarations	plugged/tabular/after/plugin/TabularMaps.vim	/^function! SplitCDeclarations(lines)$/;"	f
SplitCommands	plugged/tabular/plugin/Tabular.vim	/^function! s:SplitCommands(string)$/;"	f
SplitDelim	plugged/tabular/autoload/tabular.vim	/^function! s:SplitDelim(string, delim)$/;"	f
SplitDelimTest	plugged/tabular/autoload/tabular.vim	/^function! s:SplitDelimTest(string, delim, expected)$/;"	f
SplitNoteFromSelectedText	plugged/vim-notes/plugin/notes.vim	/^command! -bar -bang -range SplitNoteFromSelectedText call xolox#notes#from_selection(<q-bang>, 'vsplit')$/;"	c
Squash	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^command! -buffer -bar -range Squash :<line1>,<line2>call s:choose('squash')$/;"	c
StageDiff	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
StagePatch	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
StageReloadSeek	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2) abort$/;"	f
StageToggle	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StageUndo	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:StageUndo() abort$/;"	f
StandaloneHTMLBuilder	plugged/deoplete-jedi/tests/sphinx-3000.py	/^        from sphinx.builders.html import StandaloneHTMLBuilder$/;"	i
StarSetf	plugged/vim-polyglot/ftdetect/polyglot.vim	/^func! s:StarSetf(ft)$/;"	f
StarSetf	plugged/vim-ruby/ftdetect/ruby.vim	/^func! s:StarSetf(ft)$/;"	f
StartCompletionMode	plugged/supertab/plugin/supertab.vim	/^function! s:StartCompletionMode() " {{{$/;"	f
StartOfFile	plugged/vim-polyglot/indent/ruby.vim	/^function! s:StartOfFile(pline_info) abort$/;"	f
StartOfFile	plugged/vim-ruby/indent/ruby.vim	/^function! s:StartOfFile(pline_info) abort$/;"	f
StartStructure	plugged/vim-polyglot/indent/twig.vim	/^function! s:StartStructure(name)$/;"	f
Startify	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar Startify call startify#insane_in_the_membrane()$/;"	c
StartifyDebug	plugged/vim-startify/plugin/startify.vim	/^command! -nargs=0 -bar StartifyDebug call startify#debug()$/;"	c
State.New	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.New() abort dict$/;"	f
State.getCurrent	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.getCurrent(force_current) abort dict$/;"	f
State.setCurrentFile	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.setCurrentFile(fileinfo) abort dict$/;"	f
State.setPaused	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:State.setPaused() abort dict$/;"	f
Status	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Status(bang, count, mods) abort$/;"	f
StatusOf	plugged/vim-textobj-user/t/plugin.vim	/^function! StatusOf(lhs)$/;"	f
StreamEmpty	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^class StreamEmpty(StreamError):$/;"	c
StreamError	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^class StreamError(Exception):$/;"	c
StripLeadingSpaces	plugged/tabular/autoload/tabular.vim	/^function! s:StripLeadingSpaces(string)$/;"	f
StripTrailingSpaces	plugged/tabular/autoload/tabular.vim	/^function! s:StripTrailingSpaces(string)$/;"	f
StripWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! -range=% StripWhitespace call <SID>StripWhitespace( <line1>, <line2> )$/;"	c
StripWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:StripWhitespace( line1, line2 )$/;"	f
StripWhitespaceMotion	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    function! s:StripWhitespaceMotion(type)$/;"	f
Strlen	plugged/tabular/autoload/tabular.vim	/^  function! s:Strlen(string)$/;"	f
Stylus	plugged/vim-polyglot/ftplugin/stylus.vim	/^command! Stylus !clear; cat % | stylus$/;"	c
SuperTab	plugged/supertab/plugin/supertab.vim	/^function! SuperTab(command) " {{{$/;"	f
SuperTabAlternateCompletion	plugged/supertab/plugin/supertab.vim	/^function! SuperTabAlternateCompletion(type) " {{{$/;"	f
SuperTabChain	plugged/supertab/plugin/supertab.vim	/^function! SuperTabChain(completefunc, completekeys, ...) " {{{$/;"	f
SuperTabCodeComplete	plugged/supertab/plugin/supertab.vim	/^function! SuperTabCodeComplete(findstart, base) " {{{$/;"	f
SuperTabHelp	plugged/supertab/plugin/supertab.vim	/^    command SuperTabHelp :call <SID>SuperTabHelp()$/;"	c
SuperTabHelp	plugged/supertab/plugin/supertab.vim	/^function! s:SuperTabHelp() " {{{$/;"	f
SuperTabLongestHighlight	plugged/supertab/plugin/supertab.vim	/^function! SuperTabLongestHighlight(dir) " {{{$/;"	f
SuperTabSetCompletionType	plugged/supertab/plugin/supertab.vim	/^function! SuperTabSetCompletionType(type) " {{{$/;"	f
SuperTabSetDefaultCompletionType	plugged/supertab/plugin/supertab.vim	/^function! SuperTabSetDefaultCompletionType(type) " {{{$/;"	f
SwiftIndent	plugged/vim-polyglot/indent/swift.vim	/^function! SwiftIndent(...)$/;"	f
SwitchWindow	plugged/vim-polyglot/ftplugin/coffee.vim	/^function! s:SwitchWindow(buf)$/;"	f
SynAt	plugged/vim-polyglot/indent/javascript.vim	/^function s:SynAt(l,c)$/;"	f
SynAttrXMLish	plugged/vim-polyglot/after/indent/jsx.vim	/^fu! SynAttrXMLish(synattr)$/;"	f
SynEOL	plugged/vim-polyglot/after/indent/jsx.vim	/^fu! SynEOL(lnum)$/;"	f
SynFold	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFold <args> fold$/;"	c
SynFold	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFold <args>$/;"	c
SynFoldDoc	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args> fold$/;"	c
SynFoldDoc	plugged/vim-polyglot/syntax/php.vim	/^  command! -nargs=+ SynFoldDoc <args>$/;"	c
SynJSXBlockEnd	plugged/vim-polyglot/after/indent/jsx.vim	/^fu! SynJSXBlockEnd(syns)$/;"	f
SynJSXContinues	plugged/vim-polyglot/after/indent/jsx.vim	/^fu! SynJSXContinues(cursyn, prevsyn)$/;"	f
SynJSXDepth	plugged/vim-polyglot/after/indent/jsx.vim	/^fu! SynJSXDepth(syns)$/;"	f
SynSOL	plugged/vim-polyglot/after/indent/jsx.vim	/^fu! SynSOL(lnum)$/;"	f
SynXMLish	plugged/vim-polyglot/after/indent/jsx.vim	/^fu! SynXMLish(syns)$/;"	f
SyntaxName	plugged/vim-polyglot/indent/coffee.vim	/^function! s:SyntaxName(lnum, col)$/;"	f
SyntaxName	plugged/vim-polyglot/indent/ls.vim	/^function! s:SyntaxName(linenum, col)$/;"	f
SyntaxName	plugged/vim-polyglot/indent/swift.vim	/^function! s:SyntaxName()$/;"	f
SyntaxNameAtPosition	plugged/vim-polyglot/indent/swift.vim	/^function! s:SyntaxNameAtPosition(line, column)$/;"	f
T	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map T <Plug>(easymotion-T)$/;"	m
T/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map T\/ <Plug>(easymotion-Tn)$/;"	m
T;	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal T;$/;"	m
TAPTestLine_foldtext	plugged/vim-polyglot/syntax/tap.vim	/^function! TAPTestLine_foldtext()$/;"	f
TH	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal TH$/;"	m
THEMIS_ARGS	plugged/deoplete.nvim/Makefile	/^export THEMIS_ARGS := -e -s --headless$/;"	m
THEMIS_HOME	plugged/deoplete.nvim/Makefile	/^export THEMIS_HOME := .\/vim-themis$/;"	m
THEMIS_VIM	plugged/deoplete.nvim/Makefile	/^export THEMIS_VIM  := nvim$/;"	m
THa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal THa$/;"	m
TIMEIT_GATHER_CANDIDATES	plugged/deoplete-jedi/mk/debug_code.mk	/^TIMEIT_GATHER_CANDIDATES := ${TIMEIT_PREFIX}"simple", [0.10000000, 0.20000000]${TIMEIT_SUFFIX}$/;"	m
TIMEIT_GET_COMPLETE_POSITION	plugged/deoplete-jedi/mk/debug_code.mk	/^TIMEIT_GET_COMPLETE_POSITION := ${TIMEIT_PREFIX}"simple", [0.00003000, 0.00015000]${TIMEIT_SUFFIX}$/;"	m
TIMEIT_PREFIX	plugged/deoplete-jedi/mk/debug_code.mk	/^TIMEIT_PREFIX := @timeit(logger, $/;"	m
TIMEIT_SUFFIX	plugged/deoplete-jedi/mk/debug_code.mk	/^TIMEIT_SUFFIX := )$/;"	m
TOCActivate	plugged/vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCActivate(close)$/;"	f
TOCClose	plugged/vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCClose()$/;"	f
TOCFindMatch	plugged/vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCFindMatch(strsearch,duplicates,files)$/;"	f
TOCFoldLevel	plugged/vim-polyglot/ftplugin/latextoc.vim	/^function! TOCFoldLevel(lnum)$/;"	f
TOCFoldText	plugged/vim-polyglot/ftplugin/latextoc.vim	/^function! TOCFoldText()$/;"	f
TOCOpenBuf	plugged/vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCOpenBuf(file)$/;"	f
TOCToggleNumbers	plugged/vim-polyglot/ftplugin/latextoc.vim	/^function! s:TOCToggleNumbers()$/;"	f
TabBuffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! s:TabBuffers()$/;"	f
TabNoteFromSelectedText	plugged/vim-notes/plugin/notes.vim	/^command! -bar -bang -range TabNoteFromSelectedText call xolox#notes#from_selection(<q-bang>, 'tabnew')$/;"	c
TabStop	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_base.py	/^from UltiSnips.text_objects import TabStop$/;"	i
TabStop	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
TabStop	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._tabstop import TabStop$/;"	i
TabStop	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^from UltiSnips.text_objects._tabstop import TabStop$/;"	i
TabStop	plugged/ultisnips/pythonx/UltiSnips/text_objects/_tabstop.py	/^class TabStop(EditableTextObject):$/;"	c
TabStopEscapingWhenSelectedNoCharTS_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedNoCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelectedSingleCharTS_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelectedSingleCharTS_ECR(_VimTest):$/;"	c
TabStopEscapingWhenSelected_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStopEscapingWhenSelected_ECR(_VimTest):$/;"	c
TabStopNavigatingInInsertModeSimple_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopNavigatingInInsertModeSimple_ExpectCorrectResult(_VimTest):$/;"	c
TabStopNoReplace_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopNoReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceReversed_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceReversed_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded1_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded1_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceSurrounded_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult(_VimTest):$/;"	c
TabStopSimpleReplace_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopSimpleReplace_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping2_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestBackwardJumping_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestBackwardJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping2_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping2_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^        _VimTest):$/;"	c
TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestJumping_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestJumping_ExpectCorrectResult(_VimTest):$/;"	c
TabStopTestMultilineExpand_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopTestMultilineExpand_ExpectCorrectResult(_VimTest):$/;"	c
TabStopToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_base.py	/^from UltiSnips.snippet.parsing._lexer import tokenize, TabStopToken$/;"	i
TabStopToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class TabStopToken(Token):$/;"	c
TabStopToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^    VisualToken, TabStopToken, MirrorToken, ShellCodeToken$/;"	i
TabStopToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
TabStopWithOneChar_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStopWithOneChar_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_AdjacentTabStopAddText_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_AdjacentTabStopAddText_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_CROnlyOnSelectedNear	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_CROnlyOnSelectedNear(_VimTest):$/;"	c
TabStop_EscapingCharsBackticks	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsBackticks(_VimTest):$/;"	c
TabStop_EscapingCharsDollars	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars(_VimTest):$/;"	c
TabStop_EscapingCharsDollars1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars1(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfDefinitionText	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfDefinitionText(_VimTest):$/;"	c
TabStop_EscapingCharsDollars_BeginningOfLine	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingCharsDollars_BeginningOfLine(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash2	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash2(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash3	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash3(_VimTest):$/;"	c
TabStop_EscapingChars_Backslash4	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_Backslash4(_VimTest):$/;"	c
TabStop_EscapingChars_RealLife	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_EscapingChars_RealLife(_VimTest):$/;"	c
TabStop_Exit_ExpectCorrectResult	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Exit_ExpectCorrectResult(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet(_VimTest):$/;"	c
TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE(_VimTest):$/;"	c
TabStop_Multiline_DelFirstOverwriteSecond_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_DelFirstOverwriteSecond_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Leave	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Leave	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Leave(_VimTest):$/;"	c
TabStop_Multiline_MirrorInFront_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_MirrorInFront_Overwrite(_VimTest):$/;"	c
TabStop_Multiline_Overwrite	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_Multiline_Overwrite(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Leave	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Leave(_VimTest):$/;"	c
TabStop_Shell_InDefValue_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_InDefValue_Overwrite(_VimTest):$/;"	c
TabStop_Shell_ShebangPython	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_ShebangPython(_VimTest):$/;"	c
TabStop_Shell_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_SimpleExample(_VimTest):$/;"	c
TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TestEscapedChars_Overwrite	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TestEscapedChars_Overwrite(_VimTest):$/;"	c
TabStop_Shell_TextInNextLine	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_TextInNextLine(_VimTest):$/;"	c
TabStop_Shell_WithUmlauts	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_Shell_WithUmlauts(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpAround	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpAround(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther(_VimTest):$/;"	c
TabStop_TSInDefaultNested_OverwriteOneJumpToThird	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultNested_OverwriteOneJumpToThird(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_DeleteFirst	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_DeleteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack(_VimTest):$/;"	c
TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0	plugged/ultisnips/test/test_TabStop.py	/^        _VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1	plugged/ultisnips/test/test_TabStop.py	/^        _VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite	plugged/ultisnips/test/test_TabStop.py	/^        _VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop(_VimTest):$/;"	c
TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_DoNothing	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_DoNothing(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite0	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite0(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_Overwrite1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_Overwrite1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1(_VimTest):$/;"	c
TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample	plugged/ultisnips/test/test_TabStop.py	/^class TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample(_VimTest):$/;"	c
TabStop_VimScriptInterpolation_SimpleExample	plugged/ultisnips/test/test_Interpolation.py	/^class TabStop_VimScriptInterpolation_SimpleExample(_VimTest):$/;"	c
Tabdo	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:Tabdo(command)$/;"	f
TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^        _VimTest):$/;"	c
TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultNoType_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultNoType_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult(_VimTest):$/;"	c
TabstopWithMirrorManyFromAll_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TabstopWithMirrorManyFromAll_ExpectCorrectResult(_VimTest):$/;"	c
Tabularize	plugged/tabular/plugin/Tabular.vim	/^   \\ Tabularize <line1>,<line2>call Tabularize(<q-args>)$/;"	c
Tabularize	plugged/tabular/plugin/Tabular.vim	/^function! Tabularize(command, ...) range$/;"	f
Tagbar	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 Tagbar              call tagbar#ToggleWindow()$/;"	c
TagbarBalloonExpr	plugged/tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarBufName	plugged/tagbar/autoload/tagbar.vim	/^function! s:TagbarBufName() abort$/;"	f
TagbarClose	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarCurrentTag	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarCurrentTag    echo tagbar#currenttag('%s', 'No current tag', <f-args>)$/;"	c
TagbarDebug	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#debug#start_debug(<f-args>)$/;"	c
TagbarDebugEnd	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#debug#stop_debug()$/;"	c
TagbarGetTypeConfig	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarOpen	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	plugged/tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#highlighttag(1, 1)$/;"	c
TagbarToggle	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagbarTogglePause	plugged/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarTogglePause   call tagbar#toggle_pause()$/;"	c
TagsByFileType	plugged/vim-easytags/plugin/easytags.vim	/^command! -bang TagsByFileType call xolox#easytags#update#convert_by_filetype(<q-bang> == '!')$/;"	c
Target	plugged/vim-textobj-user/t/old-property-names.vim	/^function! Target()$/;"	f
Tb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Tb$/;"	m
Tba	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Tba$/;"	m
TearDown	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function TearDown()$/;"	f
Teardown	plugged/vim-test/spec/support/helpers.vim	/^function! Teardown() abort$/;"	f
TempFileManager	plugged/ultisnips/test/vim_interface.py	/^class TempFileManager(object):$/;"	c
TempFileManager	plugged/ultisnips/test/vim_test_case.py	/^from test.vim_interface import create_directory, TempFileManager$/;"	i
TemplateBridge	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class TemplateBridge(object):$/;"	c
TerraformFoldText	plugged/vim-polyglot/after/ftplugin/terraform.vim	/^  function! TerraformFoldText()$/;"	f
TerraformFolds	plugged/vim-polyglot/after/ftplugin/terraform.vim	/^  function! TerraformFolds()$/;"	f
TerraformIndent	plugged/vim-polyglot/indent/terraform.vim	/^function! TerraformIndent(lnum)$/;"	f
Test	plugged/vim-polyglot/ftplugin/mma.vim	/^	function! Test()$/;"	f
Test	plugged/vim-test/spec/fixtures/dotnet-xunit/NestedTests.cs	/^            public void Test()$/;"	m	class:Namespace.Parent.NestedTests
Test	plugged/vim-test/spec/fixtures/dotnet-xunit/Tests.cs	/^        public void Test()$/;"	m	class:Namespace.Tests
Test	plugged/vim-test/spec/fixtures/dotnet-xunit/TestsWithFixture.cs	/^        public int Test { get; } = 1;$/;"	p	class:Namespace.MyFixture
Test	plugged/vim-test/spec/fixtures/dotnet-xunit/TestsWithFixture.cs	/^        public void Test()$/;"	m	class:Namespace.TestsWithFixture
Test	plugged/vim-test/spec/fixtures/dotnet/NestedTests.cs	/^            public void Test()$/;"	m	class:Namespace.Parent.NestedTests
Test	plugged/vim-test/spec/fixtures/dotnet/Tests.cs	/^        public void Test()$/;"	m	class:Namespace.Tests
Test	plugged/vim-textobj-user/t/scan.vim	/^function! Test(object, cases)$/;"	f
TestAllMatch	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestAllMatch(_Base, unittest.TestCase):$/;"	c
TestAsync	plugged/vim-test/spec/fixtures/dotnet-xunit/NestedTests.cs	/^            public async void TestAsync()$/;"	m	class:Namespace.Parent.NestedTests
TestAsync	plugged/vim-test/spec/fixtures/dotnet-xunit/Tests.cs	/^        public async void TestAsync()$/;"	m	class:Namespace.Tests
TestAsync	plugged/vim-test/spec/fixtures/dotnet-xunit/TestsWithFixture.cs	/^        public async void TestAsync()$/;"	m	class:Namespace.TestsWithFixture
TestAsync	plugged/vim-test/spec/fixtures/dotnet/NestedTests.cs	/^            public async void TestAsync()$/;"	m	class:Namespace.Parent.NestedTests
TestAsync	plugged/vim-test/spec/fixtures/dotnet/Tests.cs	/^        public async void TestAsync()$/;"	m	class:Namespace.Tests
TestCheapDelete	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCheapDelete(_Base, unittest.TestCase):$/;"	c
TestCommonCharacters	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCommonCharacters(_Base, unittest.TestCase):$/;"	c
TestCrash	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestCrash(_Base, unittest.TestCase):$/;"	c
TestEmptyString	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestEmptyString(_Base, unittest.TestCase):$/;"	c
TestFile	plugged/vim-test/plugin/test.vim	/^command! -nargs=* -bar TestFile    call test#run('file', split(<q-args>))$/;"	c
TestGuessing_BackspaceOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_BackspaceOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_DeleteOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_DeleteOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_InsertOneChar1	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_InsertOneChar1(_BaseGuessing, unittest.TestCase):$/;"	c
TestGuessing_Noop0	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestGuessing_Noop0(_BaseGuessing, unittest.TestCase):$/;"	c
TestLangmapWithUtf8_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestLangmapWithUtf8_ExpectCorrectResult(_VimTest):$/;"	c
TestLast	plugged/vim-test/plugin/test.vim	/^command! -nargs=* -bar TestLast    call test#run_last(split(<q-args>))$/;"	c
TestLotsaNewlines	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestLotsaNewlines(_Base, unittest.TestCase):$/;"	c
TestMath	plugged/vim-test/spec/fixtures/maven/TestMath.java	/^	public TestMath(String testName) {$/;"	m	class:TestMath
TestMath	plugged/vim-test/spec/fixtures/maven/TestMath.java	/^public class TestMath extends TestCase {$/;"	c
TestNearest	plugged/vim-test/plugin/test.vim	/^command! -nargs=* -bar TestNearest call test#run('nearest', split(<q-args>))$/;"	c
TestNoSubstring	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestNoSubstring(_Base, unittest.TestCase):$/;"	c
TestNonEmptyLangmapWithSemi_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmapWithSemi_ExpectCorrectResult(_VimTest):$/;"	c
TestNonEmptyLangmap_ExpectCorrectResult	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class TestNonEmptyLangmap_ExpectCorrectResult(_VimTest):$/;"	c
TestNumbers	plugged/vim-test/spec/fixtures/django/module/test_class.py	/^class TestNumbers:$/;"	c
TestNumbers	plugged/vim-test/spec/fixtures/minitest/classic_unit_test.rb	/^  class TestNumbers < Minitest::Test$/;"	c	class:Math
TestNumbers	plugged/vim-test/spec/fixtures/nose/test_class.py	/^class TestNumbers:$/;"	c
TestRealLife	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife(_Base, unittest.TestCase):$/;"	c
TestRealLife1	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestRealLife1(_Base, unittest.TestCase):$/;"	c
TestSubclass	plugged/vim-test/spec/fixtures/django/module/test_class.py	/^class TestSubclass(TestCase):$/;"	c
TestSubclass	plugged/vim-test/spec/fixtures/nose/test_class.py	/^class TestSubclass(Subclass):$/;"	c
TestSuite	plugged/vim-test/plugin/test.vim	/^command! -nargs=* -bar TestSuite   call test#run('suite', split(<q-args>))$/;"	c
TestSuperTabCodeComplete	plugged/supertab/plugin/supertab.vim	/^function! TestSuperTabCodeComplete(findstart, base) " {{{$/;"	f
TestUltiSnipsProblem	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestUltiSnipsProblem(_Base, unittest.TestCase):$/;"	c
TestVisit	plugged/vim-test/plugin/test.vim	/^command!          -bar TestVisit   call test#visit()$/;"	c
TestWithNewline	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class TestWithNewline(_Base, unittest.TestCase):$/;"	c
Test_add_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines()$/;"	f
Test_add_lines_fish	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_add_lines_fish()$/;"	f
Test_around_text_object	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_around_text_object()$/;"	f
Test_edit_file_with_same_name_as_a_branch	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_edit_file_with_same_name_as_a_branch()$/;"	f
Test_encoding	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_encoding()$/;"	f
Test_file_added_to_git	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_file_added_to_git()$/;"	f
Test_filename_leading_dash	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_leading_dash()$/;"	f
Test_filename_with_equals	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_equals()$/;"	f
Test_filename_with_square_brackets	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_filename_with_square_brackets()$/;"	f
Test_fix_file_references	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_fix_file_references()$/;"	f
Test_follow_symlink	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_follow_symlink()$/;"	f
Test_hunk_outside_noop	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_outside_noop()$/;"	f
Test_hunk_stage	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage()$/;"	f
Test_hunk_stage_nearby_hunk	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_stage_nearby_hunk()$/;"	f
Test_hunk_undo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_hunk_undo()$/;"	f
Test_inner_text_object	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_inner_text_object()$/;"	f
Test_keep_alt	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_alt()$/;"	f
Test_keep_modified	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_modified()$/;"	f
Test_keep_op_marks	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_keep_op_marks()$/;"	f
Test_modify_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_modify_lines()$/;"	f
Test_no_modifications	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_no_modifications()$/;"	f
Test_orphaned_signs	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_orphaned_signs()$/;"	f
Test_remove_first_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_first_lines()$/;"	f
Test_remove_lines	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_remove_lines()$/;"	f
Test_underscores_and_123	plugged/vim-test/spec/fixtures/django/module/test_class.py	/^class Test_underscores_and_123(TestCase):$/;"	c
Test_underscores_and_123	plugged/vim-test/spec/fixtures/nose/test_class.py	/^class Test_underscores_and_123(Subclass):$/;"	c
Test_undo_nearby_hunk	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_undo_nearby_hunk()$/;"	f
Test_untracked_file_outside_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_outside_repo()$/;"	f
Test_untracked_file_square_brackets_within_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_square_brackets_within_repo()$/;"	f
Test_untracked_file_within_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_untracked_file_within_repo()$/;"	f
Test_user_autocmd	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_user_autocmd()$/;"	f
Test_write_option	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function Test_write_option()$/;"	f
Tests	plugged/alchemist.vim/t/erl_terms_test.py	/^class Tests(unittest.TestCase):$/;"	c
Tests	plugged/vim-test/spec/fixtures/dotnet-xunit/Tests.cs	/^    public class Tests$/;"	c	namespace:Namespace
Tests	plugged/vim-test/spec/fixtures/dotnet/Tests.cs	/^    public class Tests$/;"	c	namespace:Namespace
TestsWithFixture	plugged/vim-test/spec/fixtures/dotnet-xunit/TestsWithFixture.cs	/^        public TestsWithFixture(MyFixture fixture)$/;"	m	class:Namespace.TestsWithFixture
TestsWithFixture	plugged/vim-test/spec/fixtures/dotnet-xunit/TestsWithFixture.cs	/^    public class TestsWithFixture : IClassFixture<MyFixture>$/;"	c	namespace:Namespace
TextObject	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^class TextObject(object):$/;"	c
TextObjectTransformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^class TextObjectTransformation(object):$/;"	c
TextObjectTransformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/_visual.py	/^from UltiSnips.text_objects._transformation import TextObjectTransformation$/;"	i
TextTabStopAfterMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAfterMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopAllSurrounded_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopAllSurrounded_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultilineMirrorInFront_ECR	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultilineMirrorInFront_ECR(_VimTest):$/;"	c
TextTabStopSimpleMirrorMultiline_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSimpleMirrorMultiline_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopSurroundMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopSurroundMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextAfterTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextAfterTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeMirror_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeMirror_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextBeforeTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextBeforeTab_ExpectCorrectResult(_VimTest):$/;"	c
TextTabStopTextSurroundedTab_ExpectCorrectResult	plugged/ultisnips/test/test_Mirror.py	/^class TextTabStopTextSurroundedTab_ExpectCorrectResult(_VimTest):$/;"	c
TextilePreview	plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextilePreview call TextileRenderBufferToPreview()$/;"	c
TextileRender	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRender(lines)$/;"	f
TextileRenderBufferToFile	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToFile()$/;"	f
TextileRenderBufferToPreview	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToPreview()$/;"	f
TextileRenderBufferToTab	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderBufferToTab()$/;"	f
TextileRenderFile	plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextileRenderFile call TextileRenderBufferToFile()$/;"	c
TextileRenderFile	plugged/vim-polyglot/ftplugin/textile.vim	/^function! TextileRenderFile(lines, filename)$/;"	f
TextileRenderTab	plugged/vim-polyglot/ftplugin/textile.vim	/^command! -nargs=0 TextileRenderTab call TextileRenderBufferToTab()$/;"	c
Th	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Th$/;"	m
Tha	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Tha$/;"	m
TheLastRegion	plugged/vim-textobj-user/t/region-type.vim	/^function! TheLastRegion()$/;"	f
Throw	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:Throw(message) "{{{$/;"	f
Timer	plugged/vim-notes/misc/notes/search-notes.py	/^class Timer(object):$/;"	c
TmuxAwareNavigate	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:TmuxAwareNavigate(direction)$/;"	f
TmuxCommand	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:TmuxCommand(args)$/;"	f
TmuxNavigateDown	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  command! TmuxNavigateDown call s:VimNavigate('j')$/;"	c
TmuxNavigateDown	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigateDown call s:TmuxAwareNavigate('j')$/;"	c
TmuxNavigateLeft	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  command! TmuxNavigateLeft call s:VimNavigate('h')$/;"	c
TmuxNavigateLeft	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigateLeft call s:TmuxAwareNavigate('h')$/;"	c
TmuxNavigatePrevious	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  command! TmuxNavigatePrevious call s:VimNavigate('p')$/;"	c
TmuxNavigatePrevious	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigatePrevious call s:TmuxAwareNavigate('p')$/;"	c
TmuxNavigateRight	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  command! TmuxNavigateRight call s:VimNavigate('l')$/;"	c
TmuxNavigateRight	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigateRight call s:TmuxAwareNavigate('l')$/;"	c
TmuxNavigateUp	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  command! TmuxNavigateUp call s:VimNavigate('k')$/;"	c
TmuxNavigateUp	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxNavigateUp call s:TmuxAwareNavigate('k')$/;"	c
TmuxOrTmateExecutable	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:TmuxOrTmateExecutable()$/;"	f
TmuxPaneCurrentCommand	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^command! TmuxPaneCurrentCommand call s:TmuxPaneCurrentCommand()$/;"	c
TmuxPaneCurrentCommand	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:TmuxPaneCurrentCommand()$/;"	f
TmuxSocket	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:TmuxSocket()$/;"	f
TmuxVimPaneIsZoomed	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:TmuxVimPaneIsZoomed()$/;"	f
ToHaveBookmark	plugged/vim-bookmarks/t/bm_move_spec.vim	/^function! ToHaveBookmark(file, line)$/;"	f
ToHaveBookmark_should_msg	plugged/vim-bookmarks/t/bm_move_spec.vim	/^function! ToHaveBookmark_should_msg(file, line)$/;"	f
ToHaveBookmark_should_not_msg	plugged/vim-bookmarks/t/bm_move_spec.vim	/^function! ToHaveBookmark_should_not_msg(file, line)$/;"	f
ToHaveBookmarks	plugged/vim-bookmarks/t/bm_move_spec.vim	/^function! ToHaveBookmarks(file)$/;"	f
ToHaveBookmarks_should_msg	plugged/vim-bookmarks/t/bm_move_spec.vim	/^function! ToHaveBookmarks_should_msg(file)$/;"	f
ToHaveBookmarks_should_not_msg	plugged/vim-bookmarks/t/bm_move_spec.vim	/^function! ToHaveBookmarks_should_not_msg(file)$/;"	f
Toa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Toa$/;"	m
Tob	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Tob$/;"	m
Toc	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Toc$/;"	m
Tod	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal Tod$/;"	m
ToggleAutoclose	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleAutoclose() abort$/;"	f
ToggleBookmark	plugged/vim-bookmarks/plugin/bookmark.vim	/^command! ToggleBookmark call CallDeprecatedCommand('BookmarkToggle', [])$/;"	c
ToggleCaseInsensitive	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleCaseInsensitive() abort$/;"	f
ToggleFold	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
ToggleHelp	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
ToggleHideNonPublicTags	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleHideNonPublicTags() abort$/;"	f
ToggleSort	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
ToggleStripWhitespaceOnSave	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! ToggleStripWhitespaceOnSave call <SID>ToggleStripWhitespaceOnSave()$/;"	c
ToggleStripWhitespaceOnSave	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ToggleStripWhitespaceOnSave()$/;"	f
ToggleWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^command! ToggleWhitespace call <SID>ToggleWhitespace()$/;"	c
ToggleWhitespace	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:ToggleWhitespace()$/;"	f
ToggleWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow(flags) abort$/;"	f
Token	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class Token(object):$/;"	c
Token	plugged/vim-polyglot/indent/javascript.vim	/^function s:Token()$/;"	f
TokenizeLine	plugged/vim-polyglot/indent/erlang.vim	/^function! s:TokenizeLine(lnum, direction)$/;"	f
TrailingNewline_TabStop_EndNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndNL(_VimTest):$/;"	c
TrailingNewline_TabStop_EndStartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_EndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_ExtraNL_ECR	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_ExtraNL_ECR(_VimTest):$/;"	c
TrailingNewline_TabStop_JustNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_JustNL(_VimTest):$/;"	c
TrailingNewline_TabStop_NLInsideStuffBehind	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NLInsideStuffBehind(_VimTest):$/;"	c
TrailingNewline_TabStop_NotEndStartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_NotEndStartNL(_VimTest):$/;"	c
TrailingNewline_TabStop_StartNL	plugged/ultisnips/test/test_Chars.py	/^class TrailingNewline_TabStop_StartNL(_VimTest):$/;"	c
TransformUserTypeDef	plugged/tagbar/autoload/tagbar.vim	/^function! s:TransformUserTypeDef(def) abort$/;"	f
Transformation	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
Transformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._transformation import Transformation$/;"	i
Transformation	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^class Transformation(Mirror, TextObjectTransformation):$/;"	c
TransformationToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class TransformationToken(Token):$/;"	c
TransformationToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR(_VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR	plugged/ultisnips/test/test_Transformation.py	/^        _VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR	plugged/ultisnips/test/test_Transformation.py	/^        _VimTest):$/;"	c
TransformationUsingBackspaceToDeleteDefaultValue_ECR	plugged/ultisnips/test/test_Transformation.py	/^class TransformationUsingBackspaceToDeleteDefaultValue_ECR(_VimTest):$/;"	c
Transformation_BackreferenceTwice_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_BackreferenceTwice_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_Backreference_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_Backreference_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedNegative_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedNegative_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIBothDefinedPositive_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIBothDefinedPositive_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CIEscapedParensinReplace_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CIEscapedParensinReplace_ECR(_VimTest):$/;"	c
Transformation_CINewlines_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CINewlines_ECR(_VimTest):$/;"	c
Transformation_CITabstop_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CITabstop_ECR(_VimTest):$/;"	c
Transformation_CleverTransformLongLower_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongLower_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLongUpper_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformLongUpper_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_CleverTransformLowercaseChar_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^        _VimTest):$/;"	c
Transformation_CleverTransformUpercaseChar_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_CleverTransformUpercaseChar_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalInConditional_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInConditional_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertRWEllipsis_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertRWEllipsis_ECR(_VimTest):$/;"	c
Transformation_ConditionalInsertionSimple_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalInsertionSimple_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter(_VimTest):$/;"	c
Transformation_ConditionalWithBackslashBeforeDelimiter1	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithBackslashBeforeDelimiter1(_VimTest):$/;"	c
Transformation_ConditionalWithEscapedDelimiter	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_ConditionalWithEscapedDelimiter(_VimTest):$/;"	c
Transformation_InsideTabLeaveAtDefault_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabLeaveAtDefault_ECR(_VimTest):$/;"	c
Transformation_InsideTabOvertype_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_InsideTabOvertype_ECR(_VimTest):$/;"	c
Transformation_LowerCaseAsciiResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_LowerCaseAsciiResult(_VimTest):$/;"	c
Transformation_MultipleTransformations_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_MultipleTransformations_ECR(_VimTest):$/;"	c
Transformation_OptionIgnoreCase_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionIgnoreCase_ECR(_VimTest):$/;"	c
Transformation_OptionMultiline_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionMultiline_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobalMatchInReplace_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobalMatchInReplace_ECR(_VimTest):$/;"	c
Transformation_OptionReplaceGlobal_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_OptionReplaceGlobal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseAsciiResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseAsciiResult(_VimTest):$/;"	c
Transformation_SimpleCaseNoTransform_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseNoTransform_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFrontDefVal_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFrontDefVal_ECR(_VimTest):$/;"	c
Transformation_SimpleCaseTransformInFront_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCaseTransformInFront_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_SimpleCase_ExpectCorrectResult	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_SimpleCase_ExpectCorrectResult(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted1_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted1_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndAndDeleted_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndAndDeleted_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextLeave_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextLeave_ECR(_VimTest):$/;"	c
Transformation_TabIsAtEndNoTextType_ECR	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TabIsAtEndNoTextType_ECR(_VimTest):$/;"	c
Transformation_TestKill_InsertAfter_NoKill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertAfter_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBefore_NoKill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBefore_NoKill(_VimTest):$/;"	c
Transformation_TestKill_InsertBeginning_Kill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertBeginning_Kill(_VimTest):$/;"	c
Transformation_TestKill_InsertEnd_Kill	plugged/ultisnips/test/test_Transformation.py	/^class Transformation_TestKill_InsertEnd_Kill(_VimTest):$/;"	c
TreeDirNode.AbsoluteTreeRoot	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
TreeDirNode._glob	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._glob(pattern, all)$/;"	f
TreeDirNode._initChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode.activate	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.displayString	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.displayString()$/;"	f
TreeDirNode.findNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getCascade	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getCascade()$/;"	f
TreeDirNode.getChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.isCascadable	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.isCascadable()$/;"	f
TreeDirNode.open	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refreshDirFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
TreeDirNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
TreeDirNode.removeChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
TreeDirNode.sortChildren	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetSelected	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
TreeFileNode._renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText)$/;"	f
TreeFileNode.activate	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getNerdtree	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
TreeFileNode.isRoot	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.open	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refreshFlags	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
TreeFileNode.rename	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
Trim	plugged/vim-polyglot/indent/qml.vim	/^function! Trim(line)$/;"	f
Trim	plugged/vim-polyglot/indent/typescript.vim	/^function s:Trim(ln)$/;"	f
TrimSpacesAtEndOfLines	plugged/ultisnips/test/test_Chars.py	/^class TrimSpacesAtEndOfLines(_VimTest):$/;"	c
TryNormal	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function TryNormal(str)$/;"	f
U	plugged/vim-repeat/autoload/repeat.vim	/^    nmap U <Plug>(RepeatUndoLine)$/;"	m
UI.IndentWid	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
UI.MarkupReg	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
UI.New	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
UI.UpDirLine	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
UI._dumpHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
UI._indentLevelFor	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
UI._renderBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
UI._stripMarkup	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line)$/;"	f
UI.centerView	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
UI.getLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(file_node)$/;"	f
UI.getPath	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
UI.getRootLineNum	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
UI.getShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
UI.getShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
UI.getShowHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
UI.getShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
UI.isIgnoreFilterEnabled	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
UI.isMinimal	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isMinimal()$/;"	f
UI.render	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
UI.renderViewSavingPosition	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
UI.restoreScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
UI.saveScreenState	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
UI.setShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
UI.toggleHelp	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
UI.toggleIgnoreFilter	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
UI.toggleShowBookmarks	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
UI.toggleShowFiles	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
UI.toggleShowHidden	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
UI.toggleZoom	plugged/nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
UNIDECODE_ALERT_RAISED	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^UNIDECODE_ALERT_RAISED = False$/;"	v
UNIDECODE_IMPORTED	plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = False$/;"	v
UNIDECODE_IMPORTED	plugged/ultisnips/test/util.py	/^    UNIDECODE_IMPORTED = True$/;"	v
URLError	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^from urllib.error import URLError$/;"	i
UltiSnips	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^import UltiSnips._vim$/;"	i
UltiSnips	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^import UltiSnips.snippet_manager$/;"	i
UltiSnips#AddFiletypes	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddFiletypes(filetypes)$/;"	f
UltiSnips#AddSnippetWithPriority	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#AddSnippetWithPriority(trigger, value, description, options, filetype, priority)$/;"	f
UltiSnips#Anon	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Anon(value, ...)$/;"	f
UltiSnips#CursorMoved	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#CursorMoved()$/;"	f
UltiSnips#Edit	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#Edit(bang, ...)$/;"	f
UltiSnips#ExpandSnippet	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippet()$/;"	f
UltiSnips#ExpandSnippetOrJump	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ExpandSnippetOrJump()$/;"	f
UltiSnips#FileTypeComplete	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#FileTypeComplete(arglead, cmdline, cursorpos)$/;"	f
UltiSnips#JumpBackwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpBackwards()$/;"	f
UltiSnips#JumpForwards	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#JumpForwards()$/;"	f
UltiSnips#LeavingBuffer	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingBuffer()$/;"	f
UltiSnips#LeavingInsertMode	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#LeavingInsertMode()$/;"	f
UltiSnips#ListSnippets	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#ListSnippets()$/;"	f
UltiSnips#RefreshSnippets	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#RefreshSnippets()$/;"	f
UltiSnips#SaveLastVisualSelection	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SaveLastVisualSelection() range$/;"	f
UltiSnips#SnippetsInCurrentScope	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#SnippetsInCurrentScope(...)$/;"	f
UltiSnips#TrackChange	plugged/ultisnips/autoload/UltiSnips.vim	/^function! UltiSnips#TrackChange()$/;"	f
UltiSnips#map_keys#MapKeys	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^function! UltiSnips#map_keys#MapKeys()$/;"	f
UltiSnipsAddFiletypes	plugged/ultisnips/plugin/UltiSnips.vim	/^command! -nargs=1 UltiSnipsAddFiletypes :call UltiSnips#AddFiletypes(<q-args>)$/;"	c
UltiSnipsEdit	plugged/ultisnips/plugin/UltiSnips.vim	/^command! -bang -nargs=? -complete=customlist,UltiSnips#FileTypeComplete UltiSnipsEdit$/;"	c
UltiSnipsFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/__init__.py	/^    find_all_snippet_files, find_snippet_files$/;"	i
UltiSnipsFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^class UltiSnipsFileSource(SnippetFileSource):$/;"	c
UltiSnipsFileSource	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    find_all_snippet_files, find_snippet_files, AddedSnippetsSource$/;"	i
UltiSnipsSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/__init__.py	/^from UltiSnips.snippet.definition.ulti_snips import UltiSnipsSnippetDefinition$/;"	i
UltiSnipsSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^class UltiSnipsSnippetDefinition(SnippetDefinition):$/;"	c
UltiSnipsSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^from UltiSnips.snippet.definition import UltiSnipsSnippetDefinition$/;"	i
UltiSnipsSnippetDefinition	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.snippet.definition import UltiSnipsSnippetDefinition$/;"	i
UltiSnips_AutoTrigger	plugged/ultisnips/plugin/UltiSnips.vim	/^augroup UltiSnips_AutoTrigger$/;"	a
UltiSnips_Manager	plugged/ultisnips/pythonx/UltiSnips/__init__.py	/^from UltiSnips.snippet_manager import UltiSnips_Manager$/;"	i
UltiSnips_Manager	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^UltiSnips_Manager = SnippetManager(  # pylint:disable=invalid-name$/;"	v
UltiSnips_Manager	plugged/ultisnips/test/vim_test_case.py	/^        vim_config.append('from UltiSnips import UltiSnips_Manager\\n')$/;"	i
UmlautsBeforeTriggerAndCharsAfter	plugged/ultisnips/test/test_Chars.py	/^class UmlautsBeforeTriggerAndCharsAfter(_UmlautsBase):$/;"	c
UnIndentByInd	plugged/vim-polyglot/indent/autohotkey.vim	/^function! UnIndentByInd(indent)$/;"	f
Undo_ChangesInPlaceholder	plugged/ultisnips/test/test_Editing.py	/^class Undo_ChangesInPlaceholder(_VimTest):$/;"	c
Undo_CompletelyUndoSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_CompletelyUndoSnippet(_VimTest):$/;"	c
Undo_RemoveEditInTabstop	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveEditInTabstop(_VimTest):$/;"	c
Undo_RemoveMultilineSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveMultilineSnippet(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime(_VimTest):$/;"	c
Undo_RemoveOneSnippetByTime2	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveOneSnippetByTime2(_VimTest):$/;"	c
Undo_RemoveWholeSnippet	plugged/ultisnips/test/test_Editing.py	/^class Undo_RemoveWholeSnippet(_VimTest):$/;"	c
UnexpectedToken	plugged/vim-polyglot/indent/erlang.vim	/^function! s:UnexpectedToken(token, stack)$/;"	f
UnittestClass	plugged/vim-test/spec/fixtures/nose/test_class.py	/^class UnittestClass(unittest.TestCase):$/;"	c
UnknownVariable	plugged/ultisnips/utils/get_tm_snippets.py	/^class UnknownVariable(Exception):$/;"	c
UnsupportedVariableExpression	plugged/ultisnips/utils/get_tm_snippets.py	/^class UnsupportedVariableExpression(Exception):$/;"	c
UpdateMakePrg	plugged/vim-polyglot/compiler/coffee.vim	/^  function! s:UpdateMakePrg()$/;"	f
UpdateMakePrg	plugged/vim-polyglot/compiler/ls.vim	/^  function! s:UpdateMakePrg()$/;"	f
UpdateModifiedSnippetWithoutCursorMove1	plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove1(_VimTest):$/;"	c
UpdateModifiedSnippetWithoutCursorMove2	plugged/ultisnips/test/test_Editing.py	/^class UpdateModifiedSnippetWithoutCursorMove2(_VimTest):$/;"	c
UpdateTags	plugged/vim-easytags/plugin/easytags.vim	/^command! -bar -bang -nargs=* -complete=file UpdateTags call xolox#easytags#update(0, <q-bang> == '!', [<f-args>])$/;"	c
UsableWin	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:UsableWin(nr) abort$/;"	f
Util1	plugged/vim-airline/t/util.vim	/^function! Util1()$/;"	f
Util2	plugged/vim-airline/t/util.vim	/^function! Util2()$/;"	f
Util3	plugged/vim-airline/t/util.vim	/^function! Util3(...)$/;"	f
VerifyVimDict1	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict1(_VimTest):$/;"	c
VerifyVimDict2	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict2(_VimTest):$/;"	c
VerifyVimDict3	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class VerifyVimDict3(_VimTest):$/;"	c
ViewExtract	plugged/vim-rails/autoload/rails.vim	/^function! s:ViewExtract(bang, mods, first, last, file) abort$/;"	f
VifmRenameAutoCmds	plugged/vim-polyglot/ftplugin/vifm-rename.vim	/^augroup VifmRenameAutoCmds$/;"	a
VimBuffer	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^class VimBuffer(object):$/;"	c
VimBufferProxy	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^class VimBufferProxy(_vim.VimBuffer):$/;"	c
VimInterface	plugged/ultisnips/test/vim_interface.py	/^class VimInterface(TempFileManager):$/;"	c
VimInterfaceTmux	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmux(VimInterface):$/;"	c
VimInterfaceTmuxNeovim	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceTmuxNeovim(VimInterfaceTmux):$/;"	c
VimInterfaceWindows	plugged/ultisnips/test/vim_interface.py	/^class VimInterfaceWindows(VimInterface):$/;"	c
VimLCode	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.text_objects import EscapedChar, Mirror, VimLCode, Visual$/;"	i
VimLCode	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
VimLCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._viml_code import VimLCode$/;"	i
VimLCode	plugged/ultisnips/pythonx/UltiSnips/text_objects/_viml_code.py	/^class VimLCode(NoneditableTextObject):$/;"	c
VimLCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class VimLCodeToken(Token):$/;"	c
VimLCodeToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
VimNavigate	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^function! s:VimNavigate(direction)$/;"	f
VimPosition	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimPosition(Position):$/;"	c
VimState	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.vim_state import VimState, VisualContentPreserver$/;"	i
VimState	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VimState(object):$/;"	c
VimTestCase	plugged/ultisnips/test/vim_test_case.py	/^class VimTestCase(unittest.TestCase, TempFileManager):$/;"	c
VirtualEdit	plugged/ultisnips/test/test_Fixes.py	/^class VirtualEdit(_VimTest):$/;"	c
Visual	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.text_objects import EscapedChar, Mirror, VimLCode, Visual$/;"	i
Visual	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    ShellCode, TabStop, Transformation, VimLCode, Visual$/;"	i
Visual	plugged/ultisnips/pythonx/UltiSnips/text_objects/__init__.py	/^from UltiSnips.text_objects._visual import Visual$/;"	i
Visual	plugged/ultisnips/pythonx/UltiSnips/text_objects/_visual.py	/^class Visual(NoneditableTextObject, TextObjectTransformation):$/;"	c
VisualContentPreserver	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.vim_state import VimState, VisualContentPreserver$/;"	i
VisualContentPreserver	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^class VisualContentPreserver(object):$/;"	c
VisualToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class VisualToken(Token):$/;"	c
VisualToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^    VisualToken, TabStopToken, MirrorToken, ShellCodeToken$/;"	i
VisualToken	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^    PythonCodeToken, VimLCodeToken, ShellCodeToken$/;"	i
VisualTransformationWithDefault_ExpandWithVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualTransformationWithDefault_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformationWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
VisualTransformation_InDefaultText_LineSelect_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
VisualTransformation_LineSelect_Simple	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_LineSelect_Simple(_VimTest):$/;"	c
VisualTransformation_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class VisualTransformation_SelectOneWord(_VimTest):$/;"	c
VisualWithDefaultWithSlashes_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefaultWithSlashes_ExpandWithoutVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithVisual(_VimTest):$/;"	c
VisualWithDefault_ExpandWithoutVisual	plugged/ultisnips/test/test_Visual.py	/^class VisualWithDefault_ExpandWithoutVisual(_VimTest):$/;"	c
Visual_CrossOneLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_CrossOneLine(_VimTest):$/;"	c
Visual_ExpandTwice	plugged/ultisnips/test/test_Visual.py	/^class Visual_ExpandTwice(_VimTest):$/;"	c
Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1(_VimTest):$/;"	c
Visual_InDefaultText_IndentSpacesToTabstop_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_IndentSpacesToTabstop_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_NoOverwrite(_VimTest):$/;"	c
Visual_InDefaultText_LineSelect_Overwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_LineSelect_Overwrite(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord(_VimTest):$/;"	c
Visual_InDefaultText_SelectOneWord_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_InDefaultText_SelectOneWord_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentSimple	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentSimple(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentTwice	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentTwice(_VimTest):$/;"	c
Visual_LineSelect_CheckIndentWithTS_NoOverwrite	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_CheckIndentWithTS_NoOverwrite(_VimTest):$/;"	c
Visual_LineSelect_DedentLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_DedentLine(_VimTest):$/;"	c
Visual_LineSelect_Simple	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_Simple(_VimTest):$/;"	c
Visual_LineSelect_WithTabStop	plugged/ultisnips/test/test_Visual.py	/^class Visual_LineSelect_WithTabStop(_VimTest):$/;"	c
Visual_NoVisualSelection_Ignore	plugged/ultisnips/test/test_Visual.py	/^class Visual_NoVisualSelection_Ignore(_VimTest):$/;"	c
Visual_SelectOneWord	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord(_VimTest):$/;"	c
Visual_SelectOneWordExclusive	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordExclusive(_VimTest):$/;"	c
Visual_SelectOneWordInclusive	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordInclusive(_VimTest):$/;"	c
Visual_SelectOneWordWithTabstop_TillEndOfLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWordWithTabstop_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_Inword	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_Inword(_VimTest):$/;"	c
Visual_SelectOneWord_ProblemAfterTab	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_ProblemAfterTab(_VimTest):$/;"	c
Visual_SelectOneWord_TillEndOfLine	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TillEndOfLine(_VimTest):$/;"	c
Visual_SelectOneWord_TwiceVisual	plugged/ultisnips/test/test_Visual.py	/^class Visual_SelectOneWord_TwiceVisual(_VimTest):$/;"	c
WIN_ESCAPES	plugged/ultisnips/test/vim_interface.py	/^    WIN_ESCAPES = ['+', '^', '%', '~', '[', ']', '<', '>', '(', ')']$/;"	v	class:VimInterfaceWindows
WIN_REPLACES	plugged/ultisnips/test/vim_interface.py	/^    WIN_REPLACES = [$/;"	v	class:VimInterfaceWindows
WebDevIconsGetFileFormatSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileFormatSymbol(...)$/;"	f
WebDevIconsGetFileTypeSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^function! WebDevIconsGetFileTypeSymbol(...)$/;"	f
WebDevIconsNERDTreeChangeRootHandler	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeChangeRootHandler(node)$/;"	f
WebDevIconsNERDTreeDirClose	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirClose(node)$/;"	f
WebDevIconsNERDTreeDirCloseChildren	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirCloseChildren(node)$/;"	f
WebDevIconsNERDTreeDirCloseRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirCloseRecursively(node)$/;"	f
WebDevIconsNERDTreeDirOpen	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirOpen(node)$/;"	f
WebDevIconsNERDTreeDirOpenRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirOpenRecursively(node)$/;"	f
WebDevIconsNERDTreeDirUpdateFlags	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeDirUpdateFlags(node, glyph)$/;"	f
WebDevIconsNERDTreeMapActivateNode	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapActivateNode(node)$/;"	f
WebDevIconsNERDTreeMapCloseChildren	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapCloseChildren(node)$/;"	f
WebDevIconsNERDTreeMapCloseDir	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapCloseDir(node)$/;"	f
WebDevIconsNERDTreeMapOpenRecursively	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapOpenRecursively(node)$/;"	f
WebDevIconsNERDTreeMapUpdirKeepOpen	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeMapUpdirKeepOpen()$/;"	f
WebDevIconsNERDTreeUpDirCurrentRootClosedHandler	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^function! WebDevIconsNERDTreeUpDirCurrentRootClosedHandler()$/;"	f
WhitespaceInit	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:WhitespaceInit()$/;"	f
WillComplete	plugged/supertab/plugin/supertab.vim	/^function! s:WillComplete(...) " {{{$/;"	f
Windo	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^function! s:Windo(command)$/;"	f
Windows	plugged/vim-test/autoload/test/strategy.vim	/^function! s:Windows() abort$/;"	f
WithPath	plugged/vim-polyglot/autoload/rust.vim	/^function! s:WithPath(func, ...)$/;"	f
Worker	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^class Worker(threading.Thread):$/;"	c
Wq	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
WrapSelection	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^function! s:WrapSelection(wrapper)$/;"	f
Write	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
X	plugged/one/colors/one.vim	/^  fun <sid>X(group, fg, bg, attr)$/;"	f
X	plugged/vim-one/colors/one.vim	/^  fun <sid>X(group, fg, bg, attr)$/;"	f
X	plugged/vim-ruby/spec/indent/blocks_spec.rb	/^      module X$/;"	m
Yank	plugged/vim-textobj-jsxattr/t/basics.vim	/^function! Yank(inside_or_around, after_movement)$/;"	f
YankAround	plugged/vim-textobj-jsxattr/t/basics.vim	/^function! YankAround(after_movement)$/;"	f
YankInside	plugged/vim-textobj-jsxattr/t/basics.vim	/^function! YankInside(after_movement)$/;"	f
ZoomWindow	plugged/tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
["	plugged/vim-polyglot/ftplugin/vifm.vim	/^nnoremap <silent><buffer> [" :call search('\\%(^\\s*".*\\n\\)\\%(^\\s*"\\)\\@!', "bW")<CR>$/;"	m
["	plugged/vim-polyglot/ftplugin/vifm.vim	/^vnoremap <silent><buffer> [" :<C-U>exe "normal! gv"<Bar>call search('\\%(^\\s*".*\\n\\)\\%(^\\s*"\\)\\@!', "bW")<CR>$/;"	m
[<C-D>	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldopen<CR>$/;"	m
[M	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'b','n')<CR>$/;"	m
[M	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'b','n')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> [[ ':silent keeppatterns ?'.b:block_begin.'<CR>'$/;"	m
[[	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> [[ ':silent keeppatterns ?'.b:block_begin.'<CR>'$/;"	m
[[	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap  <buffer> <silent> [[ :call <SID>LatexBoxNextSection(0,1,0)<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^vnoremap <buffer> <silent> [[ :<c-u>call <SID>LatexBoxNextSection(0,1,1)<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/mustache.vim	/^nnoremap <silent> <buffer> [[ :<C-U>call <SID>sectionmovement('{{','b','n',v:count1)<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['rubyModule','rubyClass'],'b','n')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> [[ :call rust#Jump('n', 'Back')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/rust.vim	/^onoremap <silent> <buffer> [[ :call rust#Jump('o', 'Back')<CR>$/;"	m
[[	plugged/vim-polyglot/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> [[ :call <SID>NextSection(1)<cr>$/;"	m
[[	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> [[ :call search('^<\\(template\\<Bar>script\\<Bar>style\\)', 'bW')<CR>$/;"	m
[[	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [[ :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['rubyModule','rubyClass'],'b','n')<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> [] ':silent keeppatterns ?'.b:block_end  .'<CR>'$/;"	m
[]	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> [] ':silent keeppatterns ?'.b:block_end  .'<CR>'$/;"	m
[]	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap  <buffer> <silent> [] :call <SID>LatexBoxNextSection(1,1,0)<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^vnoremap <buffer> <silent> [] :<c-u>call <SID>LatexBoxNextSection(1,1,1)<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass'],'b','n')<CR>$/;"	m
[]	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> [] :call search('^<\/\\(template\\<Bar>script\\<Bar>style\\)', 'bW')<CR>$/;"	m
[]	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [] :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass'],'b','n')<CR>$/;"	m
[d	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> [d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
[m	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'b','n')<CR>$/;"	m
[m	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> [m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'b','n')<CR>$/;"	m
]"	plugged/vim-polyglot/ftplugin/vifm.vim	/^nnoremap <silent><buffer> ]" :call search('^\\(\\s*".*\\n\\)\\@<!\\(\\s*"\\)', "W")<CR>$/;"	m
]"	plugged/vim-polyglot/ftplugin/vifm.vim	/^vnoremap <silent><buffer> ]" :<C-U>exe "normal! gv"<Bar>call search('^\\(\\s*".*\\n\\)\\@<!\\(\\s*"\\)', "W")<CR>$/;"	m
]<C-D>	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]<C-D>      :<C-U>exe <SID>jump('edit',v:count)<SID>foldopen<CR>$/;"	m
]M	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'','n')<CR>$/;"	m
]M	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]M :<C-U>call <SID>searchsyn('\\<end\\>',['rubyDefine'],'','n')<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> ][ ':silent keeppatterns \/'.b:block_end  .'<CR>'$/;"	m
][	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> ][ ':silent keeppatterns \/'.b:block_end  .'<CR>'$/;"	m
][	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap  <buffer> <silent> ][ :call <SID>LatexBoxNextSection(1,0,0)<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^vnoremap <buffer> <silent> ][ :<c-u>call <SID>LatexBoxNextSection(1,0,1)<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass'],'','n')<CR>$/;"	m
][	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> ][ :call search('^<\/\\(template\\<Bar>script\\<Bar>style\\)', 'W')<CR>$/;"	m
][	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ][ :<C-U>call <SID>searchsyn('\\<end\\>',['rubyModule','rubyClass'],'','n')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/elixir.vim	/^nnoremap <buffer> <silent> <expr> ]] ':silent keeppatterns \/'.b:block_begin.'<CR>'$/;"	m
]]	plugged/vim-polyglot/ftplugin/elixir.vim	/^onoremap <buffer> <silent> <expr> ]] ':silent keeppatterns \/'.b:block_begin.'<CR>'$/;"	m
]]	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^noremap  <buffer> <silent> ]] :call <SID>LatexBoxNextSection(0,0,0)<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^vnoremap <buffer> <silent> ]] :<c-u>call <SID>LatexBoxNextSection(0,0,1)<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/mustache.vim	/^nnoremap <silent> <buffer> ]] :<C-U>call <SID>sectionmovement('{{','' ,'n',v:count1)<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['rubyModule','rubyClass'],'','n')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/rust.vim	/^nnoremap <silent> <buffer> ]] :call rust#Jump('n', 'Forward')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/rust.vim	/^onoremap <silent> <buffer> ]] :call rust#Jump('o', 'Forward')<CR>$/;"	m
]]	plugged/vim-polyglot/ftplugin/scala.vim	/^noremap <script> <buffer> <silent> ]] :call <SID>NextSection(0)<cr>$/;"	m
]]	plugged/vim-polyglot/ftplugin/vue.vim	/^  nnoremap <silent> <buffer> ]] :call search('^<\\(template\\<Bar>script\\<Bar>style\\)', 'W')<CR>$/;"	m
]]	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]] :<C-U>call <SID>searchsyn('\\<\\%(class\\<Bar>module\\)\\>',['rubyModule','rubyClass'],'','n')<CR>$/;"	m
]d	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  nnoremap <silent> <script> <buffer> ]d          :<C-U>exe <SID>jump('pedit',v:count)<CR>$/;"	m
]m	plugged/vim-polyglot/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'','n')<CR>$/;"	m
]m	plugged/vim-ruby/ftplugin/ruby.vim	/^  nnoremap <silent> <buffer> ]m :<C-U>call <SID>searchsyn('\\<def\\>',['rubyDefine'],'','n')<CR>$/;"	m
_AddFuncBase	plugged/ultisnips/test/test_UltiSnipFunc.py	/^class _AddFuncBase(_VimTest):$/;"	c
_AnonBase	plugged/ultisnips/test/test_AnonymousExpansion.py	/^class _AnonBase(_VimTest):$/;"	c
_Base	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _Base(object):$/;"	c
_BaseGuessing	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^class _BaseGuessing(object):$/;"	c
_CONDITIONAL	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^_CONDITIONAL = re.compile(r"\\(\\?(\\d+):", re.DOTALL)$/;"	v
_CleverReplace	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^class _CleverReplace(object):$/;"	c
_DOLLAR	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^_DOLLAR = re.compile(r"\\$(\\d+)", re.DOTALL)$/;"	v
_ES_Base	plugged/ultisnips/test/test_Selection.py	/^class _ES_Base(_VimTest):$/;"	c
_ExpandTabs	plugged/ultisnips/test/test_Format.py	/^class _ExpandTabs(_VimTest):$/;"	c
_FormatoptionsBase	plugged/ultisnips/test/test_Format.py	/^class _FormatoptionsBase(_VimTest):$/;"	c
_INDENT	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    _INDENT = re.compile(r"^[ \\t]*")$/;"	v	class:SnippetDefinition
_LONG_CASEFOLDINGS	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^_LONG_CASEFOLDINGS = re.compile(r"\\\\([UL].*?)\\\\E", re.DOTALL)$/;"	v
_ListAllSnippets	plugged/ultisnips/test/test_ListSnippets.py	/^class _ListAllSnippets(_VimTest):$/;"	c
_MPBase	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^class _MPBase(object):$/;"	c
_MockModule	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class _MockModule(object):$/;"	c
_MultiLineDefault	plugged/ultisnips/test/test_Chars.py	/^class _MultiLineDefault(_VimTest):$/;"	c
_MultiWord_SnippetOptions_ExpandWordSnippets	plugged/ultisnips/test/test_SnippetOptions.py	/^class _MultiWord_SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_MultipleMatches	plugged/ultisnips/test/test_MultipleMatches.py	/^class _MultipleMatches(_VimTest):$/;"	c
_No_Tab_Expand	plugged/ultisnips/test/test_SnippetOptions.py	/^class _No_Tab_Expand(_VimTest):$/;"	c
_ONE_CHAR_CASE_SWITCH	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^_ONE_CHAR_CASE_SWITCH = re.compile(r"\\\\([ul].)", re.DOTALL)$/;"	v
_OS_Base	plugged/ultisnips/test/test_Selection.py	/^class _OS_Base(_VimTest):$/;"	c
_ParseSnippets_MultiWord	plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord(_VimTest):$/;"	c
_ParseSnippets_MultiWord_RE	plugged/ultisnips/test/test_ParseSnippets.py	/^class _ParseSnippets_MultiWord_RE(_VimTest):$/;"	c
_Placeholder	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^from UltiSnips.vim_state import _Placeholder$/;"	i
_Placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^_Placeholder = namedtuple('_FrozenPlaceholder', ['current_text', 'start', 'end'])$/;"	v
_REPLACE_NON_WS	plugged/ultisnips/pythonx/UltiSnips/text_objects/_visual.py	/^_REPLACE_NON_WS = re.compile(r"[^ \\t]")$/;"	v
_Regex_Self	plugged/ultisnips/test/test_SnippetOptions.py	/^class _Regex_Self(_VimTest):$/;"	c
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  function! s:_SID() abort$/;"	f
_SID	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_SID() abort$/;"	f
_SID	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_SID() abort$/;"	f
_SID	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_SID() abort$/;"	f
_SID	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:_SID() abort$/;"	f
_SID	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_SID() abort$/;"	f
_SID	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_SID() abort$/;"	f
_SelectModeMappings	plugged/ultisnips/test/test_Selection.py	/^class _SelectModeMappings(_VimTest):$/;"	c
_SimpleExpands	plugged/ultisnips/test/test_Expand.py	/^class _SimpleExpands(_VimTest):$/;"	c
_SnippetOptions_ExpandWordSnippets	plugged/ultisnips/test/test_SnippetOptions.py	/^class _SnippetOptions_ExpandWordSnippets(_VimTest):$/;"	c
_SnippetUtilCursor	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^class _SnippetUtilCursor(object):$/;"	c
_TABS	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    _TABS = re.compile(r"^\\t*")$/;"	v	class:SnippetDefinition
_TOKEN_TO_TEXTOBJECT	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TOKEN_TO_TEXTOBJECT	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^_TOKEN_TO_TEXTOBJECT = {$/;"	v
_TabExpand_RealWorld	plugged/ultisnips/test/test_SnippetOptions.py	/^class _TabExpand_RealWorld(object):$/;"	c
_Tabs	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^class _Tabs(object):$/;"	c
_TextIterator	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^class _TextIterator(object):$/;"	c
_UNESCAPE	plugged/ultisnips/utils/get_tm_snippets.py	/^_UNESCAPE = re.compile(ur'&\\w+?;', re.UNICODE)$/;"	v
_UmlautsBase	plugged/ultisnips/test/test_Chars.py	/^class _UmlautsBase(_VimTest):$/;"	c
_VimCursor	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^class _VimCursor(NoneditableTextObject):$/;"	c
_VimTest	plugged/ultisnips/test/test_AnonymousExpansion.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Autocommands.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Autotrigger.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Chars.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Completion.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_ContextSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Editing.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Expand.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Fixes.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Folding.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Format.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Interpolation.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_ListSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Mirror.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Movement.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_MultipleMatches.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_ParseSnippets.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Plugin.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Recursive.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Selection.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_SnipMate.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_SnippetActions.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_SnippetOptions.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_SnippetPriorities.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_TabStop.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Transformation.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_UltiSnipFunc.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VimTest	plugged/ultisnips/test/test_Visual.py	/^from test.vim_test_case import VimTestCase as _VimTest$/;"	i
_VisualContent	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^_VisualContent = namedtuple('_VisualContent', ['mode', 'text'])$/;"	v
__ALLOWED_TOKENS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^__ALLOWED_TOKENS = [$/;"	v
__ALLOWED_TOKENS_IN_TABSTOPS	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^__ALLOWED_TOKENS_IN_TABSTOPS = [$/;"	v
__EXPORTS__	plugged/alchemist.vim/erl_terms.py	/^__EXPORTS__ = [$/;"	v
__WHITESPACE_SPLIT	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^__WHITESPACE_SPLIT = re.compile(r"\\s")$/;"	v
__add__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __add__(self, pos):$/;"	m	class:Position	file:
__add__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __add__(self, value):$/;"	m	class:SnippetUtil	file:
__bool__	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def __bool__(self):$/;"	m	class:DefDict	file:
__call__	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def __call__(self, *args, **kwargs):$/;"	m	class:_MockModule	file:
__create_tmp_dir	plugged/alchemist.vim/elixir_sense.py	/^    def __create_tmp_dir(self):$/;"	m	class:ElixirSenseClient	file:
__del__	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def __del__(self):$/;"	m	class:Source	file:
__delitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __delitem__(self, key):$/;"	m	class:VimBufferProxy	file:
__eq__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __eq__(self, other):$/;"	m	class:Position	file:
__erlang_pad	plugged/alchemist.vim/elixir_sense.py	/^    def __erlang_pad(self, module):$/;"	m	class:ElixirSenseClient	file:
__get_socket	plugged/alchemist.vim/elixir_sense.py	/^    def __get_socket(self):$/;"	m	class:ElixirSenseClient	file:
__get_suggestions__	plugged/alchemist.vim/rplugin/python3/deoplete/sources/alchemist.py	/^    def __get_suggestions__(self, complete_str, server_results):$/;"	m	class:Source	file:
__getattr__	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def __getattr__(cls, name):$/;"	m	class:_MockModule	file:
__getattr__	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def __getattr__(self, name):$/;"	m	class:AutodocReporter	file:
__getattr__	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def __getattr__(self, name):$/;"	m	class:Options	file:
__getitem__	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def __getitem__(self, key):$/;"	m	class:DefDict	file:
__getitem__	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def __getitem__(self, idx):$/;"	m	class:VimBuffer	file:
__getitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getitem__(self, key):$/;"	m	class:VimBufferProxy	file:
__getitem__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __getitem__(self, index):$/;"	m	class:Position	file:
__getitem__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __getitem__(self, index):$/;"	m	class:_SnippetUtilCursor	file:
__getitem__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __getitem__(self, no):$/;"	m	class:_Tabs	file:
__getslice__	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def __getslice__(self, i, j):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer	file:
__getslice__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __getslice__(self, i, j):$/;"	m	class:VimBufferProxy	file:
__init__	plugged/alchemist.vim/elixir_sense.py	/^    def __init__(self, **kw):$/;"	m	class:ElixirSenseClient
__init__	plugged/alchemist.vim/rplugin/python3/deoplete/sources/alchemist.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^    def __init__(self, dict):$/;"	m	class:CacheEntry
__init__	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def __init__(self, desc_len=0, short_types=False, show_docstring=False):$/;"	m	class:Server
__init__	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def __init__(self, desc_len=0, short_types=False, show_docstring=False,$/;"	m	class:Client
__init__	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^    def __init__(self, in_queue, out_queue, desc_len=0, server_timeout=10,$/;"	m	class:Worker
__init__	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:_MockModule
__init__	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def __init__(self, app):$/;"	m	class:Builder
__init__	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def __init__(self, default):$/;"	m	class:DefDict
__init__	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def __init__(self, directive, name, indent=u''):$/;"	m	class:Documenter
__init__	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def __init__(self, srcdir, confdir, outdir, doctreedir, buildername,$/;"	m	class:Sphinx
__init__	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def __init__(self, viewlist, reporter):$/;"	m	class:AutodocReporter
__init__	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def __init__(self, vim):$/;"	m	class:DeopleteHandlers
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def __init__(self, vim):$/;"	m	class:Child
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def __init__(self, vim):$/;"	m	class:Deoplete
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^    def __init__(self, handler):$/;"	m	class:RedirectStream
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^    def __init__(self, vim):$/;"	m	class:Base
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^    def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def __init__(self, vim, name=''):$/;"	m	class:DeopleteLogFilter
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def __init__(self, vim, context):$/;"	m	class:Parent
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def __init__(self, plugin):$/;"	m	class:Process
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def __init__(self, vim):$/;"	m	class:Base
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/far.vim/rplugin/python3/far/__init__.py	/^        def __init__(self, nvim):$/;"	m	class:FarPlugin
__init__	plugged/far.vim/rplugin/python3/far/__init__.py	/^        def __init__(self, nvim):$/;"	m	class:NeoVimLoggerHandler
__init__	plugged/tmux-complete.vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __init__(self, snippets_stack, vstate):$/;"	m	class:VimBufferProxy
__init__	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def __init__(self):$/;"	m	class:IndentUtil
__init__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __init__(self, line, col):$/;"	m	class:Position
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __init__(self, cursor):$/;"	m	class:_SnippetUtilCursor
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __init__(self, priority, trigger, value, description,$/;"	m	class:SnippetDefinition
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def __init__(self, trigger, value, description, location):$/;"	m	class:SnipMateSnippetDefinition
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __init__(self, gen, indent):$/;"	m	class:Token
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __init__(self, text, offset):$/;"	m	class:_TextIterator
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def __init__(self):$/;"	m	class:SnippetSource
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def __init__(self):$/;"	m	class:SnippetDictionary
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def __init__(self):$/;"	m	class:SnippetFileSource
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def __init__(self, filename, line_index, msg):$/;"	m	class:SnippetSyntaxError
__init__	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def __init__(self, expand_trigger, forward_trigger, backward_trigger):$/;"	m	class:SnippetManager
__init__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __init__(self, text):$/;"	m	class:LineIterator
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:EditableTextObject
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def __init__(self, parent, token_or_start, end=None,$/;"	m	class:TextObject
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_mirror.py	/^    def __init__(self, parent, tabstop, token):$/;"	m	class:Mirror
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, initial_indent, vmode, vtext, context, parent):$/;"	m	class:SnippetUtil
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, parent, token):$/;"	m	class:PythonCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __init__(self, to):$/;"	m	class:_Tabs
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^    def __init__(self, parent, token):$/;"	m	class:ShellCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def __init__(self, parent):$/;"	m	class:_VimCursor
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def __init__(self, snippet, parent, initial_text,$/;"	m	class:SnippetInstance
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_tabstop.py	/^    def __init__(self, parent, token, start=None, end=None):$/;"	m	class:TabStop
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, expression):$/;"	m	class:_CleverReplace
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, parent, ts, token):$/;"	m	class:Transformation
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^    def __init__(self, token):$/;"	m	class:TextObjectTransformation
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_viml_code.py	/^    def __init__(self, parent, token):$/;"	m	class:VimLCode
__init__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_visual.py	/^    def __init__(self, parent, token):$/;"	m	class:Visual
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimPosition
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VimState
__init__	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def __init__(self):$/;"	m	class:VisualContentPreserver
__init__	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def __init__(self, vim):$/;"	m	class:Source
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self):$/;"	m	class:VimInterfaceWindows
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, name=''):$/;"	m	class:TempFileManager
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, name):$/;"	m	class:VimInterface
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmux
__init__	plugged/ultisnips/test/vim_interface.py	/^    def __init__(self, vim_executable, session):$/;"	m	class:VimInterfaceTmuxNeovim
__init__	plugged/ultisnips/test/vim_test_case.py	/^    def __init__(self, *args, **kwargs):$/;"	m	class:VimTestCase
__init__	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^	def __init__(self, vim):$/;"	m	class:Filter
__init__	plugged/vim-notes/misc/notes/search-notes.py	/^    def __init__(self):$/;"	m	class:NotesIndex
__init__	plugged/vim-notes/misc/notes/search-notes.py	/^    def __init__(self):$/;"	m	class:Timer
__iter__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __iter__(self):$/;"	m	class:_TextIterator	file:
__iter__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __iter__(self):$/;"	m	class:LineIterator	file:
__le__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __le__(self, other):$/;"	m	class:Position	file:
__le__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def __le__(self, other):$/;"	m	class:TextObject	file:
__len__	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def __len__(self):$/;"	m	class:VimBuffer	file:
__len__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __len__(self):$/;"	m	class:VimBufferProxy	file:
__len__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __len__(self):$/;"	m	class:_SnippetUtilCursor	file:
__len__	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def __len__(self):$/;"	m	class:SnippetDictionary	file:
__lshift__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __lshift__(self, other):$/;"	m	class:SnippetUtil	file:
__lt__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __lt__(self, other):$/;"	m	class:Position	file:
__lt__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def __lt__(self, other):$/;"	m	class:TextObject	file:
__ne__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __ne__(self, other):$/;"	m	class:Position	file:
__next__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __next__(self):$/;"	m	class:_TextIterator	file:
__next__	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def __next__(self):$/;"	m	class:LineIterator	file:
__nonzero__	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    __nonzero__ = __bool__  # for python2 compatibility$/;"	v	class:DefDict
__repr__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __repr__(self):$/;"	m	class:Position	file:
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __repr__(self):$/;"	m	class:SnippetDefinition	file:
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:EndOfTextToken	file:
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:EscapeCharToken	file:
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:MirrorToken	file:
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:PythonCodeToken	file:
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:ShellCodeToken	file:
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:TabStopToken	file:
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:TransformationToken	file:
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:VimLCodeToken	file:
__repr__	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def __repr__(self):$/;"	m	class:VisualToken	file:
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def __repr__(self):$/;"	m	class:TextObject	file:
__repr__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_tabstop.py	/^    def __repr__(self):$/;"	m	class:TabStop	file:
__rshift__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __rshift__(self, other):$/;"	m	class:SnippetUtil	file:
__setitem__	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def __setitem__(self, idx, text):$/;"	m	class:VimBuffer	file:
__setitem__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setitem__(self, key, value):$/;"	m	class:VimBufferProxy	file:
__setitem__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __setitem__(self, index, value):$/;"	m	class:_SnippetUtilCursor	file:
__setitem__	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def __setitem__(self, no, value):$/;"	m	class:_Tabs	file:
__setslice__	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def __setslice__(self, i, j, text):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer	file:
__setslice__	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def __setslice__(self, i, j, text):$/;"	m	class:VimBufferProxy	file:
__str__	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^    def __str__(self):$/;"	m	class:tfloat	file:
__str__	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def __str__(self):$/;"	m	class:_SnippetUtilCursor	file:
__str__	plugged/vim-notes/misc/notes/search-notes.py	/^    def __str__(self):$/;"	m	class:Timer	file:
__sub__	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def __sub__(self, pos):$/;"	m	class:Position	file:
__suggestion_line	plugged/alchemist.vim/elixir_sense.py	/^    def __suggestion_line(self, kind, word, abbr, menu, info):$/;"	m	class:ElixirSenseClient	file:
_action_context	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _action_context(self):$/;"	m	class:SnippetManager
_add_child	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _add_child(self, child):$/;"	m	class:EditableTextObject
_add_filter	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _add_filter(self, path):$/;"	m	class:Child
_add_parent	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _add_parent(self, context):$/;"	m	class:Deoplete
_add_source	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _add_source(self, path):$/;"	m	class:Child
_after	plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalCest.php	/^    public function _after(FunctionalTester $I)$/;"	f
_after	plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalTest.php	/^    protected function _after()$/;"	f
_annotations	plugged/vim-polyglot/ftplugin/ocaml.vim	/^no_annotations = AnnExc("No annotations (.annot) file found")$/;"	m
_apply_change	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _apply_change(self, change):$/;"	m	class:VimBufferProxy
_as_echon	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_as_echon(str)$/;"	f
_as_statusline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_as_statusline(list, count)$/;"	f
_ask_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_snippets(snippets):$/;"	f
_ask_user	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^def _ask_user(a, formatted):$/;"	f
_assert	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_assert(...) abort$/;"	f
_auto_cmap	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_auto_cmap()$/;"	f
_balanced	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^def _balanced():$/;"	f
_base_set._add	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._add(x) abort$/;"	f
_base_set._clear	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._clear() abort$/;"	f
_base_set._hash	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._hash(x) abort$/;"	f
_base_set._new	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._new(...) abort$/;"	f
_base_set._set_data	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._set_data(xs) abort$/;"	f
_base_set._to_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._to_set(x) abort$/;"	f
_base_set._update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set._update(xs) abort$/;"	f
_base_set.difference	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.difference(t) abort$/;"	f
_base_set.gt	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.gt(t) abort$/;"	f
_base_set.in	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.in(x) abort$/;"	f
_base_set.intersection	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.intersection(t) abort$/;"	f
_base_set.issubset	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.issubset(t) abort$/;"	f
_base_set.issuperset	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.issuperset(t) abort$/;"	f
_base_set.len	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.len() abort$/;"	f
_base_set.lt	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.lt(t) abort$/;"	f
_base_set.symmetric_difference	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.symmetric_difference(t) abort$/;"	f
_base_set.to_list	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.to_list() abort$/;"	f
_base_set.union	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_base_set.union(t) abort$/;"	f
_before	plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalCest.php	/^    public function _before(FunctionalTester $I)$/;"	f
_before	plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalTest.php	/^    protected function _before()$/;"	f
_before_test	plugged/ultisnips/test/test_Fixes.py	/^    def _before_test(self):$/;"	m	class:NonUnicodeDataInUnnamedRegister
_before_test	plugged/ultisnips/test/test_Plugin.py	/^    def _before_test(self):$/;"	m	class:Plugin_SuperTab_SimpleTest
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	f
_before_test	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _before_test(self):$/;"	m	class:_AddFuncBase
_before_test	plugged/ultisnips/test/vim_test_case.py	/^    def _before_test(self):$/;"	m	class:VimTestCase
_buffer_complete	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_buffer_complete()$/;"	f
_cache	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^_cache = {}$/;"	v
_cache_lock	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^_cache_lock = threading.RLock()$/;"	v
_cache_path	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^_cache_path = None$/;"	v
_cache_version	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^_cache_version = 16$/;"	v
_calc_end	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^def _calc_end(text, start):$/;"	f
_call_string_expr	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_call_string_expr(expr, args) abort$/;"	f
_capture	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_capture(mode)$/;"	f
_check_if_still_inside_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _check_if_still_inside_snippet(self):$/;"	m	class:SnippetManager
_check_recache	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _check_recache(self, context):$/;"	m	class:Deoplete
_check_version	plugged/ultisnips/test/vim_interface.py	/^    def _check_version(self):$/;"	m	class:VimInterfaceTmux
_child_has_moved	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _child_has_moved(self, idx, pivot, diff):$/;"	m	class:EditableTextObject
_chomp	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^def _chomp(string):$/;"	f
_clamp	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_clamp(x, max, min)$/;"	f
_compare	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_connect	plugged/alchemist.vim/elixir_sense.py	/^    def _connect(self, host_port):$/;"	m	class:ElixirSenseClient
_context_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def _context_match(self, visual_content):$/;"	m	class:SnippetDefinition
_convert_sid	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_convert_sid(rhs, sid) abort$/;"	f
_create_file	plugged/ultisnips/test/vim_test_case.py	/^    def _create_file(self, file_path, content):$/;"	m	class:VimTestCase
_create_server_log	plugged/alchemist.vim/elixir_sense.py	/^    def _create_server_log(self):$/;"	m	class:ElixirSenseClient
_create_transformations	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def _create_transformations(all_tokens, seen_ts):$/;"	f
_create_win2pos2hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_create_win2pos2hint(dict, hint_dict, ...) abort$/;"	f
_ctx	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_full_fuzzy.py	/^from test_matcher_fuzzy import _ctx$/;"	i
_ctx	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_fuzzy.py	/^def _ctx(complete_str, ignorecase=True, camelcase=True):$/;"	f
_current_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet(self):$/;"	m	class:SnippetManager
_current_snippet_is_done	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _current_snippet_is_done(self):$/;"	m	class:SnippetManager
_cursor_moved	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _cursor_moved(self):$/;"	m	class:SnippetManager
_data_type	plugged/alchemist.vim/erl_terms.py	/^def _data_type(dtype):$/;"	f
_decode_atom	plugged/alchemist.vim/erl_terms.py	/^def _decode_atom(binary):$/;"	f
_decode_func	plugged/alchemist.vim/erl_terms.py	/^def _decode_func(binary):$/;"	f
_decode_int	plugged/alchemist.vim/erl_terms.py	/^def _decode_int(binary):$/;"	f
_decode_list	plugged/alchemist.vim/erl_terms.py	/^def _decode_list(binary):$/;"	f
_decode_map	plugged/alchemist.vim/erl_terms.py	/^def _decode_map(binary):$/;"	f
_decode_string	plugged/alchemist.vim/erl_terms.py	/^def _decode_string(binary):$/;"	f
_default_compare	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_default_compare	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_define_ansi_highlights	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_define_ansi_highlights() abort$/;"	f
_del_child	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _del_child(self, child):$/;"	m	class:EditableTextObject
_directive_helper	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def _directive_helper(self, obj, content=None, arguments=None, **options):$/;"	m	class:Sphinx
_disable_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _disable_edits(self):$/;"	m	class:VimBufferProxy
_display_chunk	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def _display_chunk(chunk):$/;"	m	class:Sphinx
_do_edit	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _do_edit(self, cmd, ctab=None):$/;"	m	class:EditableTextObject
_do_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_base.py	/^    def _do_parse(parent, text, allowed_tokens):$/;"	f	function:tokenize_snippet_text
_do_print	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^    def _do_print(text_object, indent=''):$/;"	f	function:echo_to_hierarchy
_do_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _do_snippet(self, snippet, before):$/;"	m	class:SnippetManager
_dot_to_sharp	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
_dot_to_sharp	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_dot_to_sharp(name) abort$/;"	f
_easytags_makecmd	plugged/vim-easytags/misc/easytags/highlight.py	/^def _easytags_makecmd(syntaxgroup, prefix, suffix, patterns, ignoresyntax):$/;"	f
_echon	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_echon(expr)$/;"	f
_editable_children	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _editable_children(self):$/;"	m	class:EditableTextObject
_enable_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _enable_edits(self):$/;"	m	class:VimBufferProxy
_enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _enable_logging(self):$/;"	m	class:Child
_encode_atom	plugged/alchemist.vim/erl_terms.py	/^def _encode_atom(obj):$/;"	f
_encode_boolean	plugged/alchemist.vim/erl_terms.py	/^def _encode_boolean(obj):$/;"	f
_encode_dict	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_encode_dict(val, settings) abort$/;"	f
_encode_int	plugged/alchemist.vim/erl_terms.py	/^def _encode_int(obj):$/;"	f
_encode_list	plugged/alchemist.vim/erl_terms.py	/^def _encode_list(obj):$/;"	f
_encode_list	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_encode_list(val, settings) abort$/;"	f
_encode_map	plugged/alchemist.vim/erl_terms.py	/^def _encode_map(obj):$/;"	f
_encode_none	plugged/alchemist.vim/erl_terms.py	/^def _encode_none(obj):$/;"	f
_encode_string	plugged/alchemist.vim/erl_terms.py	/^def _encode_string(obj):$/;"	f
_encoder_func	plugged/alchemist.vim/erl_terms.py	/^def _encoder_func(obj):$/;"	f
_eval_code	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def _eval_code(self, code, additional_locals={}):$/;"	m	class:SnippetDefinition
_execute	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_execute(cmd)$/;"	f
_execute	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_execute(cmd) abort$/;"	f
_execute_action	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def _execute_action($/;"	m	class:SnippetDefinition
_exists_autoload_func_with_source	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_exists_autoload_func_with_source(funcname) abort$/;"	f
_extra_vim_config	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_AnonBase
_extra_vim_config	plugged/ultisnips/test/test_Autocommands.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Autocommands
_extra_vim_config	plugged/ultisnips/test/test_Expand.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
_extra_vim_config	plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ShiftWidthZero
_extra_vim_config	plugged/ultisnips/test/test_Fixes.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VirtualEdit
_extra_vim_config	plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:FoldingEnabled_SnippetWithFold_ExpectNoFolding
_extra_vim_config	plugged/ultisnips/test/test_Folding.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PerlSyntaxFold
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:ProperIndenting_AutoIndentAndNewline_ECR
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ExpandTabs
_extra_vim_config	plugged/ultisnips/test/test_Format.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_FormatoptionsBase
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSw
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentEtSwOffset
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_IndentNoetSwTs
_extra_vim_config	plugged/ultisnips/test/test_Interpolation.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:PythonCode_OptExists
_extra_vim_config	plugged/ultisnips/test/test_Movement.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:CursorMovement_BS_InEditMode
_extra_vim_config	plugged/ultisnips/test/test_Plugin.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Plugin_SuperTab_SimpleTest
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_ES_Base
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_OS_Base
_extra_vim_config	plugged/ultisnips/test/test_Selection.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:_SelectModeMappings
_extra_vim_config	plugged/ultisnips/test/test_SnipMate.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:snipMate_Disabled
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_Leading_Spaces
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_ET_SW_TS
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_No_TS
_extra_vim_config	plugged/ultisnips/test/test_SnippetOptions.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:No_Tab_Expand_RealWorld
_extra_vim_config	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	f
_extra_vim_config	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:AddNewSnippetSource
_extra_vim_config	plugged/ultisnips/test/test_Visual.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:Visual_SelectOneWordExclusive
_extra_vim_config	plugged/ultisnips/test/vim_test_case.py	/^    def _extra_vim_config(self, vim_config):$/;"	m	class:VimTestCase
_extract_connection_settings	plugged/alchemist.vim/elixir_sense.py	/^    def _extract_connection_settings(self, server_log):$/;"	m	class:ElixirSenseClient
_extract_files	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
_extract_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_extract_files(pattern, files) abort$/;"	f
_false	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_false() abort$/;"	f
_far_nvim_rpc_invoke	plugged/far.vim/rplugin/python3/far/__init__.py	/^        def _far_nvim_rpc_invoke(self, args):$/;"	m	class:FarPlugin
_file2module	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_file2module(file) abort$/;"	f
_file2module	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_file2module(file) abort$/;"	f
_file_cache	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^_file_cache = set(['import~'])$/;"	v
_file_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _file_to_edit(self, requested_ft, bang):$/;"	m	class:SnippetManager
_find_all_snippet_directories	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _find_all_snippet_directories():$/;"	f
_find_closing_brace	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^def _find_closing_brace(string, start_pos):$/;"	f
_find_elixir_erlang_src	plugged/alchemist.vim/elixir_sense.py	/^    def _find_elixir_erlang_src(self, filename):$/;"	m	class:ElixirSenseClient
_find_function_line	plugged/alchemist.vim/elixir_sense.py	/^    def _find_function_line(self, filename, function):$/;"	m	class:ElixirSenseClient
_find_module_line	plugged/alchemist.vim/elixir_sense.py	/^    def _find_module_line(self, filename, module):$/;"	m	class:ElixirSenseClient
_find_pattern_in_file	plugged/alchemist.vim/elixir_sense.py	/^    def _find_pattern_in_file(self, filename, patterns):$/;"	m	class:ElixirSenseClient
_find_recursive	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^        def _find_recursive(obj):$/;"	f	function:SnippetInstance.update_textobjects
_find_signature	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def _find_signature(self, encoding=None):$/;"	m	class:DocstringSignatureMixin
_finish	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_finish()$/;"	f
_fixture	plugged/vim-test/spec/fixtures/dotnet-xunit/TestsWithFixture.cs	/^        private readonly MyFixture _fixture;$/;"	f	class:Namespace.TestsWithFixture	file:
_foldl	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:_foldl(f, init, xs) abort$/;"	f
_function	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  function! s:_function(fstr) abort$/;"	f
_function	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  function! s:_function(fstr) abort$/;"	f
_function	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_function(fstr) abort$/;"	f
_fzf_statusline	plugged/fzf.vim/plugin/fzf.vim	/^  augroup _fzf_statusline$/;"	a
_gather_async_results	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _gather_async_results(self, result, source):$/;"	m	class:Child
_gather_results	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _gather_results(self, context):$/;"	m	class:Child
_get	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _get(self, queue_id):$/;"	m	class:Parent
_getPrefix	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:_getPrefix() abort dict$/;"	f
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnippetFileSource
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:SnipMateFileSource
_get_all_snippet_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _get_all_snippet_files_for(self, ft):$/;"	m	class:UltiSnipsFileSource
_get_builtin_module	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
_get_builtin_module	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_get_builtin_module(name) abort$/;"	f
_get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def _get_complete_position(self, context, current_ft, filetype):$/;"	m	class:Source
_get_cpsm_result	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def _get_cpsm_result(self, candidates, pattern):$/;"	m	class:Filter
_get_dictionaries	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def _get_dictionaries(self, context):$/;"	m	class:Source
_get_diff	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_diff(self, start, end, new_value):$/;"	m	class:VimBufferProxy
_get_existing_deep_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def _get_existing_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
_get_file_to_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _get_file_to_edit(self, snippet_dir, requested_ft, bang,$/;"	m	class:SnippetManager
_get_key	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_get_key(conf)$/;"	f
_get_line_diff	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def _get_line_diff(self, line_number, before, after):$/;"	m	class:VimBufferProxy
_get_module	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_get_module(name) abort dict$/;"	f
_get_module	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_get_module(name) abort dict$/;"	f
_get_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _get_next_tab(self, number):$/;"	m	class:EditableTextObject
_get_path_unique_name	plugged/alchemist.vim/elixir_sense.py	/^    def _get_path_unique_name(self, path):$/;"	m	class:ElixirSenseClient
_get_pos	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def _get_pos(name):$/;"	f
_get_prev_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _get_prev_tab(self, number):$/;"	m	class:EditableTextObject
_get_running_server_log	plugged/alchemist.vim/elixir_sense.py	/^    def _get_running_server_log(self):$/;"	m	class:ElixirSenseClient
_get_tabstop	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _get_tabstop(self, requester, number):$/;"	m	class:EditableTextObject
_get_tabstop	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def _get_tabstop(self, requester, no):$/;"	m	class:SnippetInstance
_get_tagfiles	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def _get_tagfiles(self, context):$/;"	m	class:Source
_get_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/_mirror.py	/^    def _get_text(self):$/;"	m	class:Mirror
_get_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^    def _get_text(self):$/;"	m	class:Transformation
_get_tmp	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^def _get_tmp():$/;"	f
_get_tmp_dir	plugged/alchemist.vim/elixir_sense.py	/^    def _get_tmp_dir(self):$/;"	m	class:ElixirSenseClient
_get_venv_sitepackages	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^        from jedi.evaluate.sys_path import _get_venv_sitepackages$/;"	i
_global_vital_files	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_global_vital_files() abort$/;"	f
_global_vital_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_global_vital_files() abort$/;"	f
_handle_failure	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _handle_failure(self, trigger):$/;"	m	class:SnippetManager
_handle_snippet_or_global	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _handle_snippet_or_global($/;"	f
_hash_func	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_hash_func(x) abort$/;"	f
_import	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_import(name) abort dict$/;"	f
_import	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_import(name) abort dict$/;"	f
_import_func_name	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
_import_func_name	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_import_func_name(plugin_name, module_name) abort$/;"	f
_init_builder	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def _init_builder(self, buildername):$/;"	m	class:Sphinx
_init_env	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def _init_env(self, freshenv):$/;"	m	class:Sphinx
_init_hl	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_init_hl() abort$/;"	f
_init_i18n	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def _init_i18n(self):$/;"	m	class:Sphinx
_init_parents	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _init_parents(self, context):$/;"	m	class:Deoplete
_is_available	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:_is_available() abort$/;"	f
_is_pos_zero	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def _is_pos_zero(pos):$/;"	f
_is_readable	plugged/alchemist.vim/elixir_sense.py	/^    def _is_readable(self, filename):$/;"	m	class:ElixirSenseClient
_is_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_is_set(x) abort$/;"	f
_is_skip	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _is_skip(self, context, source):$/;"	m	class:Child
_is_valid_highlight	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_is_valid_highlight(name)$/;"	f
_itersource	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _itersource(self, context):$/;"	m	class:Child
_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _jump(self, backwards=False):$/;"	m	class:SnippetManager
_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_keymapping(str)$/;"	f
_keys_count	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_keys_count(targets_len, keys_len) abort$/;"	f
_leaving_buffer	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_buffer(self):$/;"	m	class:SnippetManager
_leaving_insert_mode	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _leaving_insert_mode(self):$/;"	m	class:SnippetManager
_link_file	plugged/ultisnips/test/vim_test_case.py	/^    def _link_file(self, source, relative_destination):$/;"	m	class:VimTestCase
_load_filters	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _load_filters(self, context):$/;"	m	class:Deoplete
_load_snippets_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _load_snippets_for(self, ft):$/;"	m	class:SnippetFileSource
_load_sources	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _load_sources(self, context):$/;"	m	class:Deoplete
_log	plugged/alchemist.vim/elixir_sense.py	/^    def _log(self, text):$/;"	m	class:ElixirSenseClient
_log	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def _log(self, message, wfile, nonl=False):$/;"	m	class:Sphinx
_logger	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    _logger = None  # type: logging.Logger$/;"	v	class:LoggingMixin
_longest_path_that_exists	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def _longest_path_that_exists(self, context, input_str):$/;"	m	class:Source
_loop	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def _loop(self):$/;"	m	class:Server
_make_cache	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def _make_cache(self, context):$/;"	m	class:Source
_make_cache	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def _make_cache(self, context):$/;"	m	class:Source
_make_candidate	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def _make_candidate(self, line):$/;"	m	class:Source
_make_debug_exception	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def _make_debug_exception(self, e, code=''):$/;"	m	class:SnippetDefinition
_make_pythonpath	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def _make_pythonpath():$/;"	m	class:Client
_map	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:_map(map_commands, forced_p, lhs, rhs)$/;"	f
_maparg	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_maparg(name, mode, abbr, dict)$/;"	f
_max_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:_max_by(dict, expr) abort$/;"	f
_merge_results	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _merge_results(self, context, queue_id):$/;"	m	class:Child
_merge_results	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _merge_results(self, context):$/;"	m	class:Deoplete
_module_path	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_module_path(name) abort$/;"	f
_module_path	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_path(name) abort$/;"	f
_module_sid	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_module_sid(name) abort$/;"	f
_module_sid	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_sid(name) abort$/;"	f
_module_sid_base_dir	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
_module_sid_base_dir	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_module_sid_base_dir() abort$/;"	f
_move	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _move(self, pivot, diff):$/;"	m	class:EditableTextObject
_move	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _move(self, pivot, diff):$/;"	m	class:TextObject
_move	plugged/vim-textobj-user/t/move.vim	/^function! s:_move(type)$/;"	f
_multi_char_case_change	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^        def _multi_char_case_change(match):$/;"	f	function:_CleverReplace.replace
_needs_update	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _needs_update(self, ft):$/;"	m	class:SnippetFileSource
_new_environment	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_environment(name) abort$/;"	f
_new_instance	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_instance(instance, ...) abort$/;"	f
_new_option	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_option(name) abort$/;"	f
_new_register	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_register(name) abort$/;"	f
_new_variable	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_new_variable(name, ...) abort$/;"	f
_null	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_null() abort$/;"	f
_on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _on_event(self, context):$/;"	m	class:Child
_one_char_case_change	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^        def _one_char_case_change(match):$/;"	f	function:_CleverReplace.replace
_pad_with_char	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:EscapeCharToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:MirrorToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:PythonCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:ShellCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TabStopToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:Token
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:TransformationToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VimLCodeToken
_parse	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def _parse(self, stream, indent):$/;"	m	class:VisualToken
_parse_comments	plugged/vim-snippets/pythonx/vimsnippets.py	/^def _parse_comments(s):$/;"	f
_parse_line	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_parse_line(line)$/;"	f
_parse_number	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def _parse_number(stream):$/;"	f
_parse_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet(line, lines, filename):$/;"	f
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnippetFileSource
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:SnipMateFileSource
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippet_file(content, full_filename):$/;"	f
_parse_snippet_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    def _parse_snippet_file(self, filedata, filename):$/;"	m	class:UltiSnipsFileSource
_parse_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def _parse_snippets(self, ft, filename):$/;"	m	class:SnippetFileSource
_parse_snippets_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_snippets_file	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def _parse_snippets_file(data, filename):$/;"	f
_parse_till_closing_brace	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def _parse_till_closing_brace(stream):$/;"	f
_parse_till_unescaped_char	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def _parse_till_unescaped_char(stream, chars):$/;"	f
_path2project_directory_git	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_others	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_svn	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_paths	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^_paths = []$/;"	v
_place_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^        def _place_initial_text(obj):$/;"	f	function:SnippetInstance.replace_initial_text
_process_filter	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _process_filter(self, f, context, max_candidates):$/;"	m	class:Child
_profile_end	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _profile_end(self, name):$/;"	m	class:Child
_profile_start	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _profile_start(self, context, name):$/;"	m	class:Child
_put	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _put(self, name, args):$/;"	m	class:Parent
_re_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def _re_match(self, trigger):$/;"	m	class:SnippetDefinition
_redir	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_redir(cmd) abort$/;"	f
_redraw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_redraw(cmdline)$/;"	f
_refresh_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _refresh_snippets(self):$/;"	m	class:SnippetManager
_reinit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _reinit(self):$/;"	m	class:SnippetManager
_replace	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_replace_conditional	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^def _replace_conditional(match, string):$/;"	f
_replace_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^def _replace_text(buf, start, end, text):$/;"	f
_reset	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def _reset(self, cur):$/;"	m	class:SnippetUtil
_reset	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:_reset()$/;"	f
_reset	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_reset()$/;"	f
_resolve	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_resolve(val, prefix) abort$/;"	f
_run_alchemist_server	plugged/alchemist.vim/elixir_sense.py	/^    def _run_alchemist_server(self, server_log):$/;"	m	class:ElixirSenseClient
_run_shell_command	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^def _run_shell_command(cmd, tmpdir):$/;"	f
_runtime	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_runtime(path) abort$/;"	f
_rv_changed	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def _rv_changed(self):$/;"	m	class:SnippetUtil
_safe_eval	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_safe_eval(expr, ...)$/;"	f
_save_last_visual_selection	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _save_last_visual_selection(self):$/;"	m	class:SnippetManager
_search_tern_project_dir	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def _search_tern_project_dir(self):$/;"	m	class:Source
_self_vital_files	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_self_vital_files() abort$/;"	f
_self_vital_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_self_vital_files() abort$/;"	f
_send	plugged/ultisnips/test/vim_interface.py	/^    def _send(self, s):$/;"	m	class:VimInterfaceTmux
_send_command	plugged/alchemist.vim/elixir_sense.py	/^    def _send_command(self, sock, cmd):$/;"	m	class:ElixirSenseClient
_set_pos	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def _set_pos(name, pos):$/;"	f
_set_source_attributes	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _set_source_attributes(self, context):$/;"	m	class:Child
_set_source_attributes	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def _set_source_attributes(self, context):$/;"	m	class:Deoplete
_setup_inner_state	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _setup_inner_state(self):$/;"	m	class:SnippetManager
_sfuncname	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
_sfuncname	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_sfuncname(sid, funcname) abort$/;"	f
_should_match_cmdline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:_should_match_cmdline(cmdline)$/;"	f
_sid	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
_sid	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_sid(path, filter_pattern) abort$/;"	f
_snip_quote	plugged/ultisnips/test/test_Chars.py	/^def _snip_quote(qt):$/;"	f
_snipmate_files_for	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _snipmate_files_for(ft):$/;"	f
_snips	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _snips(self, before, partial, autotrigger_only=False):$/;"	m	class:SnippetManager
_sock_readlines	plugged/alchemist.vim/elixir_sense.py	/^    def _sock_readlines(self, sock, recv_buffer=4096, timeout=10):$/;"	m	class:ElixirSenseClient
_source	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:_source(path) abort$/;"	f
_source	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:_source(path) abort$/;"	f
_split_by_wcswidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth_once	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_split_conditional	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^def _split_conditional(string):$/;"	f
_split_keystring	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_split_keystring(str, ...)$/;"	f
_splitall	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^def _splitall(path):$/;"	f
_start_process	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def _start_process(self, context):$/;"	m	class:Parent
_substitute_path	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def _substitute_path(self, context, path):$/;"	m	class:Source
_teardown_inner_state	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _teardown_inner_state(self):$/;"	m	class:SnippetManager
_throw	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:_throw(message) abort$/;"	f
_throw	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_throw(msg) abort$/;"	f
_track_change	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _track_change(self):$/;"	m	class:SnippetManager
_transform	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^    def _transform(self, text):$/;"	m	class:TextObjectTransformation
_true	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_true() abort$/;"	f
_try_expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def _try_expand(self, autotrigger_only=False):$/;"	m	class:SnippetManager
_types	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^_types = {$/;"	v
_undefined	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_undefined() abort$/;"	f
_unify_path	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  function! s:_unify_path(path) abort$/;"	f
_unify_path	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_unify_path(path) abort$/;"	f
_uniq	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_uniq(list)$/;"	f
_uniq	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  function! s:_uniq(list) abort$/;"	f
_uniq	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  function! s:_uniq(list) abort$/;"	f
_unmap_select_mode_mapping	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def _unmap_select_mode_mapping():$/;"	f
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _update(self, done, buf):$/;"	m	class:EditableTextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _update(self, done, buf):$/;"	m	class:NoneditableTextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def _update(self, done, buf):$/;"	m	class:TextObject
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_mirror.py	/^    def _update(self, done, buf):$/;"	m	class:Mirror
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def _update(self, done, buf):$/;"	m	class:PythonCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^    def _update(self, done, buf):$/;"	m	class:ShellCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_viml_code.py	/^    def _update(self, done, buf):$/;"	m	class:VimLCode
_update	plugged/ultisnips/pythonx/UltiSnips/text_objects/_visual.py	/^    def _update(self, done, buf):$/;"	m	class:Visual
_update_result	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _update_result(self, result, context_input, next_input):$/;"	m	class:Child
_use_previous_result	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _use_previous_result(self, context, result, is_volatile):$/;"	m	class:Child
_validate_event	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def _validate_event(self, event):$/;"	m	class:Sphinx
_verbosefile_pop	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_verbosefile_pop()$/;"	f
_verbosefile_push	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_verbosefile_push(file)$/;"	f
_vim	plugged/ultisnips/pythonx/UltiSnips/_diff.py	/^from UltiSnips import _vim$/;"	i
_vim	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^from UltiSnips import _vim$/;"	i
_vim	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^import UltiSnips._vim$/;"	i
_vim	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^from UltiSnips import _vim$/;"	i
_vim	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^from UltiSnips import _vim$/;"	i
_vim	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^from UltiSnips import _vim$/;"	i
_vim	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^from UltiSnips import _vim$/;"	i
_vim	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips import _vim$/;"	i
_vim	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^from UltiSnips import _vim$/;"	i
_vim	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips import _vim$/;"	i
_vim	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^from UltiSnips import _vim$/;"	i
_vim	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^from UltiSnips import _vim$/;"	i
_vim	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^from UltiSnips import _vim$/;"	i
_vim	plugged/ultisnips/pythonx/UltiSnips/text_objects/_viml_code.py	/^from UltiSnips import _vim$/;"	i
_vim	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^from UltiSnips import _vim$/;"	i
_vim_dec	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def _vim_dec(string):$/;"	f
_vim_enc	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def _vim_enc(bytearray):$/;"	f
_vim_enc	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def _vim_enc(string):$/;"	f
_virtual_tab2spacelen	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^function! s:_virtual_tab2spacelen(col_num) abort$/;"	f
_virtual_tab2spacelen	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_virtual_tab2spacelen(col_num) abort$/;"	f
_vital_created	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_vital_created(module) abort$/;"	f
_vital_created	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_created(module) abort$/;"	f
_vital_created	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_created(module) abort$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_warn_deprecated	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:_warn_deprecated(name, alternative) abort$/;"	f
_wcwidth	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_words_for_line	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^def _words_for_line(trigger, before, num_words=None):$/;"	f
_write	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def _write(self, stdout, expr):$/;"	m	class:Child
_write_parallel	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def _write_parallel(self, docnames, warnings, nproc):$/;"	m	class:Builder
_write_serial	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def _write_serial(self, docnames, warnings):$/;"	m	class:Builder
``	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! ``$/;"	m
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'First Line\\nSecond Line'$/;"	v	class:TestWithNewline
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'Vorne hallo Hinten'$/;"	v	class:TestCheapDelete
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'Vorne hallo Hinten'$/;"	v	class:TestRealLife1
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'hallo End Beginning'$/;"	v	class:TestRealLife
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'hi first line\\nsecond line first line\\nsecond line world'$/;"	v	class:MultiLine
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'stdin.h'$/;"	v	class:MatchIsTooCheap
a	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    a = 'this is it this is it this is it'$/;"	v	class:TestUltiSnipsProblem
a	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        nmap a <Nop>$/;"	m
a$	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^onoremap <buffer> a$ :normal va$<CR>$/;"	m
a$	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^vmap <buffer> a$ <Plug>LatexBox_SelectInlineMathOuter$/;"	m
aM	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
aM	plugged/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> aM :<C-U>call <SID>wrap_a('[[','][')<CR>$/;"	m
aTestMarkedWithTestAnnotation	plugged/vim-test/spec/fixtures/dusk/BrowserTest.php	/^    public function aTestMarkedWithTestAnnotation()$/;"	f
aTestMarkedWithTestAnnotation	plugged/vim-test/spec/fixtures/phpunit/NormalTest.php	/^    public function aTestMarkedWithTestAnnotation()$/;"	f
aTestMarkedWithTestAnnotationAndCrazyDocblock	plugged/vim-test/spec/fixtures/dusk/BrowserTest.php	/^    public function aTestMarkedWithTestAnnotationAndCrazyDocblock()$/;"	f
aTestMarkedWithTestAnnotationAndCrazyDocblock	plugged/vim-test/spec/fixtures/phpunit/NormalTest.php	/^    public function aTestMarkedWithTestAnnotationAndCrazyDocblock()$/;"	f
aa\<Esc>	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        normal aa\\<Esc>$/;"	m
abbrev	plugged/vim-endwise/plugin/endwise.vim	/^function! s:abbrev()$/;"	f
abbreviation	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class abbreviation(nodes.Inline, nodes.TextElement):$/;"	c
abolish_l	plugged/vim-rails/plugin/rails.vim	/^function! s:abolish_l(word)$/;"	f
abolish_setup	plugged/vim-rails/plugin/rails.vim	/^function! s:abolish_setup()$/;"	f
abolish_t	plugged/vim-rails/plugin/rails.vim	/^function! s:abolish_t(word)$/;"	f
abort	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:abort()$/;"	f
abs_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:abs_path(bufnr, shellesc)$/;"	f
absolute_import	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role = {}$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['composite'] = abstract_role['widget'] + ['aria-activedescendant']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['input'] = abstract_role['widget']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['landmark'] = role_attributes['region']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['range'] = abstract_role['input'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['roletype'] = ['aria-atomic', 'aria-busy', 'aria-controls', 'aria-describedby', 'aria-disabled', 'aria-dropeffect', 'aria-flowto', 'aria-grabbed', 'aria-haspopup', 'aria-hidden', 'aria-invalid', 'aria-label', 'aria-labelledby', 'aria-live', 'aria-owns', 'aria-relevant']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['section'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['sectionhead'] = abstract_role['structure'] + ['aria-expanded']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['select'] = abstract_role['composite'] + role_attributes['group'] + abstract_role['input']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['structure'] = abstract_role['roletype']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['widget'] = abstract_role['roletype']$/;"	v
abstract_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let abstract_role['window'] = abstract_role['roletype'] + ['aria-expanded']$/;"	v
abstractmethod	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^from abc import abstractmethod$/;"	i
abstractmethod	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^from abc import abstractmethod$/;"	i
abutton_dec	plugged/vim-polyglot/autoload/xml/html5.vim	/^let abutton_dec = 'details\\\\|embed\\\\|iframe\\\\|keygen\\\\|label\\\\|menu\\\\|select\\\\|textarea'$/;"	v
ack_param_proc	plugged/far.vim/autoload/far.vim	/^function! s:ack_param_proc(far_params, win_params, cmdargs) "{{{$/;"	f
acks	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class acks(nodes.Element):$/;"	c
action_for	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:action_for(key, ...)$/;"	f
activateAll	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll()$/;"	f
activateBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(directoryNode)$/;"	f
activateFileNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node)$/;"	f
active	plugged/vim-rails/autoload/rails.vim	/^function! s:active() abort$/;"	f
activities	plugged/deoplete-jedi/tests/test.py	/^activities = {8: 'Sleeping',$/;"	v
actual	plugged/vim-test/spec/dotnet_spec.vim	/^    let actual = s:remove_path(g:test#last_command)$/;"	v
actual	plugged/vim-test/spec/dotnet_xunit_spec.vim	/^    let actual = s:remove_path(g:test#last_command)$/;"	v
addChild	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:addChild(tag) abort dict$/;"	f
addListener	plugged/deoplete-ternjs/tests/test.js	/^    addListener: function(el, type, fn) {$/;"	m	class:MYAPP.event
addTag	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:addTag(tag) abort dict$/;"	f
add_autodoc_attrgetter	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_autodoc_attrgetter(self, type, getter):$/;"	m	class:Sphinx
add_autodocumenter	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_autodocumenter(self, cls):$/;"	m	class:Sphinx
add_buffer_filetypes	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_buffer_filetypes(self, ft):$/;"	m	class:SnippetManager
add_builder	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_builder(self, builder):$/;"	m	class:Sphinx
add_config_value	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_config_value(self, name, default, rebuild):$/;"	m	class:Sphinx
add_content	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_content(self, more_content, no_docstring=False):$/;"	m	class:Documenter
add_crossref_type	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_crossref_type(self, directivename, rolename, indextemplate='',$/;"	m	class:Sphinx
add_description_unit	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    add_description_unit = add_object_type$/;"	v	class:Sphinx
add_directive	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_directive(self, name, obj, content=None, arguments=None, **options):$/;"	m	class:Sphinx
add_directive_header	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_directive_header(self, sig):$/;"	m	class:Documenter
add_directive_header	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_directive_header(self, sig):$/;"	m	class:ModuleDocumenter
add_directive_to_domain	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_directive_to_domain(self, domain, name, obj,$/;"	m	class:Sphinx
add_domain	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_domain(self, domain):$/;"	m	class:Sphinx
add_dummy_sign	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:add_dummy_sign(bufnr) abort$/;"	f
add_event	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_event(self, name):$/;"	m	class:Sphinx
add_filter	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def add_filter(self, path):$/;"	m	class:Parent
add_generic_role	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_generic_role(self, name, nodeclass):$/;"	m	class:Sphinx
add_index_to_domain	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_index_to_domain(self, domain, index):$/;"	m	class:Sphinx
add_javascript	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_javascript(self, filename):$/;"	m	class:Sphinx
add_latex_package	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_latex_package(self, packagename, options=None):$/;"	m	class:Sphinx
add_lexer	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_lexer(self, alias, lexer):$/;"	m	class:Sphinx
add_line	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_line(self, line, source, *lineno):$/;"	m	class:Documenter
add_methods	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
add_methods	plugged/vim-rails/autoload/rails.vim	/^function! s:add_methods(namespace, method_names)$/;"	f
add_missing_signs	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:add_missing_signs(file)$/;"	f
add_node	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_node(self, node, **kwds):$/;"	m	class:Sphinx
add_note	plugged/vim-notes/misc/notes/search-notes.py	/^    def add_note(self, filename, last_modified):$/;"	m	class:NotesIndex
add_object_type	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_object_type(self, directivename, rolename, indextemplate='',$/;"	m	class:Sphinx
add_permalinks	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    add_permalinks = False$/;"	v	class:AppleHelpBuilder
add_return_key	plugged/vim-ruby-refactoring/features/support/shared_methods.rb	/^def add_return_key$/;"	f
add_role	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_role(self, name, role):$/;"	m	class:Sphinx
add_role_to_domain	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_role_to_domain(self, domain, name, role):$/;"	m	class:Sphinx
add_search_language	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_search_language(self, cls):$/;"	m	class:Sphinx
add_section	plugged/vim-airline/autoload/airline/extensions/default.vim	/^  function! s:add_section(builder, context, key)$/;"	f
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def add_snippet(self, snippet):$/;"	m	class:SnippetDictionary
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet/source/added.py	/^    def add_snippet(self, ft, snippet):$/;"	m	class:AddedSnippetsSource
add_snippet	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def add_snippet(self, trigger, value, description,$/;"	m	class:SnippetManager
add_snr	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:add_snr(funcname) abort$/;"	f
add_snr	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:add_snr(funcname) abort$/;"	f
add_snr	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:add_snr(funcname) abort$/;"	f
add_snr	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:add_snr(funcname) abort$/;"	f
add_snr	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:add_snr(funcname) abort$/;"	f
add_snr	plugged/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! s:add_snr(funcname) abort$/;"	f
add_snr	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:add_snr(funcname) abort$/;"	f
add_source	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def add_source(self, path):$/;"	m	class:Parent
add_stylesheet	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_stylesheet(self, filename):$/;"	m	class:Sphinx
add_tag_recursive	plugged/tagbar/autoload/tagbar.vim	/^function! s:add_tag_recursive(parent, taginfo, pathlist) abort$/;"	f
add_to_commands	plugged/vim-ruby-refactoring/features/support/shared_methods.rb	/^def add_to_commands command$/;"	f
add_transform	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def add_transform(self, transform):$/;"	m	class:Sphinx
add_warnings	plugged/deoplete-jedi/tests/sphinx-3000.py	/^        def add_warnings(docs, wlist):$/;"	f	function:Builder._write_parallel
addcommand1	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^function! s:addcommand1(command, as, value)$/;"	f
addcommand2	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^function! s:addcommand2(command, as, key, value)$/;"	f
addfilecmds	plugged/vim-rails/autoload/rails.vim	/^function! s:addfilecmds(type) abort$/;"	f
additionProvider	plugged/vim-test/spec/fixtures/dusk/BrowserTest.php	/^    public function additionProvider()$/;"	f
additionProvider	plugged/vim-test/spec/fixtures/phpunit/NormalTest.php	/^    public function additionProvider()$/;"	f
adjust_header	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_header(bufnr, hunk_diff)$/;"	f
adjust_hunk_summary	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:adjust_hunk_summary(hunk_diff) abort$/;"	f
adjust_screen	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:adjust_screen() "{{{$/;"	f
ae	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^onoremap <buffer> ae :normal vae<CR>$/;"	m
ae	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^vmap <buffer> ae <Plug>LatexBox_SelectCurrentEnvOuter$/;"	m
ae	plugged/vim-polyglot/ftplugin/mustache.vim	/^  onoremap <silent> <buffer> ae :<C-U>call <SID>wrap_around()<CR>$/;"	m
after	plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def after(string)$/;"	f
after	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def after(string)$/;"	f
after_run	plugged/vim-test/autoload/test.vim	/^function! s:after_run() abort$/;"	f
ag_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_handler(lines, with_column)$/;"	f
ag_to_qf	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ag_to_qf(line, with_column)$/;"	f
airline	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^augroup airline#extensions#cursormode$/;"	a
airline#add_inactive_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_inactive_statusline_func(name)$/;"	f
airline#add_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_func(name)$/;"	f
airline#add_statusline_funcref	plugged/vim-airline/autoload/airline.vim	/^function! airline#add_statusline_funcref(function)$/;"	f
airline#async#get_mq_async	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_mq_async(cmd, file)$/;"	f
airline#async#get_msgfmt_stat	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#get_msgfmt_stat(cmd, file)$/;"	f
airline#async#mq_output	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#mq_output(buf, file)$/;"	f
airline#async#nvim_get_mq_async	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_mq_async(cmd, file)$/;"	f
airline#async#nvim_get_msgfmt_stat	plugged/vim-airline/autoload/airline/async.vim	/^  function! airline#async#nvim_get_msgfmt_stat(cmd, file)$/;"	f
airline#async#nvim_vcs_untracked	plugged/vim-airline/autoload/airline/async.vim	/^function! airline#async#nvim_vcs_untracked(cfg, file, vcs)$/;"	f
airline#async#vim_vcs_untracked	plugged/vim-airline/autoload/airline/async.vim	/^  function airline#async#vim_vcs_untracked(config, file)$/;"	f
airline#builder#get_next_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_next_group(sections, i)$/;"	f
airline#builder#get_prev_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#get_prev_group(sections, i)$/;"	f
airline#builder#new	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#new(context)$/;"	f
airline#builder#should_change_group	plugged/vim-airline/autoload/airline/builder.vim	/^function! airline#builder#should_change_group(group1, group2)$/;"	f
airline#check_mode	plugged/vim-airline/autoload/airline.vim	/^function! airline#check_mode(winnr)$/;"	f
airline#cmdwinenter	plugged/vim-airline/plugin/airline.vim	/^function! airline#cmdwinenter(...)$/;"	f
airline#debug#profile1	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile1()$/;"	f
airline#debug#profile2	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile2()$/;"	f
airline#debug#profile3	plugged/vim-airline/autoload/airline/debug.vim	/^function! airline#debug#profile3()$/;"	f
airline#extensions#ale#get	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get(type)$/;"	f
airline#extensions#ale#get_error	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_error()$/;"	f
airline#extensions#ale#get_warning	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#get_warning()$/;"	f
airline#extensions#ale#init	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! airline#extensions#ale#init(ext)$/;"	f
airline#extensions#append_to_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#append_to_section(name, value)$/;"	f
airline#extensions#apply	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply(...)$/;"	f
airline#extensions#apply_left_override	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#apply_left_override(section1, section2)$/;"	f
airline#extensions#branch#get_head	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#get_head()$/;"	f
airline#extensions#branch#head	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#head()$/;"	f
airline#extensions#branch#init	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#init(ext)$/;"	f
airline#extensions#branch#update_untracked_config	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! airline#extensions#branch#update_untracked_config(file, vcs)$/;"	f
airline#extensions#bufferline#init	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^function! airline#extensions#bufferline#init(ext)$/;"	f
airline#extensions#capslock#init	plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#init(ext)$/;"	f
airline#extensions#capslock#status	plugged/vim-airline/autoload/airline/extensions/capslock.vim	/^function! airline#extensions#capslock#status()$/;"	f
airline#extensions#commandt#apply	plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#apply(...)$/;"	f
airline#extensions#commandt#init	plugged/vim-airline/autoload/airline/extensions/commandt.vim	/^function! airline#extensions#commandt#init(ext)$/;"	f
airline#extensions#csv#apply	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#apply(...)$/;"	f
airline#extensions#csv#get_column	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#get_column()$/;"	f
airline#extensions#csv#init	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^function! airline#extensions#csv#init(ext)$/;"	f
airline#extensions#ctrlp#apply	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#apply(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline(...)$/;"	f
airline#extensions#ctrlp#ctrlp_airline_status	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#ctrlp_airline_status(...)$/;"	f
airline#extensions#ctrlp#generate_color_map	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#generate_color_map(dark, light, white)$/;"	f
airline#extensions#ctrlp#init	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#init(ext)$/;"	f
airline#extensions#ctrlp#load_theme	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^function! airline#extensions#ctrlp#load_theme(palette)$/;"	f
airline#extensions#ctrlspace#init	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#init(ext)$/;"	f
airline#extensions#ctrlspace#statusline	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^function! airline#extensions#ctrlspace#statusline(...)$/;"	f
airline#extensions#cursormode#activate	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#activate()$/;"	f
airline#extensions#cursormode#apply	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#apply(...)$/;"	f
airline#extensions#cursormode#init	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#init(ext)$/;"	f
airline#extensions#cursormode#set	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#set(...)$/;"	f
airline#extensions#cursormode#tmux_escape	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! airline#extensions#cursormode#tmux_escape(escape)$/;"	f
airline#extensions#default#apply	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! airline#extensions#default#apply(builder, context)$/;"	f
airline#extensions#denite#apply	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#apply(...)$/;"	f
airline#extensions#denite#check_denite_mode	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#check_denite_mode(bufnr)$/;"	f
airline#extensions#denite#init	plugged/vim-airline/autoload/airline/extensions/denite.vim	/^function! airline#extensions#denite#init(ext)$/;"	f
airline#extensions#eclim#creat_line	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#creat_line(...)$/;"	f
airline#extensions#eclim#get_warnings	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#get_warnings()$/;"	f
airline#extensions#eclim#init	plugged/vim-airline/autoload/airline/extensions/eclim.vim	/^function! airline#extensions#eclim#init(ext)$/;"	f
airline#extensions#example#apply	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#apply(...)$/;"	f
airline#extensions#example#get_cats	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#get_cats()$/;"	f
airline#extensions#example#init	plugged/vim-airline/autoload/airline/extensions/example.vim	/^function! airline#extensions#example#init(ext)$/;"	f
airline#extensions#fugitiveline#bufname	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#bufname()$/;"	f
airline#extensions#fugitiveline#init	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^function! airline#extensions#fugitiveline#init(ext)$/;"	f
airline#extensions#gutentags#init	plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#init(ext)$/;"	f
airline#extensions#gutentags#status	plugged/vim-airline/autoload/airline/extensions/gutentags.vim	/^function! airline#extensions#gutentags#status()$/;"	f
airline#extensions#hunks#get_hunks	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#get_hunks()$/;"	f
airline#extensions#hunks#init	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! airline#extensions#hunks#init(ext)$/;"	f
airline#extensions#keymap#init	plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#init(ext)$/;"	f
airline#extensions#keymap#status	plugged/vim-airline/autoload/airline/extensions/keymap.vim	/^function! airline#extensions#keymap#status()$/;"	f
airline#extensions#load	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load()$/;"	f
airline#extensions#load_theme	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#load_theme()$/;"	f
airline#extensions#localsearch#apply	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#apply(...)$/;"	f
airline#extensions#localsearch#init	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#init(ext)$/;"	f
airline#extensions#localsearch#load_theme	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^function! airline#extensions#localsearch#load_theme(palette)$/;"	f
airline#extensions#neomake#get_errors	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_errors()$/;"	f
airline#extensions#neomake#get_warnings	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#get_warnings()$/;"	f
airline#extensions#neomake#init	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! airline#extensions#neomake#init(ext)$/;"	f
airline#extensions#netrw#apply	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#apply(...)$/;"	f
airline#extensions#netrw#init	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#init(ext)$/;"	f
airline#extensions#netrw#sortstring	plugged/vim-airline/autoload/airline/extensions/netrw.vim	/^function! airline#extensions#netrw#sortstring()$/;"	f
airline#extensions#nrrwrgn#apply	plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#apply(...)$/;"	f
airline#extensions#nrrwrgn#init	plugged/vim-airline/autoload/airline/extensions/nrrwrgn.vim	/^function! airline#extensions#nrrwrgn#init(ext)$/;"	f
airline#extensions#obsession#get_status	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#get_status()$/;"	f
airline#extensions#obsession#init	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^function! airline#extensions#obsession#init(ext)$/;"	f
airline#extensions#po#apply	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#apply(...)$/;"	f
airline#extensions#po#init	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#init(ext)$/;"	f
airline#extensions#po#shorten	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#shorten()$/;"	f
airline#extensions#po#stats	plugged/vim-airline/autoload/airline/extensions/po.vim	/^function! airline#extensions#po#stats()$/;"	f
airline#extensions#prepend_to_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! airline#extensions#prepend_to_section(name, value)$/;"	f
airline#extensions#promptline#init	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#init(ext)$/;"	f
airline#extensions#promptline#set_prompt_colors	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^function! airline#extensions#promptline#set_prompt_colors(palette)$/;"	f
airline#extensions#quickfix#apply	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#apply(...)$/;"	f
airline#extensions#quickfix#inactive_qf_window	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#inactive_qf_window(...)$/;"	f
airline#extensions#quickfix#init	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! airline#extensions#quickfix#init(ext)$/;"	f
airline#extensions#syntastic#get	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get(type)$/;"	f
airline#extensions#syntastic#get_error	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_error()$/;"	f
airline#extensions#syntastic#get_warning	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#get_warning()$/;"	f
airline#extensions#syntastic#init	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^function! airline#extensions#syntastic#init(ext)$/;"	f
airline#extensions#tabline#add_label	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#add_label(dict, type)$/;"	f
airline#extensions#tabline#autoshow#off	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#off()$/;"	f
airline#extensions#tabline#autoshow#on	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! airline#extensions#tabline#autoshow#on()$/;"	f
airline#extensions#tabline#buffers#clickbuf	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#clickbuf(minwid, clicks, button, modifiers) abort$/;"	f
airline#extensions#tabline#buffers#get	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#get()$/;"	f
airline#extensions#tabline#buffers#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#invalidate()$/;"	f
airline#extensions#tabline#buffers#off	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#off()$/;"	f
airline#extensions#tabline#buffers#on	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! airline#extensions#tabline#buffers#on()$/;"	f
airline#extensions#tabline#buflist#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#invalidate()$/;"	f
airline#extensions#tabline#buflist#list	plugged/vim-airline/autoload/airline/extensions/tabline/buflist.vim	/^function! airline#extensions#tabline#buflist#list()$/;"	f
airline#extensions#tabline#builder#new	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! airline#extensions#tabline#builder#new(context)$/;"	f
airline#extensions#tabline#ctrlspace#add_buffer_section	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_buffer_section(builder, cur_tab, cur_buf, pos)$/;"	f
airline#extensions#tabline#ctrlspace#add_tab_section	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#add_tab_section(builder, pos)$/;"	f
airline#extensions#tabline#ctrlspace#get	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#get()$/;"	f
airline#extensions#tabline#ctrlspace#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#invalidate()$/;"	f
airline#extensions#tabline#ctrlspace#off	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#off()$/;"	f
airline#extensions#tabline#ctrlspace#on	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^function! airline#extensions#tabline#ctrlspace#on()$/;"	f
airline#extensions#tabline#formatters#default#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#default#wrap_name	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^function! airline#extensions#tabline#formatters#default#wrap_name(bufnr, buffer_name)$/;"	f
airline#extensions#tabline#formatters#jsformatter#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/jsformatter.vim	/^function! airline#extensions#tabline#formatters#jsformatter#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#tabnr#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/tabnr.vim	/^function! airline#extensions#tabline#formatters#tabnr#format(tab_nr_type, nr)$/;"	f
airline#extensions#tabline#formatters#unique_tail#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail.vim	/^function! airline#extensions#tabline#formatters#unique_tail#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#unique_tail_improved#format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^function! airline#extensions#tabline#formatters#unique_tail_improved#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#formatters#webdevicons#format	plugged/vim-devicons/autoload/airline/extensions/tabline/formatters/webdevicons.vim	/^function! airline#extensions#tabline#formatters#webdevicons#format(bufnr, buffers)$/;"	f
airline#extensions#tabline#get	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get()$/;"	f
airline#extensions#tabline#get_buffer_name	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#get_buffer_name(nr, ...)$/;"	f
airline#extensions#tabline#group_of_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#group_of_bufnr(tab_bufs, bufnr)$/;"	f
airline#extensions#tabline#init	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#init(ext)$/;"	f
airline#extensions#tabline#load_theme	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#load_theme(palette)$/;"	f
airline#extensions#tabline#new_builder	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#new_builder()$/;"	f
airline#extensions#tabline#tabs#get	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#get()$/;"	f
airline#extensions#tabline#tabs#invalidate	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#invalidate()$/;"	f
airline#extensions#tabline#tabs#map_keys	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#map_keys()$/;"	f
airline#extensions#tabline#tabs#off	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#off()$/;"	f
airline#extensions#tabline#tabs#on	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#on()$/;"	f
airline#extensions#tabline#tabs#tabnr_formatter	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^function! airline#extensions#tabline#tabs#tabnr_formatter(nr, i)$/;"	f
airline#extensions#tabline#title	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! airline#extensions#tabline#title(n)$/;"	f
airline#extensions#tabline#xtabline#filter_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#filter_buffers()$/;"	f
airline#extensions#tabline#xtabline#init	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#init()$/;"	f
airline#extensions#tabline#xtabline#maps	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#maps()$/;"	f
airline#extensions#tabline#xtabline#next_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#next_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#prev_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#prev_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#reopen_last_tab	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#reopen_last_tab()$/;"	f
airline#extensions#tabline#xtabline#select_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#select_buffer(nr)$/;"	f
airline#extensions#tabline#xtabline#toggle_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_buffers()$/;"	f
airline#extensions#tabline#xtabline#toggle_tabs	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#toggle_tabs()$/;"	f
airline#extensions#tabline#xtabline#update_obsession	plugged/vim-airline/autoload/airline/extensions/tabline/xtabline.vim	/^function! airline#extensions#tabline#xtabline#update_obsession()$/;"	f
airline#extensions#tagbar#currenttag	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#currenttag()$/;"	f
airline#extensions#tagbar#get_status	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#get_status(...)$/;"	f
airline#extensions#tagbar#inactive_apply	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#inactive_apply(...)$/;"	f
airline#extensions#tagbar#init	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^function! airline#extensions#tagbar#init(ext)$/;"	f
airline#extensions#term#apply	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#apply(...)$/;"	f
airline#extensions#term#init	plugged/vim-airline/autoload/airline/extensions/term.vim	/^function! airline#extensions#term#init(ext)$/;"	f
airline#extensions#tmuxline#init	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#init(ext)$/;"	f
airline#extensions#tmuxline#set_tmux_colors	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^function! airline#extensions#tmuxline#set_tmux_colors(palette)$/;"	f
airline#extensions#undotree#apply	plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#apply(...)$/;"	f
airline#extensions#undotree#init	plugged/vim-airline/autoload/airline/extensions/undotree.vim	/^function! airline#extensions#undotree#init(ext)$/;"	f
airline#extensions#unicode#apply	plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#apply(...)$/;"	f
airline#extensions#unicode#init	plugged/vim-airline/autoload/airline/extensions/unicode.vim	/^function! airline#extensions#unicode#init(ext)$/;"	f
airline#extensions#unite#apply	plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#apply(...)$/;"	f
airline#extensions#unite#init	plugged/vim-airline/autoload/airline/extensions/unite.vim	/^function! airline#extensions#unite#init(ext)$/;"	f
airline#extensions#vimagit#apply	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#apply(...)$/;"	f
airline#extensions#vimagit#get_mode	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#get_mode()$/;"	f
airline#extensions#vimagit#init	plugged/vim-airline/autoload/airline/extensions/vimagit.vim	/^function! airline#extensions#vimagit#init(ext)$/;"	f
airline#extensions#vimtex#apply	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#apply(...)$/;"	f
airline#extensions#vimtex#get_scope	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#get_scope()$/;"	f
airline#extensions#vimtex#init	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^function! airline#extensions#vimtex#init(ext)$/;"	f
airline#extensions#virtualenv#apply	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#apply(...)$/;"	f
airline#extensions#virtualenv#init	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#init(ext)$/;"	f
airline#extensions#virtualenv#update	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^function! airline#extensions#virtualenv#update()$/;"	f
airline#extensions#whitespace#check	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#check()$/;"	f
airline#extensions#whitespace#disable	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#disable()$/;"	f
airline#extensions#whitespace#init	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#init(...)$/;"	f
airline#extensions#whitespace#toggle	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! airline#extensions#whitespace#toggle()$/;"	f
airline#extensions#windowswap#get_status	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#get_status()$/;"	f
airline#extensions#windowswap#init	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^function! airline#extensions#windowswap#init(ext)$/;"	f
airline#extensions#wordcount#apply	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#apply(...)$/;"	f
airline#extensions#wordcount#formatters#default#format	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! airline#extensions#wordcount#formatters#default#format()$/;"	f
airline#extensions#wordcount#init	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! airline#extensions#wordcount#init(ext)$/;"	f
airline#extensions#xkblayout#init	plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#init(ext)$/;"	f
airline#extensions#xkblayout#status	plugged/vim-airline/autoload/airline/extensions/xkblayout.vim	/^function! airline#extensions#xkblayout#status()$/;"	f
airline#extensions#ycm#get_error_count	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_error_count()$/;"	f
airline#extensions#ycm#get_warning_count	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#get_warning_count()$/;"	f
airline#extensions#ycm#init	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^function! airline#extensions#ycm#init(ext)$/;"	f
airline#highlighter#add_accent	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_accent(accent)$/;"	f
airline#highlighter#add_separator	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#add_separator(from, to, inverse)$/;"	f
airline#highlighter#exec	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#exec(group, colors)$/;"	f
airline#highlighter#get_highlight	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight(group, ...)$/;"	f
airline#highlighter#get_highlight2	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#get_highlight2(fg, bg, ...)$/;"	f
airline#highlighter#highlight	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight(modes, ...)$/;"	f
airline#highlighter#highlight_modified_inactive	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#highlight_modified_inactive(bufnr)$/;"	f
airline#highlighter#load_theme	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#load_theme()$/;"	f
airline#highlighter#reset_hlcache	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! airline#highlighter#reset_hlcache()$/;"	f
airline#init#bootstrap	plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#bootstrap()$/;"	f
airline#init#gui_mode	plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#gui_mode()$/;"	f
airline#init#sections	plugged/vim-airline/autoload/airline/init.vim	/^function! airline#init#sections()$/;"	f
airline#load_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#load_theme()$/;"	f
airline#msdos#round_msdos_colors	plugged/vim-airline/autoload/airline/msdos.vim	/^function! airline#msdos#round_msdos_colors(rgblist)$/;"	f
airline#parts#crypt	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#crypt()$/;"	f
airline#parts#define	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define(key, config)$/;"	f
airline#parts#define_accent	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_accent(key, accent)$/;"	f
airline#parts#define_condition	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_condition(key, predicate)$/;"	f
airline#parts#define_empty	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_empty(keys)$/;"	f
airline#parts#define_function	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_function(key, name)$/;"	f
airline#parts#define_minwidth	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_minwidth(key, width)$/;"	f
airline#parts#define_raw	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_raw(key, raw)$/;"	f
airline#parts#define_text	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#define_text(key, text)$/;"	f
airline#parts#ffenc	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#ffenc()$/;"	f
airline#parts#filetype	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#filetype()$/;"	f
airline#parts#get	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#get(key)$/;"	f
airline#parts#iminsert	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#iminsert()$/;"	f
airline#parts#mode	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#mode()$/;"	f
airline#parts#paste	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#paste()$/;"	f
airline#parts#readonly	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#readonly()$/;"	f
airline#parts#spell	plugged/vim-airline/autoload/airline/parts.vim	/^function! airline#parts#spell()$/;"	f
airline#remove_statusline_func	plugged/vim-airline/autoload/airline.vim	/^function! airline#remove_statusline_func(name)$/;"	f
airline#section#create	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create(parts)$/;"	f
airline#section#create_left	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_left(parts)$/;"	f
airline#section#create_right	plugged/vim-airline/autoload/airline/section.vim	/^function! airline#section#create_right(parts)$/;"	f
airline#statusline	plugged/vim-airline/autoload/airline.vim	/^function! airline#statusline(winnr)$/;"	f
airline#switch_matching_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_matching_theme()$/;"	f
airline#switch_theme	plugged/vim-airline/autoload/airline.vim	/^function! airline#switch_theme(name)$/;"	f
airline#themes#atomic#refresh	plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^function! airline#themes#atomic#refresh()$/;"	f
airline#themes#base16#refresh	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  function! airline#themes#base16#refresh()$/;"	f
airline#themes#biogoo#refresh	plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^function! airline#themes#biogoo#refresh()$/;"	f
airline#themes#generate_color_map	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#generate_color_map(sect1, sect2, sect3, ...)$/;"	f
airline#themes#get_highlight	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight(group, ...)$/;"	f
airline#themes#get_highlight2	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#get_highlight2(fg, bg, ...)$/;"	f
airline#themes#gruvbox#refresh	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^function! airline#themes#gruvbox#refresh()$/;"	f
airline#themes#hybrid#refresh	plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^function! airline#themes#hybrid#refresh()$/;"	f
airline#themes#kalisi#refresh	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^function! airline#themes#kalisi#refresh()$/;"	f
airline#themes#lucius#refresh	plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^function! airline#themes#lucius#refresh()$/;"	f
airline#themes#monochrome#refresh	plugged/vim-airline-themes/autoload/airline/themes/monochrome.vim	/^function! airline#themes#monochrome#refresh()$/;"	f
airline#themes#one#refresh	plugged/one/autoload/airline/themes/one.vim	/^function! airline#themes#one#refresh()$/;"	f
airline#themes#one#refresh	plugged/vim-one/autoload/airline/themes/one.vim	/^function! airline#themes#one#refresh()$/;"	f
airline#themes#onedark#refresh	plugged/vim-airline-themes/autoload/airline/themes/onedark.vim	/^function! airline#themes#onedark#refresh()$/;"	f
airline#themes#patch	plugged/vim-airline/autoload/airline/themes.vim	/^function! airline#themes#patch(palette)$/;"	f
airline#themes#seagull#refresh	plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^function! airline#themes#seagull#refresh()$/;"	f
airline#themes#solarized#refresh	plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^function! airline#themes#solarized#refresh()$/;"	f
airline#themes#tomorrow#refresh	plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^function! airline#themes#tomorrow#refresh()$/;"	f
airline#themes#zenburn#refresh	plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^function! airline#themes#zenburn#refresh()$/;"	f
airline#update_statusline	plugged/vim-airline/autoload/airline.vim	/^function! airline#update_statusline()$/;"	f
airline#util#append	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#append(text, minwidth)$/;"	f
airline#util#exec_funcrefs	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#exec_funcrefs(list, ...)$/;"	f
airline#util#getwinvar	plugged/vim-airline/autoload/airline/util.vim	/^  function! airline#util#getwinvar(winnr, key, def)$/;"	f
airline#util#ignore_buf	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#ignore_buf(name)$/;"	f
airline#util#prepend	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#prepend(text, minwidth)$/;"	f
airline#util#shorten	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#shorten(text, winwidth, minwidth, ...)$/;"	f
airline#util#strchars	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#strchars(str)$/;"	f
airline#util#warning	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#warning(msg)$/;"	f
airline#util#wrap	plugged/vim-airline/autoload/airline/util.vim	/^function! airline#util#wrap(text, minwidth)$/;"	f
airline_ale_count	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_count(cnt, symbol)$/;"	f
airline_ale_get_line_number	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:airline_ale_get_line_number(cnt, type) abort$/;"	f
airline_refresh	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_refresh()$/;"	f
airline_theme	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_theme(...)$/;"	f
airline_toggle	plugged/vim-airline/plugin/airline.vim	/^function! s:airline_toggle()$/;"	f
akey	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = "'te{}stâ'".format('"')$/;"	v	class:VerifyVimDict2
akey	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    akey = '"te{}stâ"'.format("'")$/;"	v	class:VerifyVimDict3
alchemist#alchemist_client	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#alchemist_client(req, lnum, cnum, lines)$/;"	f
alchemist#alchemist_format	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#alchemist_format(cmd, arg, context, imports, aliases)$/;"	f
alchemist#exdef	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#exdef(...)$/;"	f
alchemist#exdoc	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#exdoc(...)$/;"	f
alchemist#findMixDirectory	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#findMixDirectory() "{{{$/;"	f
alchemist#get_aliases	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#get_aliases(line)$/;"	f
alchemist#get_current_module_details	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#get_current_module_details()$/;"	f
alchemist#get_doc	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#get_doc(word)$/;"	f
alchemist#get_doc_erl	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#get_doc_erl(word)$/;"	f
alchemist#get_doc_ex	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#get_doc_ex(lnum, cnum, lines)$/;"	f
alchemist#get_import	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#get_import(line)$/;"	f
alchemist#get_module_name	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#get_module_name(line)$/;"	f
alchemist#hide_iex	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#hide_iex()$/;"	f
alchemist#jump_tag_stack	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#jump_tag_stack()$/;"	f
alchemist#lookup_name_under_cursor	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#lookup_name_under_cursor()$/;"	f
alchemist#mix	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#mix(...)$/;"	f
alchemist#mix_complete	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#mix_complete(ArgLead, CmdLine, CursorPos, ...)$/;"	f
alchemist#open_iex	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! alchemist#open_iex(command)$/;"	f
alchemist_help	plugged/alchemist.vim/elixir_sense_client	/^def alchemist_help():$/;"	f
ale_refresh	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^function! s:ale_refresh()$/;"	f
align_lists	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_lists(lists)$/;"	f
align_pairs	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:align_pairs(list)$/;"	f
all	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
all	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
all	plugged/vim-test/spec/fixtures/commontest/test_SUITE.erl	/^all() ->$/;"	f	module:test_SUITE
all_files	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:all_files()$/;"	f
allow_parallel	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    allow_parallel = False$/;"	v	class:Builder
allsteps	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:allsteps()$/;"	f
alternatePair	plugged/vim-polyglot/indent/typescript.vim	/^function s:alternatePair(stop)$/;"	f
alternate_file	plugged/vim-test/autoload/test.vim	/^function! s:alternate_file() abort$/;"	f
am	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
am	plugged/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> am :<C-U>call <SID>wrap_a('[m',']M')<CR>$/;"	m
and	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:and(xs) abort$/;"	f
and	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:and(xs) abort$/;"	f
annotation_option	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def annotation_option(arg):$/;"	f
ansi	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:ansi(str, group, default, ...)$/;"	f
any	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
any	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
app_asset_path	plugged/vim-rails/autoload/rails.vim	/^function! s:app_asset_path() dict abort$/;"	f
app_commands	plugged/vim-rails/autoload/rails.vim	/^function! s:app_commands() dict abort$/;"	f
app_db_config	plugged/vim-rails/autoload/rails.vim	/^function! s:app_db_config(environment) dict$/;"	f
app_db_url	plugged/vim-rails/autoload/rails.vim	/^function! s:app_db_url(...) dict abort$/;"	f
app_dbext_settings	plugged/vim-rails/autoload/rails.vim	/^function! s:app_dbext_settings(environment) dict abort$/;"	f
app_default_locale	plugged/vim-rails/autoload/rails.vim	/^function! s:app_default_locale() dict abort$/;"	f
app_engines	plugged/vim-rails/autoload/rails.vim	/^function! s:app_engines() dict abort$/;"	f
app_environments	plugged/vim-rails/autoload/rails.vim	/^function! s:app_environments() dict$/;"	f
app_execute_rails_command	plugged/vim-rails/autoload/rails.vim	/^function! s:app_execute_rails_command(cmd) dict abort$/;"	f
app_file	plugged/vim-rails/autoload/rails.vim	/^function! s:app_file(name) dict abort$/;"	f
app_find_file	plugged/vim-rails/autoload/rails.vim	/^function! s:app_find_file(name, ...) dict abort$/;"	f
app_gems	plugged/vim-rails/autoload/rails.vim	/^function! s:app_gems() dict abort$/;"	f
app_generator_command	plugged/vim-rails/autoload/rails.vim	/^function! s:app_generator_command(bang, mods, ...) dict abort$/;"	f
app_generators	plugged/vim-rails/autoload/rails.vim	/^function! s:app_generators() dict abort$/;"	f
app_has	plugged/vim-rails/autoload/rails.vim	/^function! s:app_has(feature) dict$/;"	f
app_has_file	plugged/vim-rails/autoload/rails.vim	/^function! s:app_has_file(file) dict$/;"	f
app_has_gem	plugged/vim-rails/autoload/rails.vim	/^function! s:app_has_gem(gem) dict abort$/;"	f
app_has_path	plugged/vim-rails/autoload/rails.vim	/^function! s:app_has_path(path) dict$/;"	f
app_has_rails5	plugged/vim-rails/autoload/rails.vim	/^function! s:app_has_rails5() abort dict$/;"	f
app_internal_load_path	plugged/vim-rails/autoload/rails.vim	/^function! s:app_internal_load_path() dict abort$/;"	f
app_migration	plugged/vim-rails/autoload/rails.vim	/^function! s:app_migration(file) dict$/;"	f
app_named_route_file	plugged/vim-rails/autoload/rails.vim	/^function! s:app_named_route_file(route_name) dict abort$/;"	f
app_output_command	plugged/vim-rails/autoload/rails.vim	/^function! s:app_output_command(count, code) dict$/;"	f
app_pack_suffixes	plugged/vim-rails/autoload/rails.vim	/^function! s:app_pack_suffixes(type) dict abort$/;"	f
app_path	plugged/vim-rails/autoload/rails.vim	/^function! s:app_path(...) dict$/;"	f
app_prepare_rails_command	plugged/vim-rails/autoload/rails.vim	/^function! s:app_prepare_rails_command(cmd) dict abort$/;"	f
app_projections	plugged/vim-rails/autoload/rails.vim	/^function! s:app_projections() dict abort$/;"	f
app_rake_command	plugged/vim-rails/autoload/rails.vim	/^function! s:app_rake_command(...) dict abort$/;"	f
app_rake_tasks	plugged/vim-rails/autoload/rails.vim	/^function! s:app_rake_tasks() dict abort$/;"	f
app_relglob	plugged/vim-rails/autoload/rails.vim	/^function! s:app_relglob(path,glob,...) dict$/;"	f
app_resolve_asset	plugged/vim-rails/autoload/rails.vim	/^function! s:app_resolve_asset(name, ...) dict abort$/;"	f
app_resolve_pack	plugged/vim-rails/autoload/rails.vim	/^function! s:app_resolve_pack(name, ...) dict abort$/;"	f
app_routes	plugged/vim-rails/autoload/rails.vim	/^function! s:app_routes() dict abort$/;"	f
app_ruby_script_command	plugged/vim-rails/autoload/rails.vim	/^function! s:app_ruby_script_command(cmd) dict abort$/;"	f
app_server_binding	plugged/vim-rails/autoload/rails.vim	/^function! s:app_server_binding() dict abort$/;"	f
app_server_command	plugged/vim-rails/autoload/rails.vim	/^function! s:app_server_command(kill, bg, arg) dict abort$/;"	f
app_server_pid	plugged/vim-rails/autoload/rails.vim	/^function! s:app_server_pid() dict abort$/;"	f
app_smart_projections	plugged/vim-rails/autoload/rails.vim	/^function! s:app_smart_projections() dict abort$/;"	f
app_start_rails_command	plugged/vim-rails/autoload/rails.vim	/^function! s:app_start_rails_command(cmd, ...) dict abort$/;"	f
app_static_rails_command	plugged/vim-rails/autoload/rails.vim	/^function! s:app_static_rails_command(cmd) dict abort$/;"	f
app_stylesheet_suffix	plugged/vim-rails/autoload/rails.vim	/^function! s:app_stylesheet_suffix() dict abort$/;"	f
app_tags_command	plugged/vim-rails/autoload/rails.vim	/^function! s:app_tags_command() dict abort$/;"	f
app_template_handlers	plugged/vim-rails/autoload/rails.vim	/^function! s:app_template_handlers() dict abort$/;"	f
app_user_assertions	plugged/vim-rails/autoload/rails.vim	/^function! s:app_user_assertions() dict$/;"	f
app_user_classes	plugged/vim-rails/autoload/rails.vim	/^function! s:app_user_classes() dict$/;"	f
append	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def append(self, line, line_number=-1):$/;"	m	class:VimBufferProxy
append_group	plugged/vim-peekaboo/autoload/peekaboo.vim	/^function! s:append_group(title, regs)$/;"	f
append_ul	autoload/plug.vim	/^function! s:append_ul(lnum, text)$/;"	f
apply_highlight_fix	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:apply_highlight_fix()$/;"	f
apply_user_input_next	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:apply_user_input_next(mode)$/;"	f
argparse	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^import argparse$/;"	i
args	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    args = parser.parse_args()$/;"	v	class:Client
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0"'$/;"	v	class:Anon_NoTrigger_Multi
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple $1 expand $1 $0", "abc"'$/;"	v	class:Anon_Trigger_Multi
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_AfterSpace
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand"'$/;"	v	class:Anon_NoTrigger_Simple
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", ".*abc", "desc", "r"'$/;"	v	class:Anon_Trigger_Opts
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Simple
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = '"simple expand", "abc"'$/;"	v	class:Anon_Trigger_Twice
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = ''$/;"	v	class:_AnonBase
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_BeginningOfLine
args	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    args = r"':latex:\\`$1\\`$0'"$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
args	plugged/ultisnips/test/test_Autocommands.py	/^    args = ''$/;"	v	class:Autocommands
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '".*test", "simple expand", "desc", "r", "all", 0'$/;"	v	class:AddFunc_Opt
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = '"test", "simple expand", "desc", "", "all", 0'$/;"	v	class:AddFunc_Simple
args	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    args = ''$/;"	v	class:_AddFuncBase
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, drag_and_drop_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, live_region_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, relationship_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = extend(aria_attributes, widget_attributes)$/;"	v
aria_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes = global_states_and_properties$/;"	v
aria_attributes_value	plugged/vim-polyglot/autoload/xml/aria.vim	/^let aria_attributes_value = {$/;"	v
arrayObject	plugged/vim-test/spec/fixtures/peridot/arrayobject.spec.php	/^        $this->arrayObject = new ArrayObject(['one', 'two', 'three']);$/;"	v
as_key_config	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:as_key_config(config)$/;"	f
as_keymapping	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:as_keymapping(key)$/;"	f
as_unicode	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    as_unicode, as_vimencoding$/;"	i
as_unicode	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^from UltiSnips.compatibility import as_unicode, as_vimencoding$/;"	i
as_unicode	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def as_unicode(string):$/;"	f
as_unicode	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_unicode	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_unicode	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_unicode	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_unicode	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_unicode	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^from UltiSnips.compatibility import as_unicode$/;"	i
as_unicode	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^from UltiSnips.compatibility import as_unicode, byte2col$/;"	i
as_vimencoding	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    as_unicode, as_vimencoding$/;"	i
as_vimencoding	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^from UltiSnips.compatibility import as_unicode, as_vimencoding$/;"	i
as_vimencoding	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def as_vimencoding(string):$/;"	f
ascendTree	config/plugins/nerdtree.vim	/^function! s:ascendTree(node)$/;"	f
ask	autoload/plug.vim	/^function! s:ask(message, ...)$/;"	f
ask_no_interrupt	autoload/plug.vim	/^function! s:ask_no_interrupt(...)$/;"	f
assemble_context	plugged/far.vim/autoload/far.vim	/^function! s:assemble_context(far_params, win_params, cmdargs, callback, cbparams) abort "{{{$/;"	f
assemble_context_callback	plugged/far.vim/autoload/far.vim	/^function! s:assemble_context_callback(exec_ctx) abort "{{{$/;"	f
assert	plugged/vim-test/spec/fixtures/webdriverio/test/specs/example.js	/^var assert = require('assert');$/;"	v
assert_correct_indenting	plugged/vim-ruby/spec/spec_helper.rb	/^  def assert_correct_indenting(extension='rb', string)$/;"	f
asset_cfile	plugged/vim-rails/autoload/rails.vim	/^function! s:asset_cfile() abort$/;"	f
assign_name	autoload/plug.vim	/^function! s:assign_name()$/;"	f
assoc	autoload/plug.vim	/^function! s:assoc(dict, key, val)$/;"	f
astext	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def astext(self):$/;"	m	class:desc_optional
astext	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def astext(self):$/;"	m	class:desc_returns
asyncio	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^import asyncio$/;"	i
asyncomplete#sources#tmuxcomplete#completor	plugged/tmux-complete.vim/autoload/asyncomplete/sources/tmuxcomplete.vim	/^function! asyncomplete#sources#tmuxcomplete#completor(opt, ctx)$/;"	f
asyncomplete#sources#tmuxcomplete#register	plugged/tmux-complete.vim/autoload/asyncomplete/sources/tmuxcomplete.vim	/^function! asyncomplete#sources#tmuxcomplete#register(opts)$/;"	f
attach	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^from neovim import attach$/;"	i
attach_vim	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^def attach_vim(serveraddr):$/;"	f
attr	plugged/vim-polyglot/syntax/vue.vim	/^function! s:attr(name, value)$/;"	f
attribute_highlight	plugged/vim-polyglot/syntax/ansible.vim	/^fun! s:attribute_highlight(attributes)$/;"	f
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, event_attributes_value)$/;"	v
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, microdata_attributes_value)$/;"	v
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let attributes_value = extend(attributes_value, rdfa_attributes_value)$/;"	v
attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^let attributes_value = {$/;"	v
author	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            author = opts.author or 'Author',$/;"	v
auto_close	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:auto_close()$/;"	f
auto_completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def auto_completion_begin(self, context):$/;"	m	class:DeopleteHandlers
auto_save	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:auto_save()$/;"	f
autocamelize	plugged/vim-rails/autoload/rails.vim	/^function! s:autocamelize(files,test)$/;"	f
autodoc	plugged/deoplete-jedi/tests/sphinx-3000.py	/^        from sphinx.ext import autodoc$/;"	i
autofill_tokens	plugged/vim-polyglot/autoload/xml/html5.vim	/^let autofill_tokens = ['on', 'off', 'name', 'honorific-prefix', 'given-name', 'additional-name', 'family-name', 'honorific-suffix', 'nickname', 'organization-title', 'username', 'new-password', 'current-password', 'organization', 'street-address', 'address-line1', 'address-line2', 'address-line3', 'address-level4', 'address-level3', 'address-level2', 'address-level1', 'country', 'country-name', 'postal-code', 'cc-name', 'cc-given-name', 'cc-additional-name', 'cc-family-name', 'cc-number', 'cc-exp', 'cc-exp-month', 'cc-exp-year', 'cc-csc', 'cc-type', 'transaction-currency', 'transaction-amount', 'language', 'bday', 'bday-day', 'bday-month', 'bday-year', 'sex', 'url', 'photo', 'tel', 'tel-country-code', 'tel-national', 'tel-area-code', 'tel-local', 'tel-local-prefix', 'tel-local-suffix', 'tel-extension', 'email', 'impp']$/;"	v
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 'Vorne Hinten'$/;"	v	class:TestCheapDelete
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 'Vorne hallo  Hinten'$/;"	v	class:TestRealLife1
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 'hallo End t'$/;"	v	class:TestRealLife
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 'hi first line\\nsecond line k world'$/;"	v	class:MultiLine
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 'n'$/;"	v	class:TestWithNewline
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 's'$/;"	v	class:MatchIsTooCheap
b	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    b = 'this is it a this is it'$/;"	v	class:TestUltiSnipsProblem
b	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map b <Plug>(easymotion-b)$/;"	m
b	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        omap b <Plug>(easymotion-b)$/;"	m
b.get_posttitle	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function b.get_posttitle(i) dict$/;"	f
b.get_pretitle	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^    function! b.get_pretitle(i) dict$/;"	f
b.get_title	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  function! b.get_title(i) dict$/;"	f
b.get_title	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  function! b.get_title(i) dict$/;"	f
b:	plugged/vim-polyglot/syntax/liquid.vim	/^      let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\\.\\zs.*')$/;"	v
b:LatexBox_FoldSections	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^let b:LatexBox_FoldSections = s:FoldSectionLevels()$/;"	v
b:LatexBox_loaded	plugged/vim-polyglot/ftplugin/tex_LatexBox.vim	/^	let b:LatexBox_loaded = 1$/;"	v
b:SuperTabContextTextMemberPatterns	plugged/supertab/ftplugin/html.vim	/^  let b:SuperTabContextTextMemberPatterns = ['<\/']$/;"	v
b:SuperTabContextTextMemberPatterns	plugged/supertab/ftplugin/xml.vim	/^  let b:SuperTabContextTextMemberPatterns = ['<\/']$/;"	v
b:SuperTabContextTextOmniPrecedence	plugged/supertab/ftplugin/html.vim	/^    let b:SuperTabContextTextOmniPrecedence = ['&omnifunc', '&completefunc']$/;"	v
b:SuperTabContextTextOmniPrecedence	plugged/supertab/ftplugin/xml.vim	/^  let b:SuperTabContextTextOmniPrecedence = ['&omnifunc', '&completefunc']$/;"	v
b:Xsl_SyntaxFold_by	plugged/vim-polyglot/syntax/xsl.vim	/^	let b:Xsl_SyntaxFold_by=''$/;"	v
b:block_begin	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:block_begin = '\\<\\(do$\\|fn\\>\\)'$/;"	v
b:block_end	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:block_end = '\\<end\\>'$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:browsefilter = "Clojure Source Files (*.clj)\\t*.clj\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:browsefilter = "Julia Source Files (*.jl)\\t*.jl\\n"$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter = "\\n".b:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter = ''$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:browsefilter="Liquid Files (*.liquid)\\t*.liquid" . b:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/perl.vim	/^    let b:browsefilter = "Perl Source Files (*.pl)\\t*.pl\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ps1.vim	/^	let b:browsefilter =$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ps1xml.vim	/^  let b:browsefilter = $/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/pug.vim	/^  let b:browsefilter="Pug Files (*.pug)\\t*.pug\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/qml.vim	/^   let b:browsefilter =$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:browsefilter	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let b:browsefilter="Stylus Files (*.styl)\\t*.styl\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-ruby/ftplugin/eruby.vim	/^  let b:browsefilter="eRuby Files (*.erb, *.rhtml)\\t*.erb;*.rhtml\\n" . s:browsefilter$/;"	v
b:browsefilter	plugged/vim-ruby/ftplugin/ruby.vim	/^  let b:browsefilter = "Ruby Source Files (*.rb)\\t*.rb\\n" .$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/c.vim	/^    let b:c_minlines = 15	" mostly for () constructs$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/c.vim	/^    let b:c_minlines = 50	" #if 0 constructs can be long$/;"	v
b:c_minlines	plugged/vim-polyglot/syntax/c.vim	/^  let b:c_minlines = c_minlines$/;"	v
b:control_statement	plugged/vim-polyglot/indent/cython.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except)>'$/;"	v
b:control_statement	plugged/vim-polyglot/indent/cython.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except|cdef|cpdef)>'$/;"	v
b:control_statement	plugged/vim-polyglot/indent/python.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except)>'$/;"	v
b:control_statement	plugged/vim-polyglot/indent/python.vim	/^    let b:control_statement = '\\v^\\s*(class|def|if|while|with|for|except|cdef|cpdef)>'$/;"	v
b:crystal_no_expensive	plugged/vim-polyglot/syntax/crystal.vim	/^  let b:crystal_no_expensive = 1$/;"	v
b:cucumber_root	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:cucumber_root = expand('%:p:h:s?.*[\\\/]\\%(features\\|stories\\)\\zs[\\\/].*??')$/;"	v
b:cucumber_steps_glob	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  let b:cucumber_steps_glob = b:cucumber_root.'\/**\/*.rb'$/;"	v
b:current_syntax	plugged/tagbar/syntax/tagbar.vim	/^let b:current_syntax = "tagbar"$/;"	v
b:current_syntax	plugged/ultisnips/syntax/snippets.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:current_syntax = "snippets"$/;"	v
b:current_syntax	plugged/vim-notes/syntax/notes.vim	/^let b:current_syntax = 'notes'$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/coffee.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/haml.vim	/^  let b:current_syntax = s:current_syntax_save$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/html.vim	/^   let b:current_syntax = s:pre_less_cur_syn$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/html.vim	/^  let b:current_syntax = s:current_syntax_save$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/jsx.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/rspec.vim	/^let b:current_syntax = 'rspec'$/;"	v
b:current_syntax	plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^  let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/Jenkinsfile.vim	/^let b:current_syntax = "Jenkinsfile"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^  let b:current_syntax=s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^let b:current_syntax = "ansible"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ansible_hosts.vim	/^let b:current_syntax = "ansible_hosts"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/apiblueprint.vim	/^let b:current_syntax = 'apiblueprint'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/applescript.vim	/^let b:current_syntax = "applescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/asciidoc.vim	/^let b:current_syntax = "asciidoc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/blade.vim	/^let b:current_syntax = 'blade'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/c.vim	/^let b:current_syntax = "c"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cabal.vim	/^let b:current_syntax = "cabal"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/caddyfile.vim	/^let b:current_syntax = "caddyfile"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/carp.vim	/^let b:current_syntax = "carp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/clojure.vim	/^let b:current_syntax = "clojure"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cmake.vim	/^let b:current_syntax = "cmake"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/coffee.vim	/^  let b:current_syntax = 'coffee'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cpp.vim	/^let b:current_syntax = "cpp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cql.vim	/^let b:current_syntax = "cql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cryptol.vim	/^let b:current_syntax = "cryptol"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/crystal.vim	/^let b:current_syntax = 'crystal'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/cucumber.vim	/^let b:current_syntax = "cucumber"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dart.vim	/^let b:current_syntax = "dart"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dockerfile.vim	/^let b:current_syntax = "dockerfile"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/dockerfile.vim	/^let b:current_syntax = s:current_syntax$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/eelixir.vim	/^let b:current_syntax = 'eelixir'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elixir.vim	/^let b:current_syntax = "elixir"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/elm.vim	/^let b:current_syntax = 'elm'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ember-script.vim	/^let b:current_syntax = 'ember-script'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/emblem.vim	/^let b:current_syntax = 'emblem'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/erlang.vim	/^let b:current_syntax = "erlang"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fish.vim	/^let b:current_syntax = 'fish'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/fsharp.vim	/^let b:current_syntax = 'fsharp'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/git.vim	/^let b:current_syntax = "git"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitcommit.vim	/^let b:current_syntax = "gitcommit"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitconfig.vim	/^let b:current_syntax = "gitconfig"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitrebase.vim	/^let b:current_syntax = "gitrebase"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gitsendemail.vim	/^let b:current_syntax = "gitsendemail"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/glsl.vim	/^  let b:current_syntax = "glsl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gmpl.vim	/^let b:current_syntax = "gmpl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gnuplot.vim	/^let b:current_syntax = "gnuplot"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/go.vim	/^let b:current_syntax = "go"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godebugoutput.vim	/^let b:current_syntax = "godebugoutput"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godebugstacktrace.vim	/^let b:current_syntax = "godebugoutput"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godebugvariables.vim	/^let b:current_syntax = "godebugvariables"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/godefstack.vim	/^let b:current_syntax = "godefstack"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gohtmltmpl.vim	/^let b:current_syntax = "gohtmltmpl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/gotexttmpl.vim	/^let b:current_syntax = "gotexttmpl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/graphql.vim	/^let b:current_syntax = 'graphql'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/groovy.vim	/^let b:current_syntax = "groovy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haproxy.vim	/^let b:current_syntax = "haproxy"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haskell.vim	/^let b:current_syntax = "haskell"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/haxe.vim	/^let b:current_syntax = "haxe"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jasmine.vim	/^let b:current_syntax = "jasmine"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jinja2.vim	/^let b:current_syntax = "jinja2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jinja2.vim	/^let b:current_syntax = ''$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/json.vim	/^let b:current_syntax = "json"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/json5.vim	/^  let b:current_syntax = 'json5'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/jst.vim	/^let b:current_syntax = 'jst'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/julia.vim	/^let b:current_syntax = "julia"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/kotlin.vim	/^let b:current_syntax = "kotlin"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/less.vim	/^let b:current_syntax = "less"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/liquid.vim	/^let b:current_syntax = 'liquid'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/litcoffee.vim	/^let b:current_syntax = "litcoffee"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ls.vim	/^  let b:current_syntax = 'livescript'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ls.vim	/^let b:current_syntax = "ls"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/lua.vim	/^let b:current_syntax = "lua"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mako.vim	/^let b:current_syntax = b:mako_outer_lang$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/markdown.vim	/^let b:current_syntax = "mkd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mason.vim	/^let b:current_syntax = "mason"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mma.vim	/^let b:current_syntax = "mma"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/mustache.vim	/^let b:current_syntax = "mustache"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nginx.vim	/^let b:current_syntax = "nginx"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nim.vim	/^let b:current_syntax = "nim"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/nix.vim	/^let b:current_syntax = "nix"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ocaml.vim	/^let b:current_syntax = "ocaml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/octave.vim	/^let b:current_syntax = "octave"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/opencl.vim	/^let b:current_syntax = "opencl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/perl.vim	/^let b:current_syntax = "perl"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pgsql.vim	/^let b:current_syntax = "pgsql"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/php.vim	/^let b:current_syntax = "php"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/plantuml.vim	/^let b:current_syntax = 'plantuml'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pod.vim	/^let b:current_syntax = "pod"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/proto.vim	/^let b:current_syntax = "proto"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ps1.vim	/^let b:current_syntax = "ps1"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ps1xml.vim	/^let b:current_syntax = "ps1xml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/pug.vim	/^let b:current_syntax = "pug"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/puppet.vim	/^let b:current_syntax = "puppet"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/purescript.vim	/^let b:current_syntax = "purescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/python.vim	/^let b:current_syntax = 'python'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/qml.vim	/^let b:current_syntax = "qml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/racket.vim	/^let b:current_syntax = "racket"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ragel.vim	/^let b:current_syntax = "ragel"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/raml.vim	/^let b:current_syntax = "raml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rhelp.vim	/^let   b:current_syntax = "rhelp"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rnoweb.vim	/^let   b:current_syntax = "rnoweb"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/rust.vim	/^let b:current_syntax = "rust"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scala.vim	/^let b:current_syntax = "scala"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scala.vim	/^let b:current_syntax = 'scala'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slim.vim	/^let b:current_syntax = "slim"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/slime.vim	/^let b:current_syntax = "slime"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/stylus.vim	/^let b:current_syntax = "stylus"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/swift.vim	/^let b:current_syntax = "swift"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/sxhkdrc.vim	/^let b:current_syntax = "sxhkdrc"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/systemd.vim	/^let b:current_syntax = "systemd"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tap.vim	/^let b:current_syntax="tapVerboseOutput"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/terraform.vim	/^let b:current_syntax = "terraform"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/thrift.vim	/^let b:current_syntax = "thrift"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tmux.vim	/^let b:current_syntax = 'tmux'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/toml.vim	/^let b:current_syntax = "toml"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tt2.vim	/^let b:current_syntax = "tt2"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tt2html.vim	/^let b:current_syntax = "tt2html"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/tt2js.vim	/^let b:current_syntax = "tt2js"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/typescript.vim	/^let b:current_syntax = "typescript"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vala.vim	/^let b:current_syntax = "vala"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vbnet.vim	/^let b:current_syntax = "vbnet"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/velocity.vim	/^let b:current_syntax = "velocity"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vifm.vim	/^let b:current_syntax = 'vifm'$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vimgo.vim	/^let b:current_syntax = "vimgo"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/vue.vim	/^let b:current_syntax = "vue"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xs.vim	/^let b:current_syntax = "xs"$/;"	v
b:current_syntax	plugged/vim-polyglot/syntax/xsl.vim	/^let b:current_syntax = "xsl"$/;"	v
b:current_syntax	plugged/vim-ruby/syntax/eruby.vim	/^let b:current_syntax = 'eruby'$/;"	v
b:current_syntax	plugged/vim-ruby/syntax/ruby.vim	/^let b:current_syntax = "ruby"$/;"	v
b:current_syntax	plugged/vim-startify/syntax/startify.vim	/^let b:current_syntax = 'startify'$/;"	v
b:did_after_plugin_ultisnips_after	plugged/ultisnips/after/plugin/UltiSnips_after.vim	/^let b:did_after_plugin_ultisnips_after = 1$/;"	v
b:did_autoload_ultisnips	plugged/ultisnips/autoload/UltiSnips.vim	/^let b:did_autoload_ultisnips = 1$/;"	v
b:did_autoload_ultisnips_map_keys	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^let b:did_autoload_ultisnips_map_keys = 1$/;"	v
b:did_ftplugin	plugged/ultisnips/ftplugin/snippets.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ansible_hosts.vim	/^  let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/blade.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/coffee.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/crystal.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/dart.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/elm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/git.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitconfig.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/graphql.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/less.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ls.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mako.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/mma.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/nix.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:did_ftplugin=1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/opencl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ps1.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ps1xml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/qml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/r.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rhelp.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/rust.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/scala.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/toml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/typescript.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vifm-cmdedit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vifm-edit.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vifm-rename.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-polyglot/ftplugin/vifm.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-rails/ftplugin/railslog.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-ruby/ftplugin/eruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	plugged/vim-ruby/ftplugin/ruby.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin_alchemist	plugged/alchemist.vim/after/ftplugin/elixir.vim	/^let b:did_ftplugin_alchemist = 1$/;"	v
b:did_indent	plugged/vim-polyglot/after/indent/jsx.vim	/^  let b:did_indent=s:did_indent$/;"	v
b:did_indent	plugged/vim-polyglot/indent/arduino.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/autohotkey.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/blade.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cabal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/caddyfile.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/clojure.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cmake.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/coffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/crystal.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cucumber.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/cython.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/dart.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/eelixir.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/elixir.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/elm.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ember-script.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/erlang.vim	/^  let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/fsharp.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/gitconfig.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/go.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/graphql.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/handlebars.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/haskell.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/html.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/json.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/jst.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/kotlin.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/liquid.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/litcoffee.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ls.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/lua.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/mako.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/markdown.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/nginx.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/nim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/nix.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ocaml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/opencl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/perl.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/plantuml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/proto.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ps1.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/pug.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/puppet.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/purescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/python.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/qml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/racket.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/rust.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/scala.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/slim.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/slime.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/solidity.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/stylus.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/swift.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/terraform.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/tex.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/typescript.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vala.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-polyglot/indent/vue.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-ruby/indent/eruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	plugged/vim-ruby/indent/ruby.vim	/^let b:did_indent = 1$/;"	v
b:did_indent_hbs	plugged/vim-polyglot/indent/handlebars.vim	/^let b:did_indent_hbs = 1$/;"	v
b:done_vimsnippets	plugged/vim-snippets/plugin/vimsnippets.vim	/^let b:done_vimsnippets = 1$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.eelixir\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'elixir'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'javascript'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'text'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = 'yaml'$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = g:eelixir_default_subtype$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(&filetype,'^eex\\.\\zs\\w\\+')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^    let b:eelixir_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.eex\\|\\.eelixir\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:eelixir_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^  let b:eelixir_subtype = matchstr(s:lines,'eelixir_subtype=\\zs\\w\\+')$/;"	v
b:eelixir_subtype_indentexpr	plugged/vim-polyglot/indent/eelixir.vim	/^let b:eelixir_subtype_indentexpr = &l:indentexpr$/;"	v
b:elixir_no_expensive	plugged/vim-polyglot/syntax/slime.vim	/^let b:elixir_no_expensive = 1$/;"	v
b:endwise_addition	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_addition = 'end'$/;"	v
b:endwise_addition	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_addition = '\\=index(["note","legend"], submatch(0))!=-1 ? "end " . submatch(0) : "end"'$/;"	v
b:endwise_pattern	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_pattern = '^\\s*\\zs\\<\\(loop\\|group\\|alt\\|note\\ze[^:]*$\\|legend\\)\\>.*$'$/;"	v
b:endwise_syngroups	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_syngroups = 'fishKeyword,fishConditional,fishRepeat'$/;"	v
b:endwise_syngroups	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_syngroups = 'plantumlKeyword'$/;"	v
b:endwise_words	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:endwise_words = 'begin,function,if,switch,while,for'$/;"	v
b:endwise_words	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:endwise_words = 'loop,group,alt,note,legend'$/;"	v
b:erlang_syntax_synced	plugged/vim-polyglot/syntax/erlang.vim	/^let b:erlang_syntax_synced = 1$/;"	v
b:eruby_nest_level	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_nest_level	plugged/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = 1$/;"	v
b:eruby_nest_level	plugged/vim-ruby/syntax/eruby.vim	/^  let b:eruby_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\|\\.example\\)\\+$','',''),'\\.\\zs\\w\\+\\%(\\ze+\\w\\+\\)\\=$')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\|\\.example\\)\\+$','',''),'\\.\\zs\\w\\+\\%(\\ze+\\w\\+\\)\\=$')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-polyglot/syntax/nginx.vim	/^let b:eruby_subtype = ''$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\|\\.example\\)\\+$','',''),'\\.\\zs\\w\\+\\%(\\ze+\\w\\+\\)\\=$')$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'html'$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'javascript'$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'ruby'$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'text'$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = 'yaml'$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = g:eruby_default_subtype$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^    let b:eruby_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.erb\\|\\.eruby\\|\\.erubis\\|\\.example\\)\\+$','',''),'\\.\\zs\\w\\+\\%(\\ze+\\w\\+\\)\\=$')$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(&filetype,'^eruby\\.\\zs\\w\\+')$/;"	v
b:eruby_subtype	plugged/vim-ruby/syntax/eruby.vim	/^  let b:eruby_subtype = matchstr(s:lines,'eruby_subtype=\\zs\\w\\+')$/;"	v
b:eruby_subtype_indentexpr	plugged/vim-polyglot/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:eruby_subtype_indentexpr	plugged/vim-ruby/indent/eruby.vim	/^let b:eruby_subtype_indentexpr = &l:indentexpr$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = $GIT_DIR$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git[\\\/]worktrees[\\\/][^\\\/]\\+\\>')$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = matchstr(expand('%:p'),'.*\\.git\\>')$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/git.vim	/^    let b:git_dir = substitute(b:git_dir,'\\\\','\/','g')$/;"	v
b:git_dir	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^  let b:git_dir = expand("%:p:h")$/;"	v
b:handlebars_subtype_indentexpr	plugged/vim-polyglot/indent/handlebars.vim	/^let b:handlebars_subtype_indentexpr = &l:indentexpr$/;"	v
b:hi_indent	plugged/vim-polyglot/indent/html.vim	/^let b:hi_indent = {"lnum": -1}$/;"	v
b:hi_lasttick	plugged/vim-polyglot/indent/html.vim	/^let b:hi_lasttick = 0$/;"	v
b:hi_newstate	plugged/vim-polyglot/indent/html.vim	/^let b:hi_newstate = {}$/;"	v
b:html_indent_usestate	plugged/vim-polyglot/indent/eruby.vim	/^let b:html_indent_usestate = 0$/;"	v
b:html_indent_usestate	plugged/vim-polyglot/indent/handlebars.vim	/^let b:html_indent_usestate = 0$/;"	v
b:html_indent_usestate	plugged/vim-ruby/indent/eruby.vim	/^let b:html_indent_usestate = 0$/;"	v
b:indent_use_syntax	plugged/vim-polyglot/indent/perl.vim	/^let b:indent_use_syntax = has("syntax")$/;"	v
b:jst_nest_level	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_nest_level = 1$/;"	v
b:jst_nest_level	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_nest_level = strlen(substitute(substitute(substitute(expand("%:t"),'@','','g'),'\\c\\.\\%(erb\\|rhtml\\)\\>','@','g'),'[^@]','','g'))$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'haml'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'html'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'javascript'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'ruby'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'text'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = 'yaml'$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = g:jst_default_subtype$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^    let b:jst_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.jst\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_subtype = matchstr(&filetype,'^jst\\.\\zs\\w\\+')$/;"	v
b:jst_subtype	plugged/vim-polyglot/syntax/jst.vim	/^  let b:jst_subtype = matchstr(s:lines,'jst_subtype=\\zs\\w\\+')$/;"	v
b:jst_subtype_indentexpr	plugged/vim-polyglot/indent/jst.vim	/^let b:jst_subtype_indentexpr = &l:indentexpr$/;"	v
b:jsx_js_indentexpr	plugged/vim-polyglot/after/indent/jsx.vim	/^let b:jsx_js_indentexpr = &indentexpr$/;"	v
b:julia_begin_keywords	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_begin_keywords = '\\%(\\%(\\.\\s*\\)\\@<!\\|\\%(@\\s*.\\s*\\)\\@<=\\)\\<\\%(\\%(staged\\)\\?function\\|macro\\|begin\\|mutable\\s\\+struct\\|\\%(mutable\\s\\+\\)\\@<!struct\\|\\%(abstract\\|primitive\\)\\s\\+type\\|\\%(\\(abstract\\|primitive\\)\\s\\+\\)\\@<!type\\|immutable\\|let\\|do\\|\\%(bare\\)\\?module\\|quote\\|if\\|for\\|while\\|try\\)\\>'$/;"	v
b:julia_begin_keywordsm	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_begin_keywordsm = '\\%(' . s:yesmacro . b:julia_begin_keywords . '\\)\\|'$/;"	v
b:julia_end_keywords	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:julia_end_keywords = '\\<end\\>'$/;"	v
b:julia_syntax_highlight_deprecated	plugged/vim-polyglot/syntax/julia.vim	/^  let b:julia_syntax_highlight_deprecated = get(g:, "julia_syntax_highlight_deprecated", 0)$/;"	v
b:julia_syntax_version	plugged/vim-polyglot/syntax/julia.vim	/^  let b:julia_syntax_version = 5$/;"	v
b:julia_syntax_version	plugged/vim-polyglot/syntax/julia.vim	/^  let b:julia_syntax_version = 6$/;"	v
b:julia_syntax_version	plugged/vim-polyglot/syntax/julia.vim	/^  let b:julia_syntax_version = 7$/;"	v
b:julia_syntax_version	plugged/vim-polyglot/syntax/julia.vim	/^  let b:julia_syntax_version = get(g:, "default_julia_version", "current")$/;"	v
b:julia_vim_loaded	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:julia_vim_loaded = 1$/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = g:liquid_default_subtype$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(&filetype,'^liquid\\.\\zs\\w\\+')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = matchstr(substitute(expand('%:t'),'\\c\\%(\\.liquid\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^    let b:liquid_subtype = s:subtype$/;"	v
b:liquid_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^  let b:liquid_subtype = matchstr(s:lines,'liquid_subtype=\\zs\\w\\+')$/;"	v
b:liquid_subtype_indentexpr	plugged/vim-polyglot/indent/liquid.vim	/^let b:liquid_subtype_indentexpr = &l:indentexpr$/;"	v
b:loaded_plantuml_plugin	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let b:loaded_plantuml_plugin = 1$/;"	v
b:main_syntax	plugged/vim-polyglot/syntax/twig.vim	/^  let b:main_syntax = 'twig'$/;"	v
b:main_syntax	plugged/vim-polyglot/syntax/twig.vim	/^  let b:main_syntax = b:current_syntax$/;"	v
b:mako_outer_lang	plugged/vim-polyglot/syntax/mako.vim	/^    let b:mako_outer_lang = "html"$/;"	v
b:mako_outer_lang	plugged/vim-polyglot/syntax/mako.vim	/^    let b:mako_outer_lang = g:mako_default_outer_lang$/;"	v
b:match_ignorecase	plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/after/ftplugin/coffee.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/elixir.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:match_ignorecase=0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/ftplugin/vifm.vim	/^	let b:match_ignorecase = 0$/;"	v
b:match_ignorecase	plugged/vim-polyglot/syntax/jst.vim	/^  let b:match_ignorecase = 1$/;"	v
b:match_ignorecase	plugged/vim-ruby/ftplugin/ruby.vim	/^  let b:match_ignorecase = 0$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_skip = 'synIDattr(synID(line("."), col("."), 0), "name") !=# "bladeKeyword"'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:match_skip = 's:comment\\|string\\|regex\\|character'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_skip =$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_skip = 'synIDattr(synID(line("."),col("."),1),"name") =~ '$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:match_skip = 's:comment\\|string\\|perlQQ\\|perlShellCommand\\|perlHereDoc\\|perlSubstitution\\|perlTranslation\\|perlMatch\\|perlFormatField'$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_skip	plugged/vim-polyglot/ftplugin/rust.vim	/^let b:match_skip = 's:comment\\|string\\|rustArrow'$/;"	v
b:match_skip	plugged/vim-ruby/ftplugin/ruby.vim	/^  let b:match_skip =$/;"	v
b:match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  let b:match_words = '^snippet\\>:^endsnippet\\>,^global\\>:^endglobal\\>,\\${:}'$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/coffee.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/after/ftplugin/jsx.vim	/^  let b:match_words = '(:),\\[:\\],{:},<:>,' .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/blade.vim	/^    let b:match_words .= ',' .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:match_words = &matchpairs$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/crystal.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/elixir.vim	/^  let b:match_words = '\\:\\@<!\\<\\%(do\\|fn\\)\\:\\@!\\>' .$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/fish.vim	/^let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:match_words = 'JuliaGetMatchWords()'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words .= ','$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words .= '\\<\\%(if\\w*\\|unless\\|case\\)\\>:\\<\\%(elsif\\|else\\|when\\)\\>:\\<end\\%(if\\w*\\|unless\\|case\\)\\>,\\<\\%(for\\|tablerow\\)\\>:\\%({%\\s*\\)\\@<=empty\\>:\\<end\\%(for\\|tablerow\\)\\>,<\\(capture\\|comment\\|highlight\\)\\>:\\<end\\1\\>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:match_words = ''$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/mustache.vim	/^  let b:match_words = b:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:match_words = b:mw$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:match_words = '\\<if\\>:\\<elsif\\>:\\<else\\>'$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/pug.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-polyglot/ftplugin/vifm.vim	/^	let b:match_words = '\\<if\\>:\\<el\\%[seif]\\>:\\<en\\%[dif]\\>'$/;"	v
b:match_words	plugged/vim-polyglot/syntax/jst.vim	/^  let b:match_words = '<:>,' .$/;"	v
b:match_words	plugged/vim-ruby/ftplugin/eruby.vim	/^  let b:match_words = s:match_words$/;"	v
b:match_words	plugged/vim-ruby/ftplugin/ruby.vim	/^  let b:match_words =$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = ''$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(for\\|while\\)\\>:\\<do\\>:\\<done\\>,'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(match\\|try\\)\\>:\\<with\\>'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<\\(object\\|sig\\|struct\\|begin\\)\\>:\\<end\\>'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<if\\>:\\<then\\>:\\<else\\>'$/;"	v
b:mw	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let b:mw = b:mw . ',\\<let\\>:\\<and\\>:\\(\\<in\\>\\|;;\\)'$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'cpp'$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'objc'$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^      let b:ragel_subtype = 'ruby'$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^    let b:ragel_subtype = g:ragel_default_subtype$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^    let b:ragel_subtype = matchstr(substitute(expand("%:t"),'\\c\\%(\\.rl\\|\\.ragel\\)\\+$','',''),'\\.\\zs\\w\\+$')$/;"	v
b:ragel_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^  let b:ragel_subtype = matchstr(s:lines, 'ragel_subtype=\\zs\\w\\+')$/;"	v
b:ran_once	plugged/vim-polyglot/indent/twig.vim	/^let b:ran_once = 1$/;"	v
b:ruby_no_expensive	plugged/vim-polyglot/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	plugged/vim-polyglot/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	plugged/vim-polyglot/syntax/slim.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:ruby_no_expensive	plugged/vim-ruby/syntax/ruby.vim	/^  let b:ruby_no_expensive = 1$/;"	v
b:ruby_version	plugged/vim-polyglot/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:ruby_version	plugged/vim-ruby/ftplugin/ruby.vim	/^    let b:ruby_version = get(readfile(s:version_file, '', 1), '')$/;"	v
b:rust_last_args	plugged/vim-polyglot/ftplugin/rust.vim	/^	let b:rust_last_args = []$/;"	v
b:rust_last_rustc_args	plugged/vim-polyglot/ftplugin/rust.vim	/^	let b:rust_last_rustc_args = []$/;"	v
b:rust_original_delimitMate_excluded_regions	plugged/vim-polyglot/ftplugin/rust.vim	/^		let b:rust_original_delimitMate_excluded_regions = b:delimitMate_excluded_regions$/;"	v
b:rust_set_conceallevel	plugged/vim-polyglot/ftplugin/rust.vim	/^	let b:rust_set_conceallevel=1$/;"	v
b:rust_set_foldmethod	plugged/vim-polyglot/ftplugin/rust.vim	/^	let b:rust_set_foldmethod=1$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/dart.vim	/^let b:spell_options = "contained"$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/groovy.vim	/^let b:spell_options="contained"$/;"	v
b:spell_options	plugged/vim-polyglot/syntax/haxe.vim	/^let b:spell_options="contained"$/;"	v
b:sql_type_override	plugged/vim-polyglot/syntax/php.vim	/^    let b:sql_type_override='mysql'$/;"	v
b:startify	plugged/vim-startify/autoload/startify.vim	/^    let b:startify.entry_number += 1$/;"	v
b:surround_35	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_35 = "<%# \\r %>"$/;"	v
b:surround_45	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_45 = "<% \\r %>"$/;"	v
b:surround_5	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_5 = "<% \\r %>\\n<% end %>"$/;"	v
b:surround_61	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let b:surround_61 = "<%= \\r %>"$/;"	v
b:textobj_function_select	plugged/vim-textobj-function-javascript/after/ftplugin/javascript/textobj-function.vim	/^let b:textobj_function_select = function('textobj#function#javascript#select')$/;"	v
b:tt2_syn_inc_perl	plugged/vim-polyglot/syntax/tt2.vim	/^    let b:tt2_syn_inc_perl = 1$/;"	v
b:tt2_syn_tags	plugged/vim-polyglot/syntax/tt2.vim	/^    let b:tt2_syn_tags = '\\[% %]'$/;"	v
b:ultisnips_override_snipmate	plugged/ultisnips/syntax/snippets_snipmate.vim	/^let b:ultisnips_override_snipmate = 1$/;"	v
b:undo_ftplugin	plugged/ultisnips/ftplugin/snippets.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^  let b:undo_ftplugin .= ' | execute "iunmap <buffer> *"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^  let b:undo_ftplugin .= ' | execute "iunmap <buffer> +"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^  let b:undo_ftplugin .= ' | execute "iunmap <buffer> -"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^  let b:undo_ftplugin .= ' | execute "iunmap <buffer> <A-Left>"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^  let b:undo_ftplugin .= ' | execute "iunmap <buffer> <A-Right>"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^  let b:undo_ftplugin .= ' | execute "iunmap <buffer> <S-Tab>"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^  let b:undo_ftplugin .= ' | execute "iunmap <buffer> <Tab>"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^  let b:undo_ftplugin .= ' | execute "sunmap <buffer> <A-Left>"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^  let b:undo_ftplugin .= ' | execute "sunmap <buffer> <A-Right>"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^  let b:undo_ftplugin .= ' | execute "sunmap <buffer> <S-Tab>"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^  let b:undo_ftplugin .= ' | execute "sunmap <buffer> <Tab>"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^  let b:undo_ftplugin .= ' | set conceallevel<'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | execute "iunmap <buffer> ''"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | execute "iunmap <buffer> ***"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | execute "iunmap <buffer> --"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | execute "iunmap <buffer> ->"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | execute "iunmap <buffer> <-"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | execute "iunmap <buffer> <->"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | execute "iunmap <buffer> <CR>"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | execute "iunmap <buffer> @"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | execute "vunmap <buffer> <Leader>en"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | execute "vunmap <buffer> <Leader>sn"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | execute "vunmap <buffer> <Leader>tn"'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | execute ''iunmap <buffer> "'''$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | set comments< formatoptions<'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | set completefunc<'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | set foldmethod< foldexpr< foldtext<'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | set includeexpr<'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | set omnifunc<'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin .= ' | set tabstop< shiftwidth< expandtab<'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin = 'set autoindent<'$/;"	v
b:undo_ftplugin	plugged/vim-notes/ftplugin/notes.vim	/^let b:undo_ftplugin = 'set iskeyword<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin .= ' | setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/after/ftplugin/javascript.vim	/^  let b:undo_ftplugin = 'setlocal iskeyword< suffixesadd<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ansible_hosts.vim	/^let b:undo_ftplugin = "setl comments< commentstring< formatoptions<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^		let b:undo_ftplugin .= ' | setlocal ' . s:setting . '<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | setlocal path<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:browsefilter'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^	let b:undo_ftplugin .= ' | unlet! b:match_words b:match_skip'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/clojure.vim	/^let b:undo_ftplugin = 'setlocal iskeyword< define< formatoptions< comments< commentstring< lispwords<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cucumber.vim	/^  let b:undo_ftplugin .=$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let b:undo_ftplugin = "setl fo< com< cms< ofu<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/dart.vim	/^let b:undo_ftplugin = 'setl et< fo< sw< sts< com< cms< inex< isf<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let b:undo_ftplugin = "setl cms< " .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/elixir.vim	/^let b:undo_ftplugin = 'setlocal sw< sts< et< isk< com< cms< path< inex< sua< def<'.$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/git.vim	/^let b:undo_ftplugin = "setl keywordprg< path< includeexpr<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = 'setl modeline< tabstop< formatoptions< tw< com< cms<'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|delc DiffGitCached"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitconfig.vim	/^let b:undo_ftplugin = "setl fo< com< cms<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^  let b:undo_ftplugin = ""$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin . "|nunmap <buffer> K"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^let b:undo_ftplugin = b:undo_ftplugin."|setl com< cms< fo< ml<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^    let b:undo_ftplugin .= " | call julia_blocks#remove_mappings()"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:undo_ftplugin = b:undo_ftplugin . " | unlet! b:browsefilter"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/julia.vim	/^let b:undo_ftplugin = "setlocal include< suffixesadd< comments< commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/less.vim	/^let b:undo_ftplugin = "setl cms< def< inc< inex< ofu< sua<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:undo_ftplugin .= '|'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/liquid.vim	/^let b:undo_ftplugin .= 'setl cms< | unlet! b:browsefilter b:match_words'$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/perl.vim	/^let b:undo_ftplugin = "setlocal fo< com< cms< inc< inex< def< isk< isf< kp< path<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ps1.vim	/^let b:undo_ftplugin = "setlocal tw< cms< fo<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ps1xml.vim	/^let b:undo_ftplugin = "setlocal tw< cms< fo<" .$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/pug.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/qml.vim	/^let b:undo_ftplugin =$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:undo_ftplugin .= "| sil! cunmap <buffer> <Plug><cword>| sil! cunmap <buffer> <Plug><cfile>"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< tags< kp<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/rust.vim	/^let b:undo_ftplugin = "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/slim.vim	/^let b:undo_ftplugin = "setl isk<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/stylus.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/twig.vim	/^  let b:undo_ftplugin .= "|setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/twig.vim	/^  let b:undo_ftplugin = "setlocal comments< formatoptions<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/typescript.vim	/^let b:undo_ftplugin = "setl fo< ofu< com< cms<"$/;"	v
b:undo_ftplugin	plugged/vim-polyglot/ftplugin/vifm.vim	/^let b:undo_ftplugin = "setlocal formatoptions< comments< textwidth< commentstring<"$/;"	v
b:undo_ftplugin	plugged/vim-rails/ftplugin/railslog.vim	/^  let b:undo_ftplugin .= ' concealcursor< conceallevel<'$/;"	v
b:undo_ftplugin	plugged/vim-rails/ftplugin/railslog.vim	/^let b:undo_ftplugin .= ' noreadonly modifiable'$/;"	v
b:undo_ftplugin	plugged/vim-rails/ftplugin/railslog.vim	/^let b:undo_ftplugin .= '|set swapfile< autoread<'$/;"	v
b:undo_ftplugin	plugged/vim-rails/ftplugin/railslog.vim	/^let b:undo_ftplugin .= '|sil! nunmap <buffer> R|sil! nunmap <buffer> G|sil! nunmap <buffer> q'$/;"	v
b:undo_ftplugin	plugged/vim-rails/ftplugin/railslog.vim	/^let b:undo_ftplugin = get(b:, 'undo_ftplugin', 'exe')$/;"	v
b:undo_ftplugin	plugged/vim-ruby/ftplugin/eruby.vim	/^let b:undo_ftplugin = "setl cms< "$/;"	v
b:undo_ftplugin	plugged/vim-ruby/ftplugin/ruby.vim	/^    let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-ruby/ftplugin/ruby.vim	/^  let b:undo_ftplugin = b:undo_ftplugin$/;"	v
b:undo_ftplugin	plugged/vim-ruby/ftplugin/ruby.vim	/^let b:undo_ftplugin .= "| sil! cunmap <buffer> <Plug><cword>| sil! cunmap <buffer> <Plug><cfile>"$/;"	v
b:undo_ftplugin	plugged/vim-ruby/ftplugin/ruby.vim	/^let b:undo_ftplugin = "setl fo< inc< inex< sua< def< com< cms< path< tags< kp<"$/;"	v
b:undo_ftplugin	plugged/vim-textobj-function-javascript/after/ftplugin/javascript/textobj-function.vim	/^  let b:undo_ftplugin .= ' | '$/;"	v
b:undo_ftplugin	plugged/vim-textobj-function-javascript/after/ftplugin/javascript/textobj-function.vim	/^  let b:undo_ftplugin = ''$/;"	v
b:undo_ftplugin	plugged/vim-textobj-function-javascript/after/ftplugin/javascript/textobj-function.vim	/^let b:undo_ftplugin .= 'unlet! b:textobj_function_select'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/arduino.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/autohotkey.vim	/^let b:undo_indent = 'setlocal '.join([$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/clojure.vim	/^	let b:undo_indent .= '| setlocal lisp<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/clojure.vim	/^let b:undo_indent = 'setlocal autoindent< smartindent< expandtab< softtabstop< shiftwidth< indentexpr< indentkeys<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/cucumber.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/dart.vim	/^let b:undo_indent = 'setl cin< cino<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/gitconfig.vim	/^let b:undo_indent = 'setl ai< inde< indk<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/html.vim	/^let b:undo_indent = "setlocal inde< indk<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/javascript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/proto.vim	/^let b:undo_indent = "setl cin<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/ps1.vim	/^let b:undo_indent = "setl si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/racket.vim	/^let b:undo_indent = "setl ai< si<"$/;"	v
b:undo_indent	plugged/vim-polyglot/indent/typescript.vim	/^let b:undo_indent = 'setlocal indentexpr< smartindent< autoindent< indentkeys<'$/;"	v
b:vala_minlines	plugged/vim-polyglot/syntax/vala.vim	/^  let b:vala_minlines = 50$/;"	v
b:vala_minlines	plugged/vim-polyglot/syntax/vala.vim	/^  let b:vala_minlines = vala_minlines$/;"	v
balanced	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^    def balanced(astr):$/;"	f	function:_balanced
balanced	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^balanced = _balanced()  # noqa: E305$/;"	v
bang	autoload/plug.vim	/^function! s:bang(cmd, ...)$/;"	f
bar	autoload/plug.vim	/^function! s:bar()$/;"	f
bar	plugged/vim-ruby/spec/indent/continuations_spec.rb	/^      def bar($/;"	f
bar	plugged/vim-textobj-ruby/test/test.rb	/^    def self.bar(tsura, poyo)$/;"	F	class:Main.Hoge
base.__empty	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__empty(...)$/;"	f
base.__execute	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__execute(command)$/;"	f
base.__execute__	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__execute__(cmd)$/;"	f
base.__finish	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__finish()$/;"	f
base.__get_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__get_keymapping()$/;"	f
base.__init	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__init()$/;"	f
base.__init_variables	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__init_variables()$/;"	f
base.__input	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__input(input, ...)$/;"	f
base.__input_char	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__input_char(char)$/;"	f
base.__inputting	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__inputting()$/;"	f
base.__is_exit	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__is_exit()$/;"	f
base.__keymapping__	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__keymapping__()$/;"	f
base.__main	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__main(...)$/;"	f
base.__update	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__update()$/;"	f
base.backward	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.backward()$/;"	f
base.backward	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.backward()$/;"	f
base.backward_word	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.backward_word(...)$/;"	f
base.call	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.call(func, ...)$/;"	f
base.callevent	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.callevent(event)$/;"	f
base.char	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.char()$/;"	f
base.cmap	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cmap(lhs, rhs)$/;"	f
base.cnoremap	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cnoremap(lhs, rhs)$/;"	f
base.connect	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.connect(module, ...)$/;"	f
base.connect	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.connect(slot)$/;"	f
base.cunmap	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cunmap(lhs)$/;"	f
base.disable_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.disable_keymapping()$/;"	f
base.disconnect	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.disconnect(name)$/;"	f
base.disconnect	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.disconnect(slot)$/;"	f
base.disconnect_by	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.disconnect_by(expr)$/;"	f
base.draw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.draw()$/;"	f
base.enable_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.enable_keymapping()$/;"	f
base.execute	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.execute(...)$/;"	f
base.exit	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.exit(...)$/;"	f
base.exit_code	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.exit_code()$/;"	f
base.find_by	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.find_by(expr)$/;"	f
base.find_first_by	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.find_first_by(expr)$/;"	f
base.forward	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.forward()$/;"	f
base.forward	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.forward()$/;"	f
base.get	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get(...)$/;"	f
base.get_module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_module(name)$/;"	f
base.get_prompt	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_prompt()$/;"	f
base.get_slot	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.get_slot(val)$/;"	f
base.get_suffix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_suffix()$/;"	f
base.get_tap_key	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_tap_key()$/;"	f
base.getchar	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getchar(...)$/;"	f
base.getline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getline()$/;"	f
base.getpos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getpos()$/;"	f
base.hl_cursor_off	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_off()$/;"	f
base.hl_cursor_on	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_on()$/;"	f
base.input	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.input(str)$/;"	f
base.input_key	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key()$/;"	f
base.input_key_stack	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack()$/;"	f
base.input_key_stack_pop	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_pop()$/;"	f
base.input_key_stack_string	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_string()$/;"	f
base.insert	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.insert(word, ...)$/;"	f
base.is_enable_keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_enable_keymapping()$/;"	f
base.is_exit	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_exit()$/;"	f
base.is_input	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_input(key, ...)$/;"	f
base.keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.keymapping()$/;"	f
base.length	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.length()$/;"	f
base.next	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.next()$/;"	f
base.pos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.pos()$/;"	f
base.pos_char	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.pos_char()$/;"	f
base.prev	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.prev()$/;"	f
base.remove	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove(index)$/;"	f
base.remove_next	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_next()$/;"	f
base.remove_pos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_pos()$/;"	f
base.remove_prev	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_prev()$/;"	f
base.set	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set(item)$/;"	f
base.set_input_key_stack	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_input_key_stack(stack)$/;"	f
base.set_pos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set_pos(pos)$/;"	f
base.set_prompt	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_prompt(prompt)$/;"	f
base.set_str	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set_str(str)$/;"	f
base.set_suffix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_suffix(str)$/;"	f
base.setchar	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setchar(char, ...)$/;"	f
base.setline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setline(line)$/;"	f
base.setpos	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setpos(pos)$/;"	f
base.slots	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.slots()$/;"	f
base.sort_by	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.sort_by(expr)$/;"	f
base.start	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.start(...)$/;"	f
base.str	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.str()$/;"	f
base.tap_keyinput	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.tap_keyinput(key)$/;"	f
base.untap_keyinput	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.untap_keyinput(key)$/;"	f
base.variables.modules.get_slot	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	function! s:base.variables.modules.get_slot(val)$/;"	f
basename	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def basename(self):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
batchfile	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            batchfile = True,$/;"	v
bb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal bb$/;"	m
beep	plugged/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
before	plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def before(string)$/;"	f
before	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def before(string)$/;"	f
before_run	plugged/vim-test/autoload/test.vim	/^function! s:before_run() abort$/;"	f
between	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def between(marker, what=None, keepempty=False, exclude=False):$/;"	f
bh	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal bh$/;"	m
binary_search	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
binary_search	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
binary_search_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^from deoplete.util import binary_search_begin, binary_search_end$/;"	i
binary_search_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def binary_search_begin(l, prefix):$/;"	f
binary_search_end	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^from deoplete.util import binary_search_begin, binary_search_end$/;"	i
binary_search_end	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def binary_search_end(l, prefix):$/;"	f
binary_search_lines_by_prefix	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^def binary_search_lines_by_prefix(prefix, filename):$/;"	f
bindeval	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def bindeval(text):$/;"	f
binsert_r	plugged/vim-misc/autoload/xolox/misc/list.vim	/^function! s:binsert_r(list, low, high, value, ignorecase)$/;"	f
blank	plugged/goyo.vim/autoload/goyo.vim	/^function! s:blank(repel)$/;"	f
block_border_p	plugged/vim-textobj-indent/autoload/textobj/indent.vim	/^function! s:block_border_p(indent,base_indent,include_empty_lines_p,type) "{{{2$/;"	f
bm#add_bookmark	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#add_bookmark(file, sign_idx, line_nr, content, ...)$/;"	f
bm#all_bookmarks_by_line	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#all_bookmarks_by_line(file)$/;"	f
bm#all_files	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#all_files()$/;"	f
bm#all_lines	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#all_lines(file)$/;"	f
bm#compare_lines	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#compare_lines(line_str1, line_str2)$/;"	f
bm#del_all	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#del_all()$/;"	f
bm#del_bookmark_at_line	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#del_bookmark_at_line(file, line_nr)$/;"	f
bm#deserialize	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#deserialize(data)$/;"	f
bm#get_bookmark_by_line	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#get_bookmark_by_line(file, line_nr)$/;"	f
bm#get_bookmark_by_sign	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#get_bookmark_by_sign(file, sign_idx)$/;"	f
bm#has_bookmark_at_line	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#has_bookmark_at_line(file, line_nr)$/;"	f
bm#has_bookmarks_in_file	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#has_bookmarks_in_file(file)$/;"	f
bm#is_bookmark_has_annotation_by_line	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#is_bookmark_has_annotation_by_line(file, line_nr)$/;"	f
bm#location_list	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#location_list()$/;"	f
bm#next	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#next(file, current_line_nr)$/;"	f
bm#prev	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#prev(file, current_line_nr)$/;"	f
bm#serialize	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#serialize()$/;"	f
bm#total_count	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#total_count()$/;"	f
bm#update_annotation	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#update_annotation(file, sign_idx, annotation)$/;"	f
bm#update_bookmark_for_sign	plugged/vim-bookmarks/autoload/bm.vim	/^function! bm#update_bookmark_for_sign(file, sign_idx, new_line_nr, new_content)$/;"	f
bm_sign#add	plugged/vim-bookmarks/autoload/bm_sign.vim	/^function! bm_sign#add(file, line_nr, is_annotation)$/;"	f
bm_sign#add_at	plugged/vim-bookmarks/autoload/bm_sign.vim	/^function! bm_sign#add_at(file, sign_idx, line_nr, is_annotation)$/;"	f
bm_sign#define_highlights	plugged/vim-bookmarks/autoload/bm_sign.vim	/^function! bm_sign#define_highlights()$/;"	f
bm_sign#del	plugged/vim-bookmarks/autoload/bm_sign.vim	/^function! bm_sign#del(file, sign_idx)$/;"	f
bm_sign#init	plugged/vim-bookmarks/autoload/bm_sign.vim	/^function! bm_sign#init()$/;"	f
bm_sign#lazy_init	plugged/vim-bookmarks/autoload/bm_sign.vim	/^function! bm_sign#lazy_init()$/;"	f
bm_sign#lines_for_signs	plugged/vim-bookmarks/autoload/bm_sign.vim	/^function! bm_sign#lines_for_signs(file)$/;"	f
bm_sign#update_at	plugged/vim-bookmarks/autoload/bm_sign.vim	/^function! bm_sign#update_at(file, sign_idx, line_nr, is_annotation)$/;"	f
body_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let body_attributes = {'onafterprint': [], 'onbeforeprint': [], 'onbeforeunload': [], 'onblur': [], 'onerror': [], 'onfocus': [], 'onhashchange': [], 'onload': [], 'onmessage': [], 'onoffline': [], 'ononline': [], 'onpopstate': [], 'onredo': [], 'onresize': [], 'onstorage': [], 'onundo': [], 'onunload': []}$/;"	v
body_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let body_attributes = {}$/;"	v
bold	plugged/deoplete-jedi/tests/sphinx-3000.py	/^from sphinx.util.console import bold, darkgreen$/;"	i
bookmark	plugged/vim-bookmarks/t/bm_spec.vim	/^    let bookmark = bm#get_bookmark_by_line('foo', 3)$/;"	v
bookmark	plugged/vim-bookmarks/t/bm_spec.vim	/^    let bookmark = bm#get_bookmark_by_line('foo', 5)$/;"	v
bookmark	plugged/vim-bookmarks/t/bm_spec.vim	/^    let bookmark = bm#get_bookmark_by_sign('foo', 1)$/;"	v
bookmark_add	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:bookmark_add(file, line_nr, ...)$/;"	f
bookmark_remove	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:bookmark_remove(file, line_nr)$/;"	f
bookmark_save_file	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:bookmark_save_file(file)$/;"	f
bool_option	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def bool_option(arg):$/;"	f
bracket_type	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:bracket_type(char)$/;"	f
break	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
break	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
bsub	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:bsub(target,pattern,replacement)$/;"	f
btags_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_sink(lines)$/;"	f
btags_source	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:btags_source(tag_cmds)$/;"	f
buf	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^buf = VimBuffer()  # pylint:disable=invalid-name$/;"	v
buffer	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def buffer(self):$/;"	m	class:SnippetUtil
buffer	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_app	plugged/vim-rails/autoload/rails.vim	/^function! s:buffer_app() dict abort$/;"	f
buffer_commit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_fragment	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def buffer_fragment(self):$/;"	m	class:Source
buffer_getline	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getline	plugged/vim-rails/autoload/rails.vim	/^function! s:buffer_getline(...) dict abort$/;"	f
buffer_getvar	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_getvar	plugged/vim-rails/autoload/rails.vim	/^function! s:buffer_getvar(varname) dict abort$/;"	f
buffer_line_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_line_handler(lines)$/;"	f
buffer_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buffer_lines()$/;"	f
buffer_lines	plugged/vim-rails/autoload/rails.vim	/^function! s:buffer_lines() dict abort$/;"	f
buffer_maps	plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ('', '')$/;"	v	class:_SelectModeMappings
buffer_maps	plugged/ultisnips/test/test_Selection.py	/^    buffer_maps = ('H', 'blah')$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
buffer_name	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^from powerline.bindings.vim import (vim_get_func, buffer_name)$/;"	i
buffer_name	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_name	plugged/vim-rails/autoload/rails.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_number	plugged/vim-rails/autoload/rails.vim	/^function! s:buffer_number() dict abort$/;"	f
buffer_path	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_path	plugged/vim-rails/autoload/rails.vim	/^function! s:buffer_path() dict abort$/;"	f
buffer_repo	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_setvar	plugged/vim-rails/autoload/rails.vim	/^function! s:buffer_setvar(varname, val) dict abort$/;"	f
buffer_sha1	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_slice	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def buffer_slice(self, buf, start, end):$/;"	m	class:Source
buffer_spec	plugged/vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_type_name	plugged/vim-rails/autoload/rails.vim	/^function! s:buffer_type_name(...) dict abort$/;"	f
buffer_up	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
buffers	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^    let buffers = tabpagebuflist(curtab)$/;"	v
buflisted	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buflisted()$/;"	f
buflisted_sorted	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:buflisted_sorted()$/;"	f
bufopen	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:bufopen(lines)$/;"	f
build	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def build(self, docnames, summary=None, method='update'):$/;"	m	class:Builder
build	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def build(self, force_all=False, filenames=None):$/;"	m	class:Sphinx
build_all	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def build_all(self):$/;"	m	class:Builder
build_buffer_content	plugged/far.vim/autoload/far.vim	/^function! s:build_buffer_content(far_ctx, win_params) abort "{{{$/;"	f
build_command	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^function! s:build_command(base, capture_args, splitmode, as)$/;"	f
build_command	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:build_command(color)$/;"	f
build_command	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:build_command(cmd)$/;"	f
build_helpbook	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def build_helpbook(self):$/;"	m	class:AppleHelpBuilder
build_parameter_declaration_position_pairs	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:build_parameter_declaration_position_pairs(parameters)$/;"	f
build_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:build_path(path) abort$/;"	f
build_path	plugged/vim-ruby/ftplugin/ruby.vim	/^function! s:build_path(path) abort$/;"	f
build_rake_args	plugged/vim-test/autoload/test/ruby/minitest.vim	/^function! s:build_rake_args(path, args) abort$/;"	f
build_ruby_args	plugged/vim-test/autoload/test/ruby/minitest.vim	/^function! s:build_ruby_args(path, args) abort$/;"	f
build_sections	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:build_sections(builder, context, keys)$/;"	f
build_specific	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def build_specific(self, filenames):$/;"	m	class:Builder
build_update	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def build_update(self):$/;"	m	class:Builder
byte2col	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    as_unicode, as_vimencoding$/;"	i
byte2col	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def byte2col(line, nbyte):$/;"	f
byte2col	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^from UltiSnips.compatibility import as_unicode, byte2col$/;"	i
byte_string	plugged/vim-notes/misc/notes/search-notes.py	/^    byte_string = bytes$/;"	v
byte_string	plugged/vim-notes/misc/notes/search-notes.py	/^    byte_string = str$/;"	v
bytepos2charpos	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^from deoplete.util import (bytepos2charpos, charpos2bytepos, error, error_tb,$/;"	i
bytepos2charpos	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def bytepos2charpos(encoding, input, pos):$/;"	f
c	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def c(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
c	plugged/vim-airline/t/airline.vim	/^    let c = len(g:airline_statusline_funcrefs)$/;"	v
c	plugged/vim-textobj-user/t/script-local.vim	/^    let c = s:counter$/;"	v
cS	plugged/vim-surround/plugin/surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
cache	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^from deoplete_jedi import cache, profiler, utils, worker$/;"	i
cache.exists	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^  function cache.exists(pathname) dict$/;"	f
cache_clear	plugged/vim-rails/autoload/rails.vim	/^function! s:cache_clear(...) dict$/;"	f
cache_context	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^def cache_context(filename, context, source, extra_path):  # noqa: C901$/;"	f
cache_get	plugged/vim-rails/autoload/rails.vim	/^function! s:cache_get(...) dict abort$/;"	f
cache_needs	plugged/vim-rails/autoload/rails.vim	/^function! s:cache_needs(key, ...) dict abort$/;"	f
cache_processor_thread	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^def cache_processor_thread(compl_queue):$/;"	f
cache_set	plugged/vim-rails/autoload/rails.vim	/^function! s:cache_set(key, value, ...) dict abort$/;"	f
call	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:call(list, func, ...)$/;"	f
can_diffoff	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
can_document_member	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def can_document_member(cls, member, membername, isattr, parent):$/;"	m	class:Documenter
can_document_member	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def can_document_member(cls, member, membername, isattr, parent):$/;"	m	class:ModuleDocumenter
cancel_selection	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:cancel_selection(previous_mode, orig_pos)$/;"	f
capabilities	plugged/vim-test/spec/fixtures/webdriverio/wdio.conf.js	/^    capabilities: [{$/;"	p	class:exports.config
capture	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:capture(name)$/;"	f
capture	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:capture(...)$/;"	f
capture	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
capture_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:capture_list(...)$/;"	f
cargo#bench	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#bench(args)$/;"	f
cargo#build	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#build(args)$/;"	f
cargo#clean	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#clean(args)$/;"	f
cargo#cmd	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#cmd(args)$/;"	f
cargo#doc	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#doc(args)$/;"	f
cargo#init	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#init(args)$/;"	f
cargo#new	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#new(args)$/;"	f
cargo#run	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#run(args)$/;"	f
cargo#test	plugged/vim-polyglot/autoload/cargo.vim	/^function! cargo#test(args)$/;"	f
carp_syntax_init	plugged/vim-polyglot/syntax/carp.vim	/^    let carp_syntax_init = 1$/;"	v
cat	plugged/vim-test/autoload/test/strategy.vim	/^function! s:cat(filename) abort$/;"	f
cat2relpath	plugged/deoplete-jedi/tests/sphinx-3000.py	/^        def cat2relpath(cat):$/;"	f	function:Builder.compile_catalogs
category	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    category = 'Code signing failed'$/;"	v	class:AppleHelpCodeSigningFailed
category	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    category = 'Help indexer failed'$/;"	v	class:AppleHelpIndexerFailed
cd_to_vcs_root	plugged/vim-startify/autoload/startify.vim	/^function! s:cd_to_vcs_root(path) abort$/;"	f
centered	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class centered(nodes.Part, nodes.TextElement):$/;"	c
cexpr	plugged/vim-polyglot/autoload/dart.vim	/^function! s:cexpr(errorformat, joined_lines) abort$/;"	f
cfile	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:cfile() abort$/;"	f
cfile_delegate	plugged/vim-rails/autoload/rails.vim	/^function! s:cfile_delegate(expr) abort$/;"	f
cgc	plugged/vim-commentary/plugin/commentary.vim	/^    nmap cgc <Plug>ChangeCommentary$/;"	m
chCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node)$/;"	f
chRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node)$/;"	f
chain	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^from itertools import chain$/;"	i
changesurround	plugged/vim-surround/plugin/surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
char_range	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
char_range	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
charpos2bytepos	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^from deoplete.util import (bytepos2charpos, charpos2bytepos, error, error_tb,$/;"	i
charpos2bytepos	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def charpos2bytepos(encoding, input, pos):$/;"	f
charset	plugged/vim-polyglot/autoload/xml/html5.vim	/^let charset = [$/;"	v
charwidth	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def charwidth(c):$/;"	f
check_cfile	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! s:check_cfile(silent, filter_tags, have_args) " {{{3$/;"	f
check_custom_option	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! s:check_custom_option(old_var, new_var) abort$/;"	f
check_custom_var	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! s:check_custom_var(source_name, old_var, new_var) abort$/;"	f
check_defined	plugged/vim-airline/autoload/airline/init.vim	/^function! s:check_defined(variable, default)$/;"	f
check_defined_section	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:check_defined_section(name)$/;"	f
check_far_window_to_resize	plugged/far.vim/autoload/far.vim	/^function! s:check_far_window_to_resize(bufnr) abort "{{{$/;"	f
check_for_string	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:check_for_string()$/;"	f
check_mixed_indent	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent()$/;"	f
check_mixed_indent_file	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:check_mixed_indent_file()$/;"	f
check_module	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def check_module(self):$/;"	m	class:Documenter
check_neovim	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_neovim() abort$/;"	f
check_omnifunc	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:check_omnifunc(context) abort$/;"	f
check_output	plugged/tmux-complete.vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^from subprocess import check_output$/;"	i
check_required_python_for_deoplete	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_required_python_for_deoplete() abort$/;"	f
check_required_vim_version	plugged/ultisnips/test/test_Autotrigger.py	/^def check_required_vim_version(test):$/;"	f
check_required_vim_version	plugged/ultisnips/test/test_Editing.py	/^def check_required_vim_version(test):$/;"	f
check_ruby	autoload/plug.vim	/^function! s:check_ruby()$/;"	f
check_t_list	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_t_list() abort$/;"	f
check_timers	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:check_timers() abort$/;"	f
check_user_options	plugged/vim-startify/autoload/startify.vim	/^function! s:check_user_options(path) abort$/;"	f
checkout	autoload/plug.vim	/^function! s:checkout(spec)$/;"	f
child_text_separator	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    child_text_separator = ', '$/;"	v	class:desc_optional
child_text_separator	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    child_text_separator = ', '$/;"	v	class:desc_parameterlist
children	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def children(self):$/;"	m	class:EditableTextObject
chomp	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:chomp(str)$/;"	f
chomp	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
choose	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^function! s:choose(word)$/;"	f
choose_better_pos	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:choose_better_pos(flags, ORIG_POS, pfh, pft, pbh, pbt)$/;"	f
choose_wise	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:choose_wise(flags)$/;"	f
chop	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
chsh	autoload/plug.vim	/^function! s:chsh(swap)$/;"	f
clean	autoload/plug.vim	/^function! s:clean(force)$/;"	f
cleanup	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def cleanup(self):$/;"	m	class:Builder
clear	plugged/vim-airline/t/init.vim	/^function! s:clear()$/;"	f
clear	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:clear(dict) abort$/;"	f
clear	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clear	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:clear(bufnr)$/;"	f
clear	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clearOldFolds	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:clearOldFolds() abort dict$/;"	f
clear_message	plugged/vim-misc/autoload/xolox/misc/msg.vim	/^function! s:clear_message() " {{{1$/;"	f
clear_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def clear_snippets(self, priority, triggers):$/;"	m	class:SnippetDictionary
clear_temp	plugged/ultisnips/test/vim_interface.py	/^    def clear_temp(self):$/;"	m	class:TempFileManager
client	plugged/ultisnips/test/vim_interface.py	/^        import win32com.client$/;"	i
clock	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^    clock = time.perf_counter$/;"	v
clock	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^    clock = timeit.default_timer$/;"	v
clojure_check_for_string_worker	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_check_for_string_worker()$/;"	f
clojure_indent_pos	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_indent_pos()$/;"	f
clojure_is_method_special_case_worker	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:clojure_is_method_special_case_worker(position)$/;"	f
clojurecomplete#Complete	plugged/vim-polyglot/autoload/clojurecomplete.vim	/^function! clojurecomplete#Complete(findstart, base)$/;"	f
clone_plugin	plugged/ultisnips/test_all.py	/^def clone_plugin(plugin):$/;"	f
close	plugged/vim-peekaboo/autoload/peekaboo.vim	/^function! s:close()$/;"	f
close	plugged/vim-startify/autoload/startify.vim	/^function! s:close() abort$/;"	f
closeChildren	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeFold	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:closeFold() abort dict$/;"	f
closeFold	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:closeFold() abort dict$/;"	f
closeKindFold	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:closeKindFold(kind) abort dict$/;"	f
closeOrAscendTree	config/plugins/nerdtree.vim	/^function! s:closeOrAscendTree(dirnode)$/;"	f
closeTreeWindow	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow()$/;"	f
close_doc_win	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! s:close_doc_win()$/;"	f
closematch	plugged/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
cmd	plugged/far.vim/autoload/far.vim	/^    let cmd = ['ack', '--nogroup', '--column', '--nocolor',$/;"	v
cmd	plugged/far.vim/autoload/far.vim	/^    let cmd = ['ag', '--nogroup', '--column', '--nocolor', '--silent',$/;"	v
cmd	plugged/far.vim/autoload/far.vim	/^    let cmd = ['rg', '--no-heading', '--column', '--no-messages',$/;"	v
cmd_history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:cmd_history_sink(lines)$/;"	f
cmdheight.get	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.get()$/;"	f
cmdheight.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.restore()$/;"	f
cmdheight.save	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.save()$/;"	f
codecs	plugged/vim-notes/misc/notes/search-notes.py	/^import codecs$/;"	i
coerce_argument	plugged/vim-misc/autoload/xolox/misc/msg.vim	/^function! s:coerce_argument(value) " {{{1$/;"	f
coffee#CoffeeSetUpErrorFormat	plugged/vim-polyglot/autoload/coffee.vim	/^function! coffee#CoffeeSetUpErrorFormat()$/;"	f
coffee#CoffeeSetUpVariables	plugged/vim-polyglot/autoload/coffee.vim	/^function! coffee#CoffeeSetUpVariables()$/;"	f
col2byte	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    as_unicode, as_vimencoding$/;"	i
col2byte	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def col2byte(line, col):$/;"	f
color	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^    color = 39$/;"	v	class:tfloat
color	plugged/one/colors/one.vim	/^  fun <SID>color(r, g, b)$/;"	f
color	plugged/vim-one/colors/one.vim	/^  fun <SID>color(r, g, b)$/;"	f
color_efm	plugged/vim-rails/autoload/rails.vim	/^function! s:color_efm(pre, before, after)$/;"	f
color_helper#color_name_to_hex	plugged/vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#color_name_to_hex(color_name)$/;"	f
color_helper#dec_to_hex	plugged/vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#dec_to_hex(arg, padding)$/;"	f
color_helper#hex_color_darken	plugged/vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#hex_color_darken(color, percent)$/;"	f
color_helper#hex_color_lighten	plugged/vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#hex_color_lighten(color, percent)$/;"	f
color_helper#hex_color_to_rgb	plugged/vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#hex_color_to_rgb(hex_color)$/;"	f
color_helper#hex_to_dec	plugged/vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#hex_to_dec(arg)$/;"	f
color_helper#rgb_color_to_hex	plugged/vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#rgb_color_to_hex(rgb_color)$/;"	f
colors	plugged/vim-airline/t/themes.vim	/^    let colors = airline#themes#get_highlight('Foo')$/;"	v
column.define_syntax	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.define_syntax(context) "{{{$/;"	f
column.get	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.get(file, context)$/;"	f
column.length	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! s:column.length(files, context)$/;"	f
combinations	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
combinations	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
combine_projections	plugged/vim-rails/autoload/rails.vim	/^function! s:combine_projections(dest, src, ...) abort$/;"	f
command	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def command(cmd):$/;"	f
command	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:command(cmd, ...)$/;"	f
command	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
command	plugged/vim-test/autoload/test/strategy.vim	/^function! s:command(cmd) abort$/;"	f
command_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:command_sink(lines)$/;"	f
commands	plugged/vim-ruby-refactoring/features/support/shared_methods.rb	/^def commands$/;"	f
commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits(buffer_local, args)$/;"	f
commits_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:commits_sink(lines)$/;"	f
common#cut_visual_selection	plugged/vim-ruby-refactoring/autoload/common.vim	/^function! common#cut_visual_selection() $/;"	f
common#dedupe_list	plugged/vim-ruby-refactoring/autoload/common.vim	/^function! common#dedupe_list(target)$/;"	f
common#get_input	plugged/vim-ruby-refactoring/autoload/common.vim	/^function! common#get_input(message, error_message)$/;"	f
common#get_range_for_block	plugged/vim-ruby-refactoring/autoload/common.vim	/^function! common#get_range_for_block(pattern_start, flags)$/;"	f
common#get_visual_selection	plugged/vim-ruby-refactoring/autoload/common.vim	/^function! common#get_visual_selection(...) $/;"	f
common#gsub_all_in_range	plugged/vim-ruby-refactoring/autoload/common.vim	/^function! common#gsub_all_in_range(start_line, end_line, pattern, replace)$/;"	f
common_head	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
comp_queue	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^comp_queue = queue.Queue()$/;"	v
compact_paragraph	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class compact_paragraph(nodes.paragraph):$/;"	c
compare_by_key_len	plugged/vim-startify/autoload/startify.vim	/^  function! s:compare_by_key_len(foo, bar)$/;"	f
compare_by_kind	plugged/tagbar/autoload/tagbar/sorting.vim	/^function! s:compare_by_kind(tag1, tag2) abort$/;"	f
compare_by_line	plugged/tagbar/autoload/tagbar/sorting.vim	/^function! s:compare_by_line(tag1, tag2) abort$/;"	f
compare_by_val_len	plugged/vim-startify/autoload/startify.vim	/^  function! s:compare_by_val_len(foo, bar)$/;"	f
compare_git_uri	autoload/plug.vim	/^function! s:compare_git_uri(a, b)$/;"	f
compare_pos	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:compare_pos(l, r)$/;"	f
compare_pos	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:compare_pos(pos1, pos2)$/;"	f
compatibility	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^from UltiSnips import compatibility$/;"	i
compensate_for_pum	plugged/ultisnips/autoload/UltiSnips.vim	/^function! s:compensate_for_pum()$/;"	f
compile_all_catalogs	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def compile_all_catalogs(self):$/;"	m	class:Builder
compile_catalogs	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def compile_catalogs(self, catalogs, message):$/;"	m	class:Builder
compile_specific_catalogs	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def compile_specific_catalogs(self, specified_files):$/;"	m	class:Builder
compile_update_catalogs	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def compile_update_catalogs(self):$/;"	m	class:Builder
completation	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def completation(self, pos):$/;"	m	class:Source
complete	plugged/tmux-complete.vim/autoload/asyncomplete/sources/tmuxcomplete.vim	/^function! s:complete(params, candidates, incomplete)$/;"	f
complete	plugged/vim-snippets/pythonx/vimsnippets.py	/^def complete(tab, opts):$/;"	f
complete_dir	plugged/far.vim/autoload/far.vim	/^function! s:complete_dir(val)$/;"	f
complete_insert	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_insert(lines)$/;"	f
complete_trigger	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:complete_trigger()$/;"	f
completion_async	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_async(timer) abort$/;"	f
completion_begin	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_begin(event) abort$/;"	f
completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def completion_begin(self, context):$/;"	m	class:Deoplete
completion_dict	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def completion_dict(self, name, type_, comp):$/;"	m	class:Server
completion_filter	plugged/vim-rails/autoload/rails.vim	/^function! s:completion_filter(results, A, ...) abort$/;"	f
completion_timer_start	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_timer_start(event) abort$/;"	f
completion_timer_stop	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:completion_timer_stop() abort$/;"	f
completion_work	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^    def completion_work(self, cache_key, extra_modules, source, line, col,$/;"	m	class:Worker
completions	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def completions(self, *args):$/;"	m	class:Client
concat	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:concat(list) abort$/;"	f
concat	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:concat(list) abort$/;"	f
configured_tree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:configured_tree(git_dir) abort$/;"	f
conj	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
conj	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
connect	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def connect(self, event, callback):$/;"	m	class:Sphinx
connection_made	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def connection_made(self, transport):$/;"	m	class:Process
cons	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
cons	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
conserve	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve(self):$/;"	m	class:VisualContentPreserver
conserve_placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def conserve_placeholder(self, placeholder):$/;"	m	class:VisualContentPreserver
const	plugged/goyo.vim/autoload/goyo.vim	/^function! s:const(val, min, max)$/;"	f
contains_multibyte	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
content_indent	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    content_indent = u'   '$/;"	v	class:Documenter
content_indent	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    content_indent = u''$/;"	v	class:ModuleDocumenter
context	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def context(self):$/;"	m	class:SnippetDefinition
context	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def context(self):$/;"	m	class:SnippetUtil
context.next	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^  function context.next(n)$/;"	f
context.next_line	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^  function context.next_line()$/;"	f
context.peek	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^  function context.peek(n)$/;"	f
contextmanager	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^from contextlib import contextmanager$/;"	i
contextmanager	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^from contextlib import contextmanager$/;"	i
contextmanager	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from contextlib import contextmanager$/;"	i
continues	plugged/vim-polyglot/indent/typescript.vim	/^function s:continues(ln,con)$/;"	f
controller	plugged/vim-rails/autoload/rails.vim	/^function! s:controller(...)$/;"	f
controllerList	plugged/vim-rails/autoload/rails.vim	/^function! s:controllerList(A,L,P)$/;"	f
conv	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def conv(obj):$/;"	f	function:escape
convert2candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def convert2candidates(l):$/;"	f
convert2list	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def convert2list(expr):$/;"	f
convertMigemo	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertMigemo(re) "{{{$/;"	f
convertRegep	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertRegep(input) "{{{$/;"	f
convertSmartcase	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertSmartcase(re, char) "{{{$/;"	f
convertSmartsign	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertSmartsign(chars) "{{{$/;"	f
convert_keys	plugged/ultisnips/test/vim_interface.py	/^    def convert_keys(self, keys):$/;"	m	class:VimInterfaceWindows
convert_t_regexp	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:convert_t_regexp(re, direction) "{{{$/;"	f
converter.filter	plugged/vim-bookmarks/autoload/unite/filters/converter_vim_bookmarks_long.vim	/^function! s:converter.filter(candidates, context) " {{{$/;"	f
converter.filter	plugged/vim-bookmarks/autoload/unite/filters/converter_vim_bookmarks_short.vim	/^function! s:converter.filter(candidates, context) " {{{$/;"	f
copy	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^import copy$/;"	i
copy	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^import copy$/;"	i
copy_dir	plugged/vim-polyglot/build	/^copy_dir() {$/;"	f
copy_file	plugged/vim-polyglot/build	/^copy_file() {$/;"	f
copy_localized_files	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def copy_localized_files(self):$/;"	m	class:AppleHelpBuilder
copysource	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    copysource = False$/;"	v	class:AppleHelpBuilder
core_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let core_attributes = {'accesskey': [], 'class': [], 'contenteditable': ['true', 'false', ''], 'contextmenu': [], 'dir': ['ltr', 'rtl'], 'draggable': ['true', 'false'], 'hidden': ['hidden', ''], 'id': [], 'is': [], 'lang': lang_tag, 'spellcheck': ['true', 'false', ''], 'style': [], 'tabindex': [], 'title': []}$/;"	v
could_match	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def could_match(self, before):$/;"	m	class:SnippetDefinition
count	plugged/vim-polyglot/indent/liquid.vim	/^function! s:count(string,pattern)$/;"	f
count	plugged/vim-test/spec/fixtures/peridot/arrayobject.spec.php	/^            $count = $this->arrayObject->count();$/;"	v
count_braces	plugged/vim-polyglot/indent/stylus.vim	/^function s:count_braces(lnum, count_open)$/;"	f
counters	plugged/vim-easytags/misc/easytags/why-so-slow.py	/^counters = {}$/;"	v
cpath	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:cpath(path) abort$/;"	f
cpsm_py	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^        import cpsm_py$/;"	i
cr	plugged/supertab/plugin/supertab.vim	/^      let cr = !(map =~? '\\(^\\|[^)]\\)<cr>' || map =~ 'ExpandCr')$/;"	v
create	plugged/vim-airline/autoload/airline/section.vim	/^function! s:create(parts, append)$/;"	f
create	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^function! s:create(targets, keys) abort$/;"	f
createKinddict	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:createKinddict() abort dict$/;"	f
createLock	plugged/vim-notes/misc/notes/search-notes.py	/^        def createLock(self):$/;"	m	class:NullHandler
create_cache	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^function! s:create_cache() " {{{1$/;"	f
create_directory	plugged/ultisnips/test/vim_interface.py	/^def create_directory(dirname):$/;"	f
create_directory	plugged/ultisnips/test/vim_test_case.py	/^from test.vim_interface import create_directory, TempFileManager$/;"	i
create_far_params	plugged/far.vim/autoload/far.vim	/^function! s:create_far_params() abort$/;"	f
create_in_path	config/plugins/nerdtree.vim	/^function! s:create_in_path(node)$/;"	f
create_last_session_link	plugged/vim-startify/autoload/startify.vim	/^function! s:create_last_session_link(spath)$/;"	f
create_module_file	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def create_module_file(package, module, opts):$/;"	f
create_modules_toc_file	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def create_modules_toc_file(modules, opts, name='modules'):$/;"	f
create_notes_directories	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:create_notes_directories()$/;"	f
create_package_file	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def create_package_file(root, master_package, subroot, py_files, opts, subs):$/;"	f
create_parse_context	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! s:create_parse_context(text) " {{{1$/;"	f
create_pseudotag	plugged/tagbar/autoload/tagbar.vim	/^function! s:create_pseudotag(name, parent, kind, typeinfo, fileinfo) abort$/;"	f
create_repl_params	plugged/far.vim/autoload/far.vim	/^function! s:create_repl_params() abort$/;"	f
create_template_bridge	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def create_template_bridge(self):$/;"	m	class:Builder
create_temporary_file	plugged/vim-notes/autoload/xolox/notes/html.vim	/^function! s:create_temporary_file(note_title) " {{{1$/;"	f
create_undo_params	plugged/far.vim/autoload/far.vim	/^function! s:create_undo_params() abort$/;"	f
create_win2pos2hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:create_win2pos2hint(hint_dict) abort$/;"	f
create_win_params	plugged/far.vim/autoload/far.vim	/^function! s:create_win_params() abort$/;"	f
crend	plugged/vim-endwise/plugin/endwise.vim	/^function! s:crend(always)$/;"	f
critical	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def critical(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
crossorigin	plugged/vim-polyglot/autoload/xml/html5.vim	/^let crossorigin = ['anonymous', 'use-credentials']$/;"	v
cry_minlines	plugged/vim-polyglot/syntax/cryptol.vim	/^  let cry_minlines = 50$/;"	v
crystal_lang#complete	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#complete(findstart, base) abort$/;"	f
crystal_lang#context	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#context(file, pos, option_str) abort$/;"	f
crystal_lang#entrypoint_for	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#entrypoint_for(file_path) abort$/;"	f
crystal_lang#format	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#format(option_str, ...) abort$/;"	f
crystal_lang#format_string	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#format_string(code, ...) abort$/;"	f
crystal_lang#get_spec_switched_path	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#get_spec_switched_path(absolute_path) abort$/;"	f
crystal_lang#impl	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#impl(file, pos, option_str) abort$/;"	f
crystal_lang#jump_to_definition	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#jump_to_definition(file, pos) abort$/;"	f
crystal_lang#run_all_spec	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#run_all_spec(...) abort$/;"	f
crystal_lang#run_current_spec	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#run_current_spec(...) abort$/;"	f
crystal_lang#switch_spec_file	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#switch_spec_file(...) abort$/;"	f
crystal_lang#tool	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#tool(name, file, pos, option_str) abort$/;"	f
crystal_lang#type_hierarchy	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! crystal_lang#type_hierarchy(file, option_str) abort$/;"	f
cs	plugged/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
csi	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:csi(color, fg)$/;"	f
csv	plugged/deoplete-jedi/tests/test.py	/^import csv$/;"	i
ctrlp#bookmarks#accept	plugged/vim-bookmarks/autoload/ctrlp/bookmarks.vim	/^function! ctrlp#bookmarks#accept(mode, str) abort$/;"	f
ctrlp#bookmarks#id	plugged/vim-bookmarks/autoload/ctrlp/bookmarks.vim	/^function! ctrlp#bookmarks#id() abort$/;"	f
ctrlp#bookmarks#init	plugged/vim-bookmarks/autoload/ctrlp/bookmarks.vim	/^function! ctrlp#bookmarks#init() abort$/;"	f
current_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let current_buffer = max([index(b.buffers, cur), 0])$/;"	v
current_char	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:current_char()$/;"	f
current_compiler	plugged/vim-polyglot/compiler/cake.vim	/^let current_compiler = 'cake'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/cargo.vim	/^let current_compiler = "cargo"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/coffee.vim	/^let current_compiler = 'coffee'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/cryptol.vim	/^let current_compiler = "cryptol"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/cucumber.vim	/^let current_compiler = "cucumber"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/eslint.vim	/^let current_compiler = "eslint"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/exunit.vim	/^let current_compiler = "exunit"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/fish.vim	/^let current_compiler = 'fish'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/haml.vim	/^let current_compiler = "haml"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/ls.vim	/^let current_compiler = 'ls'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/nim.vim	/^let current_compiler = "nim"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/python.vim	/^let current_compiler = "python"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/rustc.vim	/^let current_compiler = "rustc"$/;"	v
current_compiler	plugged/vim-polyglot/compiler/sbt.vim	/^let current_compiler = 'sbt'$/;"	v
current_compiler	plugged/vim-polyglot/compiler/typescript.vim	/^let current_compiler = "typescript"$/;"	v
current_compiler	plugged/vim-rails/compiler/rails.vim	/^let current_compiler = "rails"$/;"	v
current_compiler	plugged/vim-ruby/compiler/eruby.vim	/^let current_compiler = "eruby"$/;"	v
current_compiler	plugged/vim-ruby/compiler/rake.vim	/^let current_compiler = "rake"$/;"	v
current_compiler	plugged/vim-ruby/compiler/rspec.vim	/^let current_compiler = "rspec"$/;"	v
current_compiler	plugged/vim-ruby/compiler/ruby.vim	/^let current_compiler = "ruby"$/;"	v
current_compiler	plugged/vim-ruby/compiler/rubyunit.vim	/^let current_compiler = "rubyunit"$/;"	v
current_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:current_hunk() abort$/;"	f
current_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def current_text(self):$/;"	m	class:TextObject
current_word	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:current_word()$/;"	f
cursor	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def cursor(self, pos):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
cursor_char	plugged/vim-textobj-function-javascript/autoload/textobj/function/javascript.vim	/^function! s:cursor_char()$/;"	f
cursor_moved	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:cursor_moved(...)$/;"	f
cursor_syn	plugged/vim-textobj-function-javascript/autoload/textobj/function/javascript.vim	/^function! s:cursor_syn()$/;"	f
cursorword	plugged/vim-cursorword/plugin/cursorword.vim	/^augroup cursorword$/;"	a
cursorword#highlight	plugged/vim-cursorword/autoload/cursorword.vim	/^function! cursorword#highlight() abort$/;"	f
cursorword#matchadd	plugged/vim-cursorword/autoload/cursorword.vim	/^function! cursorword#matchadd(...) abort$/;"	f
cut_lines	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def cut_lines(pre, post=0, what=None):$/;"	f
cycle	plugged/vim-polyglot/ftplugin/gitrebase.vim	/^function! s:cycle()$/;"	f
cycle_until_end	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:cycle_until_end()$/;"	f
d	plugged/deoplete-jedi/tests/sphinx-3000.py	/^        d = dict($/;"	v
d	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! d$/;"	m
d	plugged/vim-polyglot/syntax/julia.vim	/^  function! s:d(x)$/;"	f
daE	plugged/vim-textobj-erb/t/basics.vim	/^    normal daE$/;"	m
daemon	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^    daemon = True$/;"	v	class:Worker
darkgreen	plugged/deoplete-jedi/tests/sphinx-3000.py	/^from sphinx.util.console import bold, darkgreen$/;"	i
dart#ToggleFormatOnSave	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#ToggleFormatOnSave() abort$/;"	f
dart#analyzer	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#analyzer(q_args) abort$/;"	f
dart#fmt	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#fmt(q_args) abort$/;"	f
dart#resolveUri	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#resolveUri(uri) abort$/;"	f
dart#setModifiable	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#setModifiable() abort$/;"	f
dart#tojs	plugged/vim-polyglot/autoload/dart.vim	/^function! dart#tojs(q_args) abort$/;"	f
data	plugged/vim-bookmarks/t/bm_spec.vim	/^    let data = []$/;"	v
db1	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        normal db1$/;"	m
db2	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        normal db2$/;"	m
debug	plugged/alchemist.vim/elixir_sense_client	/^debug = False$/;"	v
debug	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def debug(self, *args, **kwargs):$/;"	m	class:AutodocReporter
debug	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def debug(self, message, *args, **kwargs):$/;"	m	class:Sphinx
debug	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def debug(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
debug	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^from deoplete.util import debug, error_vim$/;"	i
debug	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def debug(vim, expr):$/;"	f
debug	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def debug(msg):$/;"	f
debug	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:debug(str)$/;"	f
debug	plugged/vim-rails/autoload/rails.vim	/^function! s:debug(str)$/;"	f
debug2	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def debug2(self, message, *args, **kwargs):$/;"	m	class:Sphinx
decode	plugged/alchemist.vim/erl_terms.py	/^def decode(binary):$/;"	f
decode	plugged/vim-notes/misc/notes/search-notes.py	/^    def decode(self, text):$/;"	m	class:NotesIndex
decode	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:decode(json, ...) abort$/;"	f
decode_json	plugged/vim-polyglot/autoload/crystal_lang.vim	/^    function! s:decode_json(text) abort$/;"	f
deepextend	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:deepextend(expr1, expr2) abort$/;"	f
default_blacklist	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let default_blacklist=['diff', 'gitcommit', 'unite', 'qf', 'help', 'markdown']$/;"	v
default_config	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:default_config() abort$/;"	f
default_file_location	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:default_file_location()$/;"	f
default_grep	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let default_grep = 'grep'$/;"	v
default_mapping	plugged/vim-easymotion/plugin/EasyMotion.vim	/^    function! s:default_mapping(motions, do_mapping) "{{{$/;"	f
default_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let default_role = {$/;"	v
default_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let default_role = {}$/;"	v
defaultdict	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^from collections import defaultdict$/;"	i
defaultdict	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^from collections import defaultdict$/;"	i
defaultdict	plugged/ultisnips/pythonx/UltiSnips/_diff.py	/^from collections import defaultdict$/;"	i
defaultdict	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^from collections import defaultdict$/;"	i
defaultdict	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^from collections import defaultdict$/;"	i
defaultdict	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^from collections import defaultdict$/;"	i
defaultdict	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from collections import defaultdict$/;"	i
define_commands	autoload/plug.vim	/^function! s:define_commands()$/;"	f
define_commands	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands() abort$/;"	f
define_completion_via_timer	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:define_completion_via_timer(event) abort$/;"	f
define_failsafe_key_mappings	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:define_failsafe_key_mappings(plugin_name, obj_specs)$/;"	f
define_navcommand	plugged/vim-rails/autoload/rails.vim	/^function! s:define_navcommand(name, projection, ...) abort$/;"	f
define_on_event	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:define_on_event(event) abort$/;"	f
define_sign_line_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_line_highlights() abort$/;"	f
define_sign_text	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:define_sign_text() abort$/;"	f
defs	plugged/fzf.vim/plugin/fzf.vim	/^function! s:defs(commands)$/;"	f
delete	autoload/plug.vim	/^function! s:delete(range, force)$/;"	f
deleteBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bookmark)$/;"	f
delete_mark	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def delete_mark(name):$/;"	f
delete_note	plugged/vim-notes/misc/notes/search-notes.py	/^    def delete_note(self, filename):$/;"	m	class:NotesIndex
delete_op	autoload/plug.vim	/^function! s:delete_op(type, ...)$/;"	f
delimit_output	plugged/vim-misc/autoload/xolox/misc/test.vim	/^function! s:delimit_output() " {{{1$/;"	f
delta	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def delta(self, pos):$/;"	m	class:Position
deoplete	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^import deoplete.filter  # noqa$/;"	i
deoplete	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^import deoplete.source  # noqa$/;"	i
deoplete	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^import deoplete.util as util$/;"	i
deoplete	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^import deoplete.util as util$/;"	i
deoplete#cancel_popup	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#cancel_popup() abort$/;"	f
deoplete#close_popup	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#close_popup() abort$/;"	f
deoplete#complete_common_string	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#complete_common_string() abort$/;"	f
deoplete#custom#_get	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get() abort$/;"	f
deoplete#custom#_get_buffer	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_buffer() abort$/;"	f
deoplete#custom#_get_filetype_option	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_filetype_option(name, filetype, default) abort$/;"	f
deoplete#custom#_get_option	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_option(name) abort$/;"	f
deoplete#custom#_get_source_var	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_get_source_var(source_name) abort$/;"	f
deoplete#custom#_init	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_init() abort$/;"	f
deoplete#custom#_init_buffer	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#_init_buffer() abort$/;"	f
deoplete#custom#buffer_option	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#buffer_option(name_or_dict, ...) abort$/;"	f
deoplete#custom#option	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#option(name_or_dict, ...) abort$/;"	f
deoplete#custom#set	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#set(source_name, option_name, value) abort$/;"	f
deoplete#custom#source	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#source(source_name, option_name, value) abort$/;"	f
deoplete#custom#var	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! deoplete#custom#var(source_name, var_name, value) abort$/;"	f
deoplete#disable	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#disable() abort$/;"	f
deoplete#enable	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#enable() abort$/;"	f
deoplete#enable_logging	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#enable_logging(level, logfile) abort$/;"	f
deoplete#handler#_async_timer_start	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_async_timer_start() abort$/;"	f
deoplete#handler#_async_timer_stop	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_async_timer_stop() abort$/;"	f
deoplete#handler#_do_complete	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_do_complete() abort$/;"	f
deoplete#handler#_init	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_init() abort$/;"	f
deoplete#handler#_skip_next_completion	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! deoplete#handler#_skip_next_completion() abort$/;"	f
deoplete#init#_channel	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_channel() abort$/;"	f
deoplete#init#_channel_initialized	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_channel_initialized() abort$/;"	f
deoplete#init#_context	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_context(event, sources) abort$/;"	f
deoplete#init#_custom_variables	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_custom_variables() abort$/;"	f
deoplete#init#_disable_handler	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_disable_handler() abort$/;"	f
deoplete#init#_enable_handler	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_enable_handler() abort$/;"	f
deoplete#init#_initialize	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_initialize() abort$/;"	f
deoplete#init#_is_handler_enabled	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_is_handler_enabled() abort$/;"	f
deoplete#init#_option	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_option() abort$/;"	f
deoplete#init#_prev_completion	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! deoplete#init#_prev_completion() abort$/;"	f
deoplete#initialize	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#initialize() abort$/;"	f
deoplete#is_enabled	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#is_enabled() abort$/;"	f
deoplete#manual_complete	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#manual_complete(...) abort$/;"	f
deoplete#mapping#_complete	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_complete() abort$/;"	f
deoplete#mapping#_complete_common_string	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_complete_common_string() abort$/;"	f
deoplete#mapping#_completefunc	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_completefunc(findstart, base) abort$/;"	f
deoplete#mapping#_init	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_init() abort$/;"	f
deoplete#mapping#_restore_completeopt	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_restore_completeopt() abort$/;"	f
deoplete#mapping#_rpcrequest_wrapper	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_rpcrequest_wrapper(sources) abort$/;"	f
deoplete#mapping#_set_completeopt	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_set_completeopt() abort$/;"	f
deoplete#mapping#_undo_completion	plugged/deoplete.nvim/autoload/deoplete/mapping.vim	/^function! deoplete#mapping#_undo_completion() abort$/;"	f
deoplete#mappings#cancel_popup	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#cancel_popup() abort$/;"	f
deoplete#mappings#close_popup	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#close_popup() abort$/;"	f
deoplete#mappings#manual_complete	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#manual_complete(...) abort$/;"	f
deoplete#mappings#refresh	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#refresh() abort$/;"	f
deoplete#mappings#smart_close_popup	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#smart_close_popup() abort$/;"	f
deoplete#mappings#undo_completion	plugged/deoplete.nvim/autoload/deoplete/mappings.vim	/^function! deoplete#mappings#undo_completion() abort$/;"	f
deoplete#refresh	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#refresh() abort$/;"	f
deoplete#send_event	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#send_event(event) abort$/;"	f
deoplete#smart_close_popup	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#smart_close_popup() abort$/;"	f
deoplete#toggle	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#toggle() abort$/;"	f
deoplete#undo_completion	plugged/deoplete.nvim/autoload/deoplete.vim	/^function! deoplete#undo_completion() abort$/;"	f
deoplete#util#convert2list	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#convert2list(expr) abort$/;"	f
deoplete#util#get_context_filetype	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_context_filetype(input, event) abort$/;"	f
deoplete#util#get_input	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_input(event) abort$/;"	f
deoplete#util#get_keyword_pattern	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_keyword_pattern(filetype, keyword_patterns) abort$/;"	f
deoplete#util#get_next_input	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_next_input(event) abort$/;"	f
deoplete#util#get_prev_event	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_prev_event() abort$/;"	f
deoplete#util#get_syn_names	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#get_syn_names() abort$/;"	f
deoplete#util#has_yarp	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#has_yarp() abort$/;"	f
deoplete#util#neovim_version	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#neovim_version() abort$/;"	f
deoplete#util#print_debug	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_debug(string) abort$/;"	f
deoplete#util#print_error	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_error(string, ...) abort$/;"	f
deoplete#util#print_warning	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#print_warning(string) abort$/;"	f
deoplete#util#rpcnotify	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#rpcnotify(event, context) abort$/;"	f
deoplete#util#split	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#split(string) abort$/;"	f
deoplete#util#string	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#string(expr) abort$/;"	f
deoplete#util#uniq	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#uniq(list) abort$/;"	f
deoplete#util#versioncmp	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#versioncmp(a, b) abort$/;"	f
deoplete#util#vimoption2python	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#vimoption2python(option) abort$/;"	f
deoplete#util#vimoption2python_not	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! deoplete#util#vimoption2python_not(option) abort$/;"	f
deoplete_auto_completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_auto_completion_begin(context):$/;"	f
deoplete_enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_enable_logging(context):$/;"	f
deoplete_init	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_init():$/;"	f
deoplete_manual_completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_manual_completion_begin(context):$/;"	f
deoplete_on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    def deoplete_on_event(context):$/;"	f
deque	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^from collections import deque, namedtuple$/;"	i
desc	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class desc(nodes.Admonition, nodes.Element):$/;"	c
desc_addname	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class desc_addname(nodes.Part, nodes.Inline, nodes.TextElement):$/;"	c
desc_annotation	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class desc_annotation(nodes.Part, nodes.Inline, nodes.TextElement):$/;"	c
desc_classname	plugged/deoplete-jedi/tests/sphinx-3000.py	/^desc_classname = desc_addname$/;"	v
desc_content	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class desc_content(nodes.General, nodes.Element):$/;"	c
desc_name	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class desc_name(nodes.Part, nodes.Inline, nodes.TextElement):$/;"	c
desc_optional	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class desc_optional(nodes.Part, nodes.Inline, nodes.TextElement):$/;"	c
desc_parameter	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class desc_parameter(nodes.Part, nodes.Inline, nodes.TextElement):$/;"	c
desc_parameterlist	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class desc_parameterlist(nodes.Part, nodes.Inline, nodes.TextElement):$/;"	c
desc_returns	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class desc_returns(desc_type):$/;"	c
desc_signature	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class desc_signature(nodes.Part, nodes.Inline, nodes.TextElement):$/;"	c
desc_type	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class desc_type(nodes.Part, nodes.Inline, nodes.TextElement):$/;"	c
descendTree	config/plugins/nerdtree.vim	/^function! s:descendTree(dirnode)$/;"	f
describe	plugged/vim-test/spec/fixtures/lab/test/normal.js	/^var describe = lab.describe;$/;"	v
description	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def description(self):$/;"	m	class:SnippetDefinition
dest	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      dest='includeprivate',$/;"	v
dest	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      dest='modulefirst',$/;"	v
dest	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      dest='noheadings',$/;"	v
dest	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      dest='separatemodules',$/;"	v
detect_bad_input	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:detect_bad_input()$/;"	f
dfpa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! dfpa$/;"	m
diE	plugged/vim-textobj-erb/t/basics.vim	/^    normal diE$/;"	m
dict1	plugged/vim-bookmarks/t/bm_spec.vim	/^    let dict1 = bm#all_bookmarks_by_line('file1')$/;"	v
dict2	plugged/vim-bookmarks/t/bm_spec.vim	/^    let dict2 = bm#all_bookmarks_by_line('file2')$/;"	v
did_cpp_syntax_inits	plugged/vim-polyglot/after/syntax/cpp.vim	/^    let did_cpp_syntax_inits = 1$/;"	v
did_cql_syn_inits	plugged/vim-polyglot/syntax/cql.vim	/^    let did_cql_syn_inits = 1$/;"	v
did_cry_syntax_inits	plugged/vim-polyglot/syntax/cryptol.vim	/^    let did_cry_syntax_inits = 1$/;"	v
did_css_syn_inits	plugged/vim-polyglot/syntax/stylus.vim	/^    let did_css_syn_inits = 1$/;"	v
did_fs_syntax_inits	plugged/vim-polyglot/syntax/fsharp.vim	/^        let did_fs_syntax_inits = 1$/;"	v
did_gnuplot_syntax_inits	plugged/vim-polyglot/syntax/gnuplot.vim	/^    let did_gnuplot_syntax_inits = 1$/;"	v
did_groovy_syn_inits	plugged/vim-polyglot/syntax/groovy.vim	/^    let did_groovy_syn_inits = 1$/;"	v
did_haxe_syn_inits	plugged/vim-polyglot/syntax/haxe.vim	/^    let did_haxe_syn_inits = 1$/;"	v
did_javascript_syn_inits	plugged/vim-polyglot/extras/flow.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	plugged/vim-polyglot/extras/jsdoc.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	plugged/vim-polyglot/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_lua_syn_inits	plugged/vim-polyglot/syntax/lua.vim	/^    let did_lua_syn_inits = 1$/;"	v
did_mako_syn_inits	plugged/vim-polyglot/syntax/mako.vim	/^    let did_mako_syn_inits = 1$/;"	v
did_mma_syn_inits	plugged/vim-polyglot/syntax/mma.vim	/^		let did_mma_syn_inits = 1$/;"	v
did_nim_syn_inits	plugged/vim-polyglot/syntax/nim.vim	/^    let did_nim_syn_inits = 1$/;"	v
did_ocaml_syntax_inits	plugged/vim-polyglot/syntax/ocaml.vim	/^    let did_ocaml_syntax_inits = 1$/;"	v
did_octave_syntax_inits	plugged/vim-polyglot/syntax/octave.vim	/^    let did_octave_syntax_inits = 1$/;"	v
did_pgsql_syn_inits	plugged/vim-polyglot/syntax/pgsql.vim	/^    let did_pgsql_syn_inits = 1$/;"	v
did_plugin_ultisnips	plugged/ultisnips/plugin/UltiSnips.vim	/^let did_plugin_ultisnips=1$/;"	v
did_proto_syn_inits	plugged/vim-polyglot/syntax/proto.vim	/^    let did_proto_syn_inits = 1$/;"	v
did_ps1_syn_inits	plugged/vim-polyglot/syntax/ps1.vim	/^		let did_ps1_syn_inits = 1$/;"	v
did_python_syn_inits	plugged/vim-polyglot/syntax/python.vim	/^    let did_python_syn_inits = 1$/;"	v
did_qml_syn_inits	plugged/vim-polyglot/syntax/qml.vim	/^    let did_qml_syn_inits = 1$/;"	v
did_racket_syntax_inits	plugged/vim-polyglot/syntax/racket.vim	/^    let did_racket_syntax_inits = 1$/;"	v
did_rhelp_syntax_inits	plugged/vim-polyglot/syntax/rhelp.vim	/^    let did_rhelp_syntax_inits = 1$/;"	v
did_tapverboseoutput_syntax_inits	plugged/vim-polyglot/syntax/tap.vim	/^  let did_tapverboseoutput_syntax_inits = 1$/;"	v
did_thrift_syn_inits	plugged/vim-polyglot/syntax/thrift.vim	/^    let did_thrift_syn_inits = 1$/;"	v
did_twig_syn_inits	plugged/vim-polyglot/syntax/twig.vim	/^    let did_twig_syn_inits = 1$/;"	v
did_txt_syn_inits	plugged/vim-polyglot/syntax/textile.vim	/^        let did_txt_syn_inits = 1$/;"	v
did_typescript_syn_inits	plugged/vim-polyglot/syntax/typescript.vim	/^    let did_typescript_syn_inits = 1$/;"	v
did_vbnet_syntax_inits	plugged/vim-polyglot/syntax/vbnet.vim	/^        let did_vbnet_syntax_inits = 1$/;"	v
did_velocity_syn_inits	plugged/vim-polyglot/syntax/velocity.vim	/^    let did_velocity_syn_inits = 1$/;"	v
diff	autoload/plug.vim	/^function! s:diff()$/;"	f
diff	plugged/ultisnips/pythonx/UltiSnips/_diff.py	/^def diff(a, b, sline=0):$/;"	f
diff	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^from UltiSnips._diff import diff$/;"	i
diff	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips._diff import diff, guess_edit$/;"	i
diff	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^from _diff import diff, guess_edit$/;"	i
diff_in_buffer_length	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def diff_in_buffer_length(self):$/;"	m	class:VimState
diff_modifier	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffcomplete	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^function! s:diffcomplete(A,L,P)$/;"	f
diffidx	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
diffoff	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffthis	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis() abort$/;"	f
dir	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:dir(bufnr) abort$/;"	f
directives	plugged/deoplete-jedi/tests/sphinx-3000.py	/^from sphinx import directives  # noqa$/;"	i
dirname	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^from os.path import exists, dirname$/;"	i
dirpath	autoload/plug.vim	/^  function! s:dirpath(path)$/;"	f
disable	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
disable	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^import vim  # pylint:disable=import-error$/;"	i
disable	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^import vim  # pylint:disable=import-error$/;"	i
discard_header	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:discard_header(hunk_diff)$/;"	f
disconnect	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def disconnect(self, listener_id):$/;"	m	class:Sphinx
discover_supported_filetypes	plugged/vim-easytags/autoload/xolox/easytags/filetypes.vim	/^function! s:discover_supported_filetypes() " {{{1$/;"	f
displayHelp	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp()$/;"	f
display_by_path	plugged/vim-startify/autoload/startify.vim	/^function! s:display_by_path(path_prefix, path_format, use_env) abort$/;"	f
display_error	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:display_error()$/;"	f
display_git_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_git_branch()$/;"	f
display_hg_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:display_hg_branch()$/;"	f
division	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
do	autoload/plug.vim	/^function! s:do(pull, force, todo)$/;"	f
do_delayed_update	plugged/tagbar/autoload/tagbar.vim	/^function! s:do_delayed_update() abort$/;"	f
do_handle_inside_curly_brace	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:do_handle_inside_curly_brace(pair_lnum, _pair_col, _lnum, _text, _prev_nb_lnum, _prev_nb_text)$/;"	f
do_handle_inside_fn	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:do_handle_inside_fn(pair_lnum, _pair_col, lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
do_handle_inside_keyword_block	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:do_handle_inside_keyword_block(pair_lnum, _pair_col, _lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
do_handle_inside_parens	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:do_handle_inside_parens(pair_lnum, pair_col, _lnum, _text, prev_nb_lnum, prev_nb_text)$/;"	f
do_handle_inside_pattern_match_block	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:do_handle_inside_pattern_match_block(block_start_lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
do_handle_inside_square_brace	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:do_handle_inside_square_brace(pair_lnum, pair_col, _lnum, _text, _prev_nb_lnum, _prev_nb_text)$/;"	f
do_handle_inside_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:do_handle_inside_with(pair_lnum, pair_col, lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
do_post_expand	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def do_post_expand(self, start, end, snippets_stack):$/;"	m	class:SnippetDefinition
do_post_jump	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def do_post_jump($/;"	m	class:SnippetDefinition
do_pre_expand	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def do_pre_expand(self, visual_content, snippets_stack):$/;"	m	class:SnippetDefinition
do_tests	plugged/emmet-vim/unittest.vim	/^function! s:do_tests(bang, ...)$/;"	f
do_unmapping	plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = False$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
do_unmapping	plugged/ultisnips/test/test_Selection.py	/^    do_unmapping = True$/;"	v	class:_SelectModeMappings
doau_user	plugged/vim-rails/plugin/rails.vim	/^function! s:doau_user(arg) abort$/;"	f
doautocmd	autoload/plug.vim	/^function! s:doautocmd(...)$/;"	f
doautocmd_user	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:doautocmd_user(prefix, command)$/;"	f
dobufread	autoload/plug.vim	/^function! s:dobufread(names)$/;"	f
doctest	plugged/alchemist.vim/elixir_sense.py	/^    import doctest$/;"	i
doctest	plugged/alchemist.vim/erl_terms.py	/^    import doctest$/;"	i
document_members	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def document_members(self, all_members=False):$/;"	m	class:Documenter
document_structure	plugged/vim-polyglot/autoload/xml/aria.vim	/^let document_structure = [$/;"	v
document_structure	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let document_structure = ['article', 'cell', 'columnheader', 'definition', 'directory', 'document', 'feed', 'figure', 'group', 'heading', 'img', 'list', 'listitem', 'math', 'none', 'note', 'presentation', 'region', 'row', 'rowheader', 'separator', 'table', 'term']$/;"	v
doesOrderConnect	plugged/vim-polyglot/indent/applescript.vim	/^func! s:doesOrderConnect(text)$/;"	f
dollar_add	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! s:dollar_add(base,no) abort$/;"	f
dosurround	plugged/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
dot	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            dot  = '_',$/;"	v
dot_relative	plugged/vim-rails/autoload/rails.vim	/^function! s:dot_relative(path) abort$/;"	f
dotcmp	plugged/vim-rails/autoload/rails.vim	/^function! s:dotcmp(i1, i2) abort$/;"	f
download	plugged/vim-polyglot/build	/^download() {$/;"	f
download_reference	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class download_reference(nodes.reference):$/;"	c
dp_main	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^dp_main = os.path.join(os.path.dirname(__file__), 'dp_main.py')$/;"	v
dprint	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
dprint	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! s:dprint(msg)$/;"	f
dpub_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let dpub_role = [$/;"	v
dpub_role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let dpub_role = ['dpub-abstract', 'dpub-afterword', 'dpub-appendix', 'dpub-biblioentry', 'dpub-bibliography', 'dpub-biblioref', 'dpub-chapter', 'dpub-cover', 'dpub-epilogue', 'dpub-footnote', 'dpub-footnotes', 'dpub-foreword', 'dpub-glossary', 'dpub-glossdef', 'dpub-glossref', 'dpub-glossterm', 'dpub-index', 'dpub-locator', 'dpub-noteref', 'dpub-notice', 'dpub-pagebreak', 'dpub-pagelist', 'dpub-part', 'dpub-preface', 'dpub-prologue', 'dpub-pullquote', 'dpub-qna', 'dpub-subtitle', 'dpub-tip', 'dpub-title', 'dpub-toc']$/;"	v
drag_and_drop_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let drag_and_drop_attributes = {$/;"	v
draw_box	plugged/vim-startify/autoload/startify/fortune.vim	/^function! s:draw_box(lines) abort$/;"	f
drop_while	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:drop_while(f, xs) abort$/;"	f
ds	plugged/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dstring	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
dw1	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        normal dw1$/;"	m
dw2	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        normal dw2$/;"	m
easytags_gensyncmd	plugged/vim-easytags/misc/easytags/highlight.py	/^def easytags_gensyncmd(tagsfiles, filetype, tagkinds, syntaxgroup, prefix, suffix, filters, ignoresyntax):$/;"	f
easytags_ping	plugged/vim-easytags/misc/easytags/highlight.py	/^def easytags_ping():$/;"	f
echo	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:echo(hl, msg) abort$/;"	f
echo	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:echo(str) abort$/;"	f
echo_error	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! s:echo_error(text)$/;"	f
echo_error	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:echo_error(msg, ...) abort$/;"	f
echo_failure	plugged/vim-test/autoload/test.vim	/^function! s:echo_failure(message) abort$/;"	f
echo_to_hierarchy	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def echo_to_hierarchy(text_object):$/;"	f
echomsg	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
echorizer.eat	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.eat() abort$/;"	f
echorizer.echo	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.echo() abort$/;"	f
echorizer.echo_ansi	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function s:echorizer.echo_ansi(code) abort$/;"	f
edit	plugged/vim-rails/autoload/rails.vim	/^function! s:edit(cmd, file) abort$/;"	f
edit_content	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:edit_content(content, ...) abort$/;"	f
editcmdfor	plugged/vim-rails/autoload/rails.vim	/^function! s:editcmdfor(cmd) abort$/;"	f
efm_dir	plugged/vim-rails/autoload/rails.vim	/^function! s:efm_dir() abort$/;"	f
elapsed	plugged/vim-gitgutter/unplace.vim	/^let elapsed = reltime(start)$/;"	v
elapsed_time	plugged/vim-notes/misc/notes/search-notes.py	/^    def elapsed_time(self):$/;"	m	class:Timer
elixir#indent	plugged/vim-polyglot/indent/elixir.vim	/^function! elixir#indent(lnum)$/;"	f
elixir#indent#handle_follow_prev_nb	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_follow_prev_nb(_lnum, _text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_following_prev_end	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_following_prev_end(_lnum, _text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_following_trailing_binary_operator	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_following_trailing_binary_operator(lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_following_trailing_do	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_following_trailing_do(lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_following_trailing_rocket	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_following_trailing_rocket(lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_inside_generic_block	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_generic_block(lnum, _text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_inside_nested_construct	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_inside_nested_construct(lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_starts_with_binary_operator	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_binary_operator(lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_starts_with_close_bracket	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_close_bracket(lnum, text, _prev_nb_lnum, _prev_nb_text)$/;"	f
elixir#indent#handle_starts_with_comment	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_comment(_lnum, text, prev_nb_lnum, _prev_nb_text)$/;"	f
elixir#indent#handle_starts_with_end	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_end(lnum, text, _prev_nb_lnum, _prev_nb_text)$/;"	f
elixir#indent#handle_starts_with_mid_or_end_block_keyword	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_mid_or_end_block_keyword(lnum, text, _prev_nb_lnum, _prev_nb_text)$/;"	f
elixir#indent#handle_starts_with_pipe	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_starts_with_pipe(lnum, text, prev_nb_lnum, prev_nb_text)$/;"	f
elixir#indent#handle_top_of_file	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#handle_top_of_file(_lnum, _text, prev_nb_lnum, _prev_nb_text)$/;"	f
elixir#indent#indent	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#indent(lnum)$/;"	f
elixir#indent#searchpair_back_skip	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! elixir#indent#searchpair_back_skip()$/;"	f
elixir#util#get_filename	plugged/vim-polyglot/autoload/elixir/util.vim	/^function! elixir#util#get_filename(word) abort$/;"	f
elixircomplete#auto_complete	plugged/alchemist.vim/autoload/elixircomplete.vim	/^function! elixircomplete#auto_complete(findstart, base_or_suggestions)$/;"	f
elixircomplete#ex_doc_complete	plugged/alchemist.vim/autoload/elixircomplete.vim	/^function! elixircomplete#ex_doc_complete(ArgLead, CmdLine, CursorPos, ...)$/;"	f
elixircomplete#get_suggestions	plugged/alchemist.vim/autoload/elixircomplete.vim	/^function! elixircomplete#get_suggestions(base_or_suggestions, lnum, cnum, lines)$/;"	f
elm#BrowseDocs	plugged/vim-polyglot/autoload/elm.vim	/^function! elm#BrowseDocs() abort$/;"	f
elm#Build	plugged/vim-polyglot/autoload/elm.vim	/^function! elm#Build(input, output, show_warnings) abort$/;"	f
elm#Complete	plugged/vim-polyglot/autoload/elm.vim	/^function! elm#Complete(findstart, base) abort$/;"	f
elm#ErrorDetail	plugged/vim-polyglot/autoload/elm.vim	/^function! elm#ErrorDetail() abort$/;"	f
elm#FindRootDirectory	plugged/vim-polyglot/autoload/elm.vim	/^function! elm#FindRootDirectory() abort$/;"	f
elm#Format	plugged/vim-polyglot/autoload/elm.vim	/^function! elm#Format() abort$/;"	f
elm#Make	plugged/vim-polyglot/autoload/elm.vim	/^function! elm#Make(...) abort$/;"	f
elm#Oracle	plugged/vim-polyglot/autoload/elm.vim	/^function! elm#Oracle(filepath, word) abort$/;"	f
elm#Repl	plugged/vim-polyglot/autoload/elm.vim	/^function! elm#Repl() abort$/;"	f
elm#ShowDocs	plugged/vim-polyglot/autoload/elm.vim	/^function! elm#ShowDocs() abort$/;"	f
elm#Syntastic	plugged/vim-polyglot/autoload/elm.vim	/^function! elm#Syntastic(input) abort$/;"	f
elm#Test	plugged/vim-polyglot/autoload/elm.vim	/^function! elm#Test() abort$/;"	f
elm#util#CheckBin	plugged/vim-polyglot/autoload/elm/util.vim	/^fun! elm#util#CheckBin(bin, url) abort$/;"	f
elm#util#DecodeJSON	plugged/vim-polyglot/autoload/elm/util.vim	/^fun! elm#util#DecodeJSON(s) abort$/;"	f
elm#util#Echo	plugged/vim-polyglot/autoload/elm/util.vim	/^fun! elm#util#Echo(title, msg) abort$/;"	f
elm#util#EchoError	plugged/vim-polyglot/autoload/elm/util.vim	/^fun! elm#util#EchoError(title, msg) abort$/;"	f
elm#util#EchoLater	plugged/vim-polyglot/autoload/elm/util.vim	/^fun! elm#util#EchoLater(func_name, title, msg) abort$/;"	f
elm#util#EchoStored	plugged/vim-polyglot/autoload/elm/util.vim	/^fun! elm#util#EchoStored() abort$/;"	f
elm#util#EchoSuccess	plugged/vim-polyglot/autoload/elm/util.vim	/^fun! elm#util#EchoSuccess(title, msg) abort$/;"	f
elm#util#EchoWarning	plugged/vim-polyglot/autoload/elm/util.vim	/^fun! elm#util#EchoWarning(title, msg) abort$/;"	f
elm#util#GoToModule	plugged/vim-polyglot/autoload/elm/util.vim	/^function! elm#util#GoToModule(name)$/;"	f
elm#util#IsWin	plugged/vim-polyglot/autoload/elm/util.vim	/^fun! elm#util#IsWin() abort$/;"	f
elm#util#OpenBrowser	plugged/vim-polyglot/autoload/elm/util.vim	/^fun! elm#util#OpenBrowser(url) abort$/;"	f
elmFormat	plugged/vim-polyglot/ftplugin/elm.vim	/^  augroup elmFormat$/;"	a
elmOracle	plugged/vim-polyglot/autoload/elm.vim	/^function! s:elmOracle(...) abort$/;"	f
em_insert_new_method	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:em_insert_new_method(name, selection, parameters, retvals, block_end)$/;"	f
emacs.keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:emacs.keymapping(cmdline)$/;"	f
embedded	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    embedded = True$/;"	v	class:AppleHelpBuilder
emit	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def emit(self, event, *args):$/;"	m	class:Sphinx
emit	plugged/far.vim/rplugin/python3/far/__init__.py	/^        def emit(self, record):$/;"	m	class:NeoVimLoggerHandler
emit	plugged/vim-notes/misc/notes/search-notes.py	/^        def emit(self, record):$/;"	m	class:NullHandler
emit_firstresult	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def emit_firstresult(self, event, *args):$/;"	m	class:Sphinx
emmet#anchorizeURL	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#anchorizeURL(flag) abort$/;"	f
emmet#balanceTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#balanceTag(flag) range abort$/;"	f
emmet#codePretty	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#codePretty() range abort$/;"	f
emmet#completeTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#completeTag(findstart, base) abort$/;"	f
emmet#encodeImage	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#encodeImage() abort$/;"	f
emmet#expandAbbr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbr(mode, abbr) range abort$/;"	f
emmet#expandAbbrIntelligent	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandAbbrIntelligent(feedkey) abort$/;"	f
emmet#expandCursorExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandCursorExpr(expand, mode) abort$/;"	f
emmet#expandDollarExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandDollarExpr(expand) abort$/;"	f
emmet#expandWord	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#expandWord(abbr, type, orig) abort$/;"	f
emmet#getBaseType	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getBaseType(type) abort$/;"	f
emmet#getDollarExprs	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarExprs(expand) abort$/;"	f
emmet#getDollarValueByKey	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getDollarValueByKey(key) abort$/;"	f
emmet#getExpandos	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getExpandos(type, key) abort$/;"	f
emmet#getFileType	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getFileType(...) abort$/;"	f
emmet#getFilters	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getFilters(type) abort$/;"	f
emmet#getIndentation	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getIndentation(...) abort$/;"	f
emmet#getResource	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getResource(type, name, default) abort$/;"	f
emmet#getSettings	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getSettings() abort$/;"	f
emmet#getSnippets	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#getSnippets(type) abort$/;"	f
emmet#imageSize	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#imageSize() abort$/;"	f
emmet#isExpandable	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#isExpandable() abort$/;"	f
emmet#isExtends	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#isExtends(type, extend) abort$/;"	f
emmet#lang#css#balanceTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#balanceTag(flag) range abort$/;"	f
emmet#lang#css#encodeImage	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#encodeImage() abort$/;"	f
emmet#lang#css#findTokens	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#findTokens(str) abort$/;"	f
emmet#lang#css#imageSize	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#imageSize() abort$/;"	f
emmet#lang#css#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrev(flag) abort$/;"	f
emmet#lang#css#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#css#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#css#parseTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseTag(tag) abort$/;"	f
emmet#lang#css#removeTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#removeTag() abort$/;"	f
emmet#lang#css#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#splitJoinTag() abort$/;"	f
emmet#lang#css#toString	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#css#toggleComment	plugged/emmet-vim/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toggleComment() abort$/;"	f
emmet#lang#elm#findTokens	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#findTokens(str) abort$/;"	f
emmet#lang#elm#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#elm#renderNode	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#renderNode(node)$/;"	f
emmet#lang#elm#renderParam	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#renderParam(param)$/;"	f
emmet#lang#elm#toString	plugged/emmet-vim/autoload/emmet/lang/elm.vim	/^function! emmet#lang#elm#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#exists	plugged/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#exists(type) abort$/;"	f
emmet#lang#haml#balanceTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#balanceTag(flag) range abort$/;"	f
emmet#lang#haml#encodeImage	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#encodeImage() abort$/;"	f
emmet#lang#haml#findTokens	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#findTokens(str) abort$/;"	f
emmet#lang#haml#imageSize	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#imageSize() abort$/;"	f
emmet#lang#haml#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrev(flag) abort$/;"	f
emmet#lang#haml#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#haml#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#haml#parseTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseTag(tag) abort$/;"	f
emmet#lang#haml#removeTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#removeTag() abort$/;"	f
emmet#lang#haml#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#splitJoinTag() abort$/;"	f
emmet#lang#haml#toString	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#haml#toggleComment	plugged/emmet-vim/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toggleComment() abort$/;"	f
emmet#lang#html#balanceTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#balanceTag(flag) range abort$/;"	f
emmet#lang#html#encodeImage	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#encodeImage() abort$/;"	f
emmet#lang#html#findTokens	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#findTokens(str) abort$/;"	f
emmet#lang#html#imageSize	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#imageSize() abort$/;"	f
emmet#lang#html#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrev(flag) abort$/;"	f
emmet#lang#html#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#html#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#html#parseTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseTag(tag) abort$/;"	f
emmet#lang#html#removeTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#removeTag() abort$/;"	f
emmet#lang#html#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#splitJoinTag() abort$/;"	f
emmet#lang#html#toString	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#html#toggleComment	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toggleComment() abort$/;"	f
emmet#lang#jade#balanceTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#balanceTag(flag) range abort$/;"	f
emmet#lang#jade#encodeImage	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#encodeImage() abort$/;"	f
emmet#lang#jade#findTokens	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#findTokens(str) abort$/;"	f
emmet#lang#jade#imageSize	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#imageSize() abort$/;"	f
emmet#lang#jade#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrev(flag) abort$/;"	f
emmet#lang#jade#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#jade#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#jade#parseTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseTag(tag) abort$/;"	f
emmet#lang#jade#removeTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#removeTag() abort$/;"	f
emmet#lang#jade#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#splitJoinTag() abort$/;"	f
emmet#lang#jade#toString	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#jade#toggleComment	plugged/emmet-vim/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toggleComment() abort$/;"	f
emmet#lang#less#balanceTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#balanceTag(flag) range abort$/;"	f
emmet#lang#less#encodeImage	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#encodeImage() abort$/;"	f
emmet#lang#less#findTokens	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#findTokens(str) abort$/;"	f
emmet#lang#less#imageSize	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#imageSize() abort$/;"	f
emmet#lang#less#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrev(flag) abort$/;"	f
emmet#lang#less#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#less#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#less#parseTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseTag(tag) abort$/;"	f
emmet#lang#less#removeTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#removeTag() abort$/;"	f
emmet#lang#less#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#splitJoinTag() abort$/;"	f
emmet#lang#less#toString	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#less#toggleComment	plugged/emmet-vim/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toggleComment() abort$/;"	f
emmet#lang#sass#balanceTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#balanceTag(flag) range abort$/;"	f
emmet#lang#sass#encodeImage	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#encodeImage() abort$/;"	f
emmet#lang#sass#findTokens	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#findTokens(str) abort$/;"	f
emmet#lang#sass#imageSize	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#imageSize() abort$/;"	f
emmet#lang#sass#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrev(flag) abort$/;"	f
emmet#lang#sass#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#sass#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#sass#parseTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseTag(tag) abort$/;"	f
emmet#lang#sass#removeTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#removeTag() abort$/;"	f
emmet#lang#sass#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#splitJoinTag() abort$/;"	f
emmet#lang#sass#toString	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#sass#toggleComment	plugged/emmet-vim/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toggleComment() abort$/;"	f
emmet#lang#scss#balanceTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#balanceTag(flag) range abort$/;"	f
emmet#lang#scss#encodeImage	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#encodeImage() abort$/;"	f
emmet#lang#scss#findTokens	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#findTokens(str) abort$/;"	f
emmet#lang#scss#imageSize	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#imageSize() abort$/;"	f
emmet#lang#scss#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrev(flag) abort$/;"	f
emmet#lang#scss#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#scss#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#scss#parseTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseTag(tag) abort$/;"	f
emmet#lang#scss#removeTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#removeTag() abort$/;"	f
emmet#lang#scss#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#splitJoinTag() abort$/;"	f
emmet#lang#scss#toString	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#scss#toggleComment	plugged/emmet-vim/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toggleComment() abort$/;"	f
emmet#lang#slim#balanceTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#balanceTag(flag) range abort$/;"	f
emmet#lang#slim#encodeImage	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#encodeImage() abort$/;"	f
emmet#lang#slim#findTokens	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#findTokens(str) abort$/;"	f
emmet#lang#slim#imageSize	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#imageSize() abort$/;"	f
emmet#lang#slim#moveNextPrev	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrev(flag) abort$/;"	f
emmet#lang#slim#moveNextPrevItem	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#slim#parseIntoTree	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#slim#parseTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseTag(tag) abort$/;"	f
emmet#lang#slim#removeTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#removeTag() abort$/;"	f
emmet#lang#slim#splitJoinTag	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#splitJoinTag() abort$/;"	f
emmet#lang#slim#toString	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#slim#toggleComment	plugged/emmet-vim/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toggleComment() abort$/;"	f
emmet#lang#type	plugged/emmet-vim/autoload/emmet/lang.vim	/^function! emmet#lang#type(type) abort$/;"	f
emmet#lorem#en#expand	plugged/emmet-vim/autoload/emmet/lorem/en.vim	/^function! emmet#lorem#en#expand(command) abort$/;"	f
emmet#lorem#ja#expand	plugged/emmet-vim/autoload/emmet/lorem/ja.vim	/^function! emmet#lorem#ja#expand(command) abort$/;"	f
emmet#mergeConfig	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeConfig(lhs, rhs) abort$/;"	f
emmet#mergeLines	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#mergeLines() range abort$/;"	f
emmet#moveNextPrev	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrev(flag) abort$/;"	f
emmet#moveNextPrevItem	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#moveNextPrevItem(flag) abort$/;"	f
emmet#newNode	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#newNode() abort$/;"	f
emmet#parseIntoTree	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#parseIntoTree(abbr, type) abort$/;"	f
emmet#reExpandDollarExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#reExpandDollarExpr(expand, times) abort$/;"	f
emmet#removeTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#removeTag() abort$/;"	f
emmet#splitFilterArg	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#splitFilterArg(filters) abort$/;"	f
emmet#splitJoinTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#splitJoinTag() abort$/;"	f
emmet#toString	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#toString(...) abort$/;"	f
emmet#toggleComment	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#toggleComment() abort$/;"	f
emmet#unescapeDollarExpr	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#unescapeDollarExpr(expand) abort$/;"	f
emmet#updateTag	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#updateTag() abort$/;"	f
emmet#useFilter	plugged/emmet-vim/autoload/emmet.vim	/^function! emmet#useFilter(filters, filter) abort$/;"	f
emmet#util#cache	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cache(name, ...) abort$/;"	f
emmet#util#closePopup	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#closePopup() abort$/;"	f
emmet#util#cursorInRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#cursorInRegion(region) abort$/;"	f
emmet#util#deleteContent	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#deleteContent(region) abort$/;"	f
emmet#util#getContent	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContent(region) abort$/;"	f
emmet#util#getContentFromURL	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getContentFromURL(url) abort$/;"	f
emmet#util#getImageSize	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getImageSize(fn) abort$/;"	f
emmet#util#getTextFromHTML	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getTextFromHTML(buf) abort$/;"	f
emmet#util#getVisualBlock	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getVisualBlock() abort$/;"	f
emmet#util#getcurpos	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#getcurpos() abort$/;"	f
emmet#util#imageSizeWithImageMagick	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#imageSizeWithImageMagick(fn) abort$/;"	f
emmet#util#isImageMagickInstalled	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#isImageMagickInstalled() abort$/;"	f
emmet#util#pointInRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#pointInRegion(point, region) abort$/;"	f
emmet#util#rand	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#rand() abort$/;"	f
emmet#util#regionInRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionInRegion(outer, inner) abort$/;"	f
emmet#util#regionIsValid	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#regionIsValid(region) abort$/;"	f
emmet#util#searchRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#searchRegion(start, end) abort$/;"	f
emmet#util#selectRegion	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#selectRegion(region) abort$/;"	f
emmet#util#setContent	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#setContent(region, content) abort$/;"	f
emmet#util#srand	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#srand(seed) abort$/;"	f
emmet#util#unique	plugged/emmet-vim/autoload/emmet/util.vim	/^function! emmet#util#unique(arr) abort$/;"	f
emmet_unittest_complete	plugged/emmet-vim/unittest.vim	/^function! s:emmet_unittest_complete(arglead, cmdline, cmdpos)$/;"	f
enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def enable_logging(self, context):$/;"	m	class:DeopleteHandlers
enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def enable_logging(self):$/;"	m	class:Deoplete
enable_logging	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def enable_logging(self):$/;"	m	class:Parent
encode	plugged/alchemist.vim/erl_terms.py	/^def encode(struct):$/;"	f
encode	plugged/vim-notes/misc/notes/search-notes.py	/^    def encode(self, text):$/;"	m	class:NotesIndex
encode	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^function! s:encode(val, ...) abort$/;"	f
end	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def end(self):$/;"	m	class:TextObject
end_latency_measure	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:end_latency_measure()$/;"	f
end_per_group	plugged/vim-test/spec/fixtures/commontest/test_SUITE.erl	/^end_per_group(_GroupName, _Config) ->$/;"	f	module:test_SUITE
end_per_suite	plugged/vim-test/spec/fixtures/commontest/test_SUITE.erl	/^end_per_suite(_Config) ->$/;"	f	module:test_SUITE
end_per_testcase	plugged/vim-test/spec/fixtures/commontest/test_SUITE.erl	/^end_per_testcase(_TestCase, _Config) ->$/;"	f	module:test_SUITE
endof	plugged/vim-rails/autoload/rails.vim	/^function! s:endof(lnum)$/;"	f
ends_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:ends_with(text, expr, lnum)$/;"	f
ends_with	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:ends_with(str, suffix) abort$/;"	f
endswith	plugged/vim-rails/autoload/rails.vim	/^function! s:endswith(string,suffix)$/;"	f
ensure	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetSource
ensure	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def ensure(self, filetypes):$/;"	m	class:SnippetFileSource
enumerate	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^function! s:enumerate(list)$/;"	f
environment	plugged/vim-rails/autoload/rails.vim	/^function! s:environment()$/;"	f
environment.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:environment.restore() abort$/;"	f
epub	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            epub = True,$/;"	v
erl_terms	plugged/alchemist.vim/elixir_sense.py	/^import erl_terms$/;"	i
erl_terms	plugged/alchemist.vim/t/erl_terms_test.py	/^import erl_terms$/;"	i
err	autoload/plug.vim	/^function! s:err(msg)$/;"	f
err_to_scratch_buffer	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips import err_to_scratch_buffer$/;"	i
errno	plugged/alchemist.vim/elixir_sense.py	/^import errno$/;"	i
error	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def error(self, *args, **kwargs):$/;"	m	class:AutodocReporter
error	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^from deoplete.util import (bytepos2charpos, charpos2bytepos, error, error_tb,$/;"	i
error	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^from deoplete.util import (error_tb, find_rplugins, error)$/;"	i
error	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^from deoplete.util import error, globruntime$/;"	i
error	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def error(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
error	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^from deoplete.util import error_tb, error$/;"	i
error	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error(vim, expr):$/;"	f
error	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
error	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^import vim  # pylint:disable=import-error$/;"	i
error	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^import vim  # pylint:disable=import-error$/;"	i
error	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:error(text, where)$/;"	f
error	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
error	plugged/vim-polyglot/autoload/dart.vim	/^function! s:error(text) abort$/;"	f
error	plugged/vim-polyglot/autoload/elm/util.vim	/^function! s:error(msg)$/;"	f
error	plugged/vim-rails/autoload/rails.vim	/^function! s:error(str) abort$/;"	f
error	plugged/vim-rails/plugin/rails.vim	/^function! s:error(str)$/;"	f
error_tb	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^from deoplete.util import (bytepos2charpos, charpos2bytepos, error, error_tb,$/;"	i
error_tb	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^from deoplete.util import (error_tb, find_rplugins, error)$/;"	i
error_tb	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^    from deoplete.util import error_tb$/;"	i
error_tb	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^from deoplete.util import error_tb, error$/;"	i
error_tb	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error_tb(vim, msg):$/;"	f
error_vim	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^from deoplete.util import debug, error_vim$/;"	i
error_vim	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def error_vim(vim, msg):$/;"	f
esc	autoload/plug.vim	/^function! s:esc(path)$/;"	f
escape	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def escape(expr):$/;"	f
escape	plugged/emmet-vim/unittest.vim	/^function! s:escape(str)$/;"	f
escape	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:escape(path)$/;"	f
escape	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def escape(inp):$/;"	f
escape	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^from UltiSnips.text import escape$/;"	i
escape	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.text import escape$/;"	i
escape	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def escape(text, chars):$/;"	f
escape	plugged/vim-misc/autoload/xolox/misc/option.vim	/^function! s:escape(s)$/;"	f
escape	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:escape(chars)$/;"	f
escape_file_searching	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_pattern	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_pattern	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_regexp_char	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:escape_regexp_char(char) "{{{$/;"	f
escape_special_key	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:escape_special_key(key)$/;"	f
escape_tags	plugged/vim-misc/autoload/xolox/misc/option.vim	/^function! s:escape_tags(s)$/;"	f
escarg	plugged/vim-rails/autoload/rails.vim	/^function! s:escarg(p)$/;"	f
esccmd	plugged/vim-rails/autoload/rails.vim	/^function! s:esccmd(p)$/;"	f
escrtp	autoload/plug.vim	/^function! s:escrtp(path)$/;"	f
eval	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:eval(dict, key, arg)$/;"	f
eval	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def eval(text):$/;"	f
evaluate_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:evaluate_tabline(tabline)$/;"	f
event_attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let event_attributes_value = {$/;"	v
event_handler_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let event_handler_attributes = {'onabort': [], 'onblur': [], 'oncanplay': [], 'oncanplaythrough': [], 'onchange': [], 'onclick': [], 'oncontextmenu': [], 'ondblclick': [], 'ondrag': [], 'ondragend': [], 'ondragenter': [], 'ondragleave': [], 'ondragover': [], 'ondragstart': [], 'ondrop': [], 'ondurationchange': [], 'onemptied': [], 'onended': [], 'onerror': [], 'onfocus': [], 'onformchange': [], 'onforminput': [], 'oninput': [], 'oninvalid': [], 'onkeydown': [], 'onkeypress': [], 'onkeyup': [], 'onload': [], 'onloadeddata': [], 'onloadedmetadata': [], 'onloadstart': [], 'onmousedown': [], 'onmousemove': [], 'onmouseout': [], 'onmouseover': [], 'onmouseup': [], 'onmousewheel': [], 'onpause': [], 'onplay': [], 'onplaying': [], 'onprogress': [], 'onratechange': [], 'onreadystatechange': [], 'onscroll': [], 'onseeked': [], 'onseeking': [], 'onselect': [], 'onshow': [], 'onstalled': [], 'onsubmit': [], 'onsuspend': [], 'ontimeupdate': [], 'onvolumechange': [], 'onwaiting': []}$/;"	v
events	plugged/deoplete-jedi/tests/sphinx-3000.py	/^events = {$/;"	v
exception	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def exception(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
excludes	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    excludes = normalize_excludes(rootpath, excludes)$/;"	v
excmds	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:excmds()$/;"	f
exec_separator	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:exec_separator(dict, from, to, inverse, suffix)$/;"	f
executable	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:executable(binary) abort$/;"	f
execute_script	plugged/vim-test/autoload/test/strategy.vim	/^function! s:execute_script(name, cmd) abort$/;"	f
execute_with_compiler	plugged/vim-test/autoload/test/strategy.vim	/^function! s:execute_with_compiler(cmd, script) abort$/;"	f
existing_stab	plugged/supertab/plugin/supertab.vim	/^      let existing_stab = maparg('<s-tab>', 'i', 0, 1)$/;"	v
existing_tab	plugged/supertab/plugin/supertab.vim	/^    let existing_tab = maparg('<tab>', 'i')$/;"	v
exists	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^def exists(key):$/;"	f
exists	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^from os.path import getmtime, exists$/;"	i
exists	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^from os.path import exists, dirname$/;"	i
exists	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^from os.path import exists$/;"	i
exists	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:exists(name) abort dict$/;"	f
exists	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:exists(name) abort dict$/;"	f
exists_file	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:exists_file(bufnr) abort$/;"	f
exit	plugged/tmux-complete.vim/autoload/asyncomplete/sources/tmuxcomplete.vim	/^function! s:exit(params, id, data, event) abort$/;"	f
exit	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:exit()$/;"	f
exit_visual_mode	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:exit_visual_mode()$/;"	f
expand	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^from deoplete.util import expand$/;"	i
expand	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def expand(path):$/;"	f
expand	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand(self):$/;"	m	class:SnippetManager
expand_anon	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_anon($/;"	m	class:SnippetManager
expand_anon	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def expand_anon(self, *args, **kwargs):$/;"	m	class:SnippetUtilForAction
expand_or_jump	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def expand_or_jump(self):$/;"	m	class:SnippetManager
expand_placeholder	plugged/vim-rails/autoload/rails.vim	/^function! s:expand_placeholder(placeholder, expansions) abort$/;"	f
expand_placeholders	plugged/vim-rails/autoload/rails.vim	/^function! s:expand_placeholders(string, placeholders, ...) abort$/;"	f
expand_url	plugged/vim-rails/autoload/rails.vim	/^function! s:expand_url(url, params) abort$/;"	f
expected_error	plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"IndexError: line number out of range"$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
expected_error	plugged/ultisnips/test/test_ContextSnippets.py	/^    expected_error = r"NameError: name 'Tru' is not defined"$/;"	v	class:ContextSnippets_ReportError
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > \\s+qwe"$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = " > abc"$/;"	v	class:ParseSnippets_PrintPythonStacktrace
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Context: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Defined in: .*\/all.snippets"$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: '!inv snip\/' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Invalid multiword trigger: 'test snip' in \\S+:2"$/;"	v	class:ParseSnippets_MultiWord_NoContainer
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Post-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Pre-expand: asd"$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = "Trigger: test"$/;"	v	class:ParseSnippets_PrintErroneousSnippet
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"'extends' without file types in \\S+:2"$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid line 'unknown directive' in \\S+:2"$/;"	v	class:ParseSnippets_UnknownDirective
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine1
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Invalid priority '- 50' in \\S+:2"$/;"	v	class:ParseSnippets_InvalidPriorityLine
expected_error	plugged/ultisnips/test/test_ParseSnippets.py	/^    expected_error = r"Missing 'endsnippet' for 'testsnip' in \\S+:4"$/;"	v	class:ParseSnippets_MissingEndSnippet
expected_error	plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = 'changes are untrackable'$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
expected_error	plugged/ultisnips/test/test_SnippetActions.py	/^    expected_error = 'line under the cursor was modified'$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
expected_error	plugged/ultisnips/test/vim_test_case.py	/^    expected_error = ''$/;"	v	class:VimTestCase
expected_python_version	plugged/ultisnips/test/vim_test_case.py	/^    expected_python_version = None # If set, we need to check that our Vim is running this python version.$/;"	v	class:VimTestCase
expr_map	plugged/supertab/plugin/supertab.vim	/^      let expr_map = has_key(map_dict, 'expr') && map_dict.expr$/;"	v
expr_map	plugged/supertab/plugin/supertab.vim	/^      let expr_map = maparg('<cr>', 'i') =~? '\\<cr>'$/;"	v
expr_map	plugged/supertab/plugin/supertab.vim	/^    let expr_map = 0$/;"	v
ext.add_inactive_statusline_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_inactive_statusline_func(name) dict$/;"	f
ext.add_statusline_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_func(name) dict$/;"	f
ext.add_statusline_funcref	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_statusline_funcref(function) dict$/;"	f
ext.add_theme_func	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:ext.add_theme_func(name) dict$/;"	f
ext_autodoc	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            ext_autodoc = True,$/;"	v
ext_todo	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            ext_todo = True,$/;"	v
ext_viewcode	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            ext_viewcode = True,$/;"	v
extend	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:extend(base, extra)$/;"	f
extend	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:extend(dict, src)$/;"	f
extend	plugged/vim-test/autoload/test.vim	/^function! s:extend(source, dict) abort$/;"	f
extend_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:extend_opts(dict, eopts, prepend)$/;"	f
extend_projection	plugged/vim-rails/autoload/rails.vim	/^function! s:extend_projection(dest, src) abort$/;"	f
extension	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            raise ExtensionError('Could not import extension %s' % extension,$/;"	i
extract	plugged/vim-polyglot/build	/^extract() {$/;"	f
extract_name	autoload/plug.vim	/^function! s:extract_name(str, prefix, suffix)$/;"	f
extract_strategy_from_command	plugged/vim-test/autoload/test.vim	/^function! s:extract_strategy_from_command(arguments) abort$/;"	f
extractafter	plugged/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	plugged/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
f	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map f <Plug>(easymotion-f)$/;"	m
f	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        omap f <Plug>(easymotion-f)$/;"	m
f)	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal f)$/;"	m
f/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map f\/ <Plug>(easymotion-fn)$/;"	m
f1	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal f1$/;"	m
f:	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal f:$/;"	m
f;	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal f;$/;"	m
f;a	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal f;a$/;"	m
fH	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fH$/;"	m
fHa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fHa$/;"	m
f^	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal f^$/;"	m
faa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal faa$/;"	m
fail	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:fail(interface_key_mapping_lhs)$/;"	f
far#CheckFarWindowsToResizeHandler	plugged/far.vim/autoload/far.vim	/^function! far#CheckFarWindowsToResizeHandler(timer) abort$/;"	f
far#FarArgsComplete	plugged/far.vim/autoload/far.vim	/^function! far#FarArgsComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarComplete	plugged/far.vim/autoload/far.vim	/^function! far#FarComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarFileMaskComplete	plugged/far.vim/autoload/far.vim	/^function! far#FarFileMaskComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarReplaceComplete	plugged/far.vim/autoload/far.vim	/^function! far#FarReplaceComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarSearchComplete	plugged/far.vim/autoload/far.vim	/^function! far#FarSearchComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FardoComplete	plugged/far.vim/autoload/far.vim	/^function! far#FardoComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FarundoComplete	plugged/far.vim/autoload/far.vim	/^function! far#FarundoComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FindArgsComplete	plugged/far.vim/autoload/far.vim	/^function! far#FindArgsComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#FindComplete	plugged/far.vim/autoload/far.vim	/^function! far#FindComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#RefarComplete	plugged/far.vim/autoload/far.vim	/^function! far#RefarComplete(arglead, cmdline, cursorpos) abort$/;"	f
far#apply_default_mappings	plugged/far.vim/autoload/far.vim	/^function! far#apply_default_mappings() abort "{{{$/;"	f
far#change_collapse_all	plugged/far.vim/autoload/far.vim	/^function! far#change_collapse_all(cmode) abort "{{{$/;"	f
far#change_collapse_under_cursor	plugged/far.vim/autoload/far.vim	/^function! far#change_collapse_under_cursor(cmode) abort "{{{$/;"	f
far#change_exclude_all	plugged/far.vim/autoload/far.vim	/^function! far#change_exclude_all(cmode) abort "{{{$/;"	f
far#change_exclude_under_cursor	plugged/far.vim/autoload/far.vim	/^function! far#change_exclude_under_cursor(cmode) abort "{{{$/;"	f
far#close_preview_window	plugged/far.vim/autoload/far.vim	/^function! far#close_preview_window() abort "{{{$/;"	f
far#executors#basic#execute	plugged/far.vim/autoload/far/executors/basic.vim	/^function! far#executors#basic#execute(exec_ctx, callback) abort$/;"	f
far#executors#nvim#callback	plugged/far.vim/autoload/far/executors/nvim.vim	/^function! far#executors#nvim#callback(result, ctx_idx) abort$/;"	f
far#executors#nvim#execute	plugged/far.vim/autoload/far/executors/nvim.vim	/^function! far#executors#nvim#execute(exec_ctx, callback) abort$/;"	f
far#executors#py3#execute	plugged/far.vim/autoload/far/executors/py3.vim	/^function! far#executors#py3#execute(exec_ctx, callback) abort$/;"	f
far#find	plugged/far.vim/autoload/far.vim	/^function! far#find(far_params, xargs) "{{{$/;"	f
far#jump_buffer_under_cursor	plugged/far.vim/autoload/far.vim	/^function! far#jump_buffer_under_cursor() abort "{{{$/;"	f
far#refind	plugged/far.vim/autoload/far.vim	/^function! far#refind(range, xargs) abort "{{{$/;"	f
far#replace	plugged/far.vim/autoload/far.vim	/^function! far#replace(xargs) abort "{{{$/;"	f
far#rpc#invoke	plugged/far.vim/autoload/far/rpc.vim	/^function! far#rpc#invoke(imports, evalstr) abort "{{{$/;"	f
far#rpc#nvim_invoke	plugged/far.vim/autoload/far/rpc.vim	/^function! far#rpc#nvim_invoke(execlist) abort "{{{$/;"	f
far#scroll_preview_window	plugged/far.vim/autoload/far.vim	/^function! far#scroll_preview_window(steps) abort "{{{$/;"	f
far#show_preview_window_under_cursor	plugged/far.vim/autoload/far.vim	/^function! far#show_preview_window_under_cursor() abort "{{{$/;"	f
far#sources#qf#search	plugged/far.vim/autoload/far/sources/qf.vim	/^function! far#sources#qf#search(ctx, fargs, cmdargs) abort "{{{$/;"	f
far#tools#centrify_text	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#centrify_text(text, width, val_col) abort "{{{$/;"	f
far#tools#cut_text_middle	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#cut_text_middle(text, width) abort "{{{$/;"	f
far#tools#echo_err	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#echo_err(msg) abort "{{{$/;"	f
far#tools#echo_msg	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#echo_msg(msg) abort "{{{$/;"	f
far#tools#ftlookup	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#ftlookup(ext) abort "{{{$/;"	f
far#tools#isdebug	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#isdebug()$/;"	f
far#tools#log	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#log(msg)$/;"	f
far#tools#matchcnt	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#matchcnt(pat, exp) abort "{{{$/;"	f
far#tools#replace	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#replace(text, str, repl) "{{{$/;"	f
far#tools#setdefault	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#setdefault(var, val) abort "{{{$/;"	f
far#tools#split_layout	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#split_layout(smode, bname, width, height) abort "{{{$/;"	f
far#tools#splitcmd	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#splitcmd(cmdline) "{{{$/;"	f
far#tools#undo_nextnr	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#undo_nextnr() "{{{$/;"	f
far#tools#visualtext	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#visualtext() "{{{$/;"	f
far#tools#win_layout	plugged/far.vim/autoload/far/tools.vim	/^function! far#tools#win_layout(win_params, param_prefix, fname) abort "{{{$/;"	f
far#undo	plugged/far.vim/autoload/far.vim	/^function! far#undo(xargs) abort "{{{$/;"	f
faraugroup	plugged/far.vim/autoload/far.vim	/^augroup faraugroup "{{{$/;"	a
farpy_path	plugged/far.vim/autoload/far/rpc.vim	/^let farpy_path = fnamemodify(expand('<sfile>'), ':p:h:h:h').'\/rplugin\/python3'$/;"	v
fatal	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    fatal = critical$/;"	v	class:LoggingMixin
fb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fb$/;"	m
fba	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fba$/;"	m
fd	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fd$/;"	m
feed	plugged/vim-peekaboo/autoload/peekaboo.vim	/^function! s:feed(count, mode, reg, rest)$/;"	f
feedkeys	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def feedkeys(keys, mode='n'):$/;"	f
feedkeys	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:feedkeys(keys)$/;"	f
fetch_snippets_from_dir	plugged/ultisnips/utils/get_tm_snippets.py	/^def fetch_snippets_from_dir(path):$/;"	f
fetch_snippets_from_svn	plugged/ultisnips/utils/get_tm_snippets.py	/^def fetch_snippets_from_svn(name):$/;"	f
fh	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fh$/;"	m
fha	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fha$/;"	m
fhb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fhb$/;"	m
fields	plugged/vim-easytags/misc/easytags/why-so-slow.py	/^  fields = line.split('\\t')$/;"	v
file_getline	plugged/vim-rails/autoload/rails.vim	/^function! s:file_getline(lnum,...) dict abort$/;"	f
file_lines	plugged/vim-rails/autoload/rails.vim	/^function! s:file_lines() dict abort$/;"	f
file_mtime	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/utils.py	/^def file_mtime(filename):$/;"	f
file_mtime	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^from .utils import file_mtime$/;"	i
file_name	plugged/vim-rails/autoload/rails.vim	/^function! s:file_name() dict abort$/;"	f
file_options	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_options(prefix)$/;"	f
file_path	plugged/vim-rails/autoload/rails.vim	/^function! s:file_path() dict abort$/;"	f
file_source	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_source(prefix)$/;"	f
file_split_prefix	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:file_split_prefix(prefix)$/;"	f
filename	plugged/vim-easytags/misc/easytags/why-so-slow.py	/^    filename = filename.replace(os.environ['HOME'], '~')$/;"	v
filename	plugged/vim-easytags/misc/easytags/why-so-slow.py	/^  filename = fields[1]$/;"	v
filename	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:filename(bufnr) abort$/;"	f
files	plugged/ultisnips/test/test_SnipMate.py	/^    files = {$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByChild
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_ClearedByParent
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear
files	plugged/ultisnips/test/test_SnippetPriorities.py	/^    files = {$/;"	v	class:SnippetPriorities_SimpleClear2
files	plugged/ultisnips/test/vim_test_case.py	/^    files = {}$/;"	v	class:VimTestCase
files	plugged/vim-bookmarks/t/bm_spec.vim	/^    let files = bm#all_files()$/;"	v
filetypedetect	plugged/vim-notes/plugin/notes.vim	/^augroup filetypedetect$/;"	a
filetypedetect	plugged/vim-polyglot/config.vim	/^augroup filetypedetect$/;"	a
filetypedetect	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  augroup filetypedetect$/;"	a
filetypedetect	plugged/vim-polyglot/ftdetect/polyglot.vim	/^augroup filetypedetect$/;"	a
filetypes	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def filetypes(self):$/;"	m	class:VimBuffer
fill_in_whitespace	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def fill_in_whitespace(text):$/;"	f
fill_in_whitespace	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^from UltiSnips.text import unescape, fill_in_whitespace$/;"	i
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^import deoplete.filter  # noqa$/;"	i
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/base.py	/^    def filter(self, context):$/;"	m	class:Base
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_head.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_length.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_rank.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/sorter_word.py	/^    def filter(self, context):$/;"	m	class:Filter
filter	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def filter(self, record):$/;"	m	class:DeopleteLogFilter
filter	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^	def filter(self, context):$/;"	m	class:Filter
filter_members	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def filter_members(self, members, want_all):$/;"	m	class:Documenter
filter_merge_tags	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^function! s:filter_merge_tags(filter_tags, tagsfile, output, cache) " {{{1$/;"	f
filter_oldfiles	plugged/vim-startify/autoload/startify.vim	/^function! s:filter_oldfiles(path_prefix, path_format, use_env) abort$/;"	f
filter_oldfiles_unsafe	plugged/vim-startify/autoload/startify.vim	/^function! s:filter_oldfiles_unsafe(path_prefix, path_format, use_env) abort$/;"	f
finalize	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^    def finalize(self, item):$/;"	m	class:Source
finalize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_base.py	/^def finalize(all_tokens, seen_ts, snippet_instance):$/;"	f
finalize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.snippet.parsing._base import tokenize_snippet_text, finalize, resolve_ambiguity$/;"	i
finalize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^from UltiSnips.snippet.parsing._base import tokenize_snippet_text, finalize, resolve_ambiguity$/;"	i
finalize_cached	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^    def finalize_cached(self, cache_key, filters, cached):$/;"	m	class:Source
find	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
find	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
find	plugged/vim-rails/autoload/rails.vim	/^function! s:find(cmd, file) abort$/;"	f
findAndRevealPath	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath(pathStr)$/;"	f
findDependencyModule	plugged/vim-polyglot/autoload/elm/util.vim	/^function! s:findDependencyModule(rel_path, root)$/;"	f
findLocalModule	plugged/vim-polyglot/autoload/elm/util.vim	/^function! s:findLocalModule(rel_path, root)$/;"	f
findMotion	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:findMotion(num_strokes, direction) "{{{$/;"	f
find_all_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet/source/__init__.py	/^    find_all_snippet_files, find_snippet_files$/;"	i
find_all_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_all_snippet_files(ft):$/;"	f
find_all_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    find_all_snippet_files, find_snippet_files, AddedSnippetsSource$/;"	i
find_block	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:find_block(current_mode)$/;"	f
find_catalog	plugged/deoplete-jedi/tests/sphinx-3000.py	/^from sphinx.util.i18n import find_catalog$/;"	i
find_completion_start	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_completion_start() abort$/;"	f
find_current_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:find_current_signs(bufnr) abort$/;"	f
find_extra_sys_path	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def find_extra_sys_path(self, filename):$/;"	m	class:Server
find_index	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_indices	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_indices	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_last_index	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_last_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_last_pos	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:find_last_pos(lnum, text, match)$/;"	f
find_match	plugged/vim-test/autoload/test/base.vim	/^function! s:find_match(line, patterns) abort$/;"	f
find_matches	plugged/far.vim/autoload/far.vim	/^function! s:find_matches(items, key) abort$/;"	f
find_name	autoload/plug.vim	/^function! s:find_name(lnum)$/;"	f
find_next	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:find_next(text)$/;"	f
find_open_window	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:find_open_window(b)$/;"	f
find_opening_paren	plugged/vim-polyglot/indent/cython.vim	/^function! s:find_opening_paren(...)$/;"	f
find_opening_paren	plugged/vim-polyglot/indent/python.vim	/^function! s:find_opening_paren(...)$/;"	f
find_parent_for_new_to	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def find_parent_for_new_to(self, pos):$/;"	m	class:EditableTextObject
find_root_by_spec	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:find_root_by_spec(d) abort$/;"	f
find_rplugins	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^from deoplete.util import (error_tb, find_rplugins, error)$/;"	i
find_rplugins	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def find_rplugins(context, source):$/;"	f
find_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet/source/__init__.py	/^    find_all_snippet_files, find_snippet_files$/;"	i
find_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^def find_snippet_files(ft, directory):$/;"	f
find_snippet_files	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    find_all_snippet_files, find_snippet_files, AddedSnippetsSource$/;"	i
find_start	plugged/alchemist.vim/autoload/elixircomplete.vim	/^function! s:find_start()$/;"	f
find_start_of_block	plugged/vim-polyglot/indent/cython.vim	/^function! s:find_start_of_block(lnum, types, multiple)$/;"	f
find_start_of_block	plugged/vim-polyglot/indent/python.vim	/^function! s:find_start_of_block(lnum, types, multiple)$/;"	f
find_start_of_multiline_statement	plugged/vim-polyglot/indent/cython.vim	/^function! s:find_start_of_multiline_statement(lnum)$/;"	f
find_start_of_multiline_statement	plugged/vim-polyglot/indent/python.vim	/^function! s:find_start_of_multiline_statement(lnum)$/;"	f
find_tagged_files	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^function! s:find_tagged_files(entries, cache) " {{{1$/;"	f
findamethod	plugged/vim-rails/autoload/rails.vim	/^function! s:findamethod(func, ...) abort$/;"	f
findapartial	plugged/vim-rails/autoload/rails.vim	/^function! s:findapartial(func) abort$/;"	f
findasset	plugged/vim-rails/autoload/rails.vim	/^function! s:findasset(path, dir) abort$/;"	f
findasymbol	plugged/vim-rails/autoload/rails.vim	/^function! s:findasymbol(sym) abort$/;"	f
findcmdfor	plugged/vim-rails/autoload/rails.vim	/^function! s:findcmdfor(cmd) abort$/;"	f
findit	plugged/vim-rails/autoload/rails.vim	/^function! s:findit(pat,repl)$/;"	f
findlayout	plugged/vim-rails/autoload/rails.vim	/^function! s:findlayout(name)$/;"	f
findview	plugged/vim-rails/autoload/rails.vim	/^function! s:findview(name) abort$/;"	f
finish	autoload/plug.vim	/^function! s:finish(pull)$/;"	f
finish	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def finish(self):$/;"	m	class:Builder
finish_bindings	autoload/plug.vim	/^function! s:finish_bindings()$/;"	f
fire_pre_triggers	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:fire_pre_triggers()$/;"	f
first_line	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:first_line(lines)$/;"	f
fish#Complete	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Complete(findstart, base)$/;"	f
fish#Fold	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Fold()$/;"	f
fish#Format	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Format()$/;"	f
fish#Indent	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#Indent()$/;"	f
fish#errorformat	plugged/vim-polyglot/autoload/fish.vim	/^function! fish#errorformat()$/;"	f
fix_file_references	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:fix_file_references(filepath, hunk_diff)$/;"	f
fixindent	plugged/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
fixturesEdit	plugged/vim-rails/autoload/rails.vim	/^function! s:fixturesEdit(cmd,...)$/;"	f
fixturesList	plugged/vim-rails/autoload/rails.vim	/^function! s:fixturesList(A,L,P)$/;"	f
fixup	plugged/ultisnips/utils/get_tm_snippets.py	/^    def fixup(m):$/;"	f	function:unescape
flag_inactive_tabs	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:flag_inactive_tabs()$/;"	f
flatten	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flatten	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flatten_test_suite	plugged/ultisnips/test_all.py	/^    def flatten_test_suite(suite):$/;"	f	function:setup_other_plugins
flow_elements	plugged/vim-polyglot/autoload/xml/html5.vim	/^let flow_elements = phrasing_elements + ['p', 'hr', 'pre', 'ul', 'ol', 'dl', 'div', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hgroup', 'address', 'blockquote', 'ins', 'del', 'element', 'object', 'main', 'map', 'noscript', 'section', 'nav', 'article', 'aside', 'header', 'footer', 'video', 'audio', 'figure', 'table', 'template', 'form', 'fieldset', 'menu', 'canvas', 'details']$/;"	v
fm	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fm$/;"	m
fn	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def fn(self):  # pylint:disable=no-self-use,invalid-name$/;"	m	class:SnippetUtil
fname	plugged/vim-startify/autoload/startify.vim	/^      let fname = substitute(fname, '\\[', '\\[[]', 'g')$/;"	v
fname	plugged/vim-startify/autoload/startify.vim	/^    let fname = fnamemodify(sfiles[i], ':t')$/;"	v
fname_prefix	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:fname_prefix(str)$/;"	f
fnameescape	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fnameescape	plugged/vim-rails/autoload/rails.vim	/^function! s:fnameescape(file) abort$/;"	f
fnmatch	plugged/vim-notes/misc/notes/search-notes.py	/^import fnmatch$/;"	i
foa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal foa$/;"	m
focus	plugged/ultisnips/test/vim_interface.py	/^    def focus(self, title=None):$/;"	m	class:VimInterfaceWindows
foldable	plugged/vim-polyglot/syntax/ruby.vim	/^function! s:foldable(...) abort$/;"	f
foldable	plugged/vim-ruby/syntax/ruby.vim	/^function! s:foldable(...) abort$/;"	f
foldl	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:foldl(f, init, dict) abort$/;"	f
foldl	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl1	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldl1	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldmarker	plugged/vim-snippets/pythonx/vimsnippets.py	/^def foldmarker():$/;"	f
foldr	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:foldr(f, init, dict) abort$/;"	f
foldr	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr1	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
foldr1	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
foo	plugged/vim-ruby/spec/indent/basic_spec.rb	/^      def foo$/;"	f
foo	plugged/vim-ruby/spec/indent/blocks_spec.rb	/^      def foo$/;"	f
foo	plugged/vim-ruby/spec/indent/blocks_spec.rb	/^      def foo(job)$/;"	f
foo	plugged/vim-ruby/spec/indent/continuations_spec.rb	/^      def foo$/;"	f
foo	plugged/vim-textobj-ruby/test/test.rb	/^    def foo str$/;"	f	class:Main.Hoge
format	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    format = ''$/;"	v	class:Builder
format	plugged/vim-rails/autoload/rails.vim	/^function! s:format()$/;"	f
format_args	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def format_args(self):$/;"	m	class:Documenter
format_bookmark	plugged/vim-bookmarks/autoload/unite/filters/converter_vim_bookmarks_long.vim	/^function! s:format_bookmark(candidate) " {{{$/;"	f
format_bookmark	plugged/vim-bookmarks/autoload/unite/filters/converter_vim_bookmarks_short.vim	/^function! s:format_bookmark(candidate) " {{{$/;"	f
format_buffer	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_buffer(b)$/;"	f
format_cmd	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_cmd(line)$/;"	f
format_directive	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def format_directive(module, package=None):$/;"	f
format_excmd	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_excmd(ex)$/;"	f
format_for_log	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:format_for_log(data) abort$/;"	f
format_git_log	autoload/plug.vim	/^function! s:format_git_log(line)$/;"	f
format_heading	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def format_heading(level, text):$/;"	f
format_mark	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_mark(line)$/;"	f
format_message	autoload/plug.vim	/^function! s:format_message(bullet, name, message)$/;"	f
format_name	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def format_name(self):$/;"	m	class:Documenter
format_name	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^  function! s:format_name(name)$/;"	f
format_signature	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def format_signature(self):$/;"	m	class:Documenter
format_win	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:format_win(tab, win, buf)$/;"	f
formatargspec	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def formatargspec(*argspec):$/;"	f
friendly_name	plugged/vim-gitgutter/test/runner.vim	/^  let friendly_name = FriendlyName(test)$/;"	v
from	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^    if cinput.startswith(('import ', 'from ')):$/;"	i
frozenset	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:frozenset(...) abort$/;"	f
ft	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def ft(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#Cfile	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#Cfile() abort$/;"	f
fugitive#Foldtext	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#Foldtext() abort$/;"	f
fugitive#ReloadStatus	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#ReloadStatus() abort$/;"	f
fugitive#Statusline	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#Statusline(...) abort$/;"	f
fugitive#buffer	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#can_diffoff	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#can_diffoff(buf) abort$/;"	f
fugitive#cfile	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cfile() abort$/;"	f
fugitive#cwindow	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cwindow() abort$/;"	f
fugitive#detect	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_commands	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_commands() abort$/;"	f
fugitive#git_version	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#statusline	plugged/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive_blame	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_statusline	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_statusline$/;"	a
fugitive_temp	plugged/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
full_buffer	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def full_buffer(self):$/;"	m	class:Source
full_module	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^def full_module(source, obj):$/;"	f
function	plugged/fzf.vim/autoload/fzf/vim.vim	/^  function! s:function(name)$/;"	f
function	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^  function! s:function(name)$/;"	f
function	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
function	plugged/vim-rails/autoload/rails.vim	/^function! s:function(name) abort$/;"	f
function	plugged/vim-rails/plugin/rails.vim	/^function! s:function(name)$/;"	f
function_range	plugged/vim-textobj-function-javascript/autoload/textobj/function/javascript.vim	/^function! s:function_range()$/;"	f
functools	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^import functools$/;"	i
functools	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^import functools$/;"	i
fuzzy_escape	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^from deoplete.util import fuzzy_escape$/;"	i
fuzzy_escape	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def fuzzy_escape(string, camelcase):$/;"	f
fuzzyglob	plugged/vim-rails/autoload/rails.vim	/^function! s:fuzzyglob(arg) abort$/;"	f
fxa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fxa$/;"	m
fz	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fz$/;"	m
fza	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal fza$/;"	m
fzf	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:fzf(name, opts, extra)$/;"	f
fzf#complete	plugged/fzf.vim/plugin/fzf.vim	/^function! fzf#complete(...)$/;"	f
fzf#vim#_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_lines(all)$/;"	f
fzf#vim#_uniq	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#_uniq(list)$/;"	f
fzf#vim#ag	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag(query, ...)$/;"	f
fzf#vim#ag_raw	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#ag_raw(command_suffix, ...)$/;"	f
fzf#vim#buffer_commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_commits(...)$/;"	f
fzf#vim#buffer_lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_lines(...)$/;"	f
fzf#vim#buffer_tags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffer_tags(query, ...)$/;"	f
fzf#vim#buffers	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#buffers(...)$/;"	f
fzf#vim#colors	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#colors(...)$/;"	f
fzf#vim#command_history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#command_history(...)$/;"	f
fzf#vim#commands	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commands(...)$/;"	f
fzf#vim#commits	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#commits(...)$/;"	f
fzf#vim#complete	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#complete(...)$/;"	f
fzf#vim#complete#buffer_line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#buffer_line(...)$/;"	f
fzf#vim#complete#line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#line(...)$/;"	f
fzf#vim#complete#path	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#path(command, ...)$/;"	f
fzf#vim#complete#word	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! fzf#vim#complete#word(...)$/;"	f
fzf#vim#files	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#files(dir, ...)$/;"	f
fzf#vim#filetypes	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#filetypes(...)$/;"	f
fzf#vim#gitfiles	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#gitfiles(args, ...)$/;"	f
fzf#vim#grep	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#grep(grep_command, with_column, ...)$/;"	f
fzf#vim#helptags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#helptags(...)$/;"	f
fzf#vim#history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#history(...)$/;"	f
fzf#vim#lines	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#lines(...)$/;"	f
fzf#vim#locate	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#locate(query, ...)$/;"	f
fzf#vim#maps	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#maps(mode, ...)$/;"	f
fzf#vim#marks	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#marks(...)$/;"	f
fzf#vim#search_history	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#search_history(...)$/;"	f
fzf#vim#snippets	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#snippets(...)$/;"	f
fzf#vim#tags	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#tags(query, ...)$/;"	f
fzf#vim#windows	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#windows(...)$/;"	f
fzf#vim#with_preview	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! fzf#vim#with_preview(...)$/;"	f
fzf_buffers	plugged/fzf.vim/plugin/fzf.vim	/^augroup fzf_buffers$/;"	a
fzf_restore_colors	plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_restore_colors()$/;"	f
fzf_vim_term	plugged/fzf.vim/plugin/fzf.vim	/^  function! s:fzf_vim_term()$/;"	f
g:AutoClosePairs	init.vim	/^let g:AutoClosePairs = { '#{': '}'}$/;"	v
g:AutoCloseProtectedRegions	init.vim	/^let g:AutoCloseProtectedRegions = ["Character"]$/;"	v
g:AutoPairs	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairs = {'(':')', '[':']', '{':'}',"'":"'",'"':'"', '`':'`'}$/;"	v
g:AutoPairsCenterLine	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsCenterLine = 1$/;"	v
g:AutoPairsClosedPairs	plugged/auto-pairs/plugin/auto-pairs.vim	/^let g:AutoPairsClosedPairs = {}$/;"	v
g:AutoPairsFlyMode	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsFlyMode = 0$/;"	v
g:AutoPairsLoaded	plugged/auto-pairs/plugin/auto-pairs.vim	/^let g:AutoPairsLoaded = 1$/;"	v
g:AutoPairsMapBS	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapBS = 1$/;"	v
g:AutoPairsMapCR	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCR = 1$/;"	v
g:AutoPairsMapCh	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapCh = 1$/;"	v
g:AutoPairsMapSpace	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMapSpace = 1$/;"	v
g:AutoPairsMoveCharacter	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMoveCharacter = "()[]{}\\"'"$/;"	v
g:AutoPairsMultilineClose	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsMultilineClose = 1$/;"	v
g:AutoPairsParens	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsParens = {'(':')', '[':']', '{':'}'}$/;"	v
g:AutoPairsShortcutBackInsert	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutBackInsert = '<M-b>'$/;"	v
g:AutoPairsShortcutFastWrap	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutFastWrap = '<M-e>'$/;"	v
g:AutoPairsShortcutJump	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutJump = '<M-n>'$/;"	v
g:AutoPairsShortcutToggle	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsShortcutToggle = '<M-p>'$/;"	v
g:AutoPairsSmartQuotes	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let g:AutoPairsSmartQuotes = 1$/;"	v
g:DevIconsAppendArtifactFix	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:DevIconsAppendArtifactFix = 0$/;"	v
g:DevIconsAppendArtifactFix	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:DevIconsAppendArtifactFix = 1$/;"	v
g:DevIconsArtifactFixChar	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:DevIconsArtifactFixChar = " "$/;"	v
g:DevIconsDefaultFolderOpenSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:DevIconsDefaultFolderOpenSymbol = ''$/;"	v
g:DevIconsEnableFolderExtensionPatternMatching	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderExtensionPatternMatching = 0$/;"	v
g:DevIconsEnableFolderExtensionPatternMatching	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderExtensionPatternMatching = 0$/;"	v
g:DevIconsEnableFolderPatternMatching	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderPatternMatching = 1$/;"	v
g:DevIconsEnableFolderPatternMatching	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:DevIconsEnableFolderPatternMatching = 1$/;"	v
g:DevIconsEnableFoldersOpenClose	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:DevIconsEnableFoldersOpenClose = 0$/;"	v
g:DevIconsEnableFoldersOpenClose	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:DevIconsEnableFoldersOpenClose = 0$/;"	v
g:DevIconsEnableNERDTreeRedraw	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:DevIconsEnableNERDTreeRedraw = 0$/;"	v
g:DevIconsEnableNERDTreeRedraw	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:DevIconsEnableNERDTreeRedraw = 1$/;"	v
g:EasyMotion_add_search_history	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_add_search_history = get(g: , 'EasyMotion_add_search_history' , 1)$/;"	v
g:EasyMotion_command_line_key_mappings	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_command_line_key_mappings =$/;"	v
g:EasyMotion_cursor_highlight	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_cursor_highlight   = get(g: , 'EasyMotion_cursor_highlight'   , 1)$/;"	v
g:EasyMotion_disable_two_key_combo	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_disable_two_key_combo     =$/;"	v
g:EasyMotion_do_mapping	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_do_mapping         = get(g: , 'EasyMotion_do_mapping'         , 1)$/;"	v
g:EasyMotion_do_shade	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_do_shade           = get(g: , 'EasyMotion_do_shade'           , 1)$/;"	v
g:EasyMotion_enter_jump_first	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_enter_jump_first   = get(g: , 'EasyMotion_enter_jump_first'   , 0)$/;"	v
g:EasyMotion_force_csapprox	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_force_csapprox     = get(g: , 'EasyMotion_force_csapprox'     , 0)$/;"	v
g:EasyMotion_grouping	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_grouping           = get(g: , 'EasyMotion_grouping'           , 1)$/;"	v
g:EasyMotion_hl2_first_group_target	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl2_first_group_target  = get(g:,$/;"	v
g:EasyMotion_hl2_second_group_target	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl2_second_group_target = get(g:,$/;"	v
g:EasyMotion_hl_group_shade	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_group_shade          = get(g:,$/;"	v
g:EasyMotion_hl_group_target	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_group_target         = get(g:,$/;"	v
g:EasyMotion_hl_inc_cursor	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_inc_cursor     = get(g:,$/;"	v
g:EasyMotion_hl_inc_search	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_inc_search     = get(g:,$/;"	v
g:EasyMotion_hl_move	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_move           = get(g:,$/;"	v
g:EasyMotion_inc_highlight	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_inc_highlight      = get(g: , 'EasyMotion_inc_highlight'      , 1)$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_keys               = get(g:,$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        let g:EasyMotion_keys = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_keys = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        let g:EasyMotion_keys = '123456789'$/;"	v
g:EasyMotion_keys	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_keys = '123456789'$/;"	v
g:EasyMotion_landing_highlight	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_landing_highlight  = get(g: , 'EasyMotion_landing_highlight'  , 0)$/;"	v
g:EasyMotion_loaded	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_loaded = 1$/;"	v
g:EasyMotion_maximal_jumpmarks	plugged/vim-easymotion/t/compare_movements_spec.vim	/^        let g:EasyMotion_maximal_jumpmarks  = 2 " Error for value 1 unanalyzed. $/;"	v
g:EasyMotion_move_highlight	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_move_highlight     = get(g: , 'EasyMotion_move_highlight'     , 1)$/;"	v
g:EasyMotion_off_screen_search	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_off_screen_search  = get(g: , 'EasyMotion_off_screen_search'  , 1)$/;"	v
g:EasyMotion_off_screen_search	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 0$/;"	v
g:EasyMotion_off_screen_search	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 1$/;"	v
g:EasyMotion_prompt	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_prompt             =$/;"	v
g:EasyMotion_show_prompt	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_show_prompt        = get(g: , 'EasyMotion_show_prompt'        , 1)$/;"	v
g:EasyMotion_skipfoldedline	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_skipfoldedline     = get(g: , 'EasyMotion_skipfoldedline'     , 1)$/;"	v
g:EasyMotion_smartcase	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_smartcase          = get(g: , 'EasyMotion_smartcase'          , 0)$/;"	v
g:EasyMotion_smartcase	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 0$/;"	v
g:EasyMotion_smartcase	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 1$/;"	v
g:EasyMotion_space_jump_first	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_space_jump_first   = get(g: , 'EasyMotion_space_jump_first'   , 0)$/;"	v
g:EasyMotion_startofline	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_startofline        = get(g: , 'EasyMotion_startofline'        , 1)$/;"	v
g:EasyMotion_use_migemo	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_migemo         = get(g: , 'EasyMotion_use_migemo'         , 0)$/;"	v
g:EasyMotion_use_migemo	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_migemo = 1$/;"	v
g:EasyMotion_use_regexp	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_regexp         = get(g: , 'EasyMotion_use_regexp'         , 1)$/;"	v
g:EasyMotion_use_regexp	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 0$/;"	v
g:EasyMotion_use_regexp	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 1$/;"	v
g:EasyMotion_use_smartsign_jp	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_use_smartsign_jp = 1$/;"	v
g:EasyMotion_use_smartsign_us	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 0$/;"	v
g:EasyMotion_use_smartsign_us	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_smartsign_us	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_upper	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_upper          = get(g: , 'EasyMotion_use_upper'          , 0)$/;"	v
g:EasyMotion_verbose	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_verbose            = get(g: , 'EasyMotion_verbose'            , 1)$/;"	v
g:EasyMotion_verbose	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_verbose = 0$/;"	v
g:EasyMotion_verbose	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_verbose = 1$/;"	v
g:LatexBox_Folding	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^	let g:LatexBox_Folding=0$/;"	v
g:LatexBox_autojump	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_autojump = 0$/;"	v
g:LatexBox_bibtex_wild_spaces	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_bibtex_wild_spaces = 1$/;"	v
g:LatexBox_cite_pattern	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_cite_pattern = '\\C\\\\\\a*cite\\a*\\*\\?\\(\\[[^\\]]*\\]\\)*\\_\\s*{'$/;"	v
g:LatexBox_close_pats	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^	let g:LatexBox_close_pats = [ '\\\\}','}','\\\\)',')','\\\\\\]','\\]',$/;"	v
g:LatexBox_complete_inlineMath	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_complete_inlineMath = 0$/;"	v
g:LatexBox_completion_close_braces	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_completion_close_braces = 1$/;"	v
g:LatexBox_completion_commands	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_completion_commands = [$/;"	v
g:LatexBox_completion_environments	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_completion_environments = [$/;"	v
g:LatexBox_eq_env_patterns	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_eq_env_patterns = 'equation\\|gather\\|multiline\\|align\\|flalign\\|alignat\\|eqnarray'$/;"	v
g:LatexBox_fold_automatic	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^	let g:LatexBox_fold_automatic=1$/;"	v
g:LatexBox_fold_envs	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_envs=1$/;"	v
g:LatexBox_fold_envs_force	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_envs_force = []$/;"	v
g:LatexBox_fold_parts	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_parts=[$/;"	v
g:LatexBox_fold_preamble	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_preamble=1$/;"	v
g:LatexBox_fold_sections	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_sections=[$/;"	v
g:LatexBox_fold_text	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_text=1$/;"	v
g:LatexBox_fold_toc	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_toc=0$/;"	v
g:LatexBox_fold_toc_levels	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^    let g:LatexBox_fold_toc_levels=1$/;"	v
g:LatexBox_ignore_warnings	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_ignore_warnings =$/;"	v
g:LatexBox_latexmk_async	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_latexmk_async = 0$/;"	v
g:LatexBox_latexmk_env	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_latexmk_env = ''$/;"	v
g:LatexBox_latexmk_options	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_latexmk_options = ''$/;"	v
g:LatexBox_latexmk_preview_continuously	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_latexmk_preview_continuously = 0$/;"	v
g:LatexBox_open_pats	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^	let g:LatexBox_open_pats  = [ '\\\\{','{','\\\\(','(','\\\\\\[','\\[',$/;"	v
g:LatexBox_output_type	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_output_type = 'pdf'$/;"	v
g:LatexBox_personal_latexmkrc	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_personal_latexmkrc = 0$/;"	v
g:LatexBox_quickfix	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:LatexBox_quickfix = 1$/;"	v
g:LatexBox_ref_pattern	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^	let g:LatexBox_ref_pattern = '\\C\\\\v\\?\\(eq\\|page\\|[cC]\\|labelc\\|name\\|auto\\)\\?ref\\*\\?\\_\\s*{'$/;"	v
g:LatexBox_show_warnings	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_show_warnings=1$/;"	v
g:LatexBox_split_length	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_length = 15$/;"	v
g:LatexBox_split_resize	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_resize = 0$/;"	v
g:LatexBox_split_side	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_side = "aboveleft"$/;"	v
g:LatexBox_split_type	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_type = "vnew"$/;"	v
g:LatexBox_split_width	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_split_width = 30$/;"	v
g:LatexBox_toc_hidehelp	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_toc_hidehelp = 0$/;"	v
g:LatexBox_viewer	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^	let g:LatexBox_viewer = s:viewer$/;"	v
g:NERDCustomDelimiters	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^	let g:NERDCustomDelimiters = {'caddyfile': s:delimiters}$/;"	v
g:NERDCustomDelimiters	plugged/vim-polyglot/ftplugin/toml.vim	/^        let g:NERDCustomDelimiters.toml = s:delims$/;"	v
g:NERDCustomDelimiters	plugged/vim-polyglot/ftplugin/toml.vim	/^    let g:NERDCustomDelimiters = { 'toml': s:delims }$/;"	v
g:NERDDelimiterMap	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^		let g:NERDDelimiterMap.caddyfile = s:delimiters$/;"	v
g:NERDDelimiterMap	plugged/vim-polyglot/ftplugin/toml.vim	/^        let g:NERDDelimiterMap.toml = s:delims$/;"	v
g:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoDeleteBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	plugged/nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeIgnore	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMapNextHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeMapNextHunk = ']c'$/;"	v
g:NERDTreeMapPrevHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeMapPrevHunk = '[c'$/;"	v
g:NERDTreeMenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeMinimalUI	config/plugins/nerdtree.vim	/^let g:NERDTreeMinimalUI = 1$/;"	v
g:NERDTreeOpener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	plugged/nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeShowGitStatus	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeShowGitStatus = 1$/;"	v
g:NERDTreeShowIgnoredStatus	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeShowIgnoredStatus = 0$/;"	v
g:NERDTreeSortOrder	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	plugged/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}"$/;"	v
g:NERDTreeUI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:NERDTreeUpdateOnCursorHold	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeUpdateOnCursorHold = 1$/;"	v
g:NERDTreeUpdateOnCursorHold	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:NERDTreeUpdateOnCursorHold = 1$/;"	v
g:NERDTreeUpdateOnWrite	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeUpdateOnWrite = 1$/;"	v
g:SuperTabClosePreviewOnPopupClose	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabClosePreviewOnPopupClose = 0$/;"	v
g:SuperTabCompleteCase	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabCompleteCase = 'inherit'$/;"	v
g:SuperTabCompletionContexts	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabCompletionContexts = ['s:ContextText']$/;"	v
g:SuperTabContextDefaultCompletionType	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabContextDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabContextTextMemberPatterns	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabContextTextMemberPatterns = ['\\.', '>\\?::', '->']$/;"	v
g:SuperTabCrMapping	plugged/supertab/plugin/supertab.vim	/^      let g:SuperTabCrMapping = 0$/;"	v
g:SuperTabCrMapping	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabCrMapping = 0$/;"	v
g:SuperTabDefaultCompletionType	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabDefaultCompletionType = "<c-p>"$/;"	v
g:SuperTabLongestEnhanced	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabLongestEnhanced = 0$/;"	v
g:SuperTabLongestHighlight	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabLongestHighlight = 0$/;"	v
g:SuperTabMappingBackward	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingBackward = '<s-tab>'$/;"	v
g:SuperTabMappingForward	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingForward = '<tab>'$/;"	v
g:SuperTabMappingTabLiteral	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabMappingTabLiteral = '<c-tab>'$/;"	v
g:SuperTabNoCompleteAfter	plugged/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = ['^', '\\s']$/;"	v
g:SuperTabNoCompleteAfter	plugged/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteAfter = []$/;"	v
g:SuperTabNoCompleteBefore	plugged/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = ['\\k']$/;"	v
g:SuperTabNoCompleteBefore	plugged/supertab/plugin/supertab.vim	/^      let g:SuperTabNoCompleteBefore = []$/;"	v
g:SuperTabRetainCompletionDuration	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabRetainCompletionDuration = 'insert'$/;"	v
g:SuperTabUndoBreak	plugged/supertab/plugin/supertab.vim	/^    let g:SuperTabUndoBreak = 0$/;"	v
g:UltiSnipsEditSplit	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEditSplit = 'normal'$/;"	v
g:UltiSnipsEditSplit	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsEditSplit="vertical"$/;"	v
g:UltiSnipsEnableSnipMate	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsEnableSnipMate = 1$/;"	v
g:UltiSnipsExpandTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsExpandTrigger = "<tab>"$/;"	v
g:UltiSnipsExpandTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsExpandTrigger="<tab>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpBackwardTrigger = "<c-k>"$/;"	v
g:UltiSnipsJumpBackwardTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpBackwardTrigger="<c-z>"$/;"	v
g:UltiSnipsJumpForwardTrigger	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsJumpForwardTrigger = "<c-j>"$/;"	v
g:UltiSnipsJumpForwardTrigger	plugged/ultisnips/docker/docker_vimrc.vim	/^let g:UltiSnipsJumpForwardTrigger="<c-b>"$/;"	v
g:UltiSnipsListSnippets	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsListSnippets = "<c-tab>"$/;"	v
g:UltiSnipsMappingsToIgnore	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsMappingsToIgnore = []$/;"	v
g:UltiSnipsRemoveSelectModeMappings	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsRemoveSelectModeMappings = 1$/;"	v
g:UltiSnipsSnippetDirectories	plugged/ultisnips/autoload/UltiSnips/map_keys.vim	/^    let g:UltiSnipsSnippetDirectories = [ "UltiSnips" ]$/;"	v
g:WebDevIconsNerdTreeAfterGlyphPadding	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsNerdTreeAfterGlyphPadding = ' '$/;"	v
g:WebDevIconsNerdTreeBeforeGlyphPadding	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsNerdTreeBeforeGlyphPadding = ' '$/;"	v
g:WebDevIconsNerdTreeGitPluginForceVAlign	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsNerdTreeGitPluginForceVAlign = 1$/;"	v
g:WebDevIconsUnicodeByteOrderMarkerDefaultSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsUnicodeByteOrderMarkerDefaultSymbol = ''$/;"	v
g:WebDevIconsUnicodeDecorateFileNodes	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsUnicodeDecorateFileNodes = 1$/;"	v
g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsUnicodeDecorateFileNodesDefaultSymbol = ''$/;"	v
g:WebDevIconsUnicodeDecorateFolderNodes	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsUnicodeDecorateFolderNodes = 0$/;"	v
g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = ''$/;"	v
g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:WebDevIconsUnicodeDecorateFolderNodesDefaultSymbol = ''$/;"	v
g:WebDevIconsUnicodeDecorateFolderNodesExactMatches	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsUnicodeDecorateFolderNodesExactMatches = 1$/;"	v
g:WebDevIconsUnicodeDecorateFolderNodesSymlinkSymbol	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsUnicodeDecorateFolderNodesSymlinkSymbol =  ''$/;"	v
g:WebDevIconsUnicodeGlyphDoubleWidth	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:WebDevIconsUnicodeGlyphDoubleWidth = 1$/;"	v
g:__FILE__	plugged/vim-textobj-user/t/snr-prefix.vim	/^let g:__FILE__ = expand('<sfile>')$/;"	v
g:_uspy	plugged/ultisnips/plugin/UltiSnips.vim	/^       let g:_uspy=":py "$/;"	v
g:_uspy	plugged/ultisnips/plugin/UltiSnips.vim	/^       let g:_uspy=":python "$/;"	v
g:_uspy	plugged/ultisnips/plugin/UltiSnips.vim	/^       let g:_uspy=":python3 "$/;"	v
g:_uspy	plugged/ultisnips/plugin/UltiSnips.vim	/^   let g:_uspy=":py3 "$/;"	v
g:_webdevicons_airline_orig_formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:_webdevicons_airline_orig_formatter = 'default'$/;"	v
g:_webdevicons_airline_orig_formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^    let g:_webdevicons_airline_orig_formatter = g:airline#extensions#tabline#formatter$/;"	v
g:airline#extensions#default#layout	plugged/vim-airline/t/extensions_default.vim	/^let g:airline#extensions#default#layout = [$/;"	v
g:airline#extensions#example#number_of_cats	plugged/vim-airline/autoload/airline/extensions/example.vim	/^  let g:airline#extensions#example#number_of_cats = 42$/;"	v
g:airline#extensions#localsearch#loaded	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let g:airline#extensions#localsearch#loaded = 001$/;"	v
g:airline#extensions#obsession#indicator_text	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^  let g:airline#extensions#obsession#indicator_text = '$'$/;"	v
g:airline#extensions#quickfix#location_text	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#location_text = 'Location'$/;"	v
g:airline#extensions#quickfix#quickfix_text	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^  let g:airline#extensions#quickfix#quickfix_text = 'Quickfix'$/;"	v
g:airline#extensions#tabline#formatter	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:airline#extensions#tabline#formatter = 'webdevicons'$/;"	v
g:airline#extensions#windowswap#indicator_text	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^  let g:airline#extensions#windowswap#indicator_text = 'WS'$/;"	v
g:airline#extensions#wordcount#filetypes	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let g:airline#extensions#wordcount#filetypes = get(g:, 'airline#extensions#wordcount#filetypes',$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette = {}$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:IN3)$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.inactive_modified = s:modified$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.insert_modified = s:modified$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.normal_modified = s:modified$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.replace_modified = s:modified$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#alduin#palette	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let g:airline#themes#alduin#palette.visual_modified = s:modified$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette = {}$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.inactive_modified = {$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert.airline_error =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert.airline_warning =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert_modified = copy(g:airline#themes#angr#palette.normal_modified)$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.insert_paste = {$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal.airline_error = [$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal.airline_warning = [$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal_modified = {$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal_modified.airline_error =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace = {$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace.airline_error =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace.airline_warning =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace_modified = copy(g:airline#themes#angr#palette.insert_modified)$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace_modified.airline_error =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual.airline_error =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual.airline_warning =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual_modified = copy(g:airline#themes#angr#palette.insert_modified)$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual_modified.airline_error =$/;"	v
g:airline#themes#angr#palette	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let g:airline#themes#angr#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#atomic#palette	plugged/vim-airline-themes/autoload/airline/themes/atomic.vim	/^let g:airline#themes#atomic#palette = {}$/;"	v
g:airline#themes#aurora#palette	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let g:airline#themes#aurora#palette = {}$/;"	v
g:airline#themes#aurora#palette	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let g:airline#themes#aurora#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:CP1, s:CP2, s:CP3)$/;"	v
g:airline#themes#aurora#palette	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let g:airline#themes#aurora#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#aurora#palette	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let g:airline#themes#aurora#palette.insert  = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#aurora#palette	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let g:airline#themes#aurora#palette.normal  = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#aurora#palette	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let g:airline#themes#aurora#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#aurora#palette	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let g:airline#themes#aurora#palette.tabline = {$/;"	v
g:airline#themes#aurora#palette	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let g:airline#themes#aurora#palette.visual  = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette = {}$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.insert_replace = {$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.replace = copy(g:airline#themes#ayu_mirage#palette.normal)$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
g:airline#themes#ayu_mirage#palette	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let g:airline#themes#ayu_mirage#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#badcat#palette	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let g:airline#themes#badcat#palette = {}$/;"	v
g:airline#themes#badcat#palette	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let g:airline#themes#badcat#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:CP1, s:CP2, s:CP3)$/;"	v
g:airline#themes#badcat#palette	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let g:airline#themes#badcat#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:IN3)$/;"	v
g:airline#themes#badcat#palette	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let g:airline#themes#badcat#palette.inactive_modified = s:modified$/;"	v
g:airline#themes#badcat#palette	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let g:airline#themes#badcat#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#badcat#palette	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let g:airline#themes#badcat#palette.insert_modified = s:modified$/;"	v
g:airline#themes#badcat#palette	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let g:airline#themes#badcat#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#badcat#palette	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let g:airline#themes#badcat#palette.normal_modified = s:modified$/;"	v
g:airline#themes#badcat#palette	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let g:airline#themes#badcat#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#badcat#palette	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let g:airline#themes#badcat#palette.replace_modified = s:modified$/;"	v
g:airline#themes#badcat#palette	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let g:airline#themes#badcat#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#badcat#palette	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let g:airline#themes#badcat#palette.visual_modified = s:modified$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette = {}$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.accents = {$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.inactive_modified = {$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert_modified = {$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.insert_paste = {$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.normal_modified = {$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace = copy(airline#themes#badwolf#palette.insert)$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.replace_modified = g:airline#themes#badwolf#palette.insert_modified$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#badwolf#palette	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let g:airline#themes#badwolf#palette.visual_modified = {$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette = {}$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.inactive_modified = {$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert_modified = copy(g:airline#themes#base16#palette.normal_modified)$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.insert_paste = {$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.normal_modified = {$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.replace = {$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.replace_modified = copy(g:airline#themes#base16#palette.insert_modified)$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#base16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let g:airline#themes#base16#palette.visual_modified = copy(g:airline#themes#base16#palette.insert_modified)$/;"	v
g:airline#themes#base16_3024#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette = {}$/;"	v
g:airline#themes#base16_3024#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_3024#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_3024#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_3024#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_3024#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_3024#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let g:airline#themes#base16_3024#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_apathy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette = {}$/;"	v
g:airline#themes#base16_apathy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_apathy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_apathy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_apathy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_apathy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_apathy#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let g:airline#themes#base16_apathy#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_ashes#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette = {}$/;"	v
g:airline#themes#base16_ashes#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_ashes#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_ashes#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_ashes#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_ashes#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_ashes#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let g:airline#themes#base16_ashes#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette = {}$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_atelierdune#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let g:airline#themes#base16_atelierdune#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_atelierforest#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette = {}$/;"	v
g:airline#themes#base16_atelierforest#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_atelierforest#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_atelierforest#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_atelierforest#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_atelierforest#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_atelierforest#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let g:airline#themes#base16_atelierforest#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_atelierheath#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette = {}$/;"	v
g:airline#themes#base16_atelierheath#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_atelierheath#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_atelierheath#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_atelierheath#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_atelierheath#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_atelierheath#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let g:airline#themes#base16_atelierheath#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_atelierlakeside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette = {}$/;"	v
g:airline#themes#base16_atelierlakeside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_atelierlakeside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_atelierlakeside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_atelierlakeside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_atelierlakeside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_atelierlakeside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let g:airline#themes#base16_atelierlakeside#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_atelierseaside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette = {}$/;"	v
g:airline#themes#base16_atelierseaside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_atelierseaside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_atelierseaside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_atelierseaside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_atelierseaside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_atelierseaside#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let g:airline#themes#base16_atelierseaside#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_bespin#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette = {}$/;"	v
g:airline#themes#base16_bespin#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_bespin#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_bespin#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_bespin#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_bespin#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_bespin#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let g:airline#themes#base16_bespin#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_brewer#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette = {}$/;"	v
g:airline#themes#base16_brewer#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_brewer#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_brewer#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_brewer#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_brewer#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_brewer#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let g:airline#themes#base16_brewer#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_bright#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette = {}$/;"	v
g:airline#themes#base16_bright#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_bright#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_bright#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_bright#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_bright#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_bright#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let g:airline#themes#base16_bright#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_chalk#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette = {}$/;"	v
g:airline#themes#base16_chalk#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_chalk#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_chalk#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_chalk#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_chalk#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_chalk#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let g:airline#themes#base16_chalk#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_classic#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette = {}$/;"	v
g:airline#themes#base16_classic#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_classic#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_classic#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_classic#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_classic#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_classic#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let g:airline#themes#base16_classic#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_codeschool#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette = {}$/;"	v
g:airline#themes#base16_codeschool#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_codeschool#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_codeschool#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_codeschool#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_codeschool#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_codeschool#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let g:airline#themes#base16_codeschool#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_colors#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette = {}$/;"	v
g:airline#themes#base16_colors#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_colors#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_colors#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_colors#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_colors#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_colors#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let g:airline#themes#base16_colors#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_default#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette = {}$/;"	v
g:airline#themes#base16_default#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_default#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_default#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_default#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_default#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_default#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let g:airline#themes#base16_default#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_eighties#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette = {}$/;"	v
g:airline#themes#base16_eighties#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_eighties#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_eighties#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_eighties#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_eighties#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_eighties#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let g:airline#themes#base16_eighties#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_embers#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette = {}$/;"	v
g:airline#themes#base16_embers#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_embers#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_embers#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_embers#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_embers#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_embers#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let g:airline#themes#base16_embers#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_flat#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette = {}$/;"	v
g:airline#themes#base16_flat#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_flat#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_flat#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_flat#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_flat#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_flat#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let g:airline#themes#base16_flat#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_google#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette = {}$/;"	v
g:airline#themes#base16_google#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_google#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_google#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_google#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_google#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_google#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let g:airline#themes#base16_google#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_grayscale#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette = {}$/;"	v
g:airline#themes#base16_grayscale#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_grayscale#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_grayscale#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_grayscale#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_grayscale#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_grayscale#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let g:airline#themes#base16_grayscale#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_greenscreen#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette = {}$/;"	v
g:airline#themes#base16_greenscreen#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_greenscreen#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_greenscreen#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_greenscreen#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_greenscreen#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_greenscreen#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let g:airline#themes#base16_greenscreen#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_harmonic16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette = {}$/;"	v
g:airline#themes#base16_harmonic16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_harmonic16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_harmonic16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_harmonic16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_harmonic16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_harmonic16#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let g:airline#themes#base16_harmonic16#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_hopscotch#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette = {}$/;"	v
g:airline#themes#base16_hopscotch#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_hopscotch#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_hopscotch#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_hopscotch#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_hopscotch#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_hopscotch#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let g:airline#themes#base16_hopscotch#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_isotope#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette = {}$/;"	v
g:airline#themes#base16_isotope#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_isotope#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_isotope#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_isotope#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_isotope#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_isotope#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let g:airline#themes#base16_isotope#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_londontube#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette = {}$/;"	v
g:airline#themes#base16_londontube#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_londontube#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_londontube#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_londontube#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_londontube#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_londontube#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let g:airline#themes#base16_londontube#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_marrakesh#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette = {}$/;"	v
g:airline#themes#base16_marrakesh#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_marrakesh#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_marrakesh#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_marrakesh#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_marrakesh#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_marrakesh#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let g:airline#themes#base16_marrakesh#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_mocha#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette = {}$/;"	v
g:airline#themes#base16_mocha#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_mocha#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_mocha#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_mocha#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_mocha#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_mocha#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let g:airline#themes#base16_mocha#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_monokai#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette = {}$/;"	v
g:airline#themes#base16_monokai#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_monokai#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_monokai#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_monokai#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_monokai#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_monokai#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let g:airline#themes#base16_monokai#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_nord#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette = {}$/;"	v
g:airline#themes#base16_nord#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_nord#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_nord#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_nord#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_nord#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_nord#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let g:airline#themes#base16_nord#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_ocean#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette = {}$/;"	v
g:airline#themes#base16_ocean#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_ocean#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_ocean#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_ocean#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_ocean#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_ocean#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let g:airline#themes#base16_ocean#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_oceanicnext#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette = {}$/;"	v
g:airline#themes#base16_oceanicnext#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_oceanicnext#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_oceanicnext#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_oceanicnext#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_oceanicnext#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_oceanicnext#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let g:airline#themes#base16_oceanicnext#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_paraiso#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette = {}$/;"	v
g:airline#themes#base16_paraiso#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_paraiso#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_paraiso#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_paraiso#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_paraiso#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_paraiso#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let g:airline#themes#base16_paraiso#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_pop#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette = {}$/;"	v
g:airline#themes#base16_pop#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_pop#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_pop#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_pop#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_pop#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_pop#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let g:airline#themes#base16_pop#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_railscasts#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette = {}$/;"	v
g:airline#themes#base16_railscasts#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_railscasts#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_railscasts#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_railscasts#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_railscasts#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_railscasts#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let g:airline#themes#base16_railscasts#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_seti#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette = {}$/;"	v
g:airline#themes#base16_seti#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_seti#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_seti#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_seti#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_seti#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_seti#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let g:airline#themes#base16_seti#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_shapeshifter#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette = {}$/;"	v
g:airline#themes#base16_shapeshifter#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_shapeshifter#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_shapeshifter#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_shapeshifter#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_shapeshifter#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_shapeshifter#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let g:airline#themes#base16_shapeshifter#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_shell#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^    let g:airline#themes#base16_shell#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_shell#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^    let g:airline#themes#base16_shell#palette.replace = airline#themes#generate_color_map(s:R1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_shell#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^  let g:airline#themes#base16_shell#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_shell#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let g:airline#themes#base16_shell#palette = {}$/;"	v
g:airline#themes#base16_shell#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let g:airline#themes#base16_shell#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#base16_shell#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let g:airline#themes#base16_shell#palette.inactive_modified = {$/;"	v
g:airline#themes#base16_shell#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let g:airline#themes#base16_shell#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#base16_shell#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let g:airline#themes#base16_shell#palette.insert_modified = copy(g:airline#themes#base16_shell#palette.normal_modified)$/;"	v
g:airline#themes#base16_shell#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let g:airline#themes#base16_shell#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_shell#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let g:airline#themes#base16_shell#palette.normal_modified = {$/;"	v
g:airline#themes#base16_shell#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let g:airline#themes#base16_shell#palette.replace = airline#themes#generate_color_map(s:R1, s:N2, s:R3)$/;"	v
g:airline#themes#base16_shell#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let g:airline#themes#base16_shell#palette.replace_modified = copy(g:airline#themes#base16_shell#palette.normal_modified)$/;"	v
g:airline#themes#base16_shell#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let g:airline#themes#base16_shell#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#base16_solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette = {}$/;"	v
g:airline#themes#base16_solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let g:airline#themes#base16_solarized#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette = {}$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert = airline#themes#generate_color_map(s:I1, s:BB, s:I2)$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert_modified = g:airline#themes#base16_spacemacs#palette.insert$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal = airline#themes#generate_color_map(s:N1, s:BB, s:N2)$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal.airline_error = [$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal.airline_warning = [$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal_modified = g:airline#themes#base16_spacemacs#palette.normal$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal_modified.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace = airline#themes#generate_color_map(s:R1, s:BB, s:R2)$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace_modified = g:airline#themes#base16_spacemacs#palette.replace$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace_modified.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual = airline#themes#generate_color_map(s:V1, s:BB, s:V2)$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual.airline_warning =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual_modified = g:airline#themes#base16_spacemacs#palette.visual$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual_modified.airline_error =$/;"	v
g:airline#themes#base16_spacemacs#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let g:airline#themes#base16_spacemacs#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#base16_summerfruit#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette = {}$/;"	v
g:airline#themes#base16_summerfruit#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_summerfruit#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_summerfruit#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_summerfruit#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_summerfruit#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_summerfruit#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let g:airline#themes#base16_summerfruit#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette = {}$/;"	v
g:airline#themes#base16_tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let g:airline#themes#base16_tomorrow#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16_twilight#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette = {}$/;"	v
g:airline#themes#base16_twilight#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#base16_twilight#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#base16_twilight#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16_twilight#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16_twilight#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16_twilight#palette	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let g:airline#themes#base16_twilight#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette = {}$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.accents = {$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.inactive_modified = {$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.insert_modified = {$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.insert_paste = {$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.normal_modified = {$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.replace_modified = {$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#base16color#palette	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let g:airline#themes#base16color#palette.visual_modified = {$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette = {}$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.accents = {$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.inactive_modified = {$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert_modified = g:airline#themes#behelit#palette.normal_modified$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert_modified.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert_paste = {$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.insert_paste.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.normal.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.normal_modified = {$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.normal_modified.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace = copy(g:airline#themes#behelit#palette.insert)$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace.airline_a = [ s:I1[0], '#d70057', s:I1[2], 161, '' ]$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace_modified = g:airline#themes#behelit#palette.insert_modified$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.replace_modified.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.visual.airline_warning = s:WI$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.visual_modified = g:airline#themes#behelit#palette.normal_modified$/;"	v
g:airline#themes#behelit#palette	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let g:airline#themes#behelit#palette.visual_modified.airline_warning = s:WI$/;"	v
g:airline#themes#biogoo#palette	plugged/vim-airline-themes/autoload/airline/themes/biogoo.vim	/^let g:airline#themes#biogoo#palette = {}$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette = {}$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.inactive_modified = {$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:I3)$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert_modified = copy(g:airline#themes#bubblegum#palette.normal_modified)$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.insert_paste = {$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.normal_modified = {$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.replace = {$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.replace_modified = copy(g:airline#themes#bubblegum#palette.insert_modified)$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.visual = airline#themes#generate_color_map(s:V1, s:N2, s:V3)$/;"	v
g:airline#themes#bubblegum#palette	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let g:airline#themes#bubblegum#palette.visual_modified = copy(g:airline#themes#bubblegum#palette.insert_modified)$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette = {}$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.accents = {$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.inactive_modified = {$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert_modified = {$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.insert_paste = {$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.normal.airline_warning = [$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.normal_modified = {$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.replace.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.replace_modified = {$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.tabline = {$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.visual.airline_warning =$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.visual_modified = {$/;"	v
g:airline#themes#cobalt2#palette	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let g:airline#themes#cobalt2#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette = {}$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.accents = {$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#cool#palette	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let g:airline#themes#cool#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^  let g:airline#themes#dark#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette = {}$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.accents = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive = airline#themes#generate_color_map(s:airline_a_inactive, s:airline_b_inactive, s:airline_c_inactive)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.inactive_modified = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert = airline#themes#generate_color_map(s:airline_a_insert, s:airline_b_insert, s:airline_c_insert)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_modified = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.insert_paste = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal = airline#themes#generate_color_map(s:airline_a_normal, s:airline_b_normal, s:airline_c_normal)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.normal_modified = {$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace = copy(g:airline#themes#dark#palette.insert)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace.airline_a = [ s:airline_b_insert[0]   , '#af0000' , s:airline_b_insert[2] , 124     , ''     ]$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.replace_modified = g:airline#themes#dark#palette.insert_modified$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual = airline#themes#generate_color_map(s:airline_a_visual, s:airline_b_visual, s:airline_c_visual)$/;"	v
g:airline#themes#dark#palette	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let g:airline#themes#dark#palette.visual_modified = {$/;"	v
g:airline#themes#dark_minimal#palette	plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let g:airline#themes#dark_minimal#palette = {}$/;"	v
g:airline#themes#dark_minimal#palette	plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let g:airline#themes#dark_minimal#palette.accents = {$/;"	v
g:airline#themes#dark_minimal#palette	plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let g:airline#themes#dark_minimal#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette = {}$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.accents = {$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.inactive_modified = {$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert.airline_error =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert.airline_warning =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert_modified = g:airline#themes#deus#palette.normal_modified$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert_modified.airline_error =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal.airline_error = [$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal.airline_warning = [$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal_modified = {$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal_modified.airline_error =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace.airline_error =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace.airline_warning =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace_modified = g:airline#themes#deus#palette.normal_modified$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace_modified.airline_error =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual.airline_error =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual.airline_warning =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual_modified = g:airline#themes#deus#palette.normal_modified$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual_modified.airline_error =$/;"	v
g:airline#themes#deus#palette	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let g:airline#themes#deus#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette = {}$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.accents = {$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.inactive = {$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.insert = airline#themes#generate_color_map(s:I1, s:middle, s:I3)$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.insert_modified = {}$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.normal = airline#themes#generate_color_map(s:N1, s:middle, s:N3)$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.normal_modified = {$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.replace = airline#themes#generate_color_map(s:R1, s:middle, s:R3)$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.replace_modified = {}$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.visual = airline#themes#generate_color_map(s:V1, s:middle, s:V3)$/;"	v
g:airline#themes#distinguished#palette	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let g:airline#themes#distinguished#palette.visual_modified = {}$/;"	v
g:airline#themes#durant#normal_modified	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#normal_modified = {$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^  let g:airline#themes#durant#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette = {}$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.accents = {$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.inactive_modified = {$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert_modified = {$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.insert_paste = {$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace = copy(g:airline#themes#durant#palette.insert)$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace.airline_a = [ s:I2[0]   , '#af0000' , s:I2[2] , 124     , ''     ]$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.replace_modified = g:airline#themes#durant#palette.insert_modified$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#durant#palette	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let g:airline#themes#durant#palette.visual_modified = {$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette = {}$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:CP1, s:CP2, s:CP3)$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:IN3)$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.inactive_modified = s:modified$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.insert_modified = s:modified$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.normal_modified = s:modified$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.replace_modified = s:modified$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#fairyfloss#palette	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let g:airline#themes#fairyfloss#palette.visual_modified = s:modified$/;"	v
g:airline#themes#gruvbox#palette	plugged/gruvbox/autoload/airline/themes/gruvbox.vim	/^let g:airline#themes#gruvbox#palette = {}$/;"	v
g:airline#themes#hybrid#palette	plugged/vim-airline-themes/autoload/airline/themes/hybrid.vim	/^let g:airline#themes#hybrid#palette = {}$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette = {}$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.accents = {$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.insert_paste = {$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.normal.airline_a = ['#005f00', '#b5bd68', 22, 10, '']$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.replace = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.replace.airline_a = ['#000000', '#CC6666', 16, 9]$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.visual = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#hybridline#palette	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let g:airline#themes#hybridline#palette.visual.airline_a = ['#000000', '#de935f', 16, 3]$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette = {}$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:CP1, s:CP2, s:CP3)$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:IN3)$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.inactive_modified = s:modified$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.insert_modified = s:modified$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.normal_modified = s:modified$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.replace_modified = s:modified$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#jellybeans#palette	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let g:airline#themes#jellybeans#palette.visual_modified = s:modified$/;"	v
g:airline#themes#jet#palette	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette = {}$/;"	v
g:airline#themes#jet#palette	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:CP1, s:CP2, s:CP3)$/;"	v
g:airline#themes#jet#palette	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:IN3)$/;"	v
g:airline#themes#jet#palette	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#jet#palette	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#jet#palette	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#jet#palette	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let g:airline#themes#jet#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#kalisi#palette	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let g:airline#themes#kalisi#palette = {}$/;"	v
g:airline#themes#kalisi#palette	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let g:airline#themes#kalisi#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette = {}$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.accents = {$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.inactive_modified = {$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.insert_modified = {$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.normal_modified = {$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace = copy(g:airline#themes#kolor#palette.insert)$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace.airline_a = [ s:I2[0]   , '#005154' , s:I2[2] , 23      , ''     ]$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.replace_modified = {$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#kolor#palette	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let g:airline#themes#kolor#palette.visual_modified = {$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette = {}$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.accents = {$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.inactive_modified = {$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert_modified = {$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.insert_paste = {$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.normal_modified = {$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace = copy(airline#themes#laederon#palette.insert)$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.replace_modified = g:airline#themes#laederon#palette.insert_modified$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#laederon#palette	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let g:airline#themes#laederon#palette.visual_modified = {$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette = {}$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.inactive_modified = {$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert_modified = {$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.insert_paste = {$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.normal_modified = {$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace = copy(g:airline#themes#light#palette.insert)$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace.airline_a = [ s:I2[0]   , '#ff0000' , s:I1[2] , 196     , ''     ]$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.replace_modified = g:airline#themes#light#palette.insert_modified$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#light#palette	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let g:airline#themes#light#palette.visual_modified = {$/;"	v
g:airline#themes#lucius#palette	plugged/vim-airline-themes/autoload/airline/themes/lucius.vim	/^let g:airline#themes#lucius#palette = {}$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette = {}$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.accents = {$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.inactive_modified = {$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert.airline_warning =$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_modified = {$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.insert_paste = {$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal.airline_warning = [$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal_modified = {$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace = copy(g:airline#themes#luna#palette.insert)$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace.airline_a = [ s:I2[0]   , '#920000' , s:I2[2] , 88     , ''     ]$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace.airline_warning =$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace_modified = g:airline#themes#luna#palette.insert_modified$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.tabline = {$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual.airline_warning =$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual_modified = {$/;"	v
g:airline#themes#luna#palette	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let g:airline#themes#luna#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^    let g:airline#themes#minimalist#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette = {}$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.accents = {$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.insert  = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.insert.airline_error    = g:airline#themes#minimalist#palette.normal.airline_error$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.insert.airline_term  = g:airline#themes#minimalist#palette.normal.airline_term$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.insert.airline_warning  = g:airline#themes#minimalist#palette.normal.airline_warning$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.normal  = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.normal.airline_error = [$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.normal.airline_term = [$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.normal.airline_warning = [$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.replace.airline_error   = g:airline#themes#minimalist#palette.normal.airline_error$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.replace.airline_term = g:airline#themes#minimalist#palette.normal.airline_term$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.replace.airline_warning = g:airline#themes#minimalist#palette.normal.airline_warning$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.visual  = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.visual.airline_error    = g:airline#themes#minimalist#palette.normal.airline_error$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.visual.airline_term  = g:airline#themes#minimalist#palette.normal.airline_term$/;"	v
g:airline#themes#minimalist#palette	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let g:airline#themes#minimalist#palette.visual.airline_warning  = g:airline#themes#minimalist#palette.normal.airline_warning$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette = {}$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.accents = {$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.inactive_modified = {$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.insert_modified = {$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.normal_modified = {$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.replace_modified = {$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#molokai#palette	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let g:airline#themes#molokai#palette.visual_modified = {$/;"	v
g:airline#themes#monochrome#palette	plugged/vim-airline-themes/autoload/airline/themes/monochrome.vim	/^let g:airline#themes#monochrome#palette = {}$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette = {}$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.insert = airline#themes#generate_color_map(s:I1, s:BB, s:I2)$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.insert_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.normal = airline#themes#generate_color_map(s:N1, s:BB, s:N2)$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.normal_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.replace = airline#themes#generate_color_map(s:R1, s:BB, s:R2)$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.replace_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.visual = airline#themes#generate_color_map(s:V1, s:BB, s:V2)$/;"	v
g:airline#themes#murmur#palette	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let g:airline#themes#murmur#palette.visual_modified = {'airline_c': [s:gui_alert, s:gui_termbg2, s:cterm_alert, s:cterm_termbg2, 'bold'] ,}$/;"	v
g:airline#themes#one#palette	plugged/one/autoload/airline/themes/one.vim	/^let g:airline#themes#one#palette = {}$/;"	v
g:airline#themes#one#palette	plugged/vim-one/autoload/airline/themes/one.vim	/^let g:airline#themes#one#palette = {}$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette = {}$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.accents = {$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.inactive_modified = {$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.insert_modified = {$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.normal_modified = {$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.replace = copy(g:airline#themes#papercolor#palette.insert)$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.replace.airline_a = [ '#d7005f'   , '#e4e4e4' , 161 , 254, ''     ]$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.replace_modified = {$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#papercolor#palette	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let g:airline#themes#papercolor#palette.visual_modified = {$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^    let g:airline#themes#peaksea#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette = {}$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.accents = {$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.insert  = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.insert.airline_error    = g:airline#themes#peaksea#palette.normal.airline_error$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.insert.airline_term  = g:airline#themes#peaksea#palette.normal.airline_term$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.insert.airline_warning  = g:airline#themes#peaksea#palette.normal.airline_warning$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.normal  = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.normal.airline_error = [$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.normal.airline_term = [$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.normal.airline_warning = [$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.replace.airline_error   = g:airline#themes#peaksea#palette.normal.airline_error$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.replace.airline_term = g:airline#themes#peaksea#palette.normal.airline_term$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.replace.airline_warning = g:airline#themes#peaksea#palette.normal.airline_warning$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.visual  = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.visual.airline_error    = g:airline#themes#peaksea#palette.normal.airline_error$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.visual.airline_term  = g:airline#themes#peaksea#palette.normal.airline_term$/;"	v
g:airline#themes#peaksea#palette	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let g:airline#themes#peaksea#palette.visual.airline_warning  = g:airline#themes#peaksea#palette.normal.airline_warning$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette = {}$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.insert_replace = {$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace = copy(airline#themes#powerlineish#palette.normal)$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
g:airline#themes#powerlineish#palette	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let g:airline#themes#powerlineish#palette.visual = {$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette = {}$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.accents = { 'red': [ '#ffffff', '', 160, '' ] }$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:C1, s:C2, s:C3)$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.inactive_modified = { 'airline_c': [ '#ffffff', '', 97, '', '' ], }$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.insert_modified = { 'airline_c': [ s:I4[0], s:I4[1], s:I4[2], s:I4[3], '' ], }$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.insert_paste = { 'airline_a': [ s:I5[0], s:I5[2], s:I5[2], s:I5[3], '' ], }$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.normal_modified = { 'airline_c': [ s:N4[0], s:N4[1], s:N4[2], s:N4[3], '' ], }$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.replace.airline_a = [ s:R1[0], s:R1[1], s:R2[2], 124, '']$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.replace_modified = { 'airline_c': [ s:R4[0], s:R4[1], s:R4[2], s:R4[3], '' ], }$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#qwq#palette	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let g:airline#themes#qwq#palette.visual_modified = { 'airline_c': [ s:V4[0], s:V4[1], s:V4[2], s:V4[3], '' ], }$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette = {}$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.accents = {$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.inactive_modified = {$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert.airline_warning =$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_modified = {$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.insert_paste = {$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal.airline_warning = [$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal_modified = {$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace = copy(g:airline#themes#raven#palette.insert)$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_a = [ '#e60000' , s:I1[1] , 160 , s:I1[3] , '' ]$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_warning =$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace.airline_z = [ '#e60000' , s:I1[1] , 160 , s:I1[3] , '' ]$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace_modified = g:airline#themes#raven#palette.insert_modified$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.tabline = {$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual.airline_warning =$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual_modified = {$/;"	v
g:airline#themes#raven#palette	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let g:airline#themes#raven#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette = {}$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.insert = airline#themes#generate_color_map(s:I1, s:N2, s:N3)$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.insert_replace = {$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.replace = copy(airline#themes#ravenpower#palette.normal)$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
g:airline#themes#ravenpower#palette	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let g:airline#themes#ravenpower#palette.visual = {$/;"	v
g:airline#themes#seagull#palette	plugged/vim-airline-themes/autoload/airline/themes/seagull.vim	/^let g:airline#themes#seagull#palette = {}$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette = {}$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA2, s:IA2)$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.inactive_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.insert_paste = {$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.normal_modified = {$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.replace = {$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.replace_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#serene#palette	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let g:airline#themes#serene#palette.visual_modified = copy(g:airline#themes#serene#palette.normal_modified)$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette = {}$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:IN3)$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.inactive_modified = s:modified$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.insert_modified = s:modified$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.normal_modified = s:modified$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.replace_modified = s:modified$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#sierra#palette	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let g:airline#themes#sierra#palette.visual_modified = s:modified$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette = {}$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.accents = {$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.inactive_modified = {$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert.airline_warning =$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_modified = {$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.insert_paste = {$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal.airline_warning = [$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal_modified = {$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace = copy(g:airline#themes#silver#palette.insert)$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_a = [ '#b30000' , s:I1[1] , 124 , s:I1[3] , '' ]$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_warning =$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace.airline_z = [ '#b30000' , s:I1[1] , 124 , s:I1[3] , '' ]$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace_modified = g:airline#themes#silver#palette.insert_modified$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.tabline = {$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual.airline_warning =$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual_modified = {$/;"	v
g:airline#themes#silver#palette	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let g:airline#themes#silver#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette = {}$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA2, s:IA2)$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.inactive_modified = {$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.insert_paste = {$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.normal_modified = {$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.replace = {$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.replace_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#simple#palette	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let g:airline#themes#simple#palette.visual_modified = copy(g:airline#themes#simple#palette.normal_modified)$/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette = {}$/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.inactive = airline#themes#generate_color_map($/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.inactive_modified = {'airline_c': ['#ffffff', '#df0000', 255, 160]}$/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.insert = airline#themes#generate_color_map($/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.normal = airline#themes#generate_color_map($/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.replace = {'airline_a': ['#767676', '#ffff5f', 243, 227]}$/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.tabline = {$/;"	v
g:airline#themes#soda#palette	plugged/vim-airline-themes/autoload/airline/themes/soda.vim	/^let g:airline#themes#soda#palette.visual = airline#themes#generate_color_map($/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette = {}$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.accents = {$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.inactive_modified = {$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert.airline_warning =$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_modified = {$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.insert_paste = {$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal.airline_warning = [$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal_modified = {$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.normal_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace = copy(g:airline#themes#sol#palette.insert)$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_a = [ s:I1[0] , '#ff2121' , s:I1[2] , 196 , '' ]$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_warning =$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace.airline_z = [ s:I1[0] , '#ff2121' , s:I1[2] , 196 , '' ]$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace_modified = g:airline#themes#sol#palette.insert_modified$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.replace_modified.airline_warning =$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.tabline = {$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual.airline_warning =$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual_modified = {$/;"	v
g:airline#themes#sol#palette	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let g:airline#themes#sol#palette.visual_modified.airline_warning =$/;"	v
g:airline#themes#solarized#palette	plugged/vim-airline-themes/autoload/airline/themes/solarized.vim	/^let g:airline#themes#solarized#palette = {}$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette = {}$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.accents = {$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.inactive_modified = {$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.insert_modified = {$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.insert_paste = {$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.normal_modified = {$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.replace_modified = {$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#term#palette	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let g:airline#themes#term#palette.visual_modified = {$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette = {}$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.accents = {$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.inactive_modified = {$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.insert_modified = {$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.insert_paste = {$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.normal_modified = {$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.replace_modified = {$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#term_light#palette	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let g:airline#themes#term_light#palette.visual_modified = {$/;"	v
g:airline#themes#tomorrow#palette	plugged/vim-airline-themes/autoload/airline/themes/tomorrow.vim	/^let g:airline#themes#tomorrow#palette = {}$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette = {}$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.accents = {$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive = {$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.inactive_modified = {$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert_modified = {$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.insert_paste = {$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.normal_modified = {$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace = copy(airline#themes#ubaryd#palette.insert)$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace.airline_a = [ s:I1[0] , s:RE[0] , s:I1[2] , s:RE[1] , '' ]$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.replace_modified = g:airline#themes#ubaryd#palette.insert_modified$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#ubaryd#palette	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let g:airline#themes#ubaryd#palette.visual_modified = {$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette = {}$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.accents = {'red': ['#FF0000', '', 88, '']}$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.inactive_modified = {'airline_c': ['#4E4E4E', '', 239, '', 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert_modified = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.insert_paste = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, ''] ,}$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.normal_modified = {'airline_c': ['#ffffff', '#5f005f', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace.airline_a = ['#FFFFFF', '#870000', 15, 88, '']$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.replace_modified = {'airline_c': ['#AFAF87', '#5F5F5F', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#understated#palette	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let g:airline#themes#understated#palette.visual_modified = {'airline_c': [ '#AFAF87', '#5f005f', 144, 59, 'bold'] ,}$/;"	v
g:airline#themes#vice#palette	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let g:airline#themes#vice#palette = {}$/;"	v
g:airline#themes#vice#palette	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let g:airline#themes#vice#palette.ctrlp = airline#extensions#ctrlp#generate_color_map(s:CP1, s:CP2, s:CP3)$/;"	v
g:airline#themes#vice#palette	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let g:airline#themes#vice#palette.inactive = airline#themes#generate_color_map(s:IN1, s:IN2, s:IN3)$/;"	v
g:airline#themes#vice#palette	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let g:airline#themes#vice#palette.inactive_modified = s:modified$/;"	v
g:airline#themes#vice#palette	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let g:airline#themes#vice#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#vice#palette	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let g:airline#themes#vice#palette.insert_modified = s:modified$/;"	v
g:airline#themes#vice#palette	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let g:airline#themes#vice#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#vice#palette	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let g:airline#themes#vice#palette.normal_modified = s:modified$/;"	v
g:airline#themes#vice#palette	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let g:airline#themes#vice#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#vice#palette	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let g:airline#themes#vice#palette.replace_modified = s:modified$/;"	v
g:airline#themes#vice#palette	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let g:airline#themes#vice#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#vice#palette	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let g:airline#themes#vice#palette.visual_modified = s:modified$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette = {}$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.insert_replace = {$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.replace = copy(g:airline#themes#violet#palette.normal)$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.replace.airline_a = [ s:RE[0] , s:RE[1] , s:RE[2] , s:RE[3] , '' ]$/;"	v
g:airline#themes#violet#palette	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let g:airline#themes#violet#palette.visual = {$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette = {}$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.accents = {$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.ctrlp = airline#extensions#ctrlp#generate_color_map($/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.inactive = airline#themes#generate_color_map(s:IA, s:IA, s:IA)$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.inactive_modified = {$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert_modified = {$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.insert_paste = {$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.normal_modified = {$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.replace = airline#themes#generate_color_map(s:R1, s:R2, s:R3)$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.replace_modified = {$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#wombat#palette	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let g:airline#themes#wombat#palette.visual_modified = {$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette = {}$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.inactive = airline#themes#generate_color_map(s:IA1, s:IA2, s:IA3)$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.inactive_modified = {$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.insert = airline#themes#generate_color_map(s:I1, s:I2, s:I3)$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.insert_modified = {$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.insert_paste = {$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.normal = airline#themes#generate_color_map(s:N1, s:N2, s:N3)$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.normal_modified = {$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.replace = copy(g:airline#themes#xtermlight#palette.insert)$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.replace.airline_a = [ s:I2[0]   , '#ff0000' , s:I1[2] , 196     , ''     ]$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.replace_modified = g:airline#themes#xtermlight#palette.insert_modified$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.visual = airline#themes#generate_color_map(s:V1, s:V2, s:V3)$/;"	v
g:airline#themes#xtermlight#palette	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let g:airline#themes#xtermlight#palette.visual_modified = {$/;"	v
g:airline#themes#zenburn#palette	plugged/vim-airline-themes/autoload/airline/themes/zenburn.vim	/^let g:airline#themes#zenburn#palette = {}$/;"	v
g:airline_inactive_collapse	plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 0$/;"	v
g:airline_inactive_collapse	plugged/vim-airline/t/airline.vim	/^    let g:airline_inactive_collapse = 1$/;"	v
g:airline_section_	plugged/vim-airline/t/init.vim	/^      let g:airline_section_{s} = s$/;"	v
g:airline_section_a	plugged/vim-airline/t/airline.vim	/^    let g:airline_section_a = airline#section#create(['mode', 'mode'])$/;"	v
g:airline_statusline_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let g:airline_statusline_funcrefs = get(g:, 'airline_statusline_funcrefs', [])$/;"	v
g:airline_statusline_funcrefs	plugged/vim-airline/t/airline.vim	/^    let g:airline_statusline_funcrefs = []$/;"	v
g:airline_theme	plugged/vim-airline/t/airline.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	plugged/vim-airline/t/builder.vim	/^let g:airline_theme = 'dark'$/;"	v
g:airline_theme	plugged/vim-airline/t/highlighter.vim	/^let g:airline_theme = 'dark'$/;"	v
g:alchemist#alchemist_client	plugged/alchemist.vim/after/ftplugin/elixir.vim	/^    let g:alchemist#alchemist_client = expand("<sfile>:p:h:h") . '\/..\/elixir_sense_client'$/;"	v
g:alchemist#alchemist_client	plugged/alchemist.vim/after/plugin/alchemist.vim	/^    let g:alchemist#alchemist_client = expand("<sfile>:p:h:h") . '\/..\/elixir_sense_client'$/;"	v
g:alchemist#alchemist_client	plugged/alchemist.vim/autoload/elixircomplete.vim	/^    let g:alchemist#alchemist_client = expand("<sfile>:p:h:h") . '\/..\/elixir_sense_client'$/;"	v
g:alchemist#omnifunc	plugged/alchemist.vim/after/ftplugin/elixir.vim	/^    let g:alchemist#omnifunc = 1$/;"	v
g:alchemist_iex_term_size	plugged/alchemist.vim/after/plugin/alchemist.vim	/^  let g:alchemist_iex_term_size = 15$/;"	v
g:alchemist_iex_term_split	plugged/alchemist.vim/after/plugin/alchemist.vim	/^  let g:alchemist_iex_term_split = "split"$/;"	v
g:alchemist_tag_stack	plugged/alchemist.vim/after/plugin/alchemist.vim	/^let g:alchemist_tag_stack = []$/;"	v
g:alchemist_tag_stack_is_used	plugged/alchemist.vim/after/plugin/alchemist.vim	/^let g:alchemist_tag_stack_is_used = 0$/;"	v
g:ale_linter_aliases	plugged/vim-polyglot/ftplugin/vue.vim	/^  let g:ale_linter_aliases = get(g:, 'ale_linter_aliases', {})$/;"	v
g:ale_linter_aliases	plugged/vim-polyglot/ftplugin/vue.vim	/^  let g:ale_linter_aliases.vue = get(g:ale_linter_aliases, 'vue', 'javascript')$/;"	v
g:ale_linters	plugged/vim-polyglot/ftplugin/vue.vim	/^  let g:ale_linters = get(g:, 'ale_linters', {})$/;"	v
g:ale_linters	plugged/vim-polyglot/ftplugin/vue.vim	/^  let g:ale_linters.vue = get(g:ale_linters, 'vue', ['eslint'])$/;"	v
g:aria_attributes_complete	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^  let g:aria_attributes_complete = 1$/;"	v
g:autoloaded_rails	plugged/vim-rails/autoload/rails.vim	/^let g:autoloaded_rails = '5.4'$/;"	v
g:autoloaded_startify	plugged/vim-startify/autoload/startify.vim	/^let g:autoloaded_startify = 1$/;"	v
g:bm_current_file	plugged/vim-bookmarks/plugin/bookmark.vim	/^let g:bm_current_file = ''$/;"	v
g:bm_has_any	plugged/vim-bookmarks/plugin/bookmark.vim	/^let g:bm_has_any = 0$/;"	v
g:bm_sign_index	plugged/vim-bookmarks/plugin/bookmark.vim	/^let g:bm_sign_index = 9500$/;"	v
g:bm_sign_index	plugged/vim-bookmarks/t/bm_sign_spec.vim	/^    let g:bm_sign_index = 1$/;"	v
g:bm_sign_index	plugged/vim-bookmarks/t/bm_sign_spec.vim	/^    let g:bm_sign_index = 3$/;"	v
g:bm_sign_index	plugged/vim-bookmarks/t/bm_sign_spec.vim	/^let g:bm_sign_index = 1$/;"	v
g:bm_sign_init	plugged/vim-bookmarks/autoload/bm_sign.vim	/^  let g:bm_sign_init = 0$/;"	v
g:bookmark_annotation_sign	plugged/vim-bookmarks/t/bm_sign_spec.vim	/^let g:bookmark_annotation_sign = 'yz'$/;"	v
g:bookmark_highlight_lines	plugged/vim-bookmarks/t/bm_sign_spec.vim	/^    let g:bookmark_highlight_lines = 1$/;"	v
g:bookmark_highlight_lines	plugged/vim-bookmarks/t/bm_sign_spec.vim	/^let g:bookmark_highlight_lines = 0$/;"	v
g:bookmark_sign	plugged/vim-bookmarks/t/bm_sign_spec.vim	/^let g:bookmark_sign = 'xy'$/;"	v
g:cabal_indent_section	plugged/vim-polyglot/indent/cabal.vim	/^  let g:cabal_indent_section = 2$/;"	v
g:cabal_indent_section	plugged/vim-polyglot/indent/cabal.vim	/^  let g:cabal_indent_section = 4$/;"	v
g:clever_f_use_migemo	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let g:clever_f_use_migemo = 0$/;"	v
g:clojure_align_multiline_strings	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_align_multiline_strings = 0$/;"	v
g:clojure_align_subforms	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_align_subforms = 0$/;"	v
g:clojure_fuzzy_indent	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent = 1$/;"	v
g:clojure_fuzzy_indent_blacklist	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_blacklist = ['-fn$', '\\v^with-%(meta|out-str|loading-context)$']$/;"	v
g:clojure_fuzzy_indent_patterns	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_fuzzy_indent_patterns = ['^with', '^def', '^let']$/;"	v
g:clojure_maxlines	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_maxlines = 100$/;"	v
g:clojure_special_indent_words	plugged/vim-polyglot/indent/clojure.vim	/^		let g:clojure_special_indent_words = 'deftype,defrecord,reify,proxy,extend-type,extend-protocol,letfn'$/;"	v
g:colors_name	plugged/gruvbox/colors/gruvbox.vim	/^let g:colors_name='gruvbox'$/;"	v
g:colors_name	plugged/one/colors/one-dark.vim	/^let g:colors_name="one-dark"$/;"	v
g:colors_name	plugged/one/colors/one.vim	/^let g:colors_name = 'one'$/;"	v
g:colors_name	plugged/vim-one/colors/one-dark.vim	/^let g:colors_name="one-dark"$/;"	v
g:colors_name	plugged/vim-one/colors/one.vim	/^let g:colors_name = 'one'$/;"	v
g:count	plugged/vim-airline/t/util.vim	/^    let g:count = 0$/;"	v
g:crystal_auto_format	plugged/vim-polyglot/ftplugin/crystal.vim	/^let g:crystal_auto_format = get(g:, 'crystal_auto_format', 0)$/;"	v
g:crystal_compiler_command	plugged/vim-polyglot/ftplugin/crystal.vim	/^let g:crystal_compiler_command = get(g:, 'crystal_compiler_command', 'crystal')$/;"	v
g:crystal_indent_access_modifier_style	plugged/vim-polyglot/indent/crystal.vim	/^  let g:crystal_indent_access_modifier_style = 'normal'$/;"	v
g:crystal_minlines	plugged/vim-polyglot/syntax/crystal.vim	/^    let g:crystal_minlines = 500$/;"	v
g:cucumber_languages	plugged/vim-polyglot/syntax/cucumber.vim	/^let g:cucumber_languages = {$/;"	v
g:current_compiler	plugged/vim-polyglot/compiler/go.vim	/^let g:current_compiler = "go"$/;"	v
g:cursormode_exit_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^  let g:cursormode_exit_mode='n'$/;"	v
g:db_adapter_rails	plugged/vim-rails/plugin/rails.vim	/^let g:db_adapter_rails = 'rails#db_'$/;"	v
g:deoplete#auto_completion_start_length	plugged/deoplete-jedi/tests/jedi-deoplete-conflict.vim	/^let g:deoplete#auto_completion_start_length = 1$/;"	v
g:deoplete#auto_completion_start_length	plugged/deoplete-jedi/tests/jedi-deoplete.vim	/^let g:deoplete#auto_completion_start_length = 1$/;"	v
g:deoplete#auto_completion_start_length	plugged/deoplete-jedi/tests/jedi-omnifunc.vim	/^let g:deoplete#auto_completion_start_length = 1$/;"	v
g:deoplete#auto_completion_start_length	plugged/deoplete-ternjs/tests/ternjs-deoplete-conflict.vim	/^let g:deoplete#auto_completion_start_length = 1$/;"	v
g:deoplete#auto_completion_start_length	plugged/deoplete-ternjs/tests/ternjs-deoplete.vim	/^let g:deoplete#auto_completion_start_length = 1$/;"	v
g:deoplete#enable_at_startup	plugged/deoplete-jedi/tests/jedi-deoplete-conflict.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#enable_at_startup	plugged/deoplete-jedi/tests/jedi-deoplete.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#enable_at_startup	plugged/deoplete-jedi/tests/jedi-omnifunc.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#enable_at_startup	plugged/deoplete-ternjs/tests/ternjs-deoplete-conflict.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#enable_at_startup	plugged/deoplete-ternjs/tests/ternjs-deoplete.vim	/^let g:deoplete#enable_at_startup = 1$/;"	v
g:deoplete#enable_debug	plugged/deoplete-ternjs/tests/ternjs-deoplete.vim	/^let g:deoplete#enable_debug=1$/;"	v
g:deoplete#sources#ternjs#tern_bin	plugged/deoplete-ternjs/plugin/deoplete-ternjs.vim	/^let g:deoplete#sources#ternjs#tern_bin = get(g:, 'deoplete#sources#ternjs#tern_bin', 'tern') $/;"	v
g:did_ocaml_switch	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let g:did_ocaml_switch = 1$/;"	v
g:did_ruby_ftplugin_functions	plugged/vim-polyglot/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:did_ruby_ftplugin_functions	plugged/vim-ruby/ftplugin/ruby.vim	/^let g:did_ruby_ftplugin_functions = 1$/;"	v
g:easytags_by_filetype	plugged/vim-easytags/plugin/easytags.vim	/^  let g:easytags_by_filetype = ''$/;"	v
g:easytags_events	plugged/vim-easytags/plugin/easytags.vim	/^  let g:easytags_events = ['BufWritePost']$/;"	v
g:easytags_file	plugged/vim-easytags/plugin/easytags.vim	/^    let g:easytags_file = '~\/.vimtags'$/;"	v
g:easytags_file	plugged/vim-easytags/plugin/easytags.vim	/^    let g:easytags_file = '~\\_vimtags'$/;"	v
g:easytags_ignored_filetypes	plugged/vim-easytags/plugin/easytags.vim	/^  let g:easytags_ignored_filetypes = '^tex$'$/;"	v
g:easytags_python_script	plugged/vim-easytags/plugin/easytags.vim	/^  let g:easytags_python_script = expand('<sfile>:p:h') . '\/..\/misc\/easytags\/highlight.py'$/;"	v
g:eelixir_default_subtype	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
g:eelixir_default_subtype	plugged/vim-polyglot/syntax/eelixir.vim	/^  let g:eelixir_default_subtype = "html"$/;"	v
g:elixir_indent_max_lookbehind	plugged/vim-polyglot/autoload/elixir/indent.vim	/^  let g:elixir_indent_max_lookbehind = 30$/;"	v
g:elixir_use_markdown_for_docs	plugged/vim-polyglot/syntax/elixir.vim	/^  let g:elixir_use_markdown_for_docs = 0$/;"	v
g:elm_format_autosave	plugged/vim-polyglot/ftplugin/elm.vim	/^	let g:elm_format_autosave = 1$/;"	v
g:elm_format_fail_silently	plugged/vim-polyglot/ftplugin/elm.vim	/^    let g:elm_format_fail_silently = 0$/;"	v
g:elm_jump_to_error	plugged/vim-polyglot/ftplugin/elm.vim	/^	let g:elm_jump_to_error = 0$/;"	v
g:elm_make_output_file	plugged/vim-polyglot/ftplugin/elm.vim	/^	let g:elm_make_output_file = 'elm.js'$/;"	v
g:elm_make_show_warnings	plugged/vim-polyglot/ftplugin/elm.vim	/^	let g:elm_make_show_warnings = 0$/;"	v
g:elm_setup_keybindings	plugged/vim-polyglot/ftplugin/elm.vim	/^	let g:elm_setup_keybindings = 1$/;"	v
g:elm_syntastic_show_warnings	plugged/vim-polyglot/ftplugin/elm.vim	/^	let g:elm_syntastic_show_warnings = 0$/;"	v
g:emmet_curl_command	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_curl_command = 'curl -s -L -A Mozilla\/5.0'$/;"	v
g:emmet_debug	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_debug = 0$/;"	v
g:emmet_docroot	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_docroot = {}$/;"	v
g:emmet_html5	plugged/emmet-vim/plugin/emmet.vim	/^  let g:emmet_html5 = 1$/;"	v
g:erlang_indent_searchpair_timeout	plugged/vim-polyglot/indent/erlang.vim	/^let g:erlang_indent_searchpair_timeout = 2000$/;"	v
g:erlang_unexpected_token_indent	plugged/vim-polyglot/indent/erlang.vim	/^  let g:erlang_unexpected_token_indent = -1$/;"	v
g:eruby_default_subtype	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	plugged/vim-polyglot/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	plugged/vim-ruby/ftplugin/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:eruby_default_subtype	plugged/vim-ruby/syntax/eruby.vim	/^  let g:eruby_default_subtype = "html"$/;"	v
g:far#executors#nvim#context_idx	plugged/far.vim/autoload/far/executors/nvim.vim	/^let g:far#executors#nvim#context_idx = 0$/;"	v
g:far#executors#nvim#contexts	plugged/far.vim/autoload/far/executors/nvim.vim	/^let g:far#executors#nvim#contexts = {}$/;"	v
g:far#file_mask_history	plugged/far.vim/autoload/far.vim	/^let g:far#file_mask_history = []$/;"	v
g:far#repl_history	plugged/far.vim/autoload/far.vim	/^let g:far#repl_history = []$/;"	v
g:far#search_history	plugged/far.vim/autoload/far.vim	/^let g:far#search_history = []$/;"	v
g:file	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    let g:file = expand('%:p')$/;"	v
g:filetype_euphoria	plugged/vim-polyglot/config.vim	/^let g:filetype_euphoria = 'elixir'$/;"	v
g:filetype_euphoria	plugged/vim-polyglot/ftdetect/polyglot.vim	/^let g:filetype_euphoria = 'elixir'$/;"	v
g:filler_line	plugged/vim-textobj-entire/t/basics.vim	/^let g:filler_line = [$/;"	v
g:filler_line	plugged/vim-textobj-entire/t/jumplist.vim	/^let g:filler_line = [$/;"	v
g:filler_line	plugged/vim-textobj-entire/t/mark.vim	/^let g:filler_line = [$/;"	v
g:fugitive_browse_handlers	plugged/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_executable	plugged/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	plugged/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:fullDefMatcher	plugged/vim-polyglot/indent/scala.vim	/^let g:fullDefMatcher = '^\\s*' . s:defMatcher . '\\s\\+' . s:funcNameMatcher . '\\s*' . s:typeSpecMatcher . '\\?\\s*' . s:defArgMatcher . '\\?\\s*' . s:returnTypeMatcher . '\\?\\s*[={]'$/;"	v
g:fzf#vim#buffers	plugged/fzf.vim/plugin/fzf.vim	/^let g:fzf#vim#buffers = {}$/;"	v
g:gitgutter_grep	plugged/vim-gitgutter/plugin/gitgutter.vim	/^      let g:gitgutter_grep .= ' --color=never'$/;"	v
g:gitgutter_grep	plugged/vim-gitgutter/plugin/gitgutter.vim	/^    let g:gitgutter_grep = ''$/;"	v
g:gitgutter_override_sign_column_highlight	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gitgutter_override_sign_column_highlight = 0$/;"	v
g:gitgutter_sign_column_always	plugged/vim-gitgutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_column_always = 0$/;"	v
g:graphql_javascript_tags	plugged/vim-polyglot/config.vim	/^  let g:graphql_javascript_tags = ['gql', 'graphql', 'Relay.QL']$/;"	v
g:graphql_javascript_tags	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  let g:graphql_javascript_tags = ['gql', 'graphql', 'Relay.QL']$/;"	v
g:gruvbox_bold	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_bold=1$/;"	v
g:gruvbox_contrast_dark	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_contrast_dark='medium'$/;"	v
g:gruvbox_contrast_light	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_contrast_light='medium'$/;"	v
g:gruvbox_guisp_fallback	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_guisp_fallback='NONE'$/;"	v
g:gruvbox_improved_strings	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_improved_strings=0$/;"	v
g:gruvbox_improved_warnings	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_improved_warnings=0$/;"	v
g:gruvbox_inverse	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_inverse=1$/;"	v
g:gruvbox_invert_indent_guides	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_invert_indent_guides=0$/;"	v
g:gruvbox_italic	plugged/gruvbox/colors/gruvbox.vim	/^    let g:gruvbox_italic=0$/;"	v
g:gruvbox_italic	plugged/gruvbox/colors/gruvbox.vim	/^    let g:gruvbox_italic=1$/;"	v
g:gruvbox_termcolors	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_termcolors=256$/;"	v
g:gruvbox_undercurl	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_undercurl=1$/;"	v
g:gruvbox_underline	plugged/gruvbox/colors/gruvbox.vim	/^  let g:gruvbox_underline=1$/;"	v
g:haml_self_closing_tags	plugged/vim-polyglot/indent/haml.vim	/^  let g:haml_self_closing_tags = 'base|link|meta|br|hr|img|input'$/;"	v
g:haml_self_closing_tags	plugged/vim-polyglot/indent/slim.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:haml_self_closing_tags	plugged/vim-polyglot/indent/slime.vim	/^  let g:haml_self_closing_tags = 'meta|link|img|hr|br'$/;"	v
g:haskell_indent_case	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_case = 2$/;"	v
g:haskell_indent_do	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_do = 3$/;"	v
g:haskell_indent_guard	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_guard = 2$/;"	v
g:haskell_indent_if	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_if = 3$/;"	v
g:haskell_indent_in	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_in = 1$/;"	v
g:haskell_indent_let	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_let = 4$/;"	v
g:haskell_indent_let_no_in	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_let_no_in = 4$/;"	v
g:haskell_indent_where	plugged/vim-polyglot/indent/haskell.vim	/^  let g:haskell_indent_where = 6$/;"	v
g:html5_aria_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_aria_attributes_complete = 1$/;"	v
g:html5_event_handler_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_event_handler_attributes_complete = 1$/;"	v
g:html5_microdata_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_microdata_attributes_complete = 1$/;"	v
g:html5_rdfa_attributes_complete	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let g:html5_rdfa_attributes_complete = 1$/;"	v
g:indentLine_bufNameExclude	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_bufNameExclude = get(g:, 'indentLine_bufNameExclude', [])$/;"	v
g:indentLine_bufTypeExclude	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_bufTypeExclude = get(g:, 'indentLine_bufTypeExclude', [])$/;"	v
g:indentLine_char	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_char = get(g:, 'indentLine_char', (&encoding ==# "utf-8" && &term isnot# "linux" ? '¦' : '|'))$/;"	v
g:indentLine_color_gui	plugged/gruvbox/colors/gruvbox.vim	/^  let g:indentLine_color_gui = s:bg2[0]$/;"	v
g:indentLine_color_term	plugged/gruvbox/colors/gruvbox.vim	/^  let g:indentLine_color_term = s:bg2[1]$/;"	v
g:indentLine_enabled	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_enabled = get(g:, 'indentLine_enabled', 1)$/;"	v
g:indentLine_faster	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_faster = get(g:, 'indentLine_faster', 0)$/;"	v
g:indentLine_fileType	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_fileType = get(g:, 'indentLine_fileType', [])$/;"	v
g:indentLine_fileTypeExclude	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_fileTypeExclude = get(g:, 'indentLine_fileTypeExclude', [])$/;"	v
g:indentLine_first_char	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_first_char = get(g:, 'indentLine_first_char', (&encoding ==# "utf-8" && &term isnot# "linux" ? '¦' : '|'))$/;"	v
g:indentLine_indentLevel	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_indentLevel = get(g:, 'indentLine_indentLevel', 20)$/;"	v
g:indentLine_leadingSpaceChar	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_leadingSpaceChar = get(g:, 'indentLine_leadingSpaceChar', (&encoding ==# "utf-8" && &term isnot# "linux" ? '˰' : '.'))$/;"	v
g:indentLine_leadingSpaceEnabled	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_leadingSpaceEnabled = get(g:, 'indentLine_leadingSpaceEnabled', 0)$/;"	v
g:indentLine_loaded	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_loaded = 1$/;"	v
g:indentLine_maxLines	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_maxLines = get(g:, 'indentLine_maxLines', 3000)$/;"	v
g:indentLine_mysyntaxfile	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_mysyntaxfile = fnamemodify(expand("<sfile>"), ":p:h:h")."\/syntax\/indentLine.vim"$/;"	v
g:indentLine_newVersion	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_newVersion = get(g:,'indentLine_newVersion',v:version > 704 || v:version == 704 && has("patch792"))$/;"	v
g:indentLine_setColors	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_setColors = get(g:, 'indentLine_setColors', 1)$/;"	v
g:indentLine_setConceal	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_setConceal = get(g:, 'indentLine_setConceal', 1)$/;"	v
g:indentLine_showFirstIndentLevel	plugged/indentLine/after/plugin/indentLine.vim	/^let g:indentLine_showFirstIndentLevel = get(g:, 'indentLine_showFirstIndentLevel', 0)$/;"	v
g:indent_guides_auto_colors	plugged/gruvbox/colors/gruvbox.vim	/^  let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_autocmds_enabled	plugged/vim-indent-guides/plugin/indent_guides.vim	/^let g:indent_guides_autocmds_enabled         = 0$/;"	v
g:indent_guides_color_hex_guibg_pattern	plugged/vim-indent-guides/plugin/indent_guides.vim	/^let g:indent_guides_color_hex_guibg_pattern  = 'guibg=\\zs' . g:indent_guides_color_hex_pattern . '\\ze'$/;"	v
g:indent_guides_color_hex_pattern	plugged/vim-indent-guides/plugin/indent_guides.vim	/^let g:indent_guides_color_hex_pattern        = '#[0-9A-Fa-f]\\{6\\}'$/;"	v
g:indent_guides_color_name_guibg_pattern	plugged/vim-indent-guides/plugin/indent_guides.vim	/^let g:indent_guides_color_name_guibg_pattern = "guibg='\\\\?\\\\zs[0-9A-Za-z ]\\\\+\\\\ze'\\\\?"$/;"	v
g:indent_guides_exclude_filetypes	plugged/vim-indent-guides/plugin/indent_guides.vim	/^  let g:indent_guides_exclude_filetypes = ['help']$/;"	v
g:jedi#auto_initialization	plugged/deoplete-jedi/tests/jedi-omnifunc.vim	/^let g:jedi#auto_initialization = 1$/;"	v
g:jedi#auto_vim_configuration	plugged/deoplete-jedi/tests/jedi-omnifunc.vim	/^let g:jedi#auto_vim_configuration = 0$/;"	v
g:jedi#completions_enabled	plugged/deoplete-jedi/tests/jedi-omnifunc.vim	/^let g:jedi#completions_enabled = 0$/;"	v
g:jedi#force_py_version	plugged/deoplete-jedi/tests/jedi-omnifunc.vim	/^let g:jedi#force_py_version = 3$/;"	v
g:jedi#max_doc_height	plugged/deoplete-jedi/tests/jedi-omnifunc.vim	/^let g:jedi#max_doc_height = 100$/;"	v
g:jedi#popup_select_first	plugged/deoplete-jedi/tests/jedi-omnifunc.vim	/^let g:jedi#popup_select_first = 0$/;"	v
g:jedi#show_call_signatures	plugged/deoplete-jedi/tests/jedi-omnifunc.vim	/^let g:jedi#show_call_signatures = 0$/;"	v
g:jedi#smart_auto_mappings	plugged/deoplete-jedi/tests/jedi-omnifunc.vim	/^let g:jedi#smart_auto_mappings = 0$/;"	v
g:jst_default_subtype	plugged/vim-polyglot/syntax/jst.vim	/^  let g:jst_default_subtype = "html"$/;"	v
g:jsx_ext_required	plugged/vim-polyglot/config.vim	/^  let g:jsx_ext_required = 0$/;"	v
g:jsx_ext_required	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  let g:jsx_ext_required = 0$/;"	v
g:jsx_pragma_required	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  let g:jsx_pragma_required = 0$/;"	v
g:karma_runner	plugged/vim-test/spec/karma_spec.vim	/^    let g:karma_runner = 'node_modules\/karma-cli-runner\/karma-args'$/;"	v
g:latexmk_running_pids	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^	let g:latexmk_running_pids = {}$/;"	v
g:less_html_style_tags	plugged/vim-polyglot/after/syntax/html.vim	/^  let g:less_html_style_tags = 1$/;"	v
g:lightline#colorscheme#gruvbox#palette	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let g:lightline#colorscheme#gruvbox#palette = lightline#colorscheme#flatten(s:p)$/;"	v
g:line_map	plugged/vim-bookmarks/autoload/bm.vim	/^  let g:line_map = {}  "  'line_nr'  => 'bookmark'$/;"	v
g:liquid_default_subtype	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_default_subtype	plugged/vim-polyglot/syntax/liquid.vim	/^  let g:liquid_default_subtype = 'html'$/;"	v
g:liquid_highlight_types	plugged/vim-polyglot/syntax/liquid.vim	/^  let g:liquid_highlight_types = []$/;"	v
g:loaded_airline	plugged/vim-airline/plugin/airline.vim	/^let g:loaded_airline = 1$/;"	v
g:loaded_airline_themes	plugged/vim-airline-themes/plugin/airline-themes.vim	/^let g:loaded_airline_themes = 1$/;"	v
g:loaded_better_whitespace_plugin	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let g:loaded_better_whitespace_plugin = 1$/;"	v
g:loaded_commentary	plugged/vim-commentary/plugin/commentary.vim	/^let g:loaded_commentary = 1$/;"	v
g:loaded_cursorword	plugged/vim-cursorword/plugin/cursorword.vim	/^let g:loaded_cursorword = 1$/;"	v
g:loaded_deoplete	plugged/deoplete.nvim/plugin/deoplete.vim	/^let g:loaded_deoplete = 1$/;"	v
g:loaded_deoplete_ternjs	plugged/deoplete-ternjs/plugin/deoplete-ternjs.vim	/^let g:loaded_deoplete_ternjs = 1$/;"	v
g:loaded_easytags	plugged/vim-easytags/plugin/easytags.vim	/^  let g:loaded_easytags = 1$/;"	v
g:loaded_easytags	plugged/vim-easytags/plugin/easytags.vim	/^let g:loaded_easytags = 1$/;"	v
g:loaded_emmet_vim	plugged/emmet-vim/plugin/emmet.vim	/^let g:loaded_emmet_vim = 1$/;"	v
g:loaded_endwise	plugged/vim-endwise/plugin/endwise.vim	/^let g:loaded_endwise = 1$/;"	v
g:loaded_far	plugged/far.vim/plugin/far.vim	/^let g:loaded_far = 0$/;"	v
g:loaded_fugitive	plugged/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gitgutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_indent_guides	plugged/vim-indent-guides/plugin/indent_guides.vim	/^let g:loaded_indent_guides = 1$/;"	v
g:loaded_mustache_handlebars	plugged/vim-polyglot/ftplugin/mustache.vim	/^let g:loaded_mustache_handlebars = 1$/;"	v
g:loaded_nerdtree_autoload	plugged/nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	plugged/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_git_status	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let g:loaded_nerdtree_git_status = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_notes	plugged/vim-notes/plugin/notes.vim	/^  let g:loaded_notes = 1$/;"	v
g:loaded_notes	plugged/vim-notes/plugin/notes.vim	/^let g:loaded_notes = 1$/;"	v
g:loaded_plug	autoload/plug.vim	/^let g:loaded_plug = 1$/;"	v
g:loaded_rails	plugged/vim-rails/plugin/rails.vim	/^let g:loaded_rails = 1$/;"	v
g:loaded_repeat	plugged/vim-repeat/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_startify	plugged/vim-startify/plugin/startify.vim	/^let g:loaded_startify = 1$/;"	v
g:loaded_surround	plugged/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_tagbar	plugged/tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:loaded_test	plugged/vim-test/plugin/test.vim	/^let g:loaded_test = 1$/;"	v
g:loaded_textobj_entire	plugged/vim-textobj-entire/plugin/textobj/entire.vim	/^let g:loaded_textobj_entire = 1$/;"	v
g:loaded_textobj_erb	plugged/vim-textobj-erb/plugin/textobj/erb.vim	/^let g:loaded_textobj_erb = 1$/;"	v
g:loaded_textobj_indent	plugged/vim-textobj-indent/plugin/textobj/indent.vim	/^let g:loaded_textobj_indent = 1$/;"	v
g:loaded_textobj_jsxattr	plugged/vim-textobj-jsxattr/plugin/textobj/jsxattr.vim	/^let g:loaded_textobj_jsxattr = 1$/;"	v
g:loaded_textobj_ruby_plugin	plugged/vim-textobj-ruby/plugin/textobj/ruby.vim	/^let g:loaded_textobj_ruby_plugin = 1$/;"	v
g:loaded_textobj_underscore	plugged/vim-textobj-underscore/plugin/textobj/underscore.vim	/^let g:loaded_textobj_underscore = 1$/;"	v
g:loaded_tmux_navigator	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^let g:loaded_tmux_navigator = 1$/;"	v
g:loaded_webdevicons	plugged/vim-devicons/plugin/webdevicons.vim	/^let g:loaded_webdevicons = 1$/;"	v
g:loaded_xolox_misc	plugged/vim-misc/plugin/xolox/misc.vim	/^let g:loaded_xolox_misc = 1$/;"	v
g:loaded_zoom	plugged/vim-zoom/plugin/zoom.vim	/^let g:loaded_zoom = 1$/;"	v
g:main_syntax	plugged/vim-polyglot/syntax/dart.vim	/^  let g:main_syntax = 'dart'$/;"	v
g:main_syntax	plugged/vim-polyglot/syntax/gohtmltmpl.vim	/^  let g:main_syntax = 'html'$/;"	v
g:mako_detect_lang_from_ext	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  let g:mako_detect_lang_from_ext = 1$/;"	v
g:multi_cursor_normal_maps	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let g:multi_cursor_normal_maps =$/;"	v
g:multi_cursor_start_word_key	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^    let g:multi_cursor_start_word_key = g:multi_cursor_next_key$/;"	v
g:multi_cursor_visual_maps	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let g:multi_cursor_visual_maps =$/;"	v
g:mustache_operators	plugged/vim-polyglot/ftplugin/mustache.vim	/^  let g:mustache_operators = 1$/;"	v
g:niji_dark_colours	plugged/gruvbox/colors/gruvbox.vim	/^let g:niji_dark_colours = g:rbpt_colorpairs$/;"	v
g:niji_light_colours	plugged/gruvbox/colors/gruvbox.vim	/^let g:niji_light_colours = g:rbpt_colorpairs$/;"	v
g:notes_markdown_program	plugged/vim-notes/autoload/xolox/notes/html.vim	/^  let g:notes_markdown_program = 'markdown'$/;"	v
g:one_allow_italics	plugged/one/colors/one.vim	/^  let g:one_allow_italics = 0$/;"	v
g:one_allow_italics	plugged/vim-one/colors/one.vim	/^  let g:one_allow_italics = 0$/;"	v
g:php_syntax_extensions_disabled	plugged/vim-polyglot/syntax/php.vim	/^    let g:php_syntax_extensions_disabled = []$/;"	v
g:php_syntax_extensions_enabled	plugged/vim-polyglot/syntax/php.vim	/^    let g:php_syntax_extensions_enabled = ["bcmath", "bz2", "core", "curl", "date", "dom", "ereg", "gd", "gettext", "hash", "iconv", "json", "libxml", "mbstring", "mcrypt", "mhash", "mysql", "mysqli", "openssl", "pcre", "pdo", "pgsql", "phar", "reflection", "session", "simplexml", "soap", "sockets", "spl", "sqlite3", "standard", "tokenizer", "wddx", "xml", "xmlreader", "xmlwriter", "zip", "zlib"]$/;"	v
g:plantuml_executable_script	plugged/vim-polyglot/ftplugin/plantuml.vim	/^  let g:plantuml_executable_script='plantuml'$/;"	v
g:plugs_order	autoload/plug.vim	/^  let g:plugs_order = get(g:, 'plugs_order', keys(g:plugs))$/;"	v
g:pug_self_closing_tags	plugged/vim-polyglot/indent/pug.vim	/^  let g:pug_self_closing_tags = 'meta|link|img|hr|br|input'$/;"	v
g:puppet_align_hashes	plugged/vim-polyglot/after/ftplugin/puppet.vim	/^    let g:puppet_align_hashes = 1$/;"	v
g:purescript_indent_case	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_case = 5$/;"	v
g:purescript_indent_do	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_do = 3$/;"	v
g:purescript_indent_dot	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_dot = 1$/;"	v
g:purescript_indent_if	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_if = 3$/;"	v
g:purescript_indent_in	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_in = 1$/;"	v
g:purescript_indent_let	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_let = 4$/;"	v
g:purescript_indent_where	plugged/vim-polyglot/indent/purescript.vim	/^  let g:purescript_indent_where = 6$/;"	v
g:python_highlight_all	plugged/vim-polyglot/config.vim	/^let g:python_highlight_all = 1$/;"	v
g:python_highlight_all	plugged/vim-polyglot/ftdetect/polyglot.vim	/^let g:python_highlight_all = 1$/;"	v
g:python_pep8_indent_multiline_string	plugged/vim-polyglot/indent/cython.vim	/^    let g:python_pep8_indent_multiline_string = 0$/;"	v
g:python_pep8_indent_multiline_string	plugged/vim-polyglot/indent/python.vim	/^    let g:python_pep8_indent_multiline_string = 0$/;"	v
g:raco_command	plugged/vim-polyglot/autoload/racket.vim	/^  let g:raco_command = system("which raco")$/;"	v
g:ragel_default_subtype	plugged/vim-polyglot/syntax/ragel.vim	/^  let g:ragel_default_subtype = 'c'$/;"	v
g:rainbow_conf	plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf = {}$/;"	v
g:rainbow_conf	plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf['ctermfgs'] = g:rainbow_ctermfgs$/;"	v
g:rainbow_conf	plugged/gruvbox/colors/gruvbox.vim	/^   let g:rainbow_conf['guifgs'] = g:rainbow_guifgs$/;"	v
g:rainbow_ctermfgs	plugged/gruvbox/colors/gruvbox.vim	/^let g:rainbow_ctermfgs = [ '166', 'red', 'magenta', 'blue' ]$/;"	v
g:rainbow_guifgs	plugged/gruvbox/colors/gruvbox.vim	/^let g:rainbow_guifgs = [ '#d65d0e', '#cc241d', '#b16286', '#458588' ]$/;"	v
g:rbpt_colorpairs	plugged/gruvbox/colors/gruvbox.vim	/^  let g:rbpt_colorpairs =$/;"	v
g:repeat_reg	plugged/vim-repeat/autoload/repeat.vim	/^let g:repeat_reg = ['', '']$/;"	v
g:repeat_tick	plugged/vim-repeat/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:ruby_default_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_default_path	plugged/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_default_path = map(split($RUBYLIB,':'), 'v:val ==# "." ? "" : v:val')$/;"	v
g:ruby_default_path	plugged/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_default_path = s:query_path($HOME)$/;"	v
g:ruby_indent_access_modifier_style	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_access_modifier_style = 'normal'$/;"	v
g:ruby_indent_access_modifier_style	plugged/vim-ruby/indent/ruby.vim	/^  let g:ruby_indent_access_modifier_style = 'normal'$/;"	v
g:ruby_indent_assignment_style	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_assignment_style = 'hanging'$/;"	v
g:ruby_indent_assignment_style	plugged/vim-ruby/indent/ruby.vim	/^  let g:ruby_indent_assignment_style = 'hanging'$/;"	v
g:ruby_indent_block_style	plugged/vim-polyglot/indent/ruby.vim	/^  let g:ruby_indent_block_style = 'expression'$/;"	v
g:ruby_indent_block_style	plugged/vim-ruby/indent/ruby.vim	/^  let g:ruby_indent_block_style = 'expression'$/;"	v
g:ruby_refactoring_map_keys	plugged/vim-ruby-refactoring/plugin/ruby-refactoring.vim	/^  let g:ruby_refactoring_map_keys = 1$/;"	v
g:ruby_version_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'))$/;"	v
g:ruby_version_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:ruby_version_paths	plugged/vim-ruby/ftplugin/ruby.vim	/^      let g:ruby_version_paths[b:ruby_version] = s:query_path(fnamemodify(s:version_file, ':p:h'))$/;"	v
g:ruby_version_paths	plugged/vim-ruby/ftplugin/ruby.vim	/^  let g:ruby_version_paths = {}$/;"	v
g:rubycomplete_buffer_loading	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_buffer_loading	plugged/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_buffer_loading = 0$/;"	v
g:rubycomplete_classes_in_global	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_classes_in_global	plugged/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_classes_in_global = 0$/;"	v
g:rubycomplete_include_object	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_object	plugged/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_object = 0$/;"	v
g:rubycomplete_include_objectspace	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_include_objectspace	plugged/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_include_objectspace = 0$/;"	v
g:rubycomplete_rails	plugged/vim-polyglot/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:rubycomplete_rails	plugged/vim-ruby/autoload/rubycomplete.vim	/^    let g:rubycomplete_rails = 0$/;"	v
g:rustfmt_autosave	plugged/vim-polyglot/autoload/rustfmt.vim	/^	let g:rustfmt_autosave = 0$/;"	v
g:rustfmt_command	plugged/vim-polyglot/autoload/rustfmt.vim	/^	let g:rustfmt_command = "rustfmt"$/;"	v
g:rustfmt_fail_silently	plugged/vim-polyglot/autoload/rustfmt.vim	/^	let g:rustfmt_fail_silently = 0$/;"	v
g:rustfmt_options	plugged/vim-polyglot/autoload/rustfmt.vim	/^	let g:rustfmt_options = ""$/;"	v
g:sign_map	plugged/vim-bookmarks/autoload/bm.vim	/^  let g:sign_map = {}  "  'sign_idx' => 'line_nr'$/;"	v
g:snips_author	plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_author = "yourname"$/;"	v
g:snips_email	plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_email = "yourname@email.com"$/;"	v
g:snips_github	plugged/vim-snippets/plugin/vimsnippets.vim	/^    let g:snips_github = "https:\/\/github.com\/yourname"$/;"	v
g:startify_locked	plugged/vim-startify/plugin/startify.vim	/^let g:startify_locked = 0$/;"	v
g:taboo_tabline	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^  let g:taboo_tabline = 0$/;"	v
g:tabular_default_format	plugged/tabular/autoload/tabular.vim	/^  let g:tabular_default_format = "l1"$/;"	v
g:tabular_loaded	plugged/tabular/plugin/Tabular.vim	/^let g:tabular_loaded = 1$/;"	v
g:tagbar#icon_closed	plugged/tagbar/autoload/tagbar.vim	/^let g:tagbar#icon_closed = g:tagbar_iconchars[0]$/;"	v
g:tagbar#icon_open	plugged/tagbar/autoload/tagbar.vim	/^let g:tagbar#icon_open   = g:tagbar_iconchars[1]$/;"	v
g:tagbar_iconchars	plugged/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	plugged/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:tagbar_type_scala	plugged/vim-polyglot/ftplugin/scala/tagbar.vim	/^  let g:tagbar_type_scala.deffile = expand('<sfile>:p:h:h:h') . '\/ctags\/scala.ctags'$/;"	v
g:tagbar_type_scala	plugged/vim-polyglot/ftplugin/scala/tagbar.vim	/^let g:tagbar_type_scala = {$/;"	v
g:tagbar_type_snippets	plugged/ultisnips/ftplugin/snippets.vim	/^let g:tagbar_type_snippets = {$/;"	v
g:terminal_color_0	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_0 = s:bg0[0]$/;"	v
g:terminal_color_0	plugged/one/colors/one.vim	/^  let g:terminal_color_0  = "#353a44"$/;"	v
g:terminal_color_0	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_0  = "#353a44"$/;"	v
g:terminal_color_1	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_1 = s:gb.neutral_red[0]$/;"	v
g:terminal_color_1	plugged/one/colors/one.vim	/^  let g:terminal_color_1  = "#e88388"$/;"	v
g:terminal_color_1	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_1  = "#e88388"$/;"	v
g:terminal_color_10	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_10 = s:green[0]$/;"	v
g:terminal_color_10	plugged/one/colors/one.vim	/^  let g:terminal_color_10 = "#a7cc8c"$/;"	v
g:terminal_color_10	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_10 = "#a7cc8c"$/;"	v
g:terminal_color_11	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_11 = s:yellow[0]$/;"	v
g:terminal_color_11	plugged/one/colors/one.vim	/^  let g:terminal_color_11 = "#ebca8d"$/;"	v
g:terminal_color_11	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_11 = "#ebca8d"$/;"	v
g:terminal_color_12	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_12 = s:blue[0]$/;"	v
g:terminal_color_12	plugged/one/colors/one.vim	/^  let g:terminal_color_12 = "#72bef2"$/;"	v
g:terminal_color_12	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_12 = "#72bef2"$/;"	v
g:terminal_color_13	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_13 = s:purple[0]$/;"	v
g:terminal_color_13	plugged/one/colors/one.vim	/^  let g:terminal_color_13 = "#d291e4"$/;"	v
g:terminal_color_13	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_13 = "#d291e4"$/;"	v
g:terminal_color_14	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_14 = s:aqua[0]$/;"	v
g:terminal_color_14	plugged/one/colors/one.vim	/^  let g:terminal_color_14 = "#65c2cd"$/;"	v
g:terminal_color_14	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_14 = "#65c2cd"$/;"	v
g:terminal_color_15	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_15 = s:fg1[0]$/;"	v
g:terminal_color_15	plugged/one/colors/one.vim	/^  let g:terminal_color_15 = "#e3e5e9"$/;"	v
g:terminal_color_15	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_15 = "#e3e5e9"$/;"	v
g:terminal_color_2	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_2 = s:gb.neutral_green[0]$/;"	v
g:terminal_color_2	plugged/one/colors/one.vim	/^  let g:terminal_color_2  = "#a7cc8c"$/;"	v
g:terminal_color_2	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_2  = "#a7cc8c"$/;"	v
g:terminal_color_3	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_3 = s:gb.neutral_yellow[0]$/;"	v
g:terminal_color_3	plugged/one/colors/one.vim	/^  let g:terminal_color_3  = "#ebca8d"$/;"	v
g:terminal_color_3	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_3  = "#ebca8d"$/;"	v
g:terminal_color_4	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_4 = s:gb.neutral_blue[0]$/;"	v
g:terminal_color_4	plugged/one/colors/one.vim	/^  let g:terminal_color_4  = "#72bef2"$/;"	v
g:terminal_color_4	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_4  = "#72bef2"$/;"	v
g:terminal_color_5	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_5 = s:gb.neutral_purple[0]$/;"	v
g:terminal_color_5	plugged/one/colors/one.vim	/^  let g:terminal_color_5  = "#d291e4"$/;"	v
g:terminal_color_5	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_5  = "#d291e4"$/;"	v
g:terminal_color_6	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_6 = s:gb.neutral_aqua[0]$/;"	v
g:terminal_color_6	plugged/one/colors/one.vim	/^  let g:terminal_color_6  = "#65c2cd"$/;"	v
g:terminal_color_6	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_6  = "#65c2cd"$/;"	v
g:terminal_color_7	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_7 = s:fg4[0]$/;"	v
g:terminal_color_7	plugged/one/colors/one.vim	/^  let g:terminal_color_7  = "#e3e5e9"$/;"	v
g:terminal_color_7	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_7  = "#e3e5e9"$/;"	v
g:terminal_color_8	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_8 = s:gray[0]$/;"	v
g:terminal_color_8	plugged/one/colors/one.vim	/^  let g:terminal_color_8  = "#353a44"$/;"	v
g:terminal_color_8	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_8  = "#353a44"$/;"	v
g:terminal_color_9	plugged/gruvbox/colors/gruvbox.vim	/^  let g:terminal_color_9 = s:red[0]$/;"	v
g:terminal_color_9	plugged/one/colors/one.vim	/^  let g:terminal_color_9  = "#e88388"$/;"	v
g:terminal_color_9	plugged/vim-one/colors/one.vim	/^  let g:terminal_color_9  = "#e88388"$/;"	v
g:tern#filetypes	plugged/deoplete-ternjs/plugin/deoplete-ternjs.vim	/^let g:tern#filetypes = [$/;"	v
g:terraform_align	plugged/vim-polyglot/after/ftplugin/terraform.vim	/^  let g:terraform_align = 0$/;"	v
g:terraform_fold_sections	plugged/vim-polyglot/after/ftplugin/terraform.vim	/^  let g:terraform_fold_sections = 0$/;"	v
g:terraform_remap_spacebar	plugged/vim-polyglot/after/ftplugin/terraform.vim	/^  let g:terraform_remap_spacebar = 0$/;"	v
g:test#clojure#fireplacetest#file_pattern	plugged/vim-test/autoload/test/clojure/fireplacetest.vim	/^  let g:test#clojure#fireplacetest#file_pattern = '\\v(_test|^test\/.+)\\.cljs?$'$/;"	v
g:test#crystal#crystalspec#file_pattern	plugged/vim-test/autoload/test/crystal/crystalspec.vim	/^  let g:test#crystal#crystalspec#file_pattern = '\\v_spec\\.cr$'$/;"	v
g:test#csharp#dotnettest#file_pattern	plugged/vim-test/autoload/test/csharp/dotnettest.vim	/^  let g:test#csharp#dotnettest#file_pattern = '\\v\\.cs$'$/;"	v
g:test#csharp#patterns	plugged/vim-test/autoload/test/csharp.vim	/^let g:test#csharp#patterns = {$/;"	v
g:test#csharp#xunit#file_pattern	plugged/vim-test/autoload/test/csharp/xunit.vim	/^  let g:test#csharp#xunit#file_pattern = '\\v\\.cs$'$/;"	v
g:test#custom_strategies	plugged/vim-test/plugin/test.vim	/^let g:test#custom_strategies = get(g:, 'test#custom_strategies', {})$/;"	v
g:test#custom_strategies	plugged/vim-test/spec/strategy_spec.vim	/^    let g:test#custom_strategies = {'custom': function('CustomStrategy')}$/;"	v
g:test#custom_strategies	plugged/vim-test/spec/strategy_spec.vim	/^    let g:test#custom_strategies = {}$/;"	v
g:test#custom_transformations	plugged/vim-test/plugin/test.vim	/^let g:test#custom_transformations = get(g:, 'test#custom_transformations', {})$/;"	v
g:test#custom_transformations	plugged/vim-test/spec/commands_spec.vim	/^    let g:test#custom_transformations = {'echo': function('EchoTransformation')}$/;"	v
g:test#custom_transformations	plugged/vim-test/spec/commands_spec.vim	/^    let g:test#custom_transformations = {}$/;"	v
g:test#default_runners	plugged/vim-test/plugin/test.vim	/^let g:test#default_runners = {$/;"	v
g:test#elixir#espec#file_pattern	plugged/vim-test/autoload/test/elixir/espec.vim	/^  let g:test#elixir#espec#file_pattern = '\\v_spec\\.exs$'$/;"	v
g:test#elixir#exunit#file_pattern	plugged/vim-test/autoload/test/elixir/exunit.vim	/^  let g:test#elixir#exunit#file_pattern = '\\v_test\\.exs$'$/;"	v
g:test#elm#elmtest#file_pattern	plugged/vim-test/autoload/test/elm/elmtest.vim	/^  let g:test#elm#elmtest#file_pattern = '\\vtests?\\\/.*\\.elm$'$/;"	v
g:test#erlang#commontest#file_pattern	plugged/vim-test/autoload/test/erlang/commontest.vim	/^  let g:test#erlang#commontest#file_pattern = '\\v_SUITE\\.erl$'$/;"	v
g:test#filename_modifier	plugged/vim-test/spec/commands_spec.vim	/^    let g:test#filename_modifier = ':p'$/;"	v
g:test#go#ginkgo#file_pattern	plugged/vim-test/autoload/test/go/ginkgo.vim	/^  let g:test#go#ginkgo#file_pattern = '\\v[^_].*test\\.go$'$/;"	v
g:test#go#gotest#file_pattern	plugged/vim-test/autoload/test/go/gotest.vim	/^  let g:test#go#gotest#file_pattern = '\\v[^_].*_test\\.go$'$/;"	v
g:test#go#runner	plugged/vim-test/spec/ginkgo_spec.vim	/^      let g:test#go#runner = 'ginkgo'$/;"	v
g:test#go#runner	plugged/vim-test/spec/go_runner_spec.vim	/^        let g:test#go#runner = runner$/;"	v
g:test#java#maventest#file_pattern	plugged/vim-test/autoload/test/java/maventest.vim	/^  let g:test#java#maventest#file_pattern = '\\v^([Tt]est.*|.*[Tt]est(s|Case)?)\\.java$'$/;"	v
g:test#javascript#ava#file_pattern	plugged/vim-test/autoload/test/javascript/ava.vim	/^  let g:test#javascript#ava#file_pattern = '\\vtests?\/.*\\.(js|jsx|coffee)$'$/;"	v
g:test#javascript#cucumberjs#file_pattern	plugged/vim-test/autoload/test/javascript/cucumberjs.vim	/^  let g:test#javascript#cucumberjs#file_pattern = '\\v\\.feature$'$/;"	v
g:test#javascript#intern#config_module	plugged/vim-test/autoload/test/javascript/intern.vim	/^  let g:test#javascript#intern#config_module = 'tests\/intern'$/;"	v
g:test#javascript#intern#file_pattern	plugged/vim-test/autoload/test/javascript/intern.vim	/^  let g:test#javascript#intern#file_pattern = '\\vtests?\/.*\\.js$'$/;"	v
g:test#javascript#intern#test_runner	plugged/vim-test/autoload/test/javascript/intern.vim	/^  let g:test#javascript#intern#test_runner = 'intern-client'$/;"	v
g:test#javascript#jasmine#file_pattern	plugged/vim-test/autoload/test/javascript/jasmine.vim	/^  let g:test#javascript#jasmine#file_pattern = '\\v^spec\/.*spec\\.(js|jsx|coffee)$'$/;"	v
g:test#javascript#jest#file_pattern	plugged/vim-test/autoload/test/javascript/jest.vim	/^  let g:test#javascript#jest#file_pattern = '\\v(__tests__\/.*|(spec|test))\\.(js|jsx|coffee|ts|tsx)$'$/;"	v
g:test#javascript#karma#file_pattern	plugged/vim-test/autoload/test/javascript/karma.vim	/^  let g:test#javascript#karma#file_pattern = '\\v(test|spec)\\.(js|jsx|coffee|ts|tsx)$'$/;"	v
g:test#javascript#lab#file_pattern	plugged/vim-test/autoload/test/javascript/lab.vim	/^  let g:test#javascript#lab#file_pattern = '\\vtest\/.*\\.js$'$/;"	v
g:test#javascript#mocha#file_pattern	plugged/vim-test/autoload/test/javascript/mocha.vim	/^  let g:test#javascript#mocha#file_pattern = '\\vtests?\/.*\\.(js|jsx|coffee)$'$/;"	v
g:test#javascript#runner	plugged/vim-test/spec/ava_spec.vim	/^    let g:test#javascript#runner = 'ava'$/;"	v
g:test#javascript#tap#file_pattern	plugged/vim-test/autoload/test/javascript/tap.vim	/^  let g:test#javascript#tap#file_pattern = '\\vtests?\/.*\\.js$'$/;"	v
g:test#javascript#tap#reporters	plugged/vim-test/autoload/test/javascript/tap.vim	/^  let g:test#javascript#tap#reporters = []$/;"	v
g:test#javascript#tap#reporters	plugged/vim-test/spec/tap_spec.vim	/^    let g:test#javascript#tap#reporters = ['tap-min']$/;"	v
g:test#javascript#tap#reporters	plugged/vim-test/spec/tap_spec.vim	/^    let g:test#javascript#tap#reporters = ['tap-notify', 'tap-spec']$/;"	v
g:test#javascript#tap#reporters	plugged/vim-test/spec/tap_spec.vim	/^    let g:test#javascript#tap#reporters = ['tap-spec']$/;"	v
g:test#javascript#tap#runners	plugged/vim-test/autoload/test/javascript/tap.vim	/^  let g:test#javascript#tap#runners = ['tape', 'tap']$/;"	v
g:test#javascript#webdriverio#file_pattern	plugged/vim-test/autoload/test/javascript/webdriverio.vim	/^  let g:test#javascript#webdriverio#file_pattern = '\\vtests?\/.*\\.js$'$/;"	v
g:test#lua#busted#file_pattern	plugged/vim-test/autoload/test/lua/busted.vim	/^  let g:test#lua#busted#file_pattern = '\\v_spec\\.(lua|moon)$'$/;"	v
g:test#perl#prove#file_pattern	plugged/vim-test/autoload/test/perl/prove.vim	/^  let g:test#perl#prove#file_pattern = '\\v^t\/.*\\.t$'$/;"	v
g:test#php#behat#file_pattern	plugged/vim-test/autoload/test/php/behat.vim	/^  let g:test#php#behat#file_pattern = '\\v\\.feature$'$/;"	v
g:test#php#codeception#file_pattern	plugged/vim-test/autoload/test/php/codeception.vim	/^  let g:test#php#codeception#file_pattern =$/;"	v
g:test#php#dusk#file_pattern	plugged/vim-test/autoload/test/php/dusk.vim	/^  let g:test#php#dusk#file_pattern = '\\v(t|T)est\\.php$'$/;"	v
g:test#php#kahlan#file_pattern	plugged/vim-test/autoload/test/php/kahlan.vim	/^  let g:test#php#kahlan#file_pattern = '\\v(s|S)pec\\.php$'$/;"	v
g:test#php#peridot#file_pattern	plugged/vim-test/autoload/test/php/peridot.vim	/^  let g:test#php#peridot#file_pattern = '\\v(s|S)pec\\.php$'$/;"	v
g:test#php#phpspec#file_pattern	plugged/vim-test/autoload/test/php/phpspec.vim	/^  let g:test#php#phpspec#file_pattern = '\\v(s|S)pec\\.php$'$/;"	v
g:test#php#phpunit#file_pattern	plugged/vim-test/autoload/test/php/phpunit.vim	/^  let g:test#php#phpunit#file_pattern = '\\v(t|T)est\\.php$'$/;"	v
g:test#plugin_path	plugged/vim-test/plugin/test.vim	/^let g:test#plugin_path = expand('<sfile>:p:h:h')$/;"	v
g:test#project_root	plugged/vim-test/plugin/test.vim	/^  let g:test#project_root = getcwd()$/;"	v
g:test#python#djangotest#file_pattern	plugged/vim-test/autoload/test/python/djangotest.vim	/^  let g:test#python#djangotest#file_pattern = '\\v^test.*\\.py$'$/;"	v
g:test#python#nose#file_pattern	plugged/vim-test/autoload/test/python/nose.vim	/^  let g:test#python#nose#file_pattern = '\\v(^|[\\b_\\.-])[Tt]est.*\\.py$'$/;"	v
g:test#python#nose2#file_pattern	plugged/vim-test/autoload/test/python/nose2.vim	/^  let g:test#python#nose2#file_pattern = '\\v(^|[\\b_\\.-])[Tt]est.*\\.py$'$/;"	v
g:test#python#pytest#file_pattern	plugged/vim-test/autoload/test/python/pytest.vim	/^  let g:test#python#pytest#file_pattern = '\\v(test_[^\/]+|[^\/]+_test)\\.py$'$/;"	v
g:test#python#pyunit#file_pattern	plugged/vim-test/autoload/test/python/pyunit.vim	/^  let g:test#python#pyunit#file_pattern = '\\v^test.*\\.py$'$/;"	v
g:test#python#runner	plugged/vim-test/spec/djangotest_spec.vim	/^    let g:test#python#runner = 'djangonose'$/;"	v
g:test#python#runner	plugged/vim-test/spec/djangotest_spec.vim	/^    let g:test#python#runner = 'djangotest'$/;"	v
g:test#python#runner	plugged/vim-test/spec/nose2_spec.vim	/^    let g:test#python#runner = 'Nose2'$/;"	v
g:test#python#runner	plugged/vim-test/spec/nose_spec.vim	/^    let g:test#python#runner = 'nose'$/;"	v
g:test#python#runner	plugged/vim-test/spec/pytest_spec.vim	/^    let g:test#python#runner = 'pytest'$/;"	v
g:test#python#runner	plugged/vim-test/spec/pyunit_spec.vim	/^    let g:test#python#runner = 'pyunit'$/;"	v
g:test#racket#rackunit#file_pattern	plugged/vim-test/autoload/test/racket/rackunit.vim	/^  let g:test#racket#rackunit#file_pattern = '\\v^test.*\\.rkt$'$/;"	v
g:test#ruby#cucumber#file_pattern	plugged/vim-test/autoload/test/ruby/cucumber.vim	/^  let g:test#ruby#cucumber#file_pattern = '\\v\\.feature$'$/;"	v
g:test#ruby#m#file_pattern	plugged/vim-test/autoload/test/ruby/m.vim	/^  let g:test#ruby#m#file_pattern = '\\v_test\\.rb$'$/;"	v
g:test#ruby#minitest#executable	plugged/vim-test/spec/m_spec.vim	/^    let g:test#ruby#minitest#executable = 'm'$/;"	v
g:test#ruby#minitest#file_pattern	plugged/vim-test/autoload/test/ruby/minitest.vim	/^  let g:test#ruby#minitest#file_pattern = '\\v_test\\.rb$'$/;"	v
g:test#ruby#rails#file_pattern	plugged/vim-test/autoload/test/ruby/rails.vim	/^  let g:test#ruby#rails#file_pattern = '\\v_test\\.rb$'$/;"	v
g:test#ruby#rspec#executable	plugged/vim-test/spec/commands_spec.vim	/^    let g:test#ruby#rspec#executable = 'foo'$/;"	v
g:test#ruby#rspec#file_pattern	plugged/vim-test/autoload/test/ruby/rspec.vim	/^  let g:test#ruby#rspec#file_pattern = '\\v(_spec\\.rb|spec\/.*\\.feature)$'$/;"	v
g:test#ruby#rspec#options	plugged/vim-test/spec/options_spec.vim	/^      let g:test#ruby#rspec#options = '--foo bar --baz'$/;"	v
g:test#ruby#rspec#options	plugged/vim-test/spec/options_spec.vim	/^      let g:test#ruby#rspec#options = {$/;"	v
g:test#runner_commands	plugged/vim-test/plugin/test.vim	/^let g:test#runner_commands = get(g:, 'test#runner_commands', [])$/;"	v
g:test#runner_commands	plugged/vim-test/spec/support/helpers.vim	/^let g:test#runner_commands = ['RSpec', 'Minitest', 'FireplaceTest', 'Prove']$/;"	v
g:test#rust#cargotest#file_pattern	plugged/vim-test/autoload/test/rust/cargotest.vim	/^  let g:test#rust#cargotest#file_pattern = '\\v\\.rs$'$/;"	v
g:test#shell#bats#file_pattern	plugged/vim-test/autoload/test/shell/bats.vim	/^  let g:test#shell#bats#file_pattern = '\\v\\.bats$'$/;"	v
g:test#strategy	plugged/vim-test/spec/strategy_spec.vim	/^    let g:test#strategy = 'custom'$/;"	v
g:test#strategy	plugged/vim-test/spec/strategy_spec.vim	/^    let g:test#strategy = 'foo'$/;"	v
g:test#strategy	plugged/vim-test/spec/strategy_spec.vim	/^    let g:test#strategy = 'neovim'$/;"	v
g:test#strategy	plugged/vim-test/spec/strategy_spec.vim	/^    let g:test#strategy = {'nearest': 'neovim', 'suite': 'dispatch'}$/;"	v
g:test#swift#patterns	plugged/vim-test/autoload/test/swift.vim	/^let g:test#swift#patterns = {$/;"	v
g:test#swift#swiftpm#file_pattern	plugged/vim-test/autoload/test/swift/swiftpm.vim	/^  let g:test#swift#swiftpm#file_pattern = '\\v^Tests\\\/.*\\.swift$'$/;"	v
g:test#transformation	plugged/vim-test/spec/commands_spec.vim	/^    let g:test#transformation = 'echo'$/;"	v
g:test#viml#themis#file_pattern	plugged/vim-test/autoload/test/viml/themis.vim	/^  let g:test#viml#themis#file_pattern = '\\.vim$'$/;"	v
g:test#viml#vader#file_pattern	plugged/vim-test/autoload/test/viml/vader.vim	/^  let g:test#viml#vader#file_pattern = '\\v\\.vader$'$/;"	v
g:test#viml#vspec#file_pattern	plugged/vim-test/autoload/test/viml/vspec.vim	/^  let g:test#viml#vspec#file_pattern = '\\v^(t(est)?|spec)\/.*\\.vim$'$/;"	v
g:test_file	plugged/vim-bookmarks/t/bm_sign_spec.vim	/^    let g:test_file = expand("%:p")$/;"	v
g:testname	plugged/vim-gitgutter/test/runner.vim	/^let g:testname = expand('%')$/;"	v
g:textobj_ruby_more_mappings	plugged/vim-textobj-ruby/plugin/textobj/ruby.vim	/^let g:textobj_ruby_more_mappings = get(g:, 'textobj_ruby_more_mappings', 0)$/;"	v
g:timer_enabled	plugged/vim-misc/autoload/xolox/misc/timer.vim	/^  let g:timer_enabled = 0$/;"	v
g:timer_verbosity	plugged/vim-misc/autoload/xolox/misc/timer.vim	/^  let g:timer_verbosity = 1$/;"	v
g:tmux_navigator_disable_when_zoomed	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  let g:tmux_navigator_disable_when_zoomed = 0$/;"	v
g:tmux_navigator_save_on_switch	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^  let g:tmux_navigator_save_on_switch = 0$/;"	v
g:tmuxcomplete#loaded	plugged/tmux-complete.vim/plugin/tmuxcomplete.vim	/^let g:tmuxcomplete#loaded = '0.1.3' " version number$/;"	v
g:typescript_compiler_binary	plugged/vim-polyglot/compiler/typescript.vim	/^  let g:typescript_compiler_binary = "tsc"$/;"	v
g:typescript_compiler_options	plugged/vim-polyglot/compiler/typescript.vim	/^  let g:typescript_compiler_options = ""$/;"	v
g:user_emmet_leader_key	plugged/emmet-vim/plugin/emmet.vim	/^  let g:user_emmet_leader_key = '<c-y>'$/;"	v
g:vim_ember_script	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  let g:vim_ember_script = 1$/;"	v
g:vim_emblem	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  let g:vim_emblem = 1$/;"	v
g:vim_json_syntax_conceal	plugged/vim-polyglot/config.vim	/^  let g:vim_json_syntax_conceal = 0$/;"	v
g:vim_json_syntax_conceal	plugged/vim-polyglot/ftdetect/polyglot.vim	/^  let g:vim_json_syntax_conceal = 0$/;"	v
g:vim_json_syntax_conceal	plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_syntax_conceal = 1$/;"	v
g:vim_json_syntax_concealcursor	plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_syntax_concealcursor = ""$/;"	v
g:vim_json_warnings	plugged/vim-polyglot/ftplugin/json.vim	/^	let g:vim_json_warnings = 1$/;"	v
g:vimshell_escape_colors	plugged/gruvbox/colors/gruvbox.vim	/^let g:vimshell_escape_colors = [$/;"	v
g:webdevicons_conceal_nerdtree_brackets	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_conceal_nerdtree_brackets = 1$/;"	v
g:webdevicons_enable	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable = 1$/;"	v
g:webdevicons_enable	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable = 1$/;"	v
g:webdevicons_enable_airline_statusline	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_statusline = 1$/;"	v
g:webdevicons_enable_airline_statusline	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_statusline = 1$/;"	v
g:webdevicons_enable_airline_statusline_fileformat_symbols	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_statusline_fileformat_symbols = 1$/;"	v
g:webdevicons_enable_airline_tabline	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_tabline = 1$/;"	v
g:webdevicons_enable_airline_tabline	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_airline_tabline = 1$/;"	v
g:webdevicons_enable_ctrlp	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_ctrlp = 1$/;"	v
g:webdevicons_enable_denite	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_denite = 1$/;"	v
g:webdevicons_enable_flagship_statusline	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_flagship_statusline = 1$/;"	v
g:webdevicons_enable_flagship_statusline_fileformat_symbols	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_flagship_statusline_fileformat_symbols = 1$/;"	v
g:webdevicons_enable_nerdtree	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^     let g:webdevicons_enable_nerdtree = 0$/;"	v
g:webdevicons_enable_nerdtree	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^  let g:webdevicons_enable_nerdtree = 1$/;"	v
g:webdevicons_enable_nerdtree	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_nerdtree = 1$/;"	v
g:webdevicons_enable_unite	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_unite = 1$/;"	v
g:webdevicons_enable_vimfiler	plugged/vim-devicons/plugin/webdevicons.vim	/^  let g:webdevicons_enable_vimfiler = 1$/;"	v
g:webdevicons_gui_glyph_fix	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:webdevicons_gui_glyph_fix = 0$/;"	v
g:webdevicons_gui_glyph_fix	plugged/vim-devicons/nerdtree_plugin/webdevicons.vim	/^    let g:webdevicons_gui_glyph_fix = 1$/;"	v
g:xmldata_aria	plugged/vim-polyglot/autoload/xml/aria.vim	/^let g:xmldata_aria = {$/;"	v
g:xmldata_html5	plugged/vim-polyglot/autoload/xml/html5.vim	/^let g:xmldata_html5 = {$/;"	v
g:xolox#easytags#default_pattern_prefix	plugged/vim-easytags/autoload/xolox/easytags.vim	/^let g:xolox#easytags#default_pattern_prefix = '\\C\\<'$/;"	v
g:xolox#easytags#default_pattern_suffix	plugged/vim-easytags/autoload/xolox/easytags.vim	/^let g:xolox#easytags#default_pattern_suffix = '\\>'$/;"	v
g:xolox#easytags#filetypes#ctags_to_vim	plugged/vim-easytags/autoload/xolox/easytags/filetypes.vim	/^let g:xolox#easytags#filetypes#ctags_to_vim = {}$/;"	v
g:xolox#easytags#filetypes#vim_to_ctags	plugged/vim-easytags/autoload/xolox/easytags/filetypes.vim	/^let g:xolox#easytags#filetypes#vim_to_ctags = {}$/;"	v
g:xolox#easytags#highlight_timer	plugged/vim-easytags/autoload/xolox/easytags.vim	/^  let g:xolox#easytags#highlight_timer = xolox#misc#timer#resumable()$/;"	v
g:xolox#easytags#syntax_filter_stage_1_timer	plugged/vim-easytags/autoload/xolox/easytags.vim	/^  let g:xolox#easytags#syntax_filter_stage_1_timer = xolox#misc#timer#resumable()$/;"	v
g:xolox#easytags#syntax_filter_stage_2_timer	plugged/vim-easytags/autoload/xolox/easytags.vim	/^  let g:xolox#easytags#syntax_filter_stage_2_timer = xolox#misc#timer#resumable()$/;"	v
g:xolox#easytags#syntax_keyword_timer	plugged/vim-easytags/autoload/xolox/easytags.vim	/^  let g:xolox#easytags#syntax_keyword_timer = xolox#misc#timer#resumable()$/;"	v
g:xolox#easytags#syntax_match_timer	plugged/vim-easytags/autoload/xolox/easytags.vim	/^  let g:xolox#easytags#syntax_match_timer = xolox#misc#timer#resumable()$/;"	v
g:xolox#easytags#update_timer	plugged/vim-easytags/autoload/xolox/easytags.vim	/^  let g:xolox#easytags#update_timer = xolox#misc#timer#resumable()$/;"	v
g:xolox#easytags#version	plugged/vim-easytags/autoload/xolox/easytags.vim	/^let g:xolox#easytags#version = '3.11'$/;"	v
g:xolox#misc#async#counter	plugged/vim-misc/autoload/xolox/misc/async.vim	/^  let g:xolox#misc#async#counter = 1$/;"	v
g:xolox#misc#async#requests	plugged/vim-misc/autoload/xolox/misc/async.vim	/^  let g:xolox#misc#async#requests = {}$/;"	v
g:xolox#misc#cursorhold#handlers	plugged/vim-misc/autoload/xolox/misc/cursorhold.vim	/^  let g:xolox#misc#cursorhold#handlers = []$/;"	v
g:xolox#misc#test#echo	plugged/vim-misc/autoload/xolox/misc/test.vim	/^  let g:xolox#misc#test#echo = 'echo'$/;"	v
g:xolox#misc#test#echo	plugged/vim-misc/autoload/xolox/misc/test.vim	/^  let g:xolox#misc#test#echo = xolox#misc#escape#shell(xolox#misc#path#merge(expand('<sfile>:p:h'), 'echo.exe'))$/;"	v
g:xolox#misc#version	plugged/vim-misc/autoload/xolox/misc.vim	/^let g:xolox#misc#version = '1.17.6'$/;"	v
g:xolox#notes#url_pattern	plugged/vim-notes/autoload/xolox/notes.vim	/^let g:xolox#notes#url_pattern = '\\<\\(mailto:\\|javascript:\\|\\w\\{3,}:\/\/\\)\\(\\S*\\w\\)\\+\/\\?'$/;"	v
g:xolox#notes#version	plugged/vim-notes/autoload/xolox/notes.vim	/^let g:xolox#notes#version = '0.33.4'$/;"	v
g:xolox_message_buffer	plugged/vim-misc/autoload/xolox/misc/msg.vim	/^  let g:xolox_message_buffer = 100$/;"	v
g:xolox_messages	plugged/vim-misc/autoload/xolox/misc/msg.vim	/^  let g:xolox_messages = []$/;"	v
gather_candidates	plugged/alchemist.vim/rplugin/python3/deoplete/sources/alchemist.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def gather_candidates(self, context):$/;"	m	class:Base
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/tmux-complete.vim/rplugin/python3/deoplete/sources/tmuxcomplete.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_candidates	plugged/ultisnips/rplugin/python3/deoplete/sources/ultisnips.py	/^    def gather_candidates(self, context):$/;"	m	class:Source
gather_poses	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:gather_poses(pattern) abort$/;"	f
gather_visible_matched_poses	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:gather_visible_matched_poses(pattern, direction, allow_cursor_pos_match) abort$/;"	f
gc	plugged/vim-commentary/plugin/commentary.vim	/^  nmap gc  <Plug>Commentary$/;"	m
gc	plugged/vim-commentary/plugin/commentary.vim	/^  omap gc  <Plug>Commentary$/;"	m
gc	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gc <Plug>(crystal-show-context)$/;"	m
gcc	plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcc <Plug>CommentaryLine$/;"	m
gcu	plugged/vim-commentary/plugin/commentary.vim	/^  nmap gcu <Plug>Commentary<Plug>Commentary$/;"	m
gd	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gd <Plug>(crystal-jump-to-definition)$/;"	m
generate	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def generate(self, more_content=None, real_modname=None,$/;"	m	class:Documenter
generate_list_item_bullet_pattern	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! s:generate_list_item_bullet_pattern() " {{{1$/;"	f
get	plugged/tagbar/autoload/tagbar/state.vim	/^function! s:get() abort$/;"	f
get	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:get(name)$/;"	f
get	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:get(name, ...)$/;"	f
getChildren	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getChildren() dict abort$/;"	f
getChildrenByName	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getChildrenByName(tagname) dict abort$/;"	f
getClosedParentTline	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getClosedParentTline() abort dict$/;"	f
getEvent	plugged/deoplete-ternjs/tests/test.js	/^    getEvent: function(e) {$/;"	m	class:MYAPP.event
getGruvColor	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^function! s:getGruvColor(group)$/;"	f
getHLStack	plugged/vim-polyglot/indent/haskell.vim	/^function! s:getHLStack(line, col)$/;"	f
getKind	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! s:getKind(kind) abort dict$/;"	f
getLogger	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def getLogger(name):$/;"	f
getNesting	plugged/vim-polyglot/indent/haskell.vim	/^function! s:getNesting(hlstack)$/;"	f
getPromptMessage	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:getPromptMessage(num_strokes) "{{{$/;"	f
getPrototype	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
getPrototype	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
getPrototype	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:getPrototype(short) abort dict$/;"	f
getTags	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:getTags() dict abort$/;"	f
getTagsByName	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:getTagsByName(tagname) dict abort$/;"	f
get_accented_line	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_accented_line(self, group, contents)$/;"	f
get_airline_themes	plugged/vim-airline/plugin/airline.vim	/^function! s:get_airline_themes(a, l, p)$/;"	f
get_array	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_array(fg, bg, opts)$/;"	f
get_attr	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def get_attr(obj, name, *defargs):$/;"	m	class:Documenter
get_background_colors	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:get_background_colors(group) abort$/;"	f
get_base_indent	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:get_base_indent(lnum, text)$/;"	f
get_browser_command	plugged/vim-polyglot/autoload/elm/util.vim	/^fun! s:get_browser_command() abort$/;"	f
get_buf_far_ctx	plugged/far.vim/autoload/far.vim	/^function! s:get_buf_far_ctx(bufnr) abort "{{{$/;"	f
get_buffer_data	plugged/ultisnips/test/vim_interface.py	/^    def get_buffer_data(self):$/;"	m	class:VimInterface
get_buffer_filetypes	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def get_buffer_filetypes(self):$/;"	m	class:SnippetManager
get_builder_config	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def get_builder_config(self, option, default):$/;"	m	class:Builder
get_cache_path	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^def get_cache_path():$/;"	f
get_char	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_char(...)$/;"	f
get_clear_priority	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def get_clear_priority(self, filetypes):$/;"	m	class:SnippetSource
get_cleared	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def get_cleared(self, filetypes):$/;"	m	class:SnippetSource
get_cmdline	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:get_cmdline()$/;"	f
get_cmdline_cword	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:get_cmdline_cword(backward, cword)$/;"	f
get_color	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_color(attr, ...)$/;"	f
get_color	plugged/goyo.vim/autoload/goyo.vim	/^function! s:get_color(group, attr)$/;"	f
get_color_map	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_color_map()$/;"	f
get_comment_format	plugged/vim-snippets/pythonx/vimsnippets.py	/^def get_comment_format():$/;"	f
get_complete_position	plugged/alchemist.vim/rplugin/python3/deoplete/sources/alchemist.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def get_complete_position(self, context):$/;"	m	class:Base
get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_complete_position	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^    def get_complete_position(self, context):$/;"	m	class:Source
get_contexts_under_cursor	plugged/far.vim/autoload/far.vim	/^function! s:get_contexts_under_cursor() abort "{{{$/;"	f
get_counts	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^function! s:get_counts()$/;"	f
get_cursor_pos	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def get_cursor_pos():$/;"	f
get_custom	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_custom(custom, source_name, key, default):$/;"	f
get_decimal_group	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! s:get_decimal_group()$/;"	f
get_deep_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def get_deep_extends(self, base_filetypes):$/;"	m	class:SnippetSource
get_doc	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def get_doc(self, encoding=None, ignore=1):$/;"	m	class:Documenter
get_echorizer	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:get_echorizer(str) abort$/;"	f
get_escaped_group_char	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:get_escaped_group_char(dict, char) "{{{$/;"	f
get_file_content	plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def get_file_content()$/;"	f
get_file_content	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def get_file_content()$/;"	f
get_filetype_var	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def get_filetype_var(self, filetype, var_name):$/;"	m	class:Base
get_first_match	plugged/vim-test/autoload/test/swift/swiftpm.vim	/^function! s:get_first_match(source, patterns) abort$/;"	f
get_git_root	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:get_git_root()$/;"	f
get_hit_enter_max_length	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
get_hunks	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks()$/;"	f
get_hunks_changes	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_changes()$/;"	f
get_hunks_empty	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_empty()$/;"	f
get_hunks_gitgutter	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_gitgutter()$/;"	f
get_hunks_signify	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:get_hunks_signify()$/;"	f
get_import_path	plugged/vim-test/autoload/test/python/djangotest.vim	/^function! s:get_import_path(filepath) abort$/;"	f
get_import_path	plugged/vim-test/autoload/test/python/pyunit.vim	/^function! s:get_import_path(filepath) abort$/;"	f
get_indentexpr	plugged/vim-polyglot/indent/vue.vim	/^function! s:get_indentexpr(language)$/;"	f
get_index_as_string	plugged/vim-startify/autoload/startify.vim	/^function! s:get_index_as_string(idx) abort$/;"	f
get_last_selected	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:get_last_selected() abort$/;"	f
get_last_status	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_line_trimmed	plugged/vim-polyglot/indent/rust.vim	/^function! s:get_line_trimmed(lnum)$/;"	f
get_lists	plugged/vim-startify/autoload/startify.vim	/^function! s:get_lists() abort$/;"	f
get_map_str	plugged/tagbar/autoload/tagbar.vim	/^function! s:get_map_str(map) abort$/;"	f
get_mark_pos	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def get_mark_pos(name):$/;"	f
get_matching_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_snippet_dictionary.py	/^    def get_matching_snippets(self, trigger, potentially, autotrigger_only,$/;"	m	class:SnippetDictionary
get_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:get_mode()$/;"	f
get_object_members	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def get_object_members(self, want_all):$/;"	m	class:Documenter
get_object_members	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def get_object_members(self, want_all):$/;"	m	class:ModuleDocumenter
get_option	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def get_option(snip, option, default=None):$/;"	f
get_outdated_docs	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def get_outdated_docs(self):$/;"	m	class:Builder
get_parents	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^def get_parents(source, line, class_only=False):$/;"	f
get_parents	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def get_parents(self, c):$/;"	m	class:Server
get_position	plugged/vim-test/autoload/test.vim	/^function! s:get_position(path) abort$/;"	f
get_project_base_dir	plugged/alchemist.vim/elixir_sense.py	/^    def get_project_base_dir(self, running_servers_logs=None):$/;"	m	class:ElixirSenseClient
get_project_files	plugged/vim-test/autoload/test/csharp.vim	/^function! s:get_project_files(filepath) abort$/;"	f
get_random_offset	plugged/vim-startify/autoload/startify/fortune.vim	/^function! s:get_random_offset(max) abort$/;"	f
get_real_modname	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def get_real_modname(self):$/;"	m	class:Documenter
get_relative_uri	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def get_relative_uri(self, from_, to, typ=None):$/;"	m	class:Builder
get_save_pos	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:get_save_pos(...)$/;"	f
get_section	plugged/vim-airline/autoload/airline/extensions/default.vim	/^function! s:get_section(winnr, key, ...)$/;"	f
get_selected_text	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:get_selected_text(...) abort$/;"	f
get_separator_change	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change(new_group, old_group, end_group, sep_size, alt_sep_size)$/;"	f
get_separator_change_with_end	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:get_separator_change_with_end(new_group, old_group, new_end_group, old_end_group, sep_size, alt_sep_size)$/;"	f
get_seperator	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_seperator(self, prev_group, group, side)$/;"	f
get_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def get_snippets(self, filetypes, before, possible, autotrigger_only,$/;"	m	class:SnippetSource
get_sourcename	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def get_sourcename(self):$/;"	m	class:Documenter
get_syn	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:get_syn(group, what)$/;"	f
get_syn_names	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def get_syn_names(vim):$/;"	f
get_tabstops	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def get_tabstops(self):$/;"	m	class:SnippetInstance
get_tag	plugged/vim-polyglot/indent/html.vim	/^func! s:get_tag(tagname)$/;"	f
get_target_uri	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def get_target_uri(self, docname, typ=None):$/;"	m	class:Builder
get_text	plugged/vim-airline/autoload/airline/extensions/quickfix.vim	/^function! s:get_text()$/;"	f
get_text	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_text(region)$/;"	f
get_time_in_ms	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_time_in_ms()$/;"	f
get_transitioned_seperator	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:get_transitioned_seperator(self, prev_group, group, side)$/;"	f
get_visual_region	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:get_visual_region(pos)$/;"	f
get_visual_selection	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:get_visual_selection()$/;"	f
getchar	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^function! s:getchar(...)$/;"	f
getchar	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	plugged/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getchar_safe	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getlines	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^from deoplete.util import getlines$/;"	i
getlines	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^from deoplete.util import parse_buffer_pattern, getlines$/;"	i
getlines	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^from deoplete.util import parse_buffer_pattern, getlines$/;"	i
getlines	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def getlines(vim, start=1, end='$'):$/;"	f
getlist	plugged/vim-rails/autoload/rails.vim	/^function! s:getlist(arg, key)$/;"	f
getmapchars	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:getmapchars(function)$/;"	f
getmtime	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^from os.path import getmtime, exists$/;"	i
getopt	plugged/alchemist.vim/elixir_sense_client	/^import os, sys, getopt$/;"	i
getopt	plugged/vim-notes/misc/notes/search-notes.py	/^import getopt$/;"	i
getpos	plugged/vim-peekaboo/autoload/peekaboo.vim	/^function! s:getpos()$/;"	f
gettime	plugged/tagbar/autoload/tagbar/debug.vim	/^    function! s:gettime() abort$/;"	f
gf	plugged/vim-polyglot/ftplugin/elm.vim	/^nmap <buffer> gf :call elm#util#GoToModule(expand('<cfile>'))<CR>$/;"	m
gg	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal gg$/;"	m
gg	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! gg$/;"	m
gg0	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! gg0$/;"	m
gg0	plugged/vim-textobj-user/t/old-property-names.vim	/^    normal! gg0$/;"	m
git_command	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:git_command() abort$/;"	f
git_diff	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff()$/;"	f
git_diff_staged	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:git_diff_staged()$/;"	f
git_supports_command_line_config_override	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:git_supports_command_line_config_override() abort$/;"	f
git_validate	autoload/plug.vim	/^function! s:git_validate(spec, check_branch)$/;"	f
git_version	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:git_version()$/;"	f
git_version_requirement	autoload/plug.vim	/^function! s:git_version_requirement(...)$/;"	f
gitdiffcached	plugged/vim-polyglot/ftplugin/gitcommit.vim	/^function! s:gitdiffcached(bang,gitdir,...)$/;"	f
gitgutter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#all(force) abort$/;"	f
gitgutter#async#available	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#available()$/;"	f
gitgutter#async#execute	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! gitgutter#async#execute(cmd, bufnr, handler) abort$/;"	f
gitgutter#debug#debug	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#log	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message, ...) abort$/;"	f
gitgutter#diff#handler	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#handler(bufnr, diff) abort$/;"	f
gitgutter#diff#hunk_diff	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#hunk_diff(bufnr, full_diff)$/;"	f
gitgutter#diff#parse_diff	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff) abort$/;"	f
gitgutter#diff#parse_hunk	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line) abort$/;"	f
gitgutter#diff#process_hunks	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(bufnr, hunks) abort$/;"	f
gitgutter#diff#run_diff	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(bufnr, preserve_full_diff) abort$/;"	f
gitgutter#disable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#disable() abort$/;"	f
gitgutter#enable	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#enable() abort$/;"	f
gitgutter#highlight#define_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights() abort$/;"	f
gitgutter#highlight#define_sign_column_highlight	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_column_highlight() abort$/;"	f
gitgutter#highlight#define_sign_text_highlights	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights() abort$/;"	f
gitgutter#highlight#define_signs	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs() abort$/;"	f
gitgutter#highlight#line_disable	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_disable() abort$/;"	f
gitgutter#highlight#line_enable	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_enable() abort$/;"	f
gitgutter#highlight#line_toggle	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#line_toggle() abort$/;"	f
gitgutter#hunk#cursor_in_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk) abort$/;"	f
gitgutter#hunk#fix_file_references	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^  function! gitgutter#hunk#fix_file_references(filepath, hunk_diff)$/;"	f
gitgutter#hunk#hunks	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks(bufnr) abort$/;"	f
gitgutter#hunk#increment_lines_added	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_modified	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(bufnr, count) abort$/;"	f
gitgutter#hunk#increment_lines_removed	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(bufnr, count) abort$/;"	f
gitgutter#hunk#next_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count) abort$/;"	f
gitgutter#hunk#prev_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count) abort$/;"	f
gitgutter#hunk#preview	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#preview() abort$/;"	f
gitgutter#hunk#reset	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset(bufnr) abort$/;"	f
gitgutter#hunk#set_hunks	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(bufnr, hunks) abort$/;"	f
gitgutter#hunk#stage	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#stage() abort$/;"	f
gitgutter#hunk#summary	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary(bufnr) abort$/;"	f
gitgutter#hunk#text_object	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#text_object(inner) abort$/;"	f
gitgutter#hunk#undo	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#undo() abort$/;"	f
gitgutter#init_buffer	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#init_buffer(bufnr)$/;"	f
gitgutter#process_buffer	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, force) abort$/;"	f
gitgutter#sign#clear_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs(bufnr) abort$/;"	f
gitgutter#sign#disable	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#disable() abort$/;"	f
gitgutter#sign#enable	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#enable() abort$/;"	f
gitgutter#sign#remove_dummy_sign	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_dummy_sign(bufnr, force) abort$/;"	f
gitgutter#sign#reset	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#reset()$/;"	f
gitgutter#sign#toggle	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#toggle() abort$/;"	f
gitgutter#sign#update_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(bufnr, modified_lines) abort$/;"	f
gitgutter#toggle	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! gitgutter#toggle() abort$/;"	f
gitgutter#utility#cd_cmd	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#cd_cmd(bufnr, cmd) abort$/;"	f
gitgutter#utility#extension	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension(bufnr) abort$/;"	f
gitgutter#utility#file	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file(bufnr)$/;"	f
gitgutter#utility#getbufvar	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#getbufvar(buffer, varname, ...)$/;"	f
gitgutter#utility#is_active	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active(bufnr) abort$/;"	f
gitgutter#utility#repo_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#repo_path(bufnr, shellesc) abort$/;"	f
gitgutter#utility#set_repo_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_repo_path(bufnr) abort$/;"	f
gitgutter#utility#setbufvar	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#setbufvar(buffer, varname, val)$/;"	f
gitgutter#utility#shellescape	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg) abort$/;"	f
gitgutter#utility#supports_overscore_sign	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#supports_overscore_sign()$/;"	f
gitgutter#utility#system	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...) abort$/;"	f
gitgutter#utility#warn	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message) abort$/;"	f
gitgutter#utility#warn_once	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn_once(bufnr, message, key) abort$/;"	f
gitgutter#utility#windows	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#windows()$/;"	f
github_url	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(opts, ...) abort$/;"	f
glob	autoload/plug.vim	/^function! s:glob(from, pattern)$/;"	f
glob	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^import glob$/;"	i
glob	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^from glob import glob$/;"	i
glob	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^import glob$/;"	i
glob	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^import glob$/;"	i
glob	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^import glob$/;"	i
glob	plugged/ultisnips/utils/get_tm_snippets.py	/^import glob$/;"	i
glob	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
glob_dir	autoload/plug.vim	/^function! s:glob_dir(path)$/;"	f
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, event_handler_attributes)$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, microdata_attributes)$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, rdfa_attributes)$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let global_attributes = extend(global_attributes, {'role': role})$/;"	v
global_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let global_attributes = extend(core_attributes, xml_attributes)$/;"	v
global_deoplete	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    global_deoplete = Deoplete(vim)$/;"	v
global_states_and_properties	plugged/vim-polyglot/autoload/xml/aria.vim	/^let global_states_and_properties = {$/;"	v
globpath	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:globpath(path, expr) abort$/;"	f
globruntime	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^from deoplete.util import error, globruntime$/;"	i
globruntime	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def globruntime(runtimepath, path):$/;"	f
glossary	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class glossary(nodes.Element):$/;"	c
go	plugged/vim-commentary/plugin/commentary.vim	/^function! s:go(...) abort$/;"	f
go#config#AddtagsTransform	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AddtagsTransform() abort$/;"	f
go#config#AlternateMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AlternateMode() abort$/;"	f
go#config#AsmfmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AsmfmtAutosave() abort$/;"	f
go#config#AutoSameids	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AutoSameids() abort$/;"	f
go#config#AutoTypeInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AutoTypeInfo() abort$/;"	f
go#config#AutodetectGopath	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#AutodetectGopath() abort$/;"	f
go#config#BinPath	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#BinPath() abort$/;"	f
go#config#BuildTags	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#BuildTags() abort$/;"	f
go#config#Debug	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#Debug() abort$/;"	f
go#config#DebugAddress	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugAddress() abort$/;"	f
go#config#DebugCommands	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugCommands() abort$/;"	f
go#config#DebugWindows	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DebugWindows() abort$/;"	f
go#config#DeclsIncludes	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DeclsIncludes() abort$/;"	f
go#config#DeclsMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DeclsMode() abort$/;"	f
go#config#DefMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DefMode() abort$/;"	f
go#config#DefReuseBuffer	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DefReuseBuffer() abort$/;"	f
go#config#DocCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocCommand() abort$/;"	f
go#config#DocMaxHeight	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocMaxHeight() abort$/;"	f
go#config#DocUrl	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#DocUrl() abort$/;"	f
go#config#EchoCommandInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#EchoCommandInfo() abort$/;"	f
go#config#ErrcheckBin	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ErrcheckBin() abort$/;"	f
go#config#FmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtAutosave() abort$/;"	f
go#config#FmtCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtCommand() abort$/;"	f
go#config#FmtExperimental	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtExperimental() abort$/;"	f
go#config#FmtFailSilently	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtFailSilently() abort$/;"	f
go#config#FmtOptions	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#FmtOptions() abort$/;"	f
go#config#FoldEnable	plugged/vim-polyglot/autoload/go/config.vim	/^function go#config#FoldEnable(...) abort$/;"	f
go#config#GocodeAutobuild	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GocodeAutobuild() abort$/;"	f
go#config#GocodeProposeBuiltins	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GocodeProposeBuiltins() abort$/;"	f
go#config#GocodeSocketType	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GocodeSocketType() abort$/;"	f
go#config#GocodeUnimportedPackages	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GocodeUnimportedPackages() abort$/;"	f
go#config#GolintBin	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GolintBin() abort$/;"	f
go#config#GorenameBin	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GorenameBin() abort$/;"	f
go#config#GorenamePrefill	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GorenamePrefill() abort$/;"	f
go#config#GuruScope	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#GuruScope() abort$/;"	f
go#config#HighlightArrayWhitespaceError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightArrayWhitespaceError() abort$/;"	f
go#config#HighlightBuildConstraints	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightBuildConstraints() abort$/;"	f
go#config#HighlightChanWhitespaceError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightChanWhitespaceError() abort$/;"	f
go#config#HighlightExtraTypes	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightExtraTypes() abort$/;"	f
go#config#HighlightFields	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFields() abort$/;"	f
go#config#HighlightFormatStrings	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFormatStrings() abort$/;"	f
go#config#HighlightFunctionArguments	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctionArguments() abort$/;"	f
go#config#HighlightFunctionCalls	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctionCalls() abort$/;"	f
go#config#HighlightFunctions	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightFunctions() abort$/;"	f
go#config#HighlightGenerateTags	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightGenerateTags() abort$/;"	f
go#config#HighlightOperators	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightOperators() abort$/;"	f
go#config#HighlightSpaceTabError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightSpaceTabError() abort$/;"	f
go#config#HighlightStringSpellcheck	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightStringSpellcheck() abort$/;"	f
go#config#HighlightTrailingWhitespaceError	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightTrailingWhitespaceError() abort$/;"	f
go#config#HighlightTypes	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightTypes() abort$/;"	f
go#config#HighlightVariableAssignments	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightVariableAssignments() abort$/;"	f
go#config#HighlightVariableDeclarations	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#HighlightVariableDeclarations() abort$/;"	f
go#config#InfoMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#InfoMode() abort$/;"	f
go#config#ListAutoclose	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListAutoclose() abort$/;"	f
go#config#ListHeight	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListHeight() abort$/;"	f
go#config#ListType	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListType() abort$/;"	f
go#config#ListTypeCommands	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#ListTypeCommands() abort$/;"	f
go#config#MetalinterAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterAutosave() abort$/;"	f
go#config#MetalinterAutosaveEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterAutosaveEnabled() abort$/;"	f
go#config#MetalinterCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterCommand() abort$/;"	f
go#config#MetalinterDeadline	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterDeadline() abort$/;"	f
go#config#MetalinterDisabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterDisabled() abort$/;"	f
go#config#MetalinterEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#MetalinterEnabled() abort$/;"	f
go#config#PlayBrowserCommand	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#PlayBrowserCommand() abort$/;"	f
go#config#PlayOpenBrowser	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#PlayOpenBrowser() abort$/;"	f
go#config#SetAsmfmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAsmfmtAutosave(value) abort$/;"	f
go#config#SetAutoSameids	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAutoSameids(value) abort$/;"	f
go#config#SetAutoTypeInfo	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetAutoTypeInfo(value) abort$/;"	f
go#config#SetBuildTags	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetBuildTags(value) abort$/;"	f
go#config#SetDebugDiag	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetDebugDiag(value) abort$/;"	f
go#config#SetFmtAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetFmtAutosave(value) abort$/;"	f
go#config#SetGuruScope	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetGuruScope(scope) abort$/;"	f
go#config#SetMetalinterAutosave	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetMetalinterAutosave(value) abort$/;"	f
go#config#SetTemplateAutocreate	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetTemplateAutocreate(value) abort$/;"	f
go#config#SetTermEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SetTermEnabled(value) abort$/;"	f
go#config#SnippetEngine	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#SnippetEngine() abort$/;"	f
go#config#StatuslineDuration	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#StatuslineDuration() abort$/;"	f
go#config#TemplateAutocreate	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateAutocreate() abort$/;"	f
go#config#TemplateFile	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateFile() abort$/;"	f
go#config#TemplateTestFile	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateTestFile() abort$/;"	f
go#config#TemplateUsePkg	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TemplateUsePkg() abort$/;"	f
go#config#TermEnabled	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermEnabled() abort$/;"	f
go#config#TermHeight	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermHeight() abort$/;"	f
go#config#TermMode	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermMode() abort$/;"	f
go#config#TermWidth	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TermWidth() abort$/;"	f
go#config#TestShowName	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TestShowName() abort$/;"	f
go#config#TestTimeout	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TestTimeout() abort$/;"	f
go#config#TextobjIncludeFunctionDoc	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TextobjIncludeFunctionDoc() abort$/;"	f
go#config#TextobjIncludeVariable	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#TextobjIncludeVariable() abort$/;"	f
go#config#VersionWarning	plugged/vim-polyglot/autoload/go/config.vim	/^function! go#config#VersionWarning() abort$/;"	f
go_to	plugged/vim-ruby-refactoring/features/support/shared_methods.rb	/^def go_to line$/;"	f
gofiletype_post	plugged/vim-polyglot/ftdetect/polyglot.vim	/^function! s:gofiletype_post()$/;"	f
gofiletype_pre	plugged/vim-polyglot/ftdetect/polyglot.vim	/^function! s:gofiletype_pre(type)$/;"	f
goto_markedwin	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_markedwin(...) abort$/;"	f
goto_tagbar	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_tagbar(...) abort$/;"	f
goto_win	plugged/tagbar/autoload/tagbar.vim	/^function! s:goto_win(winnr, ...) abort$/;"	f
goyo#execute	plugged/goyo.vim/autoload/goyo.vim	/^function! goyo#execute(bang, dim)$/;"	f
goyo_off	plugged/goyo.vim/autoload/goyo.vim	/^function! s:goyo_off()$/;"	f
goyo_on	plugged/goyo.vim/autoload/goyo.vim	/^function! s:goyo_on(dim)$/;"	f
gpos_to_spos	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:gpos_to_spos(gpos)$/;"	f
graphic_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let graphic_role = [$/;"	v
grep_version	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:grep_version()$/;"	f
grey_color	plugged/one/colors/one.vim	/^  fun <SID>grey_color(n)$/;"	f
grey_color	plugged/vim-one/colors/one.vim	/^  fun <SID>grey_color(n)$/;"	f
grey_level	plugged/one/colors/one.vim	/^  fun <SID>grey_level(n)$/;"	f
grey_level	plugged/vim-one/colors/one.vim	/^  fun <SID>grey_level(n)$/;"	f
grey_number	plugged/one/colors/one.vim	/^  fun <SID>grey_number(x)$/;"	f
grey_number	plugged/vim-one/colors/one.vim	/^  fun <SID>grey_number(x)$/;"	f
groovy_minlines	plugged/vim-polyglot/syntax/groovy.vim	/^  let groovy_minlines = 10$/;"	v
group	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let group = airline#themes#get_highlight('vimCommand')$/;"	v
group	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^      let group = airline#extensions#tabline#group_of_bufnr(buffers, nr) . "_right"$/;"	v
group	plugged/vim-rails/after/syntax/ruby/rails.vim	/^let group = rails#buffer().type_name('helper', 'view') ? 'rubyHelper' : 'rubyMacro'$/;"	v
group_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
group_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
group_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:group_list()$/;"	f
groups	plugged/vim-test/spec/fixtures/commontest/test_SUITE.erl	/^groups() ->$/;"	f	module:test_SUITE
gruvbox#hls_hide	plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_hide()$/;"	f
gruvbox#hls_show	plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_show()$/;"	f
gruvbox#hls_toggle	plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#hls_toggle()$/;"	f
gruvbox#invert_signs_toggle	plugged/gruvbox/autoload/gruvbox.vim	/^function! gruvbox#invert_signs_toggle()$/;"	f
gsa	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gsa <Plug>(crystal-spec-run-all)$/;"	m
gsc	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gsc <Plug>(crystal-spec-run-current)$/;"	m
gss	plugged/vim-polyglot/ftplugin/crystal.vim	/^  nmap <buffer>gss <Plug>(crystal-spec-switch)$/;"	m
gsub	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
gsub	plugged/vim-rails/autoload/rails.vim	/^function! s:gsub(str,pat,rep)$/;"	f
guard.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:guard.restore() abort$/;"	f
guess	plugged/far.vim/test/guess.py	/^    guess = int(raw_input('Take a guess: '))$/;"	v
guess_edit	plugged/ultisnips/pythonx/UltiSnips/_diff.py	/^def guess_edit(initial_line, last_text, current_text, vim_state):$/;"	f
guess_edit	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips._diff import diff, guess_edit$/;"	i
guess_edit	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^from _diff import diff, guess_edit$/;"	i
guesses_made	plugged/far.vim/test/guess.py	/^guesses_made = 0$/;"	v
gui2cui	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:gui2cui(rgb, fallback)$/;"	f
gv	plugged/vim-peekaboo/autoload/peekaboo.vim	/^function! s:gv(visualmode, visible)$/;"	f
h	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal! h$/;"	m
h	plugged/vim-polyglot/syntax/julia.vim	/^  let h = b:julia_syntax_version <= 6 ? "Type" : "juliaDeprecated"$/;"	v
h	plugged/vim-polyglot/syntax/julia.vim	/^  let h = b:julia_syntax_version == 5 ? "Type" : b:julia_syntax_version == 6 ? "juliaDeprecated" : "NONE"$/;"	v
h	plugged/vim-polyglot/syntax/julia.vim	/^  let h = b:julia_syntax_version >= 6 ? "Type" : "NONE"$/;"	v
h	plugged/vim-polyglot/syntax/julia.vim	/^  let h = b:julia_syntax_version >= 7 ? "Constant" : "NONE"$/;"	v
h	plugged/vim-polyglot/syntax/julia.vim	/^  let h = b:julia_syntax_version >= 7 ? "Type" : "NONE"$/;"	v
h	plugged/vim-polyglot/syntax/julia.vim	/^let h = b:julia_syntax_version < 7 ? "Constant" : "juliaDeprecated"$/;"	v
h	plugged/vim-polyglot/syntax/julia.vim	/^let h = b:julia_syntax_version <= 6 ? "Constant" : "NONE"$/;"	v
h	plugged/vim-polyglot/syntax/julia.vim	/^let h = b:julia_syntax_version >= 7 ? "Constant" : "NONE"$/;"	v
handle	plugged/vim-notes/misc/notes/search-notes.py	/^        def handle(self, record):$/;"	m	class:NullHandler
handleEmpty	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:handleEmpty(input, visualmode) "{{{$/;"	f
handleLeftClick	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse()$/;"	f
handle_action	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_common.py	/^def handle_action(head, tail, line_index):$/;"	f
handle_action	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    handle_action, handle_context$/;"	i
handle_context	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_common.py	/^def handle_context(tail, line_index):$/;"	f
handle_context	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    handle_action, handle_context$/;"	i
handle_error	plugged/vim-misc/autoload/xolox/misc/open.vim	/^function! s:handle_error(cmd, output) " {{{1$/;"	f
handle_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_common.py	/^def handle_extends(tail, line_index):$/;"	f
handle_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.snippet.source.file._common import handle_extends$/;"	i
handle_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^    handle_action, handle_context$/;"	i
handle_finish	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def handle_finish(self):$/;"	m	class:AppleHelpBuilder
handle_special_key	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_special_key(key, mode)$/;"	f
handle_visual_IA_to_insert	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_visual_IA_to_insert()$/;"	f
handle_visual_IA_to_normal	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:handle_visual_IA_to_normal()$/;"	f
hardRefreshNerdTree	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:hardRefreshNerdTree()$/;"	f
has	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has_bookmark_at_cursor	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:has_bookmark_at_cursor()$/;"	f
has_common_items	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_common_items	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_custom_scm	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:has_custom_scm()$/;"	f
has_fresh_changes	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:has_fresh_changes(bufnr) abort$/;"	f
has_fugitive	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:has_fugitive()$/;"	f
has_index	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_lawrencium	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:has_lawrencium()$/;"	f
has_option	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def has_option(self, opt):$/;"	m	class:SnippetDefinition
has_patch	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:has_patch(major, minor, patch) abort$/;"	f
has_vcscommand	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:has_vcscommand()$/;"	f
has_version	plugged/ultisnips/test/vim_interface.py	/^    def has_version(self, major, minor, patchlevel):$/;"	m	class:VimInterface
has_vimproc	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:has_vimproc() "{{{$/;"	f
has_vimproc	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:has_vimproc() abort$/;"	f
has_webapi	plugged/vim-polyglot/autoload/rust.vim	/^function! s:has_webapi()$/;"	f
hash	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:hash(str) abort$/;"	f
hash_match	autoload/plug.vim	/^function! s:hash_match(a, b)$/;"	f
hashlib	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^import hashlib$/;"	i
haxe_minlines	plugged/vim-polyglot/syntax/haxe.vim	/^  let haxe_minlines = 5000$/;"	v
head_tail	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^from UltiSnips.text import LineIterator, head_tail$/;"	i
head_tail	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^from UltiSnips.text import LineIterator, head_tail$/;"	i
head_tail	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def head_tail(line):$/;"	f
health#deoplete#check	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! health#deoplete#check() abort$/;"	f
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Don\\'t create a table of contents file')$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Don\\'t create headings for the module\/package '$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Follow symbolic links. Powerful when combined '$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Generate a full project with sphinx-quickstart')$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Include "_private" modules')$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Maximum depth of submodules to show in the TOC '$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Overwrite existing files')$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Project author(s), used when --full is given')$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Project name (default: root module name)')$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Project release, used when --full is given, '$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Project version, used when --full is given')$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Put documentation for each module on its own page')$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Put module documentation before submodule '$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Run the script without creating files')$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='Show version information and exit')$/;"	v
help	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      help='file suffix (default: rst)', default='rst')$/;"	v
helptag_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:helptag_sink(line)$/;"	f
hi	plugged/vim-polyglot/syntax/go.vim	/^function! s:hi()$/;"	f
hide_linenr	plugged/goyo.vim/autoload/goyo.vim	/^function! s:hide_linenr()$/;"	f
hide_statusline	plugged/goyo.vim/autoload/goyo.vim	/^function! s:hide_statusline()$/;"	f
highlight_cursor	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:highlight_cursor(pos)$/;"	f
highlight_keys	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:highlight_keys(str)$/;"	f
highlight_name_for_change	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:highlight_name_for_change(text) abort$/;"	f
highlight_region	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:highlight_region(region)$/;"	f
highlight_task_markers	plugged/vim-notes/autoload/xolox/notes/mediawiki.vim	/^function! s:highlight_task_markers(text)$/;"	f
highlight_with_python	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! s:highlight_with_python(syntax_group, tagkind) " {{{2$/;"	f
highlightlang	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class highlightlang(nodes.Element):$/;"	c
history	plugged/fzf.vim/plugin/fzf.vim	/^function! s:history(arg, bang)$/;"	f
history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_sink(type, lines)$/;"	f
history_source	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:history_source(type)$/;"	f
hl	plugged/vim-airline/t/highlighter.vim	/^    let hl = airline#highlighter#get_highlight('Foo1_to_Foo2')$/;"	v
hl	plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight('Foo', 'bold', 'italic')$/;"	v
hl	plugged/vim-airline/t/themes.vim	/^    let hl = airline#themes#get_highlight2(['Foo','bg'], ['Foo','fg'], 'italic', 'bold')$/;"	v
hl_group_exists	plugged/vim-airline/autoload/airline/highlighter.vim	/^function! s:hl_group_exists(group)$/;"	f
hlist	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class hlist(nodes.Element):$/;"	c
hlistcol	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class hlistcol(nodes.Element):$/;"	c
hour	plugged/deoplete-jedi/tests/test.py	/^hour = time_now.tm_hour$/;"	v
htmlcomplete#CheckDoctype	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#CheckDoctype() " {{{$/;"	f
htmlcomplete#CompleteTags	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#CompleteTags(findstart, base)$/;"	f
htmlcomplete#DetectOmniFlavor	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#DetectOmniFlavor()$/;"	f
htmlcomplete#LoadAria	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadAria() " {{{$/;"	f
htmlcomplete#LoadData	plugged/vim-polyglot/autoload/htmlcomplete.vim	/^function! htmlcomplete#LoadData() " {{{$/;"	f
htmlentitydefs	plugged/ultisnips/utils/get_tm_snippets.py	/^import htmlentitydefs$/;"	i
hunk_op	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:hunk_op(op)$/;"	f
i	plugged/vim-gitgutter/test/runner.vim	/^      let i += 1$/;"	v
i	plugged/vim-gitgutter/test/runner.vim	/^    let i = 0$/;"	v
i$	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^onoremap <buffer> i$ :normal vi$<CR>$/;"	m
i$	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^vmap <buffer> i$ <Plug>LatexBox_SelectInlineMathInner$/;"	m
i18n	plugged/deoplete-jedi/tests/sphinx-3000.py	/^from sphinx.util import i18n, path_stabilize$/;"	i
i3_ftdetect	plugged/vim-polyglot/ftdetect/polyglot.vim	/^augroup i3_ftdetect$/;"	a
iM	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iM	plugged/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> iM :<C-U>call <SID>wrap_i('[[','][')<CR>$/;"	m
iabbrev_map	plugged/supertab/plugin/supertab.vim	/^    let iabbrev_map = iabbrevs =~? '\\<cr>'$/;"	v
iconv	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
iconv	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
identity	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def identity(x):$/;"	f
idx1	plugged/vim-bookmarks/t/bm_sign_spec.vim	/^    let idx1 = bm_sign#add(g:test_file, 2, 0)$/;"	v
idx2	plugged/vim-bookmarks/t/bm_sign_spec.vim	/^    let idx2 = bm_sign#add(g:test_file, 10, 0)$/;"	v
ie	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^onoremap <buffer> ie :normal vie<CR>$/;"	m
ie	plugged/vim-polyglot/ftplugin/latex-box/mappings.vim	/^vmap <buffer> ie <Plug>LatexBox_SelectCurrentEnvInner$/;"	m
ie	plugged/vim-polyglot/ftplugin/mustache.vim	/^  onoremap <silent> <buffer> ie :<C-U>call <SID>wrap_inside()<CR>$/;"	m
iex_buffer_exists	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! s:iex_buffer_exists()$/;"	f
iex_enter_user_command	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! s:iex_enter_user_command(command, mode)$/;"	f
iex_open_cmd	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! s:iex_open_cmd()$/;"	f
ignored_region	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:ignored_region()$/;"	f
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ['H']$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ['e', 'H']$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = ['e']$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
ignores	plugged/ultisnips/test/test_Selection.py	/^    ignores = []$/;"	v	class:_SelectModeMappings
im	plugged/vim-polyglot/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
im	plugged/vim-ruby/ftplugin/ruby.vim	/^    onoremap <silent> <buffer> im :<C-U>call <SID>wrap_i('[m',']M')<CR>$/;"	m
import	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
import	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^import vim  # pylint:disable=import-error$/;"	i
import	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^import vim  # pylint:disable=import-error$/;"	i
import	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:import(name, ...) abort dict$/;"	f
import	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:import(name, ...) abort dict$/;"	f
import_object	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def import_object(self):$/;"	m	class:Documenter
import_object	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def import_object(self, objname, source=None):$/;"	m	class:Sphinx
import_pattern	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^import_pattern = re.compile(import_re)$/;"	v
import_plugin	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def import_plugin(path, source, classname):$/;"	f
importlib	plugged/far.vim/rplugin/python3/far/__init__.py	/^    import importlib$/;"	i
inc_highlight	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:inc_highlight(re) "{{{$/;"	f
increment	plugged/vim-textobj-user/t/script-local.vim	/^function! s:increment()$/;"	f
indentGuard	plugged/vim-polyglot/indent/haskell.vim	/^function! s:indentGuard(pos, prevline)$/;"	f
indentLine	plugged/indentLine/after/plugin/indentLine.vim	/^augroup indentLine$/;"	a
indentMatching	plugged/vim-polyglot/indent/haskell.vim	/^function! s:indentMatching(char)$/;"	f
indent_guides	plugged/vim-indent-guides/plugin/indent_guides.vim	/^augroup indent_guides$/;"	a
indent_guides#basic_highlight_colors	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#basic_highlight_colors()$/;"	f
indent_guides#calculate_guide_size	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#calculate_guide_size()$/;"	f
indent_guides#capture_highlight	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#capture_highlight(group_name)$/;"	f
indent_guides#clear_matches	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#clear_matches()$/;"	f
indent_guides#define_default_highlights	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#define_default_highlights()$/;"	f
indent_guides#disable	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#disable()$/;"	f
indent_guides#enable	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#enable()$/;"	f
indent_guides#exclude_filetype	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#exclude_filetype()$/;"	f
indent_guides#gui_highlight_colors	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#gui_highlight_colors()$/;"	f
indent_guides#highlight_colors	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#highlight_colors()$/;"	f
indent_guides#indent_highlight_pattern	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#indent_highlight_pattern(indent_pattern, column_start, indent_size)$/;"	f
indent_guides#init_matches	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#init_matches()$/;"	f
indent_guides#init_script_vars	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#init_script_vars()$/;"	f
indent_guides#lighten_or_darken_color	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#lighten_or_darken_color(color)$/;"	f
indent_guides#process_autocmds	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#process_autocmds()$/;"	f
indent_guides#toggle	plugged/vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#toggle()$/;"	f
indent_level_of	plugged/vim-textobj-indent/autoload/textobj/indent.vim	/^function! s:indent_level_of(linenr)  "{{{2$/;"	f
indent_like_block	plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_block(lnum)$/;"	f
indent_like_block	plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_block(lnum)$/;"	f
indent_like_opening_paren	plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_opening_paren(lnum)$/;"	f
indent_like_opening_paren	plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_opening_paren(lnum)$/;"	f
indent_like_previous_line	plugged/vim-polyglot/indent/cython.vim	/^function! s:indent_like_previous_line(lnum)$/;"	f
indent_like_previous_line	plugged/vim-polyglot/indent/python.vim	/^function! s:indent_like_previous_line(lnum)$/;"	f
indent_to_spaces	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def indent_to_spaces(self, indent):$/;"	m	class:IndentUtil
index	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class index(nodes.Invisible, nodes.Inline, nodes.TextElement):$/;"	c
index	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:index(haystack, needle, ...)$/;"	f
index	plugged/vim-startify/autoload/startify.vim	/^    let index = s:get_index_as_string(b:startify.entry_number)$/;"	v
infer_properties	autoload/plug.vim	/^function! s:infer_properties(name, repo)$/;"	f
infile	plugged/vim-easytags/misc/easytags/why-so-slow.py	/^infile = open(os.path.expanduser(tagsfile))$/;"	v
info	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def info(self, *args, **kwargs):$/;"	m	class:AutodocReporter
info	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def info(self, message='', nonl=False):$/;"	m	class:Sphinx
info	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def info(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
init	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def init(self):$/;"	m	class:AppleHelpBuilder
init	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def init(self):$/;"	m	class:Builder
init	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def init(self, builder, theme=None, dirs=None):$/;"	m	class:TemplateBridge
init	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^init = False$/;"	v
init	plugged/tmux-complete.vim/plugin/tmuxcomplete.vim	/^function! s:init()$/;"	f
init	plugged/vim-airline/plugin/airline.vim	/^function! s:init()$/;"	f
init	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:init(file)$/;"	f
initFoldState	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:initFoldState(known_files) abort dict$/;"	f
initOpenURL	plugged/vim-rails/autoload/rails.vim	/^function! s:initOpenURL() abort$/;"	f
initVariable	plugged/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_buffer	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:init_buffer()$/;"	f
init_channel	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def init_channel(self, args):$/;"	m	class:DeopleteHandlers
init_env	plugged/vim-startify/autoload/startify.vim	/^function! s:init_env()$/;"	f
init_internal_variables	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^function! s:init_internal_variables() abort$/;"	f
init_logging	plugged/vim-notes/misc/notes/search-notes.py	/^    def init_logging(self):$/;"	m	class:NotesIndex
init_pad	plugged/goyo.vim/autoload/goyo.vim	/^function! s:init_pad(command)$/;"	f
init_per_group	plugged/vim-test/spec/fixtures/commontest/test_SUITE.erl	/^init_per_group(_GroupName, Config) ->$/;"	f	module:test_SUITE
init_per_suite	plugged/vim-test/spec/fixtures/commontest/test_SUITE.erl	/^init_per_suite(Config) ->$/;"	f	module:test_SUITE
init_per_testcase	plugged/vim-test/spec/fixtures/commontest/test_SUITE.erl	/^init_per_testcase(_TestCase, Config) ->$/;"	f	module:test_SUITE
init_settings	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^function! s:init_settings(settings)$/;"	f
init_var	plugged/tagbar/plugin/tagbar.vim	/^function! s:init_var(var, value) abort$/;"	f
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_BackspaceOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_DeleteOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_InsertOneChar1
initial_line	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    initial_line = 0$/;"	v	class:TestGuessing_Noop0
initialize	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def initialize(self):$/;"	m	class:Source
initialize	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initialize()$/;"	f
initializeCtrlP	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initializeCtrlP()$/;"	f
initializeDenite	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initializeDenite()$/;"	f
initializeFlagship	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initializeFlagship()$/;"	f
initializeUnite	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initializeUnite()$/;"	f
initializeVimfiler	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:initializeVimfiler()$/;"	f
inject_snippet	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:inject_snippet(line)$/;"	f
input	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:input(cmdline)$/;"	f
input_helper	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_safe	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
inputreplacement	plugged/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	plugged/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	plugged/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
inside	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! s:inside(range) "{{{$/;"	f
insidePlantUMLTags	plugged/vim-polyglot/indent/plantuml.vim	/^function! s:insidePlantUMLTags(lnum) abort$/;"	f
install	autoload/plug.vim	/^function! s:install(force, names)$/;"	f
install_plugin	plugged/emmet-vim/plugin/emmet.vim	/^function! s:install_plugin(mode, buffer)$/;"	f
instance.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:instance.restore() abort$/;"	f
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnippetDefinition
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:SnipMateSnippetDefinition
instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^    def instantiate(self, snippet_instance, initial_text, indent):$/;"	m	class:UltiSnipsSnippetDefinition
instaweb_url	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(opts) abort$/;"	f
interface_mapping_name	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:interface_mapping_name(plugin_name, obj_name, spec_name)  "{{{3$/;"	f
intern	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    intern = sys.intern$/;"	v	class:AppleHelpBuilder
internal_search	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:internal_search(bang, pattern, keywords, phase2) " {{{2$/;"	f
intersect	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
intersect	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
invertrange	plugged/vim-rails/autoload/rails.vim	/^function! s:invertrange(beg,end)$/;"	f
invoke_funcrefs	plugged/vim-airline/autoload/airline.vim	/^function! s:invoke_funcrefs(context, funcrefs)$/;"	f
io	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^import io$/;"	i
isAnsible	plugged/vim-polyglot/ftdetect/polyglot.vim	/^function! s:isAnsible()$/;"	f
isDarwin	plugged/vim-devicons/plugin/webdevicons.vim	/^function s:isDarwin()$/;"	f
isFoldable	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isFoldable() abort dict$/;"	f
isFoldable	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isFoldable() abort dict$/;"	f
isFolded	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isFolded() abort dict$/;"	f
isFolded	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isFolded() abort dict$/;"	f
isInBlock	plugged/vim-polyglot/indent/haskell.vim	/^function! s:isInBlock(hlstack)$/;"	f
isKindheader	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isKindheader() abort dict$/;"	f
isKindheader	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:isKindheader() abort dict$/;"	f
isNormalTag	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isNormalTag() abort dict$/;"	f
isNormalTag	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:isNormalTag() abort dict$/;"	f
isPseudoTag	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isPseudoTag() abort dict$/;"	f
isPseudoTag	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:isPseudoTag() abort dict$/;"	f
isSYN	plugged/vim-polyglot/indent/haskell.vim	/^function! s:isSYN(grp, line, col)$/;"	f
isSplitTag	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:isSplitTag() abort dict$/;"	f
isSplitTag	plugged/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! s:isSplitTag() abort dict$/;"	f
is_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_added(from_count, to_count) abort$/;"	f
is_available	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^function! s:is_available() abort$/;"	f
is_branch_empty	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^function! s:is_branch_empty()$/;"	f
is_buffer_changed_outside	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def is_buffer_changed_outside(self):$/;"	m	class:VimBufferProxy
is_cmdwin	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^  function! s:is_cmdwin() abort$/;"	f
is_complete_edit	plugged/ultisnips/pythonx/UltiSnips/_diff.py	/^def is_complete_edit(initial_line, original, wanted, cmds):$/;"	f
is_concealed	plugged/vim-polyglot/indent/cython.vim	/^function! s:is_concealed(line, col)$/;"	f
is_concealed	plugged/vim-polyglot/indent/python.vim	/^function! s:is_concealed(line, col)$/;"	f
is_cygwin	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_debug_enabled	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    is_debug_enabled = False$/;"	v	class:LoggingMixin
is_dedented_already	plugged/vim-polyglot/indent/cython.vim	/^function! s:is_dedented_already(current, base)$/;"	f
is_dedented_already	plugged/vim-polyglot/indent/python.vim	/^function! s:is_dedented_already(current, base)$/;"	f
is_dict	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_embedded_ruby	plugged/vim-rails/autoload/rails.vim	/^function! s:is_embedded_ruby() abort$/;"	f
is_excluded	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def is_excluded(root, excludes):$/;"	f
is_excluded_window	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:is_excluded_window()$/;"	f
is_exiting	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_exiting() abort$/;"	f
is_file_buffer	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:is_file_buffer(bufnr) abort$/;"	f
is_float	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_focused	plugged/ultisnips/test/vim_interface.py	/^    def is_focused(self, title=None):$/;"	m	class:VimInterfaceWindows
is_funcref	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_in_fold	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:is_in_fold(lnum) abort$/;"	f
is_in_skiplist	plugged/vim-startify/autoload/startify.vim	/^function! s:is_in_skiplist(arg) abort$/;"	f
is_input_waiting	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:is_input_waiting(keymapping, input)$/;"	f
is_keyword_compatible	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! s:is_keyword_compatible(tag)$/;"	f
is_killed	plugged/ultisnips/pythonx/UltiSnips/text_objects/_tabstop.py	/^    def is_killed(self):$/;"	m	class:TabStop
is_list	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_local_plug	autoload/plug.vim	/^  function! s:is_local_plug(repo)$/;"	f
is_mac	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_managed	autoload/plug.vim	/^function! s:is_managed(name)$/;"	f
is_method_special_case	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_method_special_case(position)$/;"	f
is_modified	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified(from_count, to_count) abort$/;"	f
is_modified_and_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_added(from_count, to_count) abort$/;"	f
is_modified_and_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_modified_and_removed(from_count, to_count) abort$/;"	f
is_non_ui_property_name	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:is_non_ui_property_name(name)$/;"	f
is_number	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_numeric	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_open	plugged/vim-peekaboo/autoload/peekaboo.vim	/^function! s:is_open()$/;"	f
is_package	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^def is_package(module, refresh=False):$/;"	f
is_paren	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_paren()$/;"	f
is_preview_window_open	autoload/plug.vim	/^function! s:is_preview_window_open()$/;"	f
is_process_running	plugged/ultisnips/test/vim_interface.py	/^def is_process_running(pid):$/;"	f
is_python_string	plugged/vim-polyglot/indent/cython.vim	/^function! s:is_python_string(lnum, ...)$/;"	f
is_python_string	plugged/vim-polyglot/indent/python.vim	/^function! s:is_python_string(lnum, ...)$/;"	f
is_quickfix_win	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:is_quickfix_win()$/;"	f
is_reader_conditional_special_case	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:is_reader_conditional_special_case(position)$/;"	f
is_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:is_removed(from_count, to_count) abort$/;"	f
is_set	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def is_set(self):$/;"	m	class:_SnippetUtilCursor
is_skip	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_skip(event) abort$/;"	f
is_skip_text	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:is_skip_text(event) abort$/;"	f
is_string	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_string_comment	plugged/vim-polyglot/indent/rust.vim	/^function! s:is_string_comment(lnum, col)$/;"	f
is_string_or_comment	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:is_string_or_comment(line, col)$/;"	f
is_target_of_rspec_let	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:is_target_of_rspec_let(name)$/;"	f
is_ui_property_name	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:is_ui_property_name(name)$/;"	f
is_unix	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_updated	autoload/plug.vim	/^function! s:is_updated(dir)$/;"	f
is_using_dotnet_xunit_cli	plugged/vim-test/autoload/test/csharp/xunit.vim	/^function! s:is_using_dotnet_xunit_cli(file) abort$/;"	f
is_visible	plugged/vim-peekaboo/autoload/peekaboo.vim	/^function! s:is_visible(pos)$/;"	f
is_window	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^is_window = platform.system() == "Windows"$/;"	v
is_windows	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:is_windows() abort$/;"	f
is_zoomed	plugged/vim-zoom/autoload/zoom.vim	/^function! s:is_zoomed()$/;"	f
iscontOne	plugged/vim-polyglot/indent/typescript.vim	/^function s:iscontOne(i,num,cont)$/;"	f
isdir	plugged/vim-devicons/rplugin/python3/denite/filter/devicons_denite_converter.py	/^from os.path import isdir$/;"	i
it	plugged/vim-test/spec/fixtures/lab/test/normal.js	/^var it = lab.it;$/;"	v
it_is_initializable	plugged/vim-test/spec/fixtures/phpspec/NormalSpec.php	/^    function it_is_initializable()$/;"	f
itemno	plugged/emmet-vim/autoload/emmet.vim	/^function! s:itemno(itemno, current) abort$/;"	f
iter_primes	plugged/far.vim/test/prime.py	/^def iter_primes():$/;"	f
itertools	plugged/far.vim/test/prime.py	/^import itertools$/;"	i
javascriptEdit	plugged/vim-rails/autoload/rails.vim	/^function! s:javascriptEdit(cmd,...) abort$/;"	f
javascriptList	plugged/vim-rails/autoload/rails.vim	/^function! s:javascriptList(A, L, P, ...) abort$/;"	f
jedi	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^        import jedi$/;"	i
jedi	plugged/deoplete-jedi/tests/test-jedi.py	/^import jedi$/;"	i
jedi_path	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^jedi_path = os.path.join(libpath, 'jedi')$/;"	v
jedi_walk	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/utils.py	/^def jedi_walk(completions, depth=0, max_depth=5):$/;"	f
jfh	plugged/vim-textobj-erb/t/basics.vim	/^    normal jfh$/;"	m
job_abort	autoload/plug.vim	/^function! s:job_abort()$/;"	f
job_cb	autoload/plug.vim	/^function! s:job_cb(fn, job, ch, data)$/;"	f
job_exit_cb	autoload/plug.vim	/^function! s:job_exit_cb(self, data) abort$/;"	f
job_out_cb	autoload/plug.vim	/^function! s:job_out_cb(self, data) abort$/;"	f
join	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^            '-c', r'import sys; print("\\n".join(sys.path))',$/;"	i
join_posix_lines	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:join_posix_lines(lines, ...) abort$/;"	f
json	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^import json$/;"	i
json	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^import json$/;"	i
json	plugged/far.vim/rplugin/python3/far/sources/shell.py	/^import json$/;"	i
julia#function_assign2block	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#function_assign2block()$/;"	f
julia#function_block2assign	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#function_block2assign()$/;"	f
julia#gotodefinition	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#gotodefinition()$/;"	f
julia#idundercursor	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#idundercursor()$/;"	f
julia#set_syntax_version	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#set_syntax_version(jvers)$/;"	f
julia#toggle_deprecated_syntax	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#toggle_deprecated_syntax()$/;"	f
julia#toggle_function_blockassign	plugged/vim-polyglot/autoload/julia.vim	/^function! julia#toggle_function_blockassign()$/;"	f
julia_blocks#init_mappings	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#init_mappings()$/;"	f
julia_blocks#move_N	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_N()$/;"	f
julia_blocks#move_P	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_P()$/;"	f
julia_blocks#move_n	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_n()$/;"	f
julia_blocks#move_p	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#move_p()$/;"	f
julia_blocks#moveblock_N	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_N()$/;"	f
julia_blocks#moveblock_P	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_P()$/;"	f
julia_blocks#moveblock_n	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_n()$/;"	f
julia_blocks#moveblock_p	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#moveblock_p()$/;"	f
julia_blocks#owrapper_move	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#owrapper_move(oper, function, toend, backwards)$/;"	f
julia_blocks#owrapper_select	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#owrapper_select(oper, function) ", toend, backwards)$/;"	f
julia_blocks#remove_mappings	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#remove_mappings()$/;"	f
julia_blocks#select_a	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#select_a(...)$/;"	f
julia_blocks#select_i	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#select_i()$/;"	f
julia_blocks#select_reset	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function julia_blocks#select_reset()$/;"	f
julia_blocks#vwrapper_move	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#vwrapper_move(function)$/;"	f
julia_blocks#vwrapper_select	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#vwrapper_select(function)$/;"	f
julia_blocks#whereami	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! julia_blocks#whereami()$/;"	f
julia_latex_symbols#get_dict	plugged/vim-polyglot/autoload/julia_latex_symbols.vim	/^function! julia_latex_symbols#get_dict()$/;"	f
jump	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:jump(t, w)$/;"	f
jump	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:jump(command,count)$/;"	f
jump	plugged/vim-rails/autoload/rails.vim	/^function! s:jump(def, ...) abort$/;"	f
jumpToChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(currentNode, direction)$/;"	f
jumpToFirstChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:jumpToNextHunk(node)$/;"	f
jumpToNextSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevHunk	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^function! s:jumpToPrevHunk(node)$/;"	f
jumpToPrevSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(currentNode, forward)$/;"	f
jump_backwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_backwards(self):$/;"	m	class:SnippetManager
jump_forwards	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def jump_forwards(self):$/;"	m	class:SnippetManager
jump_to_bookmark	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:jump_to_bookmark(type)$/;"	f
jump_to_impl	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:jump_to_impl(impl) abort$/;"	f
jump_to_pair	plugged/vim-textobj-function-javascript/autoload/textobj/function/javascript.vim	/^function! s:jump_to_pair()$/;"	f
jump_to_tab	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:jump_to_tab(offset)$/;"	f
jumpargs	plugged/vim-rails/autoload/rails.vim	/^function! s:jumpargs(file, jump) abort$/;"	f
justify_equal_spacing	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
key_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:key_sink(line)$/;"	f
keyfunc	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            def keyfunc(entry):$/;"	f	function:Documenter.document_members
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = ' ' + EA + 'Hello' + JF + 'World'$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = '123 abc' + EA + '123' + JF + '456'$/;"	v	class:Anon_Trigger_Multi
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = 'abc ' + EA$/;"	v	class:Anon_NoTrigger_AfterSpace
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = 'abc' + EA + '123' + JF + '456'$/;"	v	class:Anon_NoTrigger_Multi
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = 'abc' + EA + '\\nabc' + EX$/;"	v	class:Anon_Trigger_Twice
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = 'abc' + EA$/;"	v	class:Anon_NoTrigger_Simple
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = 'abc' + EA$/;"	v	class:Anon_Trigger_Simple
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = 'blah blah abc' + EA$/;"	v	class:Anon_Trigger_Opts
keys	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    keys = EA + 'Hello' + JF + 'World'$/;"	v	class:Anon_NoTrigger_BeginningOfLine
keys	plugged/ultisnips/test/test_Autocommands.py	/^            ':execute "normal aU" . g:unmapper_call_count . "\\<Esc>"' + "\\n"$/;"	v	class:Autocommands
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = 'a'$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = 'a\\na'$/;"	v	class:Autotrigger_CanMatchContext
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = 'abc'$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
keys	plugged/ultisnips/test/test_Autotrigger.py	/^    keys = 'abc'$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = "te'st" + EX$/;"	v	class:Snippet_With_SingleQuote
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = '\\ttest' + EX$/;"	v	class:DoNotTrimSpacesAtEndOfLinesByDefault
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = '\\ttest' + EX$/;"	v	class:TrimSpacesAtEndOfLines
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'oouu trig b' + 2 * ARR_L + EX$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te ül' + EX + 'hello'$/;"	v	class:Snippet_With_Umlauts_Mirrors
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te ül' + EX + 'hüüll'$/;"	v	class:Snippet_With_Umlauts_Python
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te ül' + EX + 'more text' + JF + JF + 'end'$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te ül' + EX + 'more text'$/;"	v	class:Snippet_With_Umlauts_TypeOn
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te ül' + EX + JF + 'more text' + JF + 'end'$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te ül' + EX + JF + JF + 'end'$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te"st' + EX$/;"	v	class:Snippet_With_DoubleQuote
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te' + LS + '2\\n'$/;"	v	class:Snippet_With_DoubleQuote_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te' + LS + '2\\n'$/;"	v	class:Snippet_With_SingleQuote_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'te' + LS + '2\\n'$/;"	v	class:Snippet_With_Umlauts_List
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_EndNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_EndStartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_ExtraNL_ECR
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_JustNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_NLInsideStuffBehind
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_NotEndStartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'j' + JF + 'k'$/;"	v	class:TrailingNewline_TabStop_StartNL
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + 'z' + JF + 'y'$/;"	v	class:MultiLineDefault_Type
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + BS + JF + 'Goodbye'$/;"	v	class:LeaveTrailingWhitespace
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + BS + JF + 'Goodbye'$/;"	v	class:RemoveTrailingWhitespace
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + BS + JF + 'y'$/;"	v	class:MultiLineDefault_BS
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'test' + EX + JF + 'y'$/;"	v	class:MultiLineDefault_Jump
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'teüst' + EX$/;"	v	class:Snippet_With_Umlauts
keys	plugged/ultisnips/test/test_Chars.py	/^    keys = 'ööuu trig b' + 2 * ARR_L + EX$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
keys	plugged/ultisnips/test/test_Completion.py	/^        COMPL_ACCEPT + ' some more'$/;"	v	class:Completion_SimpleExample_ECR
keys	plugged/ultisnips/test/test_Completion.py	/^        JB + 'foo'$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
keys	plugged/ultisnips/test/test_Completion.py	/^    keys = COMPLETION_OPTIONS + 'test' + EX + 'com' + COMPL_KW + JF + 'foo'$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^        "vhh" + EX + "test" + EX$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX + " " + "e" + EX$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = "e" + EX$/;"	v	class:ContextSnippets_CursorIsZeroBased
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_ExpandOnTrue
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_SimpleSnippet
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'a' + EX$/;"	v	class:ContextSnippets_UseContext
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'e' + EX$/;"	v	class:ContextSnippets_ReportError
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'e' + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
keys	plugged/ultisnips/test/test_ContextSnippets.py	/^    keys = 'i' + EX$/;"	v	class:ContextSnippets_PriorityKeyword
keys	plugged/ultisnips/test/test_Editing.py	/^        ESC + '3k0itest' + EX + ESC + 'u6j'$/;"	v	class:Undo_RemoveWholeSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'hello test' + EX + 'upsi' + ESC + 'hh' + 'iabcdef' + ESC + 'u'$/;"	v	class:Undo_RemoveEditInTabstop
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'i' + EX + 'asd' + JF + 'feh' + ESC + 'uuuu'$/;"	v	class:Undo_CompletelyUndoSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'i' + EX + 'asd' + JF + ESC + 'u'$/;"	v	class:Undo_ChangesInPlaceholder
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'i' + EX + 'i' + EX + ESC + 'u'$/;"	v	class:Undo_RemoveOneSnippetByTime
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'i' + EX + 'i' + EX + ESC + 'uu'$/;"	v	class:Undo_RemoveOneSnippetByTime2
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + 'A' + JF + BS + 'BBB'$/;"	v	class:Backspace_TabStop_NotZero
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + 'A' + JF + BS + 'BBB'$/;"	v	class:Backspace_TabStop_Zero
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + 'a' + JF + 'test' + EX + ESC + 'u' + JF$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + 'a' + JF + BS + JF + 'Int' + JF + 'body'$/;"	v
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + 'aaaaa' + JF + BS + JF + '3333'$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'Vkx' + 'i\\nworld\\n'$/;"	v	class:DeleteSnippetInsertion0
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'ddi' + JB$/;"	v	class:DeleteCurrentTabStop1_JumpBack
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'j2dd'$/;"	v	class:DeleteLastTwoLinesInSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'u'$/;"	v	class:DeleteSnippetInsertion1
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + ESC + 'u'$/;"	v	class:Undo_RemoveMultilineSnippet
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + JF + ESC + 'ddi' + JB + 'hello'$/;"	v	class:DeleteCurrentTabStop2_JumpBack
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX + JF + ESC + 'ddkji' + JB + 'hello' + JF + 'world'$/;"	v	class:DeleteCurrentTabStop3_JumpAround
keys	plugged/ultisnips/test/test_Editing.py	/^    keys = 'test' + EX+ 'a b c' + JF + 'shallnot'$/;"	v	class:JumpForward_DefSnippet
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'Wie hallo gehts' + ESC + 'bhi' + EX + 'Huiui!'$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'Wie hallo gehts' + ESC + 'bhi' + EX$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'Wie hallo gehts' + ESC + 'bhi' + EX$/;"	v	class:MultilineExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'hallo ' + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'hallo' + EX + '\\nAnd more'$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'hallo' + EX + '\\nHallo Welt!\\n\\n\\b\\b\\b\\b\\b'$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'hallo' + EX + '\\nhallo' + EX$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'hallo' + EX + 'and again'$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'hallo' + EX$/;"	v	class:SimpleExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'na du hallo' + EX + 'and again\\b\\b\\b\\b\\bblub'$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Expand.py	/^    keys = 'test' + EX + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
keys	plugged/ultisnips/test/test_Fixes.py	/^        '\\n'.join([':redir @a',$/;"	v	class:NonUnicodeDataInUnnamedRegister
keys	plugged/ultisnips/test/test_Fixes.py	/^        'xotest' + EX + ESC + ARR_U + 'v0xo' + ESC + 'p'$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = '  test' + EX + 'hello' + JF + 'world' + JF + 'blub'$/;"	v	class:Bug1251994
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = '\\t\\t\\tpd' + EX + '2'$/;"	v	class:VirtualEdit
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = 'test' + EX + 'foo'$/;"	v	class:ShiftWidthZero
keys	plugged/ultisnips/test/test_Fixes.py	/^    keys = 'yank' + ESC + 'by4lea test' + EX + 'HELLO' + JF + JF + ESC + 'p'$/;"	v	class:RetainsTheUnnamedRegister
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = 'fold' + EX + 'hi' + ESC + 'jdd'$/;"	v
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = 'fold' + EX + 'hi'$/;"	v
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = 'test' + EX + 'Ball'$/;"	v
keys	plugged/ultisnips/test/test_Folding.py	/^    keys = 'test' + EX + JF + 'sub junk {}'$/;"	v
keys	plugged/ultisnips/test/test_Format.py	/^        JF + 'end'$/;"	v	class:FOSimple_Break_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = '    test' + EX + 'Hui'$/;"	v	class:ProperIndenting_SimpleCase_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = '    test' + EX + '\\n' + 'blah'$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = '    test' + EX + 'blah'$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = 'inc' + EX + 'cstdl'$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = 'inc' + EX + 'foo'$/;"	v
keys	plugged/ultisnips/test/test_Format.py	/^    keys = 'm' + EX + 'm1' + EX + '\\nHallo'$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = 'm' + EX$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
keys	plugged/ultisnips/test/test_Format.py	/^    keys = 'test' + EX + 'This is a longer text that should wrap'$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = ('test' + EX + 'This is a longer snippet that should wrap properly '$/;"	v	class:FOTextAfter_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Format.py	/^    keys = ('test' + EX + 'This is a longersnippet that should wrap properly')$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = '    test' + EX$/;"	v	class:PythonCodeOld_IndentedMultiline
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = '    test' + EX$/;"	v	class:PythonCode_MultilineIndented
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = '    test' + EX$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = ' ' * 8 + 'test' + EX  # < 8 works.$/;"	v	class:PythonCode_IndentProblem
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:PythonVisual_SelectOneWord
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:PythonVisual_LineSelect_Simple
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'Hallo Welt'$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'Hallo Welt'$/;"	v	class:PythonCode_ReferencePlaceholderBefore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'aaa'$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'abc'$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'and more'$/;"	v	class:TabStop_Shell_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'and more'$/;"	v	class:TabStop_Shell_TextInNextLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'and more'$/;"	v	class:TabStop_Shell_WithUmlauts
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'blah' + ', bah'$/;"	v	class:PythonCode_CanOverwriteTabstop
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'ho'$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'ho'$/;"	v	class:PythonCode_ReferencePlaceholder
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + 'overwrite' + JF + 'and more'$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + ESC + "otest" + EX + JF + ESC$/;"	v
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + ESC + "otest" + EX + JF + JF + JF + JF$/;"	v
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + JF + 'and more'$/;"	v
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + JF + 'and more'$/;"	v	class:TabStop_Shell_InDefValue_Leave
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX + JF + 'okay'$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCodeOld_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_MultiAppend
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_SimpleAppend
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_SimpleExample
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_TransformedBeforeMultiLine
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:PythonCode_UseNewOverOld
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:Python_WeirdScoping_Error
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
keys	plugged/ultisnips/test/test_Interpolation.py	/^    keys = 'ups test' + EX$/;"	v	class:PythonCode_TrickyReferences
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = ' ' + LS + '3\\n'$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = '' + LS + '3\\n'$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = 'hallo qualle' + LS + 'Hi'$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = 'hallo test' + LS + '1\\n'$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = 'hallo test' + LS + '2\\n'$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
keys	plugged/ultisnips/test/test_ListSnippets.py	/^    keys = '} ' + LS + '3\\n'$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^        'ehihi' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^        'eiab' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
keys	plugged/ultisnips/test/test_Mirror.py	/^        'wahi' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^        'wihi' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
keys	plugged/ultisnips/test/test_Mirror.py	/^        JF + 'blah' + JF + 'end'$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'hallo test' + EX + 'elt'$/;"	v	class:Mirror_TestKillTabstop_Kill
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'a'$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo Du\\nHi'$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo Du\\nHi'$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo Du\\nHi\\b\\bAch Blah'$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo du'$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo du\\nwie gehts'$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo foo'$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo test'$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo welt'$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo welt'$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo\\b\\b'$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo\\b\\bhups'$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'hallo\\nagain'$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin' + JF + 'do snap'$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin' + JF + 'overwritten'$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin' + JF + 'overwritten'$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin' + JF + JF + 'end'$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin'$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'stdin'$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'world'$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + 'world'$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX + BS + 'hallo foo'$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'test' + EX$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Mirror.py	/^    keys = 'ups test blah' + ESC + '02f i' + EX + 'hallo'$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Movement.py	/^        'hallo'$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^        'testhallo\\n'$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^        EX + 'tab' + ARR_R + JF + 'hallo'$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^        JF + 'hallo'$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^        JF + 'hallo'$/;"	v	class:IMMoving_NoExiting_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^        JF + 'hallo'$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = '<trh' + EX + 'blah' + JF + BS + BS + JF + 'end'$/;"	v	class:CursorMovement_BS_InEditMode
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = 'hello test this' + ESC + '02f i' + EX + 'tab' + JF + 'hallo'$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = 'test' + EX + 'text' + 3 * ARR_U + 6 * ARR_D$/;"	v	class:IMMoving_CursorsKeys_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = 'test' + EX + 'this is something\\nvery nice\\nnot' + JF + 'more text'$/;"	v	class:CursorMovement_Multiline_ECR
keys	plugged/ultisnips/test/test_Movement.py	/^    keys = 'test' + EX + 'this' + 2 * ARR_L + 'hallo\\nwelt'$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = 'test' + EX + ' ' + ESC + ESC + 'ahi'$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = 'test' + EX + '0\\n' + 'hi'$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = 'test' + EX + '1\\n'$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = 'test' + EX + '2\\n'$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = 'test' + EX + '5\\n'$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
keys	plugged/ultisnips/test/test_MultipleMatches.py	/^    keys = 'test' + EX + ESC + 'hi'$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = '"test snip"' + EX$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'ab' + EX + '\\nac' + EX$/;"	v	class:ParseSnippets_Global_Python
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'ab' + EX$/;"	v	class:ParseSnippets_Global_Local_Python
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'abc def' + EX$/;"	v	class:ParseSnippets_MultiWord_RE1
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'foo' + EX + ' bar' + EX + '\\nbar' + EX$/;"	v	class:ParseSnippets_MultiWord_RE2
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'inv snip' + EX$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'snip test' + EX$/;"	v	class:ParseSnippets_MultiWord_Description
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'snippet test' + EX$/;"	v	class:ParseSnippets_MultiWord_Description_Option
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test snip' + EX$/;"	v	class:ParseSnippets_MultiWord_NoContainer
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test snip' + EX$/;"	v	class:ParseSnippets_MultiWord_Quotes
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test snip' + EX$/;"	v	class:ParseSnippets_MultiWord_Simple
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test test test' + EX$/;"	v	class:ParseSnippets_MultiWord_RE3
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintPythonStacktrace
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'test' + EX$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearAll
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_SimpleSnippet
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'testsnip' + EX$/;"	v	class:ParseSnippets_UnknownDirective
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'toclear' + EX + '\\n' + 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearOne
keys	plugged/ultisnips/test/test_ParseSnippets.py	/^    keys = 'toclear' + EX + '\\n' + 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearTwo
keys	plugged/ultisnips/test/test_Plugin.py	/^    keys = ('longtextlongtext\\n' +$/;"	v	class:Plugin_SuperTab_SimpleTest
keys	plugged/ultisnips/test/test_Recursive.py	/^        'hello frac' + EX + JF + JF + 'world'$/;"	v	class:RecTabsStops_TypeInZero_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^        'm1' + EX + 'CD' + JF + 'DE' + JF + 'AB'$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^        EX + 'CD' + JF + 'DE'$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^        JF + 'end'$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^        JF + 'end'$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^        JF + 'end'$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^        JF + 'endone' + JF + 'two' + JF + 'totalend'$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^        JF + 'three' + JF + 'four' + JF + 'end'$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^        JF + 'three' + JF + 'four' + JF + 'end'$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^        JF + 'ups' + JF + 'three' + JF + 'end'$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^        JF + 'ups' + JF + 'world' + JF + 'end'$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^        JF + 'ups' + JF + 'world' + JF + 'end'$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^        JF + 'world' + JF + 'ups' + JF + 'end'$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^        JF + 'world'$/;"	v	class:RecTabStops_LeavingInner_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'form_for user, namespace: some_namespace, html: {i' + EX + 'i' + EX$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + '    hallo m' + EX + 'hi'$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + '    m' + EX + 'hi'$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'hello m' + EX + 'world m' + EX + 'end'$/;"	v	class:RecTabsStops_TypeInZero2_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'hi' + JF + 'm1' + EX + 'CD' + JF + 'DE'$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'hello' + JF + 'world' + JF + JF + JF + 'end'$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'hello' + JF + JF + JF + 'world' + JF + 'end'$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'hi' + JF + 'hallo' + JF + 'end'$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX + 'hi'$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm' + EX$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + ' m1' + EX + 'hi' + JF + 'two' + JF + 'end'$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + 'CD' + JF + 'DE'$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + 'CD' + JF + 'DE'$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + 'hi' + JF + 'two' + JF + 'end'$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + 'm1' + EX + JF + 'm1' + EX + 'hi' + JF + 'end'$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
keys	plugged/ultisnips/test/test_Recursive.py	/^    keys = 'm' + EX + JF + JF + BS + 'm' + EX$/;"	v	class:RecTabsStops_BackspaceZero_ECR
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = 'for' + EX + 'k' + JF$/;"	v
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = 'test' + EX + 'Hello'$/;"	v	class:_SelectModeMappings
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = 'test' + EX + 'ui' + JF$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
keys	plugged/ultisnips/test/test_Selection.py	/^    keys = 'test' + EX + 'ui' + JF$/;"	v	class:OldSelection_SimpleTabstop_Test
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'v' + EX$/;"	v	class:snipMate_Visual_Simple
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'def' + EX$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'for' + EX + 'blub' + JF + 'j' + JF + 'hi'$/;"	v	class:snipMate_TestMirrors
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'hello' + EX + '2\\n'$/;"	v	class:snipMate_MultiMatches
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'hello' + EX + '\\nhello1' + EX + '\\nhello2' + EX$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'hello' + EX$/;"	v	class:snipMate_Disabled
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'hello' + EX$/;"	v	class:snipMate_SimpleSnippet
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'hello' + EX$/;"	v	class:snipMate_SimpleSnippetSubDirectory
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'opt' + EX + 'some' + JF + 'not' + JF + 'ende'$/;"	v	class:snipMate_TestMirrorsInPlaceholders_Overwrite
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'opt' + EX + 'some' + JF + JF + 'ende'$/;"	v	class:snipMate_TestMirrorsInPlaceholders
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'test' + EX + 'blub' + JF + 'blah'$/;"	v	class:snipMate_TestNoBraceTabstops
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'test' + EX + 'blub' + JF + 'blah'$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'test' + EX + JF + 'hi'$/;"	v	class:snipMate_NoNestedTabstops
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'test' + EX$/;"	v	class:snipMate_EmptyLinesContinueSnippets
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'test' + EX$/;"	v	class:snipMate_Interpolation
keys	plugged/ultisnips/test/test_SnipMate.py	/^    keys = 'test' + EX$/;"	v	class:snipMate_InterpolationWithSystem
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "a" + EX + "1" + JF + "b" + EX + " c" + EX + "2" + JF + "3" + JF + "4" + JF + JF$/;"	v	class:SnippetActions_UseCorrectJumpActions
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX + "x" + JF + JF + "1" + JF + "2" + JF + ";"$/;"	v	class:SnippetActions_CanExpandAnonSnippetInJumpActionWhileSelected
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "i" + EX$/;"	v	class:SnippetActions_CanUseContextFromContextMatch
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + " or 4" + JF + "5"$/;"	v	class:SnippetActions_CanExpandAnonSnippetOnFirstJump
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3" + JF + "4"$/;"	v	class:SnippetActions_CanEvenWrapSnippetInPreAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2" + JF + "3"$/;"	v	class:SnippetActions_CanExpandAnonOnPreExpand
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = "test" + EX + "1" + JF + "2"$/;"	v	class:SnippetActions_CanVisuallySelectFirstPlaceholderInAnonSnippetInPre
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = '[]' + ARR_L + 'a' + EX + '1' + JF + '2'$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = '\\n3' + ARR_U + 'a' + EX + '1' + JF + '2'$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = '\\ni' + EX + 'i' + EX + 'x' + JF + 'y' + JF + JF + 'z'$/;"	v	class:SnippetActions_CanModifyParentBody
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = '\\ni' + EX + 'i' + EX + 'x'$/;"	v	class:SnippetActions_EnsureIndent
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = '\\ni' + EX + 'x' + JF + 'y'$/;"	v	class:SnippetActions_PostActionCanUseSnippetRange
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = 'a' + EX + '123'$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = 'a' + EX$/;"	v	class:SnippetActions_ErrorOnBufferModificationThroughCommand
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = 'a' + EX$/;"	v	class:SnippetActions_PostActionModifiesBuffer
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = 'a' + EX$/;"	v	class:SnippetActions_PreActionModifiesBuffer
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = 'i' + EX + 'blah' + JF + 'n' + EX + JF + 'pass'$/;"	v	class:SnippetActions_CanExpandSnippetInDifferentPlace
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = 'i' + EX + 'p' + EX + JF + 'z'$/;"	v	class:SnippetActions_MoveParentSnippetFromChildInPreAction
keys	plugged/ultisnips/test/test_SnippetActions.py	/^    keys = 'i' + EX$/;"	v	class:SnippetActions_ErrorOnModificationSnippetLine
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '   test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '   test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '  test it' + EX + '1\\n'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '  test' + EX + '1\\n'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '  test' + EX$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '  test' + EX$/;"	v	class:No_Tab_Expand_Leading_Spaces
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = ' .' + EX$/;"	v	class:SnippetOptions_Regex_Self_Space
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = ' .a' + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '$test' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '-test' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '.' + EX$/;"	v	class:SnippetOptions_Regex_Self_Start
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '[[test' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '\\t\\thi' + EX$/;"	v	class:No_Tab_Expand_RealWorld
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = '\\ttest' + EX$/;"	v	class:No_Tab_Expand_Leading_Tabs
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a(test' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a-test it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a-test' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'a.' + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'abc test test' + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'abc test test' + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'atest it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'atest it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'atest' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'atest' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test ' + EX$/;"	v	class:SnippetOptions_Regex_WithSpace
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test cabfed' + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test cabfed' + EX$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test me' + EX$/;"	v	class:MultiWordSnippet_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test test abc' + EX$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test test test' + EX$/;"	v	class:SnippetOptions_Regex_Multiple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_ET
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_ET_SW
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_ET_SW_TS
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_No_TS
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:No_Tab_Expand_Simple
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'test' + EX$/;"	v	class:SnippetOptions_Regex_Expand
keys	plugged/ultisnips/test/test_SnippetOptions.py	/^    keys = 'ßßtest' + EX$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test me' + EX$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX + '1\\n\\n' + 'test' + EX + '2\\n'$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_OverwriteExisting
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_SimpleClear
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test' + EX$/;"	v	class:SnippetPriorities_SimpleClear2
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = 'test1' + EX$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
keys	plugged/ultisnips/test/test_SnippetPriorities.py	/^    keys = (ESC + ':set ft=p\\n' + 'itest' + EX + '\\n' +$/;"	v	class:SnippetPriorities_ClearedByChild
keys	plugged/ultisnips/test/test_TabStop.py	/^        ' allaway' + JF + 'Third' + JF + 'Last'$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBackTwice
keys	plugged/ultisnips/test/test_TabStop.py	/^        'Lets replace it again' + JF + 'Blah' + JF + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^        'Lets replace it again' + JF + 'Blah' + JF + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^        'Nupl' + JF + 'Nox'$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirstJumpBack
keys	plugged/ultisnips/test/test_TabStop.py	/^        + JF + 'Hi'$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecondTabBack
keys	plugged/ultisnips/test/test_TabStop.py	/^        JF + 'test' + JF + 'one more' + JF$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'echo' + EX + 'test'$/;"	v	class:TabStop_Exit_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'echo' + EX$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'Nase'$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'Nase'$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'Test' + JF + 'Hi' + JF + JF + 'du'$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'haselnut' + 2 * ARR_L + 'hips' + JF + 'end'$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'na' + JF + 'Du Nase'$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'na' + JF + 'Du Nase'$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + 'ship'$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + JF + 'Test' + JF + 'Hi'$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'hallo' + EX + JF + 'Test' + JF + 'Hi'$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'i' + EX + EX + '1' + JF + '2' + JF + ' after' + JF + '3'$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'i' + EX + EX + '1' + JF + '2' + JF + ' after' + JF + '3'$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + ' blah' + JF + 'Hallo'$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteFirst_NoJumpBack
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Hello' + JF + 'World' + JF$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Hello' + JF + 'World'$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Nothing'$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'Nothing'$/;"	v	class:TabStop_Multiline_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'WORLD' + JF + 'End'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + '[ -u -v -d ]'$/;"	v	class:TabStop_EscapingChars_RealLife
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'blub' + JF + 'hello'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'hello' + JF + 'world'$/;"	v	class:TabStop_EscapingChars_Backslash4
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'hi'$/;"	v	class:TabStop_EscapingCharsDollars
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + 'ups' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteFirst
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + BS + JF + 'Hallo'$/;"	v	class:TabStop_TSInDefaultTextRLExample_DeleteFirst
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + BS + JF + 'Nothing'$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + ESC + '0ihi'$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + ESC + '0ihi'$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + ESC + '0ihi'$/;"	v	class:TabStopEscapingWhenSelected_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'Blah'$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'Hallo' + JF + 'Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'WORLD' + JF + 'End'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + '\\n' + JF + 't'$/;"	v	class:TabStop_CROnlyOnSelectedNear
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'hello'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'longertext' + JB + 'overwrite' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackOverwrite
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'longertext' + JB + JF + 'overwrite' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward0
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'longertext' + JB + JF + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecondJumpBackAndForward1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'no' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + 'ups' + JF + 'End'$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthNested_OverwriteSecond
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + JF + 'Hallo' + JB + JB + 'Blah' + JF + 'Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX + JF + JF + 'Hallo' + JF + 'Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingCharsBackticks
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingCharsDollars1
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingChars_Backslash
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingChars_Backslash2
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_EscapingChars_Backslash3
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_Multiline_Leave
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_TSInDefaultTextRLExample_OverwriteNone_ECR
keys	plugged/ultisnips/test/test_TabStop.py	/^    keys = 'test' + EX$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
keys	plugged/ultisnips/test/test_Transformation.py	/^           'test' + EX + 'hallo->'$/;"	v	class:Transformation_ConditionalInConditional_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^        'ehihi' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
keys	plugged/ultisnips/test/test_Transformation.py	/^        'eiab' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
keys	plugged/ultisnips/test/test_Transformation.py	/^        'wahi' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
keys	plugged/ultisnips/test/test_Transformation.py	/^        'wihi' + ESC + 'bb' + 'ino' + JF + 'end'$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'ascii' + EX + 'éèàçôïÉÈÀÇÔÏ€'$/;"	v	class:Transformation_LowerCaseAsciiResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'ascii' + EX + 'éèàçôïÉÈÀÇÔÏ€'$/;"	v	class:Transformation_SimpleCaseAsciiResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'hallo test' + EX + 'b'$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'hallo test' + EX + 'some\\b\\b\\b\\b\\b'$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'hallo test' + EX + 'some\\b\\b\\b\\bmore'$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'hallo test' + EX$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'HALLO'$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'Hallo'$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'SomE tExt '$/;"	v	class:Transformation_MultipleTransformations_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'TEST'$/;"	v	class:Transformation_OptionIgnoreCase_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'a b  c d e f ghhh h oha'$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'a some more text'$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'a some'$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'a, nice,   building'$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'a, nice, building'$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'aa'$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'aa'$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'ab'$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'b some'$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'dead parrot'$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'foo boo aoo'$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo foo boy'$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo foo'$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo foo'$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hallo'$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'hi' + JF + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'sometext' + JF + 'overwrite'$/;"	v	class:Transformation_InsideTabOvertype_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'sometext' + JF$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'test, hallo'$/;"	v	class:Transformation_CINewlines_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'test, hallo'$/;"	v	class:Transformation_CITabstop_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + 'test, halul'$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + BS + 'hallo'$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + BS + JF + 'hi'$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test' + EX + BS$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
keys	plugged/ultisnips/test/test_Transformation.py	/^    keys = 'test\\ntest\\ntest' + ESC + 'V2k' + EX + 'test' + EX$/;"	v	class:Transformation_OptionMultiline_ECR
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^        JF + 'hi3' + JF + 'hi4' + ESC + ';Hello'$/;"	v
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = 'abc test' + EX$/;"	v	class:AddFunc_Opt
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = 'abc test' + EX$/;"	v	class:AddFunc_Simple
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = 'testme' + EX + 'hi1' + JF + 'hi2' + JF + 'hi3' + JF + 'hi4'$/;"	v
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:VerifyVimDict2
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ($/;"	v	class:VerifyVimDict3
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ('blumba' + EX + ESC +$/;"	v	class:AddNewSnippetSource
keys	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    keys = ('test=(type(UltiSnips#SnippetsInCurrentScope()) . len(UltiSnips#SnippetsInCurrentScope()) . ' +$/;"	v	class:VerifyVimDict1
keys	plugged/ultisnips/test/test_Visual.py	/^        ARR_U * 2 + 'V' + ARR_D + EX + '\\tif' + EX$/;"	v	class:Visual_LineSelect_DedentLine
keys	plugged/ultisnips/test/test_Visual.py	/^        EX + 'mmm' + JF + 'n' + JF + 'done' + ESC + 'o'$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
keys	plugged/ultisnips/test/test_Visual.py	/^        EX + 'test' + EX + 'jup' + JF + 'hi'$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^        EX + 'test' + EX + 'jup' + JF + 'hi'$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^        EX + 'test' + EX + 'super' + JF + 'done'$/;"	v	class:Visual_LineSelect_WithTabStop
keys	plugged/ultisnips/test/test_Visual.py	/^        EX + 'test' + EX + 'ups' + JF + 'hi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = '    hello\\n    nice\\n\\tworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:Visual_LineSelect_CheckIndentTwice
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = '\\tblablub' + ESC + '5hv3l' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'bla blub\\n  helloi' + ESC + '0k4lvjll' + EX + 'test' + EX$/;"	v	class:Visual_CrossOneLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0lv4l' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWord_Inword
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v$' + EX + 'test' + EX + ESC + 'o'$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX + '\\ntest' + EX$/;"	v	class:Visual_ExpandTwice
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX + 'hello'$/;"	v	class:Visual_InDefaultText_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX + JF + 'hello'$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:VisualTransformation_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:VisualWithDefault_ExpandWithVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWord
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'blablub' + ESC + '0v6l' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWord_TwiceVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX + JF + 'hi'$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:VisualTransformation_LineSelect_Simple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:Visual_LineSelect_CheckIndentSimple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'hello\\nnice\\nworld' + ESC + 'Vkk' + EX + 'test' + EX$/;"	v	class:Visual_LineSelect_Simple
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'test' + EX + 'abc'$/;"	v	class:Visual_NoVisualSelection_Ignore
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'test' + EX + 'hi'$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'test' + EX + 'hi'$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'test' + EX + 'hi'$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'xxxyyyyxxx' + ESC + '4|vlll' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWordExclusive
keys	plugged/ultisnips/test/test_Visual.py	/^    keys = 'xxxyyyyxxx' + ESC + '4|vlll' + EX + 'test' + EX$/;"	v	class:Visual_SelectOneWordInclusive
keys	plugged/ultisnips/test/vim_test_case.py	/^    keys = ''$/;"	v	class:VimTestCase
keyword	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:keyword(expr)$/;"	f
keyword_spacing	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def keyword_spacing(snip):$/;"	f
keywords	plugged/vim-rails/after/syntax/ruby/rails.vim	/^let keywords = split(join(filter(rails#buffer().projected('keywords'),$/;"	v
kill_all_latexmk_processes	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:kill_all_latexmk_processes()$/;"	f
kill_latexmk_process	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:kill_latexmk_process(pid)$/;"	f
kill_yarp	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:kill_yarp() abort$/;"	f
kind.action_table.delete.func	plugged/vim-bookmarks/autoload/unite/kinds/vim_bookmarks.vim	/^function! s:kind.action_table.delete.func(candidates) " {{{$/;"	f
kind.action_table.yank.func	plugged/vim-bookmarks/autoload/unite/kinds/vim_bookmarks.vim	/^function! s:kind.action_table.yank.func(candidates) " {{{$/;"	f
kind.action_table.yank_annotation.func	plugged/vim-bookmarks/autoload/unite/kinds/vim_bookmarks.vim	/^function! s:kind.action_table.yank_annotation.func(candidates) " {{{$/;"	f
kind.action_table.yank_content.func	plugged/vim-bookmarks/autoload/unite/kinds/vim_bookmarks.vim	/^function! s:kind.action_table.yank_content.func(candidates) " {{{$/;"	f
kind.action_table.yank_path.func	plugged/vim-bookmarks/autoload/unite/kinds/vim_bookmarks.vim	/^function! s:kind.action_table.yank_path.func(candidates) " {{{$/;"	f
known_files.get	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
known_files.has	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
known_files.put	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
known_files.rm	plugged/tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
l	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let l = line('.')$/;"	v
l	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        let l = line('.')$/;"	v
l	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let l = line('.')$/;"	v
lab	plugged/vim-test/spec/fixtures/lab/test/normal.js	/^var lab = Lab.script();$/;"	v
label_col	plugged/vim-polyglot/indent/typescript.vim	/^function s:label_col()$/;"	f
landmark_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let landmark_role = [$/;"	v
landmark_role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let landmark_role = ['application', 'banner', 'complementary', 'contentinfo', 'form', 'main', 'navigation', 'search']$/;"	v
lang_tag	plugged/vim-polyglot/autoload/xml/html5.vim	/^let lang_tag = [$/;"	v
language	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            language = 'en',$/;"	v
languages	plugged/deoplete-jedi/tests/sphinx-3000.py	/^        from sphinx.search import languages, SearchLanguage$/;"	i
last_buffer	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let last_buffer = len(b.buffers) - 1$/;"	v
last_char	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:last_char()$/;"	f
last_find	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_delimiter.py	/^def last_find(s, needles):$/;"	f
last_non_empty_line	autoload/plug.vim	/^function! s:last_non_empty_line(lines)$/;"	f
lastline	autoload/plug.vim	/^function! s:lastline(msg)$/;"	f
lastmethod	plugged/vim-rails/autoload/rails.vim	/^function! s:lastmethod(...)$/;"	f
lastmethodline	plugged/vim-rails/autoload/rails.vim	/^function! s:lastmethodline(start)$/;"	f
lastopeningline	plugged/vim-rails/autoload/rails.vim	/^function! s:lastopeningline(pattern,limit,start)$/;"	f
launch	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def launch(self, text_before, visual_content, parent, start, end):$/;"	m	class:SnippetDefinition
launch	plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterface
launch	plugged/ultisnips/test/vim_interface.py	/^    def launch(self, config=[]):$/;"	m	class:VimInterfaceTmuxNeovim
layoutEdit	plugged/vim-rails/autoload/rails.vim	/^function! s:layoutEdit(cmd,...) abort$/;"	f
layoutList	plugged/vim-rails/autoload/rails.vim	/^function! s:layoutList(A,L,P)$/;"	f
lazy_init	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:lazy_init()$/;"	f
leave_with_wait	plugged/ultisnips/test/vim_interface.py	/^    def leave_with_wait(self):$/;"	m	class:VimInterface
left	plugged/vim-textobj-function-javascript/autoload/textobj/function/javascript.vim	/^function! s:left()$/;"	f
length	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:length(str)$/;"	f
levenshtein_distance	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
lexers	plugged/deoplete-jedi/tests/sphinx-3000.py	/^        from sphinx.highlighting import lexers$/;"	i
lhs_key_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:lhs_key_list(...)$/;"	f
libpath	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^libpath = os.path.join($/;"	v
line_adjustment_for_current_hunk	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:line_adjustment_for_current_hunk() abort$/;"	f
line_handler	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:line_handler(lines)$/;"	f
line_index	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def line_index(self):$/;"	m	class:LineIterator
line_till_cursor	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def line_till_cursor(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
linechars	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
lines	autoload/plug.vim	/^function! s:lines(msg)$/;"	f
lines	plugged/vim-bookmarks/t/bm_sign_spec.vim	/^    let lines = bm_sign#lines_for_signs(g:test_file)$/;"	v
lines	plugged/vim-bookmarks/t/bm_sign_spec.vim	/^    let lines = split(signs, "\\n")$/;"	v
lines	plugged/vim-bookmarks/t/bm_spec.vim	/^    let lines = bm#all_lines('file1')$/;"	v
lines	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:lines(str) abort$/;"	f
lines.gather_candidates	plugged/tmux-complete.vim/autoload/unite/sources/tmuxcomplete.vim	/^function! s:lines.gather_candidates(args, context)$/;"	f
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['amphtml']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['apple-touch-icon', 'apple-touch-icon-precomposed', 'apple-touch-startup-image']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['canonical']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['chrome-webstore-item']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['hub']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['import']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['manifest']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['pgpkey']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['search']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['sitemap']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linkreltypes + ['webmention']$/;"	v
linkreltypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linkreltypes = linktypes$/;"	v
links_to	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:links_to(highlight)$/;"	f
linktypes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let linktypes = ['alternate', 'author', 'bookmark', 'dns-prefetch', 'external', 'help', 'icon', 'license', 'next', 'nofollow', 'noreferrer', 'noopener', 'pingback', 'preconnect', 'prefetch', 'preload', 'prerender', 'prev', 'search', 'stylesheet', 'tag']$/;"	v
list_keywords	plugged/vim-notes/misc/notes/search-notes.py	/^    def list_keywords(self, substring, limit=25):$/;"	m	class:NotesIndex
list_snippets	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def list_snippets(self):$/;"	m	class:SnippetManager
literal_emphasis	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class literal_emphasis(nodes.emphasis):$/;"	c
literal_strong	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class literal_strong(nodes.strong):$/;"	c
live_region_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let live_region_attributes = {$/;"	v
livescript_compiler	plugged/vim-polyglot/compiler/ls.vim	/^  let livescript_compiler = 'lsc'$/;"	v
livescript_compiler	plugged/vim-polyglot/ftplugin/ls.vim	/^  let livescript_compiler = 'lsc'$/;"	v
livescript_make_options	plugged/vim-polyglot/compiler/ls.vim	/^  let livescript_make_options = ''$/;"	v
load	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:load(...) abort dict$/;"	f
load	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:load(...) abort dict$/;"	f
load_external_module	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def load_external_module(file, module):$/;"	f
load_index	plugged/vim-notes/misc/notes/search-notes.py	/^    def load_index(self):$/;"	m	class:NotesIndex
load_plugin	autoload/plug.vim	/^function! s:load_plugin(spec)$/;"	f
load_smart_dict	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:load_smart_dict() "{{{$/;"	f
loaded_names	autoload/plug.vim	/^function! s:loaded_names()$/;"	f
loaded_nerd_tree	plugged/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_supertab	plugged/supertab/plugin/supertab.vim	/^let loaded_supertab = 1$/;"	v
localeEdit	plugged/vim-rails/autoload/rails.vim	/^function! s:localeEdit(cmd,...)$/;"	f
localeList	plugged/vim-rails/autoload/rails.vim	/^function! s:localeList(A,L,P)$/;"	f
localtime	plugged/deoplete-jedi/tests/test.py	/^from time import localtime$/;"	i
localvar	plugged/emmet-vim/autoload/emmet.vim	/^function! s:localvar(current, key) abort$/;"	f
location	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def location(self):$/;"	m	class:SnippetDefinition
locations	plugged/vim-bookmarks/t/bm_spec.vim	/^    let locations = bm#location_list()$/;"	v
lod	autoload/plug.vim	/^function! s:lod(names, types, ...)$/;"	f
lod_cmd	autoload/plug.vim	/^function! s:lod_cmd(cmd, bang, l1, l2, args, names)$/;"	f
lod_ft	autoload/plug.vim	/^function! s:lod_ft(pat, names)$/;"	f
lod_map	autoload/plug.vim	/^function! s:lod_map(map, names, with_prefix, prefix)$/;"	f
log	autoload/plug.vim	/^function! s:log(bullet, name, lines)$/;"	f
log	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^log = logging.getLogger('deoplete.jedi.cache')$/;"	v
log	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    log = log.getChild('jedi.client')$/;"	v
log	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^log = logging.getLogger('deoplete')$/;"	v
log	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^log = logging.getLogger('deoplete.jedi.worker')$/;"	v
log	plugged/emmet-vim/unittest.vim	/^function! s:log(msg)$/;"	f
log4	autoload/plug.vim	/^function! s:log4(name, msg)$/;"	f
log_contains_error	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:log_contains_error(file)$/;"	f
log_format	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^log_format = '%(asctime)s %(levelname)-8s [%(process)d] (%(name)s) %(message)s'$/;"	v
log_message_cooldown	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^log_message_cooldown = 0.5$/;"	v
logger	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^from deoplete import logger$/;"	i
logger	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^from deoplete import logger$/;"	i
logger	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^from deoplete import logger$/;"	i
logger	plugged/far.vim/rplugin/python3/far/__init__.py	/^    logger = logging.getLogger('far')$/;"	v
logger	plugged/far.vim/rplugin/python3/far/sources/shell.py	/^logger = logging.getLogger('far')$/;"	v
logging	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^import logging$/;"	i
logging	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^import logging$/;"	i
logging	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^import logging$/;"	i
logging	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^import logging$/;"	i
logging	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^import logging$/;"	i
logging	plugged/far.vim/rplugin/python3/far/__init__.py	/^    import logging$/;"	i
logging	plugged/far.vim/rplugin/python3/far/sources/shell.py	/^import logging$/;"	i
logging	plugged/vim-notes/misc/notes/search-notes.py	/^import logging$/;"	i
logging,	plugged/far.vim/autoload/far/rpc.vim	/^import logging, vim$/;"	m
logmethod	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def logmethod(func):$/;"	f
logn	plugged/emmet-vim/unittest.vim	/^function! s:logn(msg)$/;"	f
logpos	autoload/plug.vim	/^function! s:logpos(name)$/;"	f
looking_at	plugged/vim-polyglot/indent/typescript.vim	/^function s:looking_at()$/;"	f
lpad	autoload/plug.vim	/^function! s:lpad(str, len)$/;"	f
main	plugged/alchemist.vim/elixir_sense_client	/^def main(argv):$/;"	f
main	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def main(argv=sys.argv):$/;"	f
main	plugged/deoplete-jedi/tests/sphinx-3000.py	/^from sphinx import main$/;"	i
main	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def main(self, name, args, queue_id):$/;"	m	class:Child
main	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^def main(serveraddr):$/;"	f
main	plugged/ultisnips/test_all.py	/^    def main():$/;"	f	function:setup_other_plugins
main	plugged/vim-easytags/misc/easytags/normalize-tags.py	/^def main(arguments):$/;"	f
main_loop	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^    def main_loop(self, stdout):$/;"	m	class:Child
main_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^  let main_syntax = 'yaml'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/blade.vim	/^    let main_syntax = 'blade'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/eelixir.vim	/^  let main_syntax = 'eelixir'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/emblem.vim	/^  let main_syntax = 'emblem'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/groovy.vim	/^  let main_syntax='groovy'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/haxe.vim	/^  let main_syntax='haxe'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/jinja2.vim	/^  let main_syntax = 'jinja2'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/json.vim	/^  let main_syntax = 'json'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/jst.vim	/^  let main_syntax = 'jst'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/liquid.vim	/^  let main_syntax = 'liquid'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/lua.vim	/^  let main_syntax = 'lua'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/mako.vim	/^  let main_syntax = b:mako_outer_lang$/;"	v
main_syntax	plugged/vim-polyglot/syntax/mason.vim	/^	let main_syntax = 'mason'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/php.vim	/^  let main_syntax = 'php'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/pug.vim	/^  let main_syntax = 'pug'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/qml.vim	/^  let main_syntax = 'qml'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/scala.vim	/^  let main_syntax = 'scala'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/scss.vim	/^  let main_syntax = 'scss'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/slim.vim	/^  let main_syntax = 'slim'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/slime.vim	/^  let main_syntax = 'slime'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/stylus.vim	/^  let main_syntax = 'css'$/;"	v
main_syntax	plugged/vim-polyglot/syntax/typescript.vim	/^  let main_syntax = "typescript"$/;"	v
main_syntax	plugged/vim-polyglot/syntax/velocity.vim	/^  let main_syntax = 'html'$/;"	v
main_syntax	plugged/vim-ruby/syntax/eruby.vim	/^  let main_syntax = 'eruby'$/;"	v
make	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:make(keys, values, ...) abort$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:make(...)$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:make(name, ...)$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:make(prefix)$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:make(...)$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:make(...)$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:make(...)$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:make(chars)$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:make()$/;"	f
make	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:make(...)$/;"	f
make	plugged/vim-rails/autoload/rails.vim	/^function! s:make(bang, args, ...)$/;"	f
make_box	plugged/vim-snippets/pythonx/vimsnippets.py	/^def make_box(twidth, bwidth=None):$/;"	f
make_chunks	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    parallel_available$/;"	i
make_emacs	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_emacs()$/;"	f
make_index	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:make_index(list, ...) abort$/;"	f
make_plain	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:make_plain()$/;"	f
make_request	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def make_request(self, doc, silent):$/;"	m	class:Source
make_special_chars	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:make_special_chars()$/;"	f
make_urls_explicit	plugged/vim-notes/autoload/xolox/notes/markdown.vim	/^function! s:make_urls_explicit(text) " {{{1$/;"	f
make_urls_explicit	plugged/vim-notes/autoload/xolox/notes/mediawiki.vim	/^function! s:make_urls_explicit(text) " {{{1$/;"	f
make_vim_cmdline_mapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_vim_cmdline_mapping()$/;"	f
makefile	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            makefile = True,$/;"	v
makename	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def makename(package, module):$/;"	f
manual_completion_begin	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def manual_completion_begin(self, context):$/;"	m	class:DeopleteHandlers
map	plugged/supertab/plugin/supertab.vim	/^      let map = maparg('<cr>', 'i')$/;"	v
map	plugged/supertab/plugin/supertab.vim	/^      let map = s:ExpandMap(map)$/;"	v
map	plugged/vim-airline/t/themes.vim	/^    let map = airline#themes#generate_color_map($/;"	v
map	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:map(mode, lhs, rhs, ...) abort$/;"	f
map	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:map(mode, flags, map) abort$/;"	f
map	plugged/vim-ruby/ftplugin/ruby.vim	/^function! s:map(mode, flags, map) abort$/;"	f
map	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:map(forced_p, lhs, rhs)$/;"	f
map_accum	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_accum	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_aux	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_aux(function)$/;"	f
map_dict	plugged/supertab/plugin/supertab.vim	/^      let map_dict = maparg('<cr>', 'i', 0, 1)$/;"	v
map_keys	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:map_keys()$/;"	f
map_move	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_move(function, toend, backwards)$/;"	f
map_select	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:map_select(function)$/;"	f
mapargs_pair_select	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:mapargs_pair_select(lhs, pattern1, pattern2, flags, previous_mode)$/;"	f
mapargs_single_move	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:mapargs_single_move(lhs, pattern, flags, previous_mode)$/;"	f
mapargs_single_select	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:mapargs_single_select(lhs, pattern, flags, previous_mode)$/;"	f
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ('', '')$/;"	v	class:_SelectModeMappings
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ('H', 'x')$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ('H', 'x')$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ('H', 'x'), ('e', 'l')$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ('H', 'x'), ('e', 'l')$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
maps	plugged/ultisnips/test/test_Selection.py	/^    maps = ('e', 'l'), ('H', 'x')$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
maps_nop	plugged/goyo.vim/autoload/goyo.vim	/^function! s:maps_nop()$/;"	f
maps_resize	plugged/goyo.vim/autoload/goyo.vim	/^function! s:maps_resize()$/;"	f
mark_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:mark_sink(lines)$/;"	f
mark_window	plugged/tagbar/autoload/tagbar.vim	/^function! s:mark_window() abort$/;"	f
master	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            master = 'index',$/;"	v
mastertocmaxdepth	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            mastertocmaxdepth = opts.maxdepth,$/;"	v
mastertoctree	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            mastertoctree = text,$/;"	v
match_all_keywords	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:match_all_keywords(keywords) " {{{2$/;"	f
match_any_keyword	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:match_any_keyword(keywords) " {{{2$/;"	f
match_bullet_or_divider	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! s:match_bullet_or_divider(context, consume_lookahead) " {{{1$/;"	f
match_expr_on_line	plugged/vim-polyglot/indent/cython.vim	/^function! s:match_expr_on_line(expr, lnum, start, ...)$/;"	f
match_expr_on_line	plugged/vim-polyglot/indent/python.vim	/^function! s:match_expr_on_line(expr, lnum, start, ...)$/;"	f
match_highlight	plugged/vim-gitgutter/autoload/gitgutter/highlight.vim	/^function! s:match_highlight(highlight, pattern) abort$/;"	f
match_key	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:match_key(keymapping, key)$/;"	f
match_line	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! s:match_line(context) " {{{1$/;"	f
match_one	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:match_one(patterns, string)$/;"	f
match_pairs	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:match_pairs(open, close, stopat)$/;"	f
match_type	plugged/vim-rails/autoload/rails.vim	/^function! s:match_type(type,...)$/;"	f
matchcursor	plugged/vim-rails/autoload/rails.vim	/^function! s:matchcursor(pat)$/;"	f
matched	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def matched(self):$/;"	m	class:SnippetDefinition
matches	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def matches(self, before, visual_content=None):$/;"	m	class:SnippetDefinition
matchit	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:matchit()$/;"	f
maxDiff	plugged/ultisnips/test/vim_test_case.py	/^    maxDiff = None  # Show all diff output, always.$/;"	v	class:VimTestCase
maxInstances	plugged/vim-test/spec/fixtures/webdriverio/wdio.conf.js	/^    maxInstances: 10,$/;"	p	class:exports.config
max_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:max_by(dict, expr) abort$/;"	f
max_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_completion_count	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    max_completion_count = 50$/;"	v	class:Client
mean	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^    def mean(l):$/;"	f
mean	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^    mean = statistics.mean$/;"	v
member_order	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    member_order = 0$/;"	v	class:Documenter
members_option	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def members_option(arg):$/;"	f
members_set_option	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def members_set_option(arg):$/;"	f
merge_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:merge_opts(dict, eopts)$/;"	f
merge_results	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def merge_results(self, context):$/;"	m	class:Parent
meta	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class meta(nodes.Special, nodes.PreBibliographic, nodes.Element):$/;"	c
metadata_elements	plugged/vim-polyglot/autoload/xml/html5.vim	/^let metadata_elements = ['link', 'style', 'meta', 'script', 'noscript', 'command']$/;"	v
metargs_complete	plugged/far.vim/autoload/far.vim	/^function! s:metargs_complete(arglead, cmdline, cursorpos, params_meta) abort$/;"	f
method	plugged/vim-ruby-refactoring/test/testcases.rb	/^def method$/;"	f
method	plugged/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^            def method; end$/;"	f	class:OuterClass.InnerClass
method	plugged/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^          def method; end$/;"	f	class:OuterClass
method	plugged/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^          def method; end$/;"	f	class:OuterClass.InnerClass
method	plugged/vim-ruby/spec/indent/indent_access_modifier_spec.rb	/^        def method; end$/;"	f	class:OuterClass
method_one	plugged/vim-ruby-refactoring/test/testcases.rb	/^  def method_one$/;"	f	class:Foo
method_two	plugged/vim-ruby-refactoring/test/testcases.rb	/^  def method_two$/;"	f	class:Foo
mextargs	plugged/vim-rails/autoload/rails.vim	/^function! s:mextargs(str,num)$/;"	f
microdata_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let microdata_attributes = {'itemid': [], 'itemscope': ['itemscope', ''], 'itemtype': [], 'itemprop': [], 'itemref': []}$/;"	v
microdata_attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let microdata_attributes_value = {$/;"	v
migrationEdit	plugged/vim-rails/autoload/rails.vim	/^function! s:migrationEdit(cmd,...)$/;"	f
migrationList	plugged/vim-rails/autoload/rails.vim	/^function! s:migrationList(A,L,P)$/;"	f
migspc	plugged/vim-rails/autoload/rails.vim	/^function! s:migspc(line)$/;"	f
min_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:min_by(dict, expr) abort$/;"	f
min_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
min_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
mix_boilerplate	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^    def mix_boilerplate(self, completions):$/;"	m	class:Source
mjj	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal mjj$/;"	m
mkeep	plugged/vim-rails/autoload/rails.vim	/^function! s:mkeep(str)$/;"	f
mkk	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal mkk$/;"	m
mkline	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def mkline(self, line='', indent=None):$/;"	m	class:SnippetUtil
mm	plugged/vim-bookmarks/t/bm_move_spec.vim	/^    normal mm$/;"	m
mock_import	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def mock_import(modname):$/;"	f
mode	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VimPosition
mode	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def mode(self):$/;"	m	class:VisualContentPreserver
model	plugged/vim-rails/autoload/rails.vim	/^function! s:model(...)$/;"	f
mods	plugged/vim-rails/autoload/rails.vim	/^function! s:mods(mods) abort$/;"	f
module.complete	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.complete(cmdline)$/;"	f
module.get_complete_words	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.get_complete_words()$/;"	f
module.histories	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.histories()$/;"	f
module.is_no_insert	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.is_no_insert(char)$/;"	f
module.message	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.message(...)$/;"	f
module.on_char	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_draw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw(cmdline)$/;"	f
module.on_draw_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_draw_pre(...)$/;"	f
module.on_draw_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
module.on_draw_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
module.on_enter	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.on_enter(...)$/;"	f
module.on_enter	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_enter(...)$/;"	f
module.on_enter	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_enter(...)$/;"	f
module.on_exception	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:module.on_exception(cmdline)$/;"	f
module.on_exception	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_exception(cmdline)$/;"	f
module.on_execute	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute(...)$/;"	f
module.on_execute_failed	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_failed(...)$/;"	f
module.on_execute_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_execute_pre(...)$/;"	f
module.on_execute_pre	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_pre(cmdline)$/;"	f
module.on_leave	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_leave(cmdline)$/;"	f
module.on_leave	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_leave(...)$/;"	f
module.on_leave	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_leave(cmdline)$/;"	f
module.on_leave	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_leave(cmdline)$/;"	f
module.redraw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.redraw(cmdline)$/;"	f
module.reset	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.reset()$/;"	f
module_completions	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def module_completions(self, module, paths):$/;"	m	class:Server
module_file	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/utils.py	/^def module_file(dirname, suffix, base):$/;"	f
module_search	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/utils.py	/^def module_search(module, paths):$/;"	f
modules	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    modules = recurse_tree(rootpath, excludes, opts)$/;"	v
motion_map_helper	plugged/vim-easymotion/plugin/EasyMotion.vim	/^function! s:motion_map_helper(motions) "{{{$/;"	f
move	plugged/ultisnips/pythonx/UltiSnips/position.py	/^    def move(self, pivot, delta):$/;"	m	class:Position
move	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move(pattern, ...) abort$/;"	f
move	plugged/vim-textobj-user/t/move.vim	/^function! s:move(type, count)$/;"	f
move_absolute	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:move_absolute(arg)$/;"	f
move_before_begin	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:move_before_begin()$/;"	f
move_f	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_f(...) abort$/;"	f
move_f2	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_f2() abort$/;"	f
move_function_wrapper	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:move_function_wrapper(function_name, spec_name, previous_mode)$/;"	f
move_relative	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:move_relative(arg, direction)$/;"	f
move_to_win	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_to_win(winnr) abort$/;"	f
move_to_winpos	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:move_to_winpos(winpos) abort$/;"	f
move_wrapper	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:move_wrapper(patterns, flags, previous_mode)$/;"	f
moveto_block_delim	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:moveto_block_delim(toend, backwards, ...)$/;"	f
moveto_currentblock_end	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:moveto_currentblock_end()$/;"	f
msgpack	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^import msgpack$/;"	i
msgpack	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^import msgpack$/;"	i
multiple_cursors#debug	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#debug()$/;"	f
multiple_cursors#find	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#find(start, end, pattern)$/;"	f
multiple_cursors#get_latency_debug_file	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#get_latency_debug_file()$/;"	f
multiple_cursors#new	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#new(mode, word_boundary)$/;"	f
multiple_cursors#prev	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#prev()$/;"	f
multiple_cursors#quit	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#quit()$/;"	f
multiple_cursors#select_all	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#select_all(mode, word_boundary)$/;"	f
multiple_cursors#skip	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! multiple_cursors#skip()$/;"	f
multiprocessing	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    import multiprocessing$/;"	i
munge_path	plugged/vim-notes/misc/notes/search-notes.py	/^    def munge_path(self, path):$/;"	m	class:NotesIndex
mysearchpair	plugged/vim-endwise/plugin/endwise.vim	/^function! s:mysearchpair(beginpat,endpat,synidpat)$/;"	f
n	plugged/ultisnips/test/vim_test_case.py	/^        vim_config.append('from UltiSnips import UltiSnips_Manager\\n')$/;"	i
n	plugged/ultisnips/test/vim_test_case.py	/^        vim_config.append('import vim\\n')$/;"	i
name	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    name = ''$/;"	v	class:Builder
name	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    name = 'applehelp'$/;"	v	class:AppleHelpBuilder
name	plugged/far.vim/test/guess.py	/^name = raw_input('Hello! What is your name?\\n')$/;"	v
name_temp	plugged/ultisnips/test/vim_interface.py	/^    def name_temp(self, file_path):$/;"	m	class:TempFileManager
namedtuple	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^from collections import namedtuple$/;"	i
namedtuple	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^from collections import namedtuple$/;"	i
namedtuple	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^from collections import deque, namedtuple$/;"	i
names	autoload/plug.vim	/^function! s:names(...)$/;"	f
natures	plugged/supertab/ftplugin/html.vim	/^        let natures = eclim#project#util#GetProjectNatureAliases(project)$/;"	v
nearest_test	plugged/vim-test/autoload/test/csharp/dotnettest.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/erlang/commontest.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/go/ginkgo.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/go/gotest.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/java/maventest.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/javascript/ava.vim	/^function! s:nearest_test(position)$/;"	f
nearest_test	plugged/vim-test/autoload/test/javascript/cucumberjs.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/javascript/intern.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/javascript/jasmine.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/javascript/jest.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/javascript/karma.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/javascript/lab.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/javascript/mocha.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/php/behat.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/php/codeception.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/php/dusk.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/php/phpunit.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/python/djangotest.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/python/nose.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/python/nose2.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/python/pytest.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/python/pyunit.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/ruby/minitest.vim	/^function! s:nearest_test(position) abort$/;"	f
nearest_test	plugged/vim-test/autoload/test/viml/vader.vim	/^function! s:nearest_test(position) abort$/;"	f
neocomplcache#sources#tmuxcomplete#define	plugged/tmux-complete.vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^function! neocomplcache#sources#tmuxcomplete#define()$/;"	f
neocomplete#sources#tmuxcomplete#define	plugged/tmux-complete.vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^function! neocomplete#sources#tmuxcomplete#define()$/;"	f
neocomplete#sources#ultisnips#define	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! neocomplete#sources#ultisnips#define()$/;"	f
neovim	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    import neovim$/;"	i
neovim	plugged/far.vim/rplugin/python3/far/__init__.py	/^    import neovim$/;"	i
neovim	plugged/ultisnips/test/vim_interface.py	/^        import neovim$/;"	i
nerdtree#checkForBrowse	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#compareNodes	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#compareNodesBySortKey	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodesBySortKey(n1, n2)$/;"	f
nerdtree#completeBookmarks	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#deprecated	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#echo	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#exec	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#has_opt	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#loadClassFiles	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#postSourceActions	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#renderView	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#runningCygwin	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningCygwin()$/;"	f
nerdtree#runningWindows	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#ui_glue#bookmarkNode	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...)$/;"	f
nerdtree#ui_glue#chRootCwd	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd()$/;"	f
nerdtree#ui_glue#clearBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks)$/;"	f
nerdtree#ui_glue#createDefaultBindings	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings()$/;"	f
nerdtree#ui_glue#invokeKeyMap	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key)$/;"	f
nerdtree#ui_glue#openBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name)$/;"	f
nerdtree#ui_glue#revealBookmark	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name)$/;"	f
nerdtree#ui_glue#setupCommands	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands()$/;"	f
nerdtree#ui_glue#upDir	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(preserveState)$/;"	f
nerdtree#version	plugged/nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
nerdtreegitplugin	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^augroup nerdtreegitplugin$/;"	a
new	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:new(plugin_name) abort$/;"	f
new	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:new(plugin_name) abort$/;"	f
new_overwin	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:new_overwin(...) abort$/;"	f
new_result	plugged/vim-textobj-user/t/old-property-names.vim	/^    let new_result = @0$/;"	v
new_scratch_buffer	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def new_scratch_buffer(text):$/;"	f
new_window	autoload/plug.vim	/^function! s:new_window()$/;"	f
newcommand	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^function! s:newcommand(as)$/;"	f
newest_template_mtime	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def newest_template_mtime(self):$/;"	m	class:TemplateBridge
next	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    next = __next__  # for python2$/;"	v	class:_TextIterator
next	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    next = __next__  # for python2$/;"	v	class:LineIterator
next_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:next_sign_id() abort$/;"	f
nim_highlight_builtins	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_builtins     = 1$/;"	v
nim_highlight_builtins	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_builtins = 1$/;"	v
nim_highlight_exceptions	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_exceptions   = 1$/;"	v
nim_highlight_exceptions	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_exceptions = 1$/;"	v
nim_highlight_numbers	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_numbers      = 1$/;"	v
nim_highlight_numbers	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_numbers = 1$/;"	v
nim_highlight_space_errors	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_space_errors = 1$/;"	v
nim_highlight_special_vars	plugged/vim-polyglot/syntax/nim.vim	/^  let nim_highlight_special_vars = 1$/;"	v
no_unidecode_available	plugged/ultisnips/test/test_Transformation.py	/^from test.util import no_unidecode_available$/;"	i
no_unidecode_available	plugged/ultisnips/test/util.py	/^def no_unidecode_available():$/;"	f
nodes	plugged/deoplete-jedi/tests/sphinx-3000.py	/^from docutils import nodes$/;"	i
noqa	plugged/deoplete-jedi/tests/sphinx-3000.py	/^from sphinx import directives  # noqa$/;"	i
noqa	plugged/deoplete-jedi/tests/sphinx-3000.py	/^from sphinx import roles       # noqa$/;"	i
noqa	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^import deoplete.filter  # noqa$/;"	i
noqa	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^import deoplete.source  # noqa$/;"	i
noremap	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:noremap(forced_p, lhs, rhs)$/;"	f
normalize	plugged/vim-easytags/misc/easytags/normalize-tags.py	/^def normalize(tagsfile):$/;"	f
normalize	plugged/vim-notes/misc/notes/search-notes.py	/^    def normalize(self, keyword):$/;"	m	class:NotesIndex
normalize	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:normalize(obj_specs)$/;"	f
normalize_excludes	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def normalize_excludes(rootpath, excludes):$/;"	f
normalize_path	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:normalize_path(unnormalized_path)$/;"	f
normalize_property_names	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:normalize_property_names(obj_specs)$/;"	f
normalize_property_values	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:normalize_property_values(obj_specs)$/;"	f
normalize_ws	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:normalize_ws(s)$/;"	f
not_git_dir	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:not_git_dir(bufnr) abort$/;"	f
not_tracked_by_git	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^  function! s:not_tracked_by_git(bufnr)$/;"	f
notify	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! s:notify(event, context) abort$/;"	f
nr2byte	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2enc_char	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2hex	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nsplit	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
ntabs_to_proper_indent	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def ntabs_to_proper_indent(self, ntabs):$/;"	m	class:IndentUtil
nullHandler	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^nullHandler = logging.NullHandler()$/;"	v
num	plugged/far.vim/test/odd.py	/^num = int(input("Enter a number: "))$/;"	v
num	plugged/vim-gitgutter/unplace.vim	/^let num = 500$/;"	v
number	plugged/far.vim/test/guess.py	/^number = random.randint(1, 20)$/;"	v
number	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^    def number(self):  # pylint:disable=no-self-use$/;"	m	class:VimBuffer
number	plugged/ultisnips/pythonx/UltiSnips/text_objects/_tabstop.py	/^    def number(self):$/;"	m	class:TabStop
number_reference	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class number_reference(nodes.reference):$/;"	c
nvim_cb	autoload/plug.vim	/^function! s:nvim_cb(job_id, data, event) dict abort$/;"	f
nvim_mq_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_mq_job_handler(job_id, data, event) dict$/;"	f
nvim_output_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_output_handler(job_id, data, event) dict$/;"	f
nvim_po_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_po_job_handler(job_id, data, event) dict$/;"	f
nvim_untracked_job_handler	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:nvim_untracked_job_handler(job_id, data, event) dict$/;"	f
o	plugged/vim-textobj-user/t/plugin.vim	/^    let o = '<Plug>(textobj-fruit)'$/;"	v
o	plugged/vim-textobj-user/t/plugin.vim	/^    let o = '<Plug>(textobj-fruit-apple)'$/;"	v
o	plugged/vim-textobj-user/t/plugin.vim	/^    let o = '<Plug>(textobj-fruit-apple-n)'$/;"	v
o	plugged/vim-textobj-user/t/plugin.vim	/^    let o = '<Plug>(textobj-fruit-apple-p)'$/;"	v
o	plugged/vim-textobj-user/t/plugin.vim	/^    let o = '<Plug>(textobj-fruit-banana-a)'$/;"	v
o	plugged/vim-textobj-user/t/plugin.vim	/^    let o = '<Plug>(textobj-fruit-banana-i)'$/;"	v
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_DelSameLine1
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 3)$/;"	v	class:MovePosition_InsSameLine1
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_DelSameLine
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (0, 9)$/;"	v	class:MovePosition_InsSameLine2
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 0)$/;"	v	class:MovePosition_DelSecondLine
obj	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    obj = (1, 3)$/;"	v	class:MovePosition_DelSecondLine1
object.format	plugged/vim-misc/autoload/xolox/misc/timer.vim	/^  function object.format() dict$/;"	f
object.stop	plugged/vim-misc/autoload/xolox/misc/timer.vim	/^  function object.stop() dict$/;"	f
objmap	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:objmap(forced_p, lhs, rhs)$/;"	f
objnoremap	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:objnoremap(forced_p, lhs, rhs)$/;"	f
objtype	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    objtype = 'module'$/;"	v	class:ModuleDocumenter
objtype	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    objtype = 'object'$/;"	v	class:Documenter
obsolete_gitgutter_signs_to_remove	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:obsolete_gitgutter_signs_to_remove(bufnr, new_gitgutter_signs_line_numbers) abort$/;"	f
off_screen_search	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:off_screen_search(re) "{{{$/;"	f
old_result	plugged/vim-textobj-user/t/old-property-names.vim	/^    let old_result = @0$/;"	v
old_status_iterator	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def old_status_iterator(self, iterable, summary, colorfunc=darkgreen,$/;"	m	class:Sphinx
omit	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:omit(dict, keys) abort$/;"	f
on_begin	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:on_begin()$/;"	f
on_bufenter	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:on_bufenter()$/;"	f
on_colorscheme_changed	plugged/vim-airline/plugin/airline.vim	/^function! s:on_colorscheme_changed()$/;"	f
on_complete_done	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:on_complete_done() abort$/;"	f
on_end	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:on_end()$/;"	f
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^        def on_event(self, context):$/;"	m	class:DeopleteHandlers
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/deoplete.py	/^    def on_event(self, context):$/;"	m	class:Deoplete
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def on_event(self, context):$/;"	m	class:Parent
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def on_event(self, context):$/;"	m	class:Base
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/source/dictionary.py	/^    def on_event(self, context):$/;"	m	class:Source
on_event	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^    def on_event(self, context):$/;"	m	class:Source
on_exit_mq	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_mq(channel) dict abort$/;"	f
on_exit_nvim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_nvim(_job_id, exit_code, _event) dict abort$/;"	f
on_exit_po	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_po(channel) dict abort$/;"	f
on_exit_untracked	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_exit_untracked(channel) dict abort$/;"	f
on_exit_vim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_exit_vim(_channel) dict abort$/;"	f
on_init	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^    def on_init(self, context):$/;"	m	class:Source
on_init	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def on_init(self, context):$/;"	m	class:Source
on_insert_leave	plugged/deoplete.nvim/autoload/deoplete/handler.vim	/^function! s:on_insert_leave() abort$/;"	f
on_stderr_nvim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_nvim(_job_id, _data, _event) dict abort$/;"	f
on_stderr_vim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stderr_vim(channel, _data) dict abort$/;"	f
on_stdout	plugged/vim-airline/autoload/airline/async.vim	/^  function! s:on_stdout(channel, msg) dict abort$/;"	f
on_stdout_nvim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_nvim(_job_id, data, _event) dict abort$/;"	f
on_stdout_vim	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^function! s:on_stdout_vim(_channel, data) dict abort$/;"	f
on_vimenter	plugged/vim-startify/plugin/startify.vim	/^function! s:on_vimenter()$/;"	f
on_vimleavepre	plugged/vim-startify/plugin/startify.vim	/^function! s:on_vimleavepre()$/;"	f
on_window_changed	plugged/vim-airline/plugin/airline.vim	/^function! s:on_window_changed()$/;"	f
one	plugged/vim-ruby/spec/indent/basic_spec.rb	/^      def one$/;"	f
one#highlight	plugged/one/colors/one.vim	/^function! one#highlight(group, fg, bg, attr)$/;"	f
one#highlight	plugged/vim-one/colors/one.vim	/^function! one#highlight(group, fg, bg, attr)$/;"	f
only	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class only(nodes.Element):$/;"	c
open	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:open(cmd, target)$/;"	f
open	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:open(buffer, opener) abort$/;"	f
open	plugged/vim-peekaboo/autoload/peekaboo.vim	/^function! s:open(mode)$/;"	f
open	plugged/vim-rails/autoload/rails.vim	/^function! s:open(cmd, file) abort$/;"	f
openExplorer	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node)$/;"	f
openFile	config/plugins/nerdtree.vim	/^function! s:openFile(filenode)$/;"	f
openFold	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:openFold() abort dict$/;"	f
openFold	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:openFold() abort dict$/;"	f
openHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openKindFold	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:openKindFold(kind) abort dict$/;"	f
openNodeRecursively	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node)$/;"	f
openParents	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:openParents() abort dict$/;"	f
openVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target)$/;"	f
open_ascii_file	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    def open_ascii_file(filename, mode):$/;"	f
open_buffer	plugged/vim-startify/autoload/startify.vim	/^function! s:open_buffer(entry)$/;"	f
open_doc_window	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! s:open_doc_window(query, newposition, position)$/;"	f
open_far_buff	plugged/far.vim/autoload/far.vim	/^function! s:open_far_buff(far_ctx, win_params) abort "{{{$/;"	f
opener	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^opener = request.build_opener(request.ProxyHandler({}))$/;"	v
opfunc	plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc(type, ...) abort " {{{1$/;"	f
opfunc2	plugged/vim-surround/plugin/surround.vim	/^function! s:opfunc2(...) abort$/;"	f
opt	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def opt(self, option, default=None):  # pylint:disable=no-self-use$/;"	m	class:SnippetUtil
option	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:option(name)$/;"	f
option.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:option.restore() abort$/;"	f
option_set_to	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def option_set_to(name, new_value):$/;"	f
option_spec	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    option_spec = {$/;"	v	class:ModuleDocumenter
option_spec	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    option_spec = {'noindex': bool_option}$/;"	v	class:Documenter
optparse	plugged/ultisnips/test_all.py	/^    import optparse$/;"	i
opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^  let opts['sink*'] = remove(opts, 'sink')$/;"	v
or	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:or(xs) abort$/;"	f
or	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:or(xs) abort$/;"	f
org.vimtest.math	plugged/vim-test/spec/fixtures/maven/MathTest.java	/^package org.vimtest.math;$/;"	p
org.vimtest.math	plugged/vim-test/spec/fixtures/maven/MathTestCase.java	/^package org.vimtest.math;$/;"	p
org.vimtest.math	plugged/vim-test/spec/fixtures/maven/MathTests.java	/^package org.vimtest.math;$/;"	p
org.vimtest.math	plugged/vim-test/spec/fixtures/maven/TestMath.java	/^package org.vimtest.math;$/;"	p
origin	plugged/vim-easymotion/t/easymotion_spec.vim	/^        let origin = CursorPos()$/;"	v
os	plugged/alchemist.vim/elixir_sense.py	/^import os$/;"	i
os	plugged/alchemist.vim/elixir_sense_client	/^import os, sys, getopt$/;"	i
os	plugged/alchemist.vim/rplugin/python3/deoplete/sources/alchemist.py	/^import os, sys$/;"	i
os	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^import os$/;"	i
os	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^import os$/;"	i
os	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^import os$/;"	i
os	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/utils.py	/^import os$/;"	i
os	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^import os$/;"	i
os	plugged/deoplete-jedi/tests/sphinx-3000.py	/^import os$/;"	i
os	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^import os$/;"	i
os	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^import os.path$/;"	i
os	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^import os$/;"	i
os	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^import os$/;"	i
os	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^import os$/;"	i
os	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^import os$/;"	i
os	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^import os$/;"	i
os	plugged/deoplete.nvim/test/conftest.py	/^import os$/;"	i
os	plugged/far.vim/rplugin/python3/far/far.py	/^import os$/;"	i
os	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^import os$/;"	i
os	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/snipmate.py	/^import os$/;"	i
os	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/ulti_snips.py	/^import os$/;"	i
os	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^import os$/;"	i
os	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^import os$/;"	i
os	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^import os$/;"	i
os	plugged/ultisnips/test/test_Interpolation.py	/^import os$/;"	i
os	plugged/ultisnips/test/vim_interface.py	/^import os$/;"	i
os	plugged/ultisnips/test/vim_test_case.py	/^import os$/;"	i
os	plugged/ultisnips/test_all.py	/^import os$/;"	i
os	plugged/ultisnips/utils/get_tm_snippets.py	/^import os$/;"	i
os	plugged/vim-easytags/misc/easytags/normalize-tags.py	/^import os, sys, time$/;"	i
os	plugged/vim-easytags/misc/easytags/why-so-slow.py	/^import os, sys$/;"	i
os	plugged/vim-notes/misc/notes/search-notes.py	/^import os$/;"	i
os	plugged/vim-polyglot/ftplugin/ocaml.vim	/^import os$/;"	m
os.path	plugged/vim-polyglot/ftplugin/ocaml.vim	/^import os.path$/;"	m
osutil	plugged/deoplete-jedi/tests/sphinx-3000.py	/^import osutil$/;"	i
others	plugged/vim-polyglot/indent/typescript.vim	/^function s:others(p)$/;"	f
output	plugged/ultisnips/test/vim_test_case.py	/^    output = ''$/;"	v	class:VimTestCase
output	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:output(text)$/;"	f
output	plugged/vim-polyglot/build	/^output() {$/;"	f
overlap_length	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^def overlap_length(left, right):$/;"	f
overlap_length	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^from deoplete.filter.converter_remove_overlap import overlap_length$/;"	i
override_domain	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def override_domain(self, domain):$/;"	m	class:Sphinx
overwin.choose_prompt	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.choose_prompt(hint_dict) abort$/;"	f
overwin.gather_poses_overwin	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.gather_poses_overwin(pattern) abort$/;"	f
overwin.pattern	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.pattern(pattern) abort$/;"	f
overwin.restore_options	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.restore_options() abort$/;"	f
overwin.select_winpos	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.select_winpos(winnr2poses, keys) abort$/;"	f
overwin.set_options	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:overwin.set_options() abort$/;"	f
overwrite	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def overwrite(self, buf, gtext):$/;"	m	class:TextObject
overwrite_with_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def overwrite_with_initial_text(self, buf):$/;"	m	class:TextObject
p	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def p(self):$/;"	m	class:SnippetUtil
pad_between_letters	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_both_sides	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_left	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_right	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
padding_by_displaywidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
pair_sort	plugged/vim-polyglot/indent/cython.vim	/^function! s:pair_sort(x, y)$/;"	f
pair_sort	plugged/vim-polyglot/indent/python.vim	/^function! s:pair_sort(x, y)$/;"	f
pal	plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let pal = g:airline#themes#dark_minimal#palette$/;"	v
parallel_available	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    parallel_available$/;"	i
param_proc	plugged/far.vim/autoload/far.vim	/^function! s:param_proc(far_params, win_params, cmdargs) "{{{$/;"	f
parameter_names_of	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:parameter_names_of(pairs)$/;"	f
parse	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:parse(highlight)$/;"	f
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/snipmate.py	/^from UltiSnips.snippet.parsing.snipmate import parse_and_instantiate$/;"	i
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/ulti_snips.py	/^from UltiSnips.snippet.parsing.ulti_snips import parse_and_instantiate$/;"	i
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_and_instantiate	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^def parse_and_instantiate(parent_to, text, indent):$/;"	f
parse_arg	plugged/goyo.vim/autoload/goyo.vim	/^function! s:parse_arg(arg)$/;"	f
parse_args	plugged/ultisnips/test_all.py	/^    def parse_args():$/;"	f	function:setup_other_plugins
parse_args	plugged/vim-notes/misc/notes/search-notes.py	/^    def parse_args(self):$/;"	m	class:NotesIndex
parse_block_quote	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! s:parse_block_quote(context) " {{{1$/;"	f
parse_buffer_pattern	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^from deoplete.util import parse_buffer_pattern, getlines$/;"	i
parse_buffer_pattern	plugged/deoplete.nvim/rplugin/python3/deoplete/source/buffer.py	/^from deoplete.util import parse_buffer_pattern, getlines$/;"	i
parse_buffer_pattern	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def parse_buffer_pattern(b, pattern):$/;"	f
parse_case_info	plugged/vim-test/autoload/test/swift/swiftpm.vim	/^function! s:parse_case_info(position) abort$/;"	f
parse_cmdarg	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:parse_cmdarg(...) abort$/;"	f
parse_code_block	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! s:parse_code_block(context, style) " {{{1$/;"	f
parse_completion	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def parse_completion(self, comp, cache):$/;"	m	class:Server
parse_content	plugged/ultisnips/utils/get_tm_snippets.py	/^def parse_content(c):$/;"	f
parse_divider	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! s:parse_divider(context) " {{{1$/;"	f
parse_file_pattern	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def parse_file_pattern(f, pattern):$/;"	f
parse_heading	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! s:parse_heading(context) " {{{1$/;"	f
parse_lhs	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:parse_lhs(text, ...)$/;"	f
parse_lhs_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:parse_lhs_list(...)$/;"	f
parse_list	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! s:parse_list(context) " {{{1$/;"	f
parse_module_info	plugged/vim-test/autoload/test/swift/swiftpm.vim	/^function! s:parse_module_info(position) abort$/;"	f
parse_name	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def parse_name(self):$/;"	m	class:Documenter
parse_name	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def parse_name(self):$/;"	m	class:ModuleDocumenter
parse_nearest_test_info	plugged/vim-test/autoload/test/swift/swiftpm.vim	/^function! s:parse_nearest_test_info(position) abort$/;"	f
parse_options	autoload/plug.vim	/^function! s:parse_options(arg)$/;"	f
parse_paragraph	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! s:parse_paragraph(context) " {{{1$/;"	f
parse_to_name	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:parse_to_name(highlight)$/;"	f
parser	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    parser = argparse.ArgumentParser()$/;"	v	class:Client
parso_path	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^parso_path = os.path.join(libpath, 'parso')$/;"	v
partial	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^from functools import partial$/;"	i
partition	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
partition	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
path	autoload/plug.vim	/^  function! s:path(path)$/;"	f
path	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^            '-c', r'import sys; print("\\n".join(sys.path))',$/;"	i
path	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            path = opts.destdir,$/;"	v
path	plugged/deoplete-jedi/tests/sphinx-3000.py	/^from os import path$/;"	i
path	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^import os.path$/;"	i
path2directory	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2project_directory	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
path_stabilize	plugged/deoplete-jedi/tests/sphinx-3000.py	/^from sphinx.util import i18n, path_stabilize$/;"	i
path_to_module	plugged/vim-test/autoload/test/python/nose2.vim	/^function! s:path_to_module(str) abort$/;"	f
pathjoin	plugged/vim-rails/autoload/rails.vim	/^function! s:pathjoin(...) abort$/;"	f
pathsplit	plugged/vim-rails/autoload/rails.vim	/^function! s:pathsplit(path) abort$/;"	f
pattern	plugged/vim-polyglot/syntax/cucumber.vim	/^function! s:pattern(key)$/;"	f
peek	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def peek(self, count=1):$/;"	m	class:_TextIterator
peek	plugged/ultisnips/pythonx/UltiSnips/text.py	/^    def peek(self):$/;"	m	class:LineIterator
peekaboo#aboo	plugged/vim-peekaboo/autoload/peekaboo.vim	/^function! peekaboo#aboo()$/;"	f
peekaboo#off	plugged/vim-peekaboo/plugin/peekaboo.vim	/^function! peekaboo#off()$/;"	f
peekaboo#on	plugged/vim-peekaboo/plugin/peekaboo.vim	/^function! peekaboo#on()$/;"	f
peekaboo#peek	plugged/vim-peekaboo/autoload/peekaboo.vim	/^function! peekaboo#peek(count, mode, visualmode)$/;"	f
peekaboo_init	plugged/vim-peekaboo/plugin/peekaboo.vim	/^augroup peekaboo_init$/;"	a
pending_xref	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class pending_xref(nodes.Inline, nodes.Element):$/;"	c
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	    let perlpath = system("perl -e 'print join(q\/,\/,@INC)'")$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	    let perlpath = system('perl -e "print join(q\/,\/,@INC)"')$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	let perlpath = ".,,"$/;"	v
perlpath	plugged/vim-polyglot/ftplugin/perl.vim	/^	let perlpath = substitute(perlpath,',.$',',,','')$/;"	v
permutations	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
permutations	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
php_folding	plugged/vim-polyglot/syntax/php.vim	/^  let php_folding = 0$/;"	v
php_html_in_heredoc	plugged/vim-polyglot/syntax/php.vim	/^    let php_html_in_heredoc=1$/;"	v
php_html_in_heredoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_heredoc=0$/;"	v
php_html_in_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^    let php_html_in_nowdoc=1$/;"	v
php_html_in_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_nowdoc=0$/;"	v
php_html_in_strings	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_in_strings=0$/;"	v
php_html_load	plugged/vim-polyglot/syntax/php.vim	/^  let php_html_load=1$/;"	v
php_phpdoc_folding	plugged/vim-polyglot/syntax/php.vim	/^  let php_phpdoc_folding = 0$/;"	v
php_sql_heredoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_sql_heredoc=1$/;"	v
php_sql_nowdoc	plugged/vim-polyglot/syntax/php.vim	/^  let php_sql_nowdoc=1$/;"	v
php_sync_method	plugged/vim-polyglot/syntax/php.vim	/^    let php_sync_method=-1$/;"	v
php_sync_method	plugged/vim-polyglot/syntax/php.vim	/^    let php_sync_method=php_minlines$/;"	v
phrasing_elements	plugged/vim-polyglot/autoload/xml/html5.vim	/^let phrasing_elements = ['a', 'em', 'strong', 'small', 'mark', 'abbr', 'dfn', 'i', 'b', 'u', 'code', 'var', 'samp', 'kbd', 'sup', 'sub', 'q', 'cite', 'span', 'bdo', 'bdi', 'br', 'wbr', 'ins', 'del', 'img', 'picture', 'embed', 'object', 'iframe', 'map', 'area', 'script', 'noscript', 'ruby', 'video', 'audio', 'input', 'textarea', 'select', 'button', 'label', 'output', 'datalist', 'keygen', 'progress', 'command', 'canvas', 'time', 'meter', 'data', 'content', 'shadow']$/;"	v
pick	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:pick(dict, keys) abort$/;"	f
pickle	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    import cPickle as pickle$/;"	i
pickle	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    import pickle$/;"	i
pickle	plugged/vim-notes/misc/notes/search-notes.py	/^    import cPickle as pickle$/;"	i
pickle	plugged/vim-notes/misc/notes/search-notes.py	/^    import pickle$/;"	i
pipe_data_received	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def pipe_data_received(self, fd, data):$/;"	m	class:Process
pkg_resources	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^            import pkg_resources$/;"	i
pkg_resources	plugged/vim-devicons/pythonx/vim_devicons/__init__.py	/^import pkg_resources$/;"	i
pkg_resources	plugged/vim-devicons/pythonx/vim_devicons/powerline/__init__.py	/^import pkg_resources$/;"	i
placeholder	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def placeholder(self):$/;"	m	class:VisualContentPreserver
platform	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^import platform$/;"	i
platform	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^import platform$/;"	i
platform	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^import platform$/;"	i
platform	plugged/ultisnips/test/util.py	/^import platform$/;"	i
platform	plugged/ultisnips/test_all.py	/^import platform$/;"	i
pluck	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:pluck(dict, key, default)$/;"	f
plug#	autoload/plug.vim	/^function! plug#(repo, ...)$/;"	f
plug#begin	autoload/plug.vim	/^function! plug#begin(...)$/;"	f
plug#end	autoload/plug.vim	/^function! plug#end()$/;"	f
plug#helptags	autoload/plug.vim	/^function! plug#helptags()$/;"	f
plug#load	autoload/plug.vim	/^function! plug#load(...)$/;"	f
plug_window_exists	autoload/plug.vim	/^function! s:plug_window_exists()$/;"	f
plugin	plugged/vim-polyglot/ftplugin/crystal.vim	/^augroup plugin-ft-crystal$/;"	a
plugin.define_default_key_mappings	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:plugin.define_default_key_mappings(banged_p)  "{{{3$/;"	f
plugin.define_interface_key_mappings	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:plugin.define_interface_key_mappings()  "{{{3$/;"	f
plugin.do_by_function	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:plugin.do_by_function(spec_name, obj_name, previous_mode)$/;"	f
plugin.do_by_pattern	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:plugin.do_by_pattern(spec_name, obj_name, previous_mode)$/;"	f
plugin.interface_mapping_name	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:plugin.interface_mapping_name(obj_name, spec_name)  "{{{3$/;"	f
plugin.new	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:plugin.new(plugin_name, obj_specs)$/;"	f
plugin.normalize	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:plugin.normalize()$/;"	f
plugin_cache_dir	plugged/ultisnips/test/vim_test_case.py	/^def plugin_cache_dir():$/;"	f
plugin_cache_dir	plugged/ultisnips/test_all.py	/^def plugin_cache_dir():$/;"	f
plugin_name	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:plugin_name() abort dict$/;"	f
plugin_name	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:plugin_name() abort dict$/;"	f
plugins	plugged/ultisnips/test/test_Plugin.py	/^    plugins = ['ervandew\/supertab']$/;"	v	class:Plugin_SuperTab_SimpleTest
plugins	plugged/ultisnips/test/vim_test_case.py	/^    plugins = []$/;"	v	class:VimTestCase
po_output	plugged/vim-airline/autoload/airline/async.vim	/^function! s:po_output(buf, file)$/;"	f
pop	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:pop(list) abort$/;"	f
pop	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:pop(list) abort$/;"	f
pop_command	plugged/vim-rails/autoload/rails.vim	/^function! s:pop_command()$/;"	f
pos	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def pos(self):$/;"	m	class:_TextIterator
pos	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def pos(self):$/;"	m	class:VimState
pos	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:pos(mark)$/;"	f
pos	plugged/vim-rails/ftplugin/railslog.vim	/^  let pos = getpos('.')$/;"	v
pos2hint_to_line2col2hint	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:pos2hint_to_line2col2hint(pos2hint) abort$/;"	f
pos2poskey	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:pos2poskey(pos) abort$/;"	f
pos_headp	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:pos_headp(pos)$/;"	f
pos_lastp	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:pos_lastp(pos)$/;"	f
pos_le	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:pos_le(pos1, pos2)  " less than or equal$/;"	f
poskey2pos	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:poskey2pos(poskey) abort$/;"	f
post_process_images	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def post_process_images(self, doctree):$/;"	m	class:Builder
ppos	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def ppos(self):$/;"	m	class:VimState
pprint	plugged/alchemist.vim/elixir_sense.py	/^import pprint$/;"	i
prefix	plugged/vim-polyglot/ftplugin/tex_LatexBox.vim	/^	let prefix = expand('<sfile>:p:h') . '\/latex-box\/'$/;"	v
prep_cmdline	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! s:prep_cmdline(cfile, arguments) " {{{3$/;"	f
prepare	autoload/plug.vim	/^function! s:prepare(...)$/;"	f
prepare_movement	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:prepare_movement(previous_mode)$/;"	f
prepare_writing	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def prepare_writing(self, docnames):$/;"	m	class:Builder
prepend_opts	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:prepend_opts(dict, eopts)$/;"	f
preserve	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def preserve(self):$/;"	m	class:_SnippetUtilCursor
pretty_command	plugged/vim-test/autoload/test/strategy.vim	/^function! s:pretty_command(cmd) abort$/;"	f
prev_module	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            prev_module = module$/;"	v
prev_module	plugged/deoplete-jedi/tests/sphinx-3000.py	/^        prev_module = ''$/;"	v
prev_non_connected_line	plugged/vim-polyglot/indent/applescript.vim	/^func! s:prev_non_connected_line(line)$/;"	f
preview	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:preview(hunk_diff)$/;"	f
previewNodeCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node)$/;"	f
preview_commit	autoload/plug.vim	/^function! s:preview_commit()$/;"	f
previous_token	plugged/vim-polyglot/indent/typescript.vim	/^function s:previous_token()$/;"	f
prevnonblanknoncomment	plugged/vim-polyglot/indent/stylus.vim	/^function s:prevnonblanknoncomment(lnum)$/;"	f
print	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^            '-c', r'import sys; print("\\n".join(sys.path))',$/;"	i
print	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def print(self, expr):$/;"	m	class:Base
print_error	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^    def print_error(self, expr):$/;"	m	class:Base
print_feedback	plugged/vim-misc/autoload/xolox/misc/test.vim	/^function! s:print_feedback() " {{{1$/;"	f
print_function	plugged/alchemist.vim/elixir_sense.py	/^from __future__ import print_function$/;"	i
print_function	plugged/alchemist.vim/elixir_sense_client	/^from __future__ import print_function$/;"	i
print_function	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
print_num	plugged/far.vim/test/very long directory name with spaces/very long file name also with spaces.py	/^def print_num(number):$/;"	f
print_section_header	plugged/vim-startify/autoload/startify.vim	/^function! s:print_section_header() abort$/;"	f
print_stack	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^def print_stack():$/;"	f
priority	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    priority = 0$/;"	v	class:Documenter
priority	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def priority(self):$/;"	m	class:SnippetDefinition
process	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def process(app, what_, name, obj, options, lines):$/;"	f	function:between
process	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def process(app, what_, name, obj, options, lines):$/;"	f	function:cut_lines
process	plugged/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
process_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_added(modifications, from_count, to_count, to_line) abort$/;"	f
process_command	plugged/alchemist.vim/elixir_sense.py	/^    def process_command(self, request, source, line, column):$/;"	m	class:ElixirSenseClient
process_doc	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def process_doc(self, docstrings):$/;"	m	class:Documenter
process_exited	plugged/deoplete.nvim/rplugin/python3/deoplete/process.py	/^    def process_exited(self):$/;"	m	class:Process
process_hunk	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_hunk(bufnr, hunk) abort$/;"	f
process_modified	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified(modifications, from_count, to_count, to_line) abort$/;"	f
process_modified_and_added	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_added(modifications, from_count, to_count, to_line) abort$/;"	f
process_modified_and_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_modified_and_removed(modifications, from_count, to_count, to_line) abort$/;"	f
process_removed	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:process_removed(modifications, from_count, to_count, to_line) abort$/;"	f
process_user_input	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:process_user_input()$/;"	f
product	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:product(lists) abort$/;"	f
product	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:product(lists) abort$/;"	f
production	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class production(nodes.Part, nodes.Inline, nodes.TextElement):$/;"	c
productionlist	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class productionlist(nodes.Admonition, nodes.Element):$/;"	c
profile	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^def profile(func):$/;"	f
profiler	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^from deoplete_jedi import cache, profiler, utils, worker$/;"	i
progress_bar	autoload/plug.vim	/^function! s:progress_bar(line, bar, total)$/;"	f
progress_opt	autoload/plug.vim	/^function! s:progress_opt(base)$/;"	f
project	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            project = opts.header,$/;"	v
project	plugged/supertab/ftplugin/html.vim	/^      let project = eclim#project#util#GetCurrentProjectName()$/;"	v
projection_pairs	plugged/vim-rails/autoload/rails.vim	/^function! s:projection_pairs(options)$/;"	f
promptToDelBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	plugged/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
proper_visual_mode	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:proper_visual_mode(lhs)$/;"	f
prototype.add_raw	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_raw(text) dict$/;"	f
prototype.add_section	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section(group, contents) dict$/;"	f
prototype.add_section_spaced	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.add_section_spaced(group, contents) dict$/;"	f
prototype.build	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.build() dict$/;"	f
prototype.build	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.build() dict$/;"	f
prototype.get_position	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.get_position() dict$/;"	f
prototype.insert_raw	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_raw(text, position) dict$/;"	f
prototype.insert_section	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.insert_section(group, contents, position) dict$/;"	f
prototype.insert_titles	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.insert_titles(current, first, last) dict$/;"	f
prototype.split	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:prototype.split(...) dict$/;"	f
prototype.try_insert_title	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:prototype.try_insert_title(index, group, pos, sep_size, force) dict$/;"	f
puppetalign	plugged/vim-polyglot/after/ftplugin/puppet.vim	/^    function! s:puppetalign()$/;"	f
push	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
push	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
push_chdir	plugged/vim-rails/autoload/rails.vim	/^function! s:push_chdir(...)$/;"	f
py_ext_sig_re	plugged/deoplete-jedi/tests/sphinx-3000.py	/^py_ext_sig_re = re.compile($/;"	v
pylint	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
pylint	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^import vim  # pylint:disable=import-error$/;"	i
pylint	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^import vim  # pylint:disable=import-error$/;"	i
python#utils#fix_qflist	plugged/vim-polyglot/autoload/python/utils.vim	/^function! python#utils#fix_qflist() " {{{$/;"	f
python3	plugged/ultisnips/test/test_Plugin.py	/^def python3():$/;"	f
python_available	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! s:python_available() " {{{2$/;"	f
python_command	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:python_command(...) " {{{2$/;"	f
python_path	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^python_path = 'python'$/;"	v
q	plugged/vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> q :call <SID>TOCClose()<CR>$/;"	m
q	plugged/vim-rails/ftplugin/railslog.vim	/^nnoremap <buffer> <silent> q :bwipe<CR>$/;"	m
qf_pre	plugged/vim-rails/autoload/rails.vim	/^function! s:qf_pre() abort$/;"	f
qflist_to_filenames	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:qflist_to_filenames() " {{{2$/;"	f
qs	plugged/deoplete-jedi/tests/sphinx-3000.py	/^        from sphinx import quickstart as qs$/;"	i
query_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:query_path(root) abort$/;"	f
query_path	plugged/vim-ruby/ftplugin/ruby.vim	/^function! s:query_path(root) abort$/;"	f
queue	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^import queue$/;"	i
queue	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^import queue$/;"	i
r	plugged/vim-polyglot/ftplugin/r.vim	/^vnoremap <buffer> r :w >> ~\/.r-pipe<CR>$/;"	m
r	plugged/vim-polyglot/ftplugin/rhelp.vim	/^vnoremap <buffer> r :w >> ~\/.r-pipe<CR>$/;"	m
r	plugged/vim-polyglot/ftplugin/rnoweb.vim	/^vnoremap <buffer> r :w >> ~\/.r-pipe<CR>$/;"	m
rails#app	plugged/vim-rails/autoload/rails.vim	/^function! rails#app(...) abort$/;"	f
rails#asset_cfile	plugged/vim-rails/autoload/rails.vim	/^function! rails#asset_cfile(...) abort$/;"	f
rails#buffer	plugged/vim-rails/autoload/rails.vim	/^function! rails#buffer(...)$/;"	f
rails#buffer_setup	plugged/vim-rails/autoload/rails.vim	/^function! rails#buffer_setup() abort$/;"	f
rails#cache_clear	plugged/vim-rails/autoload/rails.vim	/^function! rails#cache_clear(...)$/;"	f
rails#camelize	plugged/vim-rails/autoload/rails.vim	/^function! rails#camelize(str) abort$/;"	f
rails#cfile	plugged/vim-rails/autoload/rails.vim	/^function! rails#cfile(...) abort$/;"	f
rails#command	plugged/vim-rails/autoload/rails.vim	/^function! rails#command(bang, mods, count, arg) abort$/;"	f
rails#complete_rails	plugged/vim-rails/autoload/rails.vim	/^function! rails#complete_rails(ArgLead, CmdLine, P, ...) abort$/;"	f
rails#complete_rake	plugged/vim-rails/autoload/rails.vim	/^function! rails#complete_rake(A,L,P) abort$/;"	f
rails#db_canonicalize	plugged/vim-rails/autoload/rails.vim	/^function! rails#db_canonicalize(url) abort$/;"	f
rails#db_complete_fragment	plugged/vim-rails/autoload/rails.vim	/^function! rails#db_complete_fragment(url, ...) abort$/;"	f
rails#db_test_directory	plugged/vim-rails/autoload/rails.vim	/^function! rails#db_test_directory(path) abort$/;"	f
rails#embedded_cfile	plugged/vim-rails/autoload/rails.vim	/^function! rails#embedded_cfile(...) abort$/;"	f
rails#get_binding_for	plugged/vim-rails/autoload/rails.vim	/^function! rails#get_binding_for(pid) abort$/;"	f
rails#json_parse	plugged/vim-rails/autoload/rails.vim	/^function! rails#json_parse(string) abort$/;"	f
rails#lencmp	plugged/vim-rails/autoload/rails.vim	/^function! rails#lencmp(i1, i2) abort$/;"	f
rails#pluralize	plugged/vim-rails/autoload/rails.vim	/^function! rails#pluralize(word, ...) abort$/;"	f
rails#revision	plugged/vim-rails/autoload/rails.vim	/^function! rails#revision() abort$/;"	f
rails#singularize	plugged/vim-rails/autoload/rails.vim	/^function! rails#singularize(word) abort$/;"	f
rails#sprockets_syntax	plugged/vim-rails/autoload/rails.vim	/^function! rails#sprockets_syntax() abort$/;"	f
rails#underscore	plugged/vim-rails/autoload/rails.vim	/^function! rails#underscore(str, ...) abort$/;"	f
rails#yaml_parse_file	plugged/vim-rails/autoload/rails.vim	/^function! rails#yaml_parse_file(file) abort$/;"	f
railsPluginAbolish	plugged/vim-rails/plugin/rails.vim	/^augroup railsPluginAbolish$/;"	a
railsPluginAuto	plugged/vim-rails/autoload/rails.vim	/^augroup railsPluginAuto$/;"	a
railsPluginDetect	plugged/vim-rails/plugin/rails.vim	/^augroup railsPluginDetect$/;"	a
railsPluginMake	plugged/vim-rails/autoload/rails.vim	/^augroup railsPluginMake$/;"	a
rails_version	plugged/vim-test/autoload/test/ruby/rails.vim	/^function! s:rails_version() abort$/;"	f
rake2rails	plugged/vim-rails/autoload/rails.vim	/^function! s:rake2rails(task) abort$/;"	f
random	plugged/far.vim/test/guess.py	/^import random$/;"	i
range_containsp	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:range_containsp(range_head, range_tail, target_pos)$/;"	f
range_in_linep	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:range_in_linep(range_head, range_tail, target_pos)$/;"	f
range_no_text_without_edgesp	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:range_no_text_without_edgesp(range_head, range_tail)$/;"	f
range_select	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:range_select(range_head, range_tail, fallback_wise)$/;"	f
range_validp	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:range_validp(range_head, range_tail)$/;"	f
rdfa_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let rdfa_attributes = {'about': [], 'content': [], 'datatype': [], 'prefix': [], 'profile': [], 'property': [], 'resource': [], 'rel': relrev, 'rev': relrev, 'typeof': [], 'vocab': []}$/;"	v
rdfa_attributes_value	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let rdfa_attributes_value = {$/;"	v
re	plugged/alchemist.vim/elixir_sense.py	/^import re$/;"	i
re	plugged/alchemist.vim/rplugin/python3/deoplete/sources/alchemist.py	/^import re$/;"	i
re	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^import re$/;"	i
re	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^import re$/;"	i
re	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^import re$/;"	i
re	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/utils.py	/^import re$/;"	i
re	plugged/deoplete-jedi/tests/test.py	/^import re$/;"	i
re	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^import re$/;"	i
re	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^import re$/;"	i
re	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_auto_paren.py	/^import re$/;"	i
re	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_overlap.py	/^import re$/;"	i
re	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_remove_paren.py	/^import re$/;"	i
re	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_full_fuzzy.py	/^import re$/;"	i
re	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_fuzzy.py	/^import re$/;"	i
re	plugged/deoplete.nvim/rplugin/python3/deoplete/source/around.py	/^import re$/;"	i
re	plugged/deoplete.nvim/rplugin/python3/deoplete/source/base.py	/^import re$/;"	i
re	plugged/deoplete.nvim/rplugin/python3/deoplete/source/file.py	/^import re$/;"	i
re	plugged/deoplete.nvim/rplugin/python3/deoplete/source/member.py	/^import re$/;"	i
re	plugged/deoplete.nvim/rplugin/python3/deoplete/source/omni.py	/^import re$/;"	i
re	plugged/deoplete.nvim/rplugin/python3/deoplete/source/tag.py	/^import re$/;"	i
re	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^import re$/;"	i
re	plugged/far.vim/rplugin/python3/far/sources/shell.py	/^import re$/;"	i
re	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^import re$/;"	i
re	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^import re$/;"	i
re	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^import re$/;"	i
re	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^import re$/;"	i
re	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^import re$/;"	i
re	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^import re$/;"	i
re	plugged/ultisnips/pythonx/UltiSnips/text_objects/_visual.py	/^import re$/;"	i
re	plugged/ultisnips/test/vim_interface.py	/^import re$/;"	i
re	plugged/ultisnips/utils/get_tm_snippets.py	/^import re$/;"	i
re	plugged/vim-easytags/misc/easytags/highlight.py	/^import re$/;"	i
re	plugged/vim-notes/misc/notes/search-notes.py	/^import re$/;"	i
re	plugged/vim-polyglot/ftplugin/ocaml.vim	/^import re$/;"	m
read_content	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^function! s:read_content(content, ...) abort$/;"	f
read_stdin	plugged/alchemist.vim/elixir_sense_client	/^read_stdin = vars(__builtins__).get('raw_input',input)$/;"	v
read_text_file	plugged/ultisnips/test/vim_interface.py	/^def read_text_file(filename):$/;"	f
readable_absolute	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_absolute() dict abort$/;"	f
readable_alternate	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_alternate(...) dict abort$/;"	f
readable_alternate_candidates	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_alternate_candidates(...) dict abort$/;"	f
readable_app	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_app() dict abort$/;"	f
readable_calculate_file_type	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_calculate_file_type() dict abort$/;"	f
readable_controller_name	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_controller_name(...) dict abort$/;"	f
readable_default_rake_task	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_default_rake_task(...) dict abort$/;"	f
readable_default_task	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_default_task(...) dict abort$/;"	f
readable_define_pattern	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_define_pattern() dict abort$/;"	f
readable_end_of	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_end_of(lnum) dict abort$/;"	f
readable_find_affinity	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_find_affinity() dict abort$/;"	f
readable_format	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_format(start) dict abort$/;"	f
readable_last_method	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_last_method(start) dict abort$/;"	f
readable_last_method_line	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_last_method_line(start) dict abort$/;"	f
readable_last_opening_line	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_last_opening_line(start,pattern,limit) dict abort$/;"	f
readable_line_count	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_line_count() dict abort$/;"	f
readable_model_name	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_model_name(...) dict abort$/;"	f
readable_open_command	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_open_command(cmd, argument, name, projections) dict abort$/;"	f
readable_params	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_params(...) dict abort$/;"	f
readable_preview_urls	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_preview_urls(lnum) dict abort$/;"	f
readable_projected	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_projected(key, ...) dict abort$/;"	f
readable_projected_with_raw	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_projected_with_raw(key, ...) dict abort$/;"	f
readable_related	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_related(...) dict abort$/;"	f
readable_relative	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_relative() dict abort$/;"	f
readable_resolve_layout	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_resolve_layout(name, ...) dict abort$/;"	f
readable_resolve_view	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_resolve_view(name, ...) dict abort$/;"	f
readable_runner_command	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_runner_command(bang, count, arg) dict abort$/;"	f
readable_spec	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_spec() dict abort$/;"	f
readable_test_file	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_test_file() dict abort$/;"	f
readable_test_file_candidates	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_test_file_candidates() dict abort$/;"	f
readable_type_name	plugged/vim-rails/autoload/rails.vim	/^function! s:readable_type_name(...) dict abort$/;"	f
readfile	plugged/vim-misc/autoload/xolox/misc/os.vim	/^function! s:readfile(fname, label, cmd) " {{{1$/;"	f
readfile	plugged/vim-rails/autoload/rails.vim	/^function! s:readfile(path,...)$/;"	f
reap	autoload/plug.vim	/^function! s:reap(name)$/;"	f
reap_cache	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^def reap_cache(max_age=300):$/;"	f
recall	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:recall() abort$/;"	f
recurse_tree	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def recurse_tree(rootpath, excludes, opts):$/;"	f
redraw	plugged/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
reduce_line	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^function! s:reduce_line(lines)$/;"	f
referrerpolicy	plugged/vim-polyglot/autoload/xml/html5.vim	/^let referrerpolicy = ['no-referrer', 'no-referrer-when-downgrade', 'same-origin', 'origin', 'strict-origin', 'origin-when-cross-origin', 'strict-origin-when-cross-origin', 'unsafe-url']$/;"	v
refresh	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def refresh(self):$/;"	m	class:SnippetSource
refresh	plugged/ultisnips/pythonx/UltiSnips/snippet/source/file/_base.py	/^    def refresh(self):$/;"	m	class:SnippetFileSource
refreshCurrent	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot()$/;"	f
refresh_line_numbers	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:refresh_line_numbers()$/;"	f
regExForName	plugged/deoplete-ternjs/tests/test.js	/^  regExForName: "", \/\/ define regex for name validation$/;"	p	class:MYAPP.commonMethod
regExForPhone	plugged/deoplete-ternjs/tests/test.js	/^  regExForPhone: "", \/\/ define regex for phone no validation$/;"	p	class:MYAPP.commonMethod
region	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:region(start_mark, end_mark)$/;"	f
regionize	plugged/vim-textobj-user/t/move.vim	/^function! s:regionize(bp, ep)$/;"	f
register	plugged/vim-startify/autoload/startify.vim	/^function! s:register(line, index, type, cmd, path)$/;"	f
register.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:register.restore() abort$/;"	f
register_language	plugged/vim-polyglot/syntax/vue.vim	/^function! s:register_language(language, tag, ...)$/;"	f
register_mapping	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:register_mapping(command, shortcut, has_count)$/;"	f
register_snippet_source	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def register_snippet_source(self, name, snippet_source):$/;"	m	class:SnippetManager
regress_bar	autoload/plug.vim	/^function! s:regress_bar()$/;"	f
regular	plugged/vim-rails/after/syntax/ruby/rails.vim	/^let regular = filter(copy(keywords), 'v:val =~# ''^\\h\\k*$''')$/;"	v
reindent	plugged/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
relationship_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let relationship_attributes = {$/;"	v
relative_uri	plugged/deoplete-jedi/tests/sphinx-3000.py	/^from sphinx.util.osutil import SEP, relative_uri$/;"	i
release	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            release = opts.release or opts.version or '',$/;"	v
relglob	plugged/vim-rails/autoload/rails.vim	/^function! s:relglob(...)$/;"	f
reload	plugged/emmet-vim/unittest.vim	/^function! s:reload(d)$/;"	f
reload_log	plugged/vim-rails/ftplugin/railslog.vim	/^function! s:reload_log() abort$/;"	f
reload_plugins	autoload/plug.vim	/^function! s:reload_plugins()$/;"	f
relrev	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let relrev = ['chapter', 'contents', 'copyright', 'first', 'glossary', 'help', 'icon', 'index', 'last', 'license', 'meta', 'next', 'p3pv1', 'prev', 'role', 'section', 'stylesheet', 'subsection', 'start', 'top', 'up']$/;"	v
relsz	plugged/goyo.vim/autoload/goyo.vim	/^function! s:relsz(expr, limit)$/;"	f
remember_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_buffer(self, to):$/;"	m	class:VimState
remember_position	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_position(self):$/;"	m	class:VimState
remember_unnamed_register	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remember_unnamed_register(self, text_to_expect):$/;"	m	class:VimState
remembered_buffer	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def remembered_buffer(self):$/;"	m	class:VimState
removeChild	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:removeChild(tag) dict abort$/;"	f
removeListener	plugged/deoplete-ternjs/tests/test.js	/^    removeListener: function(el, type, fn) {$/;"	m	class:MYAPP.event
removeTag	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:removeTag(tag) dict abort$/;"	f
remove_all_bookmarks	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:remove_all_bookmarks()$/;"	f
remove_ansi_sequences	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:remove_ansi_sequences(text) abort$/;"	f
remove_auto_close	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:remove_auto_close()$/;"	f
remove_group	plugged/vim-bookmarks/examples/bm-autoload-example.vim	/^function! s:remove_group()$/;"	f
remove_layout	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:remove_layout(opts)$/;"	f
remove_path	plugged/vim-test/spec/dotnet_spec.vim	/^function! s:remove_path(cmd)$/;"	f
remove_path	plugged/vim-test/spec/dotnet_xunit_spec.vim	/^function! s:remove_path(cmd)$/;"	f
remove_rtp	autoload/plug.vim	/^function! s:remove_rtp()$/;"	f
remove_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:remove_signs(bufnr, sign_ids, all_signs) abort$/;"	f
remove_triggers	autoload/plug.vim	/^function! s:remove_triggers(name)$/;"	f
render	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def render(self, template, context):$/;"	m	class:TemplateBridge
render_string	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def render_string(self, template, context):$/;"	m	class:TemplateBridge
reorg_rtp	autoload/plug.vim	/^function! s:reorg_rtp()$/;"	f
repair_posix_text	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:repair_posix_text(text, ...) abort$/;"	f
repeat#invalidate	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#invalidate()$/;"	f
repeat#run	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#run(count)$/;"	f
repeat#set	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeat#setreg	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#setreg(sequence,register)$/;"	f
repeat#wrap	plugged/vim-repeat/autoload/repeat.vim	/^function! repeat#wrap(command,count)$/;"	f
repeatPlugin	plugged/vim-repeat/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
repeated_find	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:repeated_find(ai_mode)$/;"	f
replace	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^    def replace(self, match):$/;"	m	class:_CleverReplace
replace	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace_first	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
replace_initial_text	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def replace_initial_text(self, buf):$/;"	m	class:SnippetInstance
replace_vars	plugged/ultisnips/utils/get_tm_snippets.py	/^def replace_vars(m):$/;"	f
replay_user_edits	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def replay_user_edits(self, cmds, ctab=None):$/;"	m	class:SnippetInstance
repo	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
report_results	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! s:report_results(response, async) " {{{2$/;"	f
request	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^from urllib import request$/;"	i
require_fireplace	plugged/vim-test/autoload/test/clojure/fireplacetest.vim	/^function! s:require_fireplace() abort$/;"	f
require_sphinx	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def require_sphinx(self, version):$/;"	m	class:Sphinx
requires_segment_info	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^from powerline.theme import requires_segment_info$/;"	i
reset	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:reset() abort dict$/;"	f
reset	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def reset(self):$/;"	m	class:IndentUtil
reset	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def reset(self):$/;"	m	class:VisualContentPreserver
reset_indent	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def reset_indent(self):$/;"	m	class:SnippetUtil
reset_summary	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:reset_summary(bufnr) abort$/;"	f
reset_tick	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:reset_tick(bufnr) abort$/;"	f
reset_untracked_cache	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:reset_untracked_cache(shellcmdpost)$/;"	f
resetomnicomplete	plugged/vim-rails/autoload/rails.vim	/^function! s:resetomnicomplete()$/;"	f
resize_pads	plugged/goyo.vim/autoload/goyo.vim	/^function! s:resize_pads()$/;"	f
resolve_ambiguity	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_base.py	/^def resolve_ambiguity(all_tokens, seen_ts):$/;"	f
resolve_ambiguity	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.snippet.parsing._base import tokenize_snippet_text, finalize, resolve_ambiguity$/;"	i
resolve_ambiguity	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^from UltiSnips.snippet.parsing._base import tokenize_snippet_text, finalize, resolve_ambiguity$/;"	i
resolve_import	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def resolve_import(self, completion, depth=0, max_depth=10, seen=None):$/;"	m	class:Server
resolve_name	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def resolve_name(self, modname, parents, path, base):$/;"	m	class:ClassLevelDocumenter
resolve_name	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def resolve_name(self, modname, parents, path, base):$/;"	m	class:Documenter
resolve_name	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def resolve_name(self, modname, parents, path, base):$/;"	m	class:ModuleDocumenter
resolve_name	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def resolve_name(self, modname, parents, path, base):$/;"	m	class:ModuleLevelDocumenter
restart	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def restart(self):$/;"	m	class:Client
restore_cursor_state	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:restore_cursor_state(visualmode) "{{{$/;"	f
restore_shell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:restore_shell() abort$/;"	f
restore_unnamed_register	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def restore_unnamed_register(self):$/;"	m	class:VimState
restore_view	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:restore_view()$/;"	f
restorescreen	plugged/vim-test/autoload/test/strategy.vim	/^function! s:restorescreen() abort$/;"	f
result	plugged/vim-bookmarks/t/bm_spec.vim	/^    let result = bm#deserialize(data)$/;"	v
result_of_executing_the_commands	plugged/vim-ruby-refactoring/features/support/shared_methods.rb	/^def result_of_executing_the_commands$/;"	f
retrieve	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^def retrieve(key):$/;"	f
retry	autoload/plug.vim	/^function! s:retry()$/;"	f
retry_completion	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^def retry_completion(func):$/;"	f
returnAppleScriptIndent	plugged/vim-polyglot/indent/applescript.vim	/^func! s:returnAppleScriptIndent()$/;"	f
return_key	plugged/vim-ruby-refactoring/features/support/shared_methods.rb	/^def return_key$/;"	f
reuseWin	plugged/nerdtree/autoload/nerdtree.vim	/^function! s:reuseWin(dir) abort$/;"	f
reverse	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
revert	autoload/plug.vim	/^function! s:revert()$/;"	f
revert_highlight_fix	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:revert_highlight_fix()$/;"	f
revert_mode	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:revert_mode(from, to)$/;"	f
rgb	plugged/one/colors/one.vim	/^  fun <SID>rgb(rgb)$/;"	f
rgb	plugged/vim-one/colors/one.vim	/^  fun <SID>rgb(rgb)$/;"	f
rgb_color	plugged/one/colors/one.vim	/^  fun <SID>rgb_color(x, y, z)$/;"	f
rgb_color	plugged/vim-one/colors/one.vim	/^  fun <SID>rgb_color(x, y, z)$/;"	f
rgb_level	plugged/one/colors/one.vim	/^  fun <SID>rgb_level(n)$/;"	f
rgb_level	plugged/vim-one/colors/one.vim	/^  fun <SID>rgb_level(n)$/;"	f
rgb_number	plugged/one/colors/one.vim	/^  fun <SID>rgb_number(x)$/;"	f
rgb_number	plugged/vim-one/colors/one.vim	/^  fun <SID>rgb_number(x)$/;"	f
rhs_escape	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:rhs_escape(pattern)$/;"	f
rhs_key_list	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:rhs_key_list(...)$/;"	f
rm_rf	autoload/plug.vim	/^function! s:rm_rf(dir)$/;"	f
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, dpub_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, graphic_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(role, landmark_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role = extend(widget_role, document_structure)$/;"	v
role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(role, dpub_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(role, landmark_role)$/;"	v
role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let role = extend(widget_role, document_structure)$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes = {}$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['alert'] = role_attributes['region']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['alertdialog'] = role_attributes['alert'] + role_attributes['dialog']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['application'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['article'] = role_attributes['document'] + role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['banner'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['button'] = role_attributes['region'] + role_attributes['menuitemcheckbox']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['cell'] = abstract_role['section'] + ['aria-colindex', 'aria-colspan', 'aria-rowindex', 'aria-rowspan']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['checkbox'] = abstract_role['input'] + ['aria-checked'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['columnheader'] = role_attributes['gridcell'] + abstract_role['sectionhead'] + ['aria-sort']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['combobox'] = abstract_role['select'] + ['aria-expanded', 'aria-required'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['complementary'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['contentinfo'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['default'] = abstract_role['roletype']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['definition'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['dialog'] = abstract_role['window']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['directory'] = role_attributes['list'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['document'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['feed'] = role_attributes['list']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['figure'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['form'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['grid'] = abstract_role['composite'] + role_attributes['region'] + ['aria-level', 'aria-multiselectable', 'aria-readonly']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['gridcell'] = abstract_role['section'] + abstract_role['widget']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['group'] = abstract_role['section']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['heading'] = abstract_role['sectionhead'] + ['aria-level'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['img'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['link'] = abstract_role['widget'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['list'] = role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['listbox'] = role_attributes['list'] + abstract_role['select'] + ['aria-multiselectable', 'aria-required']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['listitem'] = abstract_role['section']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['log'] = role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['main'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['marquee'] = role_attributes['region'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['math'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menu'] =  role_attributes['list'] + abstract_role['select'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menubar'] = role_attributes['menu'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitem'] = abstract_role['input'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitemcheckbox'] = role_attributes['menuitem'] + role_attributes['checkbox']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['menuitemradio'] = role_attributes['menuitemcheckbox'] + role_attributes['radio']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['navigation'] = abstract_role['landmark'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['none'] = role_attributes['presentation']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['note'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['option'] = abstract_role['input'] + ['aria-checked', 'aria-posinset', 'aria-selected', 'aria-setsize']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['presentation'] = abstract_role['structure']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['progressbar'] = abstract_role['widget'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow', 'aria-valuetext']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['radio'] = role_attributes['checkbox'] + role_attributes['option']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['radiogroup'] = abstract_role['select'] + ['aria-required']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['region'] = abstract_role['section']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['row'] = role_attributes['group'] + ['aria-level', 'aria-selected']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['rowheader'] = role_attributes['gridcell'] + abstract_role['sectionhead']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['scrollbar'] = abstract_role['range'] + ['aria-controls', 'aria-orientation', 'aria-valuemax', 'aria-valuemin', 'aria-valuenow']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['search'] = abstract_role['landmark']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['searchbox'] = role_attributes['textbox']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['separator'] = abstract_role['structure'] + ['aria-expanded'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['slider'] = abstract_role['range'] + ['aria-valuemax', 'aria-valuemin', 'aria-valuenow']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['spinbutton'] = abstract_role['composite'] + abstract_role['range'] + ['aria-required'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['status'] = abstract_role['composite'] + role_attributes['region']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['switch'] = role_attributes['checkbox']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tab'] = abstract_role['sectionhead'] + abstract_role['widget'] + ['aria-selected']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['table'] = abstract_role['section'] + ['aria-colcount', 'aria-rowcount']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tablist'] = abstract_role['composite'] + role_attributes['directory']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tabpanel'] = role_attributes['region']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['term'] = abstract_role['section']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['textbox'] = abstract_role['input'] + ['aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['timer'] = role_attributes['status'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['toolbar'] = role_attributes['group'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tooltip'] = abstract_role['section'] $/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['tree'] = abstract_role['select'] + ['aria-multiselectable', 'aria-required']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['treegrid'] = role_attributes['grid'] + role_attributes['tree']$/;"	v
role_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let role_attributes['treeitem'] = role_attributes['listitem'] + role_attributes['option']$/;"	v
roles	plugged/deoplete-jedi/tests/sphinx-3000.py	/^from sphinx import roles       # noqa$/;"	i
root	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^root = logging.getLogger('deoplete')$/;"	v
rootpath	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    rootpath = path.abspath(rootpath)$/;"	v
rplugin_runtime_paths	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/utils.py	/^def rplugin_runtime_paths(context):$/;"	f
rquote	plugged/vim-rails/autoload/rails.vim	/^function! s:rquote(str)$/;"	f
rtp	autoload/plug.vim	/^  function! s:rtp(spec)$/;"	f
ruby_cfile	plugged/vim-rails/autoload/rails.vim	/^function! s:ruby_cfile() abort$/;"	f
ruby_determine_variables	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_determine_variables(block) $/;"	f
ruby_identify_methods	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_identify_methods( tuples )$/;"	f
ruby_identify_tokens	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_identify_tokens( tokenlist )$/;"	f
ruby_identify_variables	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_identify_variables( tuples )$/;"	f
ruby_minlines	plugged/vim-polyglot/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
ruby_minlines	plugged/vim-ruby/syntax/ruby.vim	/^    let ruby_minlines = 500$/;"	v
ruby_tokenize	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:ruby_tokenize( block )$/;"	f
rubycomplete#Complete	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Complete	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Complete(findstart, base)$/;"	f
rubycomplete#Init	plugged/vim-polyglot/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
rubycomplete#Init	plugged/vim-ruby/autoload/rubycomplete.vim	/^function! rubycomplete#Init()$/;"	f
run	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def run(self):$/;"	m	class:Server
run	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^    def run(self):$/;"	m	class:Worker
run	plugged/vim-misc/autoload/xolox/misc/perm.vim	/^function! s:run(command, ...)$/;"	f
runTest	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_Base
runTest	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    def runTest(self):$/;"	m	class:_BaseGuessing
runTest	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    def runTest(self):$/;"	m	class:_MPBase
runTest	plugged/ultisnips/test/vim_test_case.py	/^    def runTest(self):$/;"	m	class:VimTestCase
run_cmd	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:run_cmd(cmd) abort$/;"	f
run_command	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def run_command(self, query, pos, fragments=True, silent=False):$/;"	m	class:Source
run_scanner	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:run_scanner(keywords, matches) " {{{2$/;"	f
run_spec	plugged/vim-polyglot/autoload/crystal_lang.vim	/^function! s:run_spec(root, path, ...) abort$/;"	f
running_on_windows	plugged/ultisnips/test/test_Chars.py	/^from test.util import running_on_windows$/;"	i
running_on_windows	plugged/ultisnips/test/test_Format.py	/^from test.util import running_on_windows$/;"	i
running_on_windows	plugged/ultisnips/test/test_Interpolation.py	/^from test.util import running_on_windows$/;"	i
running_on_windows	plugged/ultisnips/test/test_SnippetOptions.py	/^from test.util import running_on_windows$/;"	i
running_on_windows	plugged/ultisnips/test/test_UltiSnipFunc.py	/^from test.util import running_on_windows$/;"	i
running_on_windows	plugged/ultisnips/test/util.py	/^def running_on_windows():$/;"	f
rust	plugged/vim-polyglot/ftplugin/rust.vim	/^augroup rust.vim$/;"	a
rust#AppendCmdLine	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#AppendCmdLine(text)$/;"	f
rust#CompleteExpand	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#CompleteExpand(lead, line, pos)$/;"	f
rust#Emit	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Emit(type, args)$/;"	f
rust#Expand	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Expand(bang, args)$/;"	f
rust#Jump	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Jump(mode, function) range$/;"	f
rust#Play	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Play(count, line1, line2, ...) abort$/;"	f
rust#Run	plugged/vim-polyglot/autoload/rust.vim	/^function! rust#Run(bang, args)$/;"	f
rustfmt#Format	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#Format()$/;"	f
rustfmt#FormatRange	plugged/vim-polyglot/autoload/rustfmt.vim	/^function! rustfmt#FormatRange(line1, line2)$/;"	f
rv	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def rv(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
rv	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def rv(self, value):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
s	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    s = Server(args.desc_length, args.short_types, args.docstrings)$/;"	v	class:Client
s	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            dbg('[autodoc] from %s import %s',$/;"	i
s	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            dbg('[autodoc] import %s', self.modname)$/;"	i
s	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            raise ExtensionError('Could not import extension %s' % extension,$/;"	i
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['asdf', 'func'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['conditional'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['hi'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['paste'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['text', 'raw', 'func'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create(['whitespace'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'aaaa', 'raw'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['asdf', 'raw'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_left(['text', 'text'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['%t', 'asdf', '%{getcwd()}'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['ffenc','%{strftime("%H:%M")}'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['raw', '%f'])$/;"	v
s	plugged/vim-airline/t/section.vim	/^    let s = airline#section#create_right(['text', 'text'])$/;"	v
s	plugged/vim-bookmarks/t/bm_spec.vim	/^    let s = l:bm_sessions["default"]$/;"	v
s	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map s <Plug>(easymotion-sn)$/;"	m
s	plugged/vim-easymotion/t/smartsign_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	plugged/vim-easymotion/t/smartsign_spec.vim	/^        map s <Plug>(easymotion-s2)$/;"	m
s	plugged/vim-polyglot/ftplugin/latextoc.vim	/^nnoremap <buffer> <silent> s :call <SID>TOCToggleNumbers()<CR>$/;"	m
s!1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s!1$/;"	m
s"1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s"1$/;"	m
s#1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s#1$/;"	m
s$1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s$1$/;"	m
s%1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s%1$/;"	m
s&1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s&1$/;"	m
s'1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s'1$/;"	m
s'2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s'2$/;"	m
s'3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s'3$/;"	m
s(1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s(1$/;"	m
s)1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s)1$/;"	m
s**1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s**1$/;"	m
s*1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s*1$/;"	m
s*81	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s*81$/;"	m
s+1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s+1$/;"	m
s,	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s, 1$/;"	m
s,,1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s,,1$/;"	m
s,,3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s,,3$/;"	m
s,1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s,1$/;"	m
s,2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s,2$/;"	m
s,3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s,3$/;"	m
s,<1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s,<1$/;"	m
s-1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s-1$/;"	m
s-2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s-2$/;"	m
s-3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s-3$/;"	m
s.1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s.1$/;"	m
s.2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s.2$/;"	m
s.3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s.3$/;"	m
s/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map s\/ <Plug>(easymotion-sn)$/;"	m
s/1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s\/1$/;"	m
s/2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s\/2$/;"	m
s/3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s\/3$/;"	m
s01	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s01$/;"	m
s02	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s02$/;"	m
s03	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s03$/;"	m
s1*22	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s1*22$/;"	m
s11	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s11$/;"	m
s12	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s12$/;"	m
s13	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s13$/;"	m
s21	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s21$/;"	m
s22	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s22$/;"	m
s23	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s23$/;"	m
s31	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s31$/;"	m
s32	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s32$/;"	m
s33	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s33$/;"	m
s41	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s41$/;"	m
s42	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s42$/;"	m
s43	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s43$/;"	m
s51	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s51$/;"	m
s52	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s52$/;"	m
s53	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s53$/;"	m
s61	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s61$/;"	m
s62	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s62$/;"	m
s63	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s63$/;"	m
s71	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s71$/;"	m
s72	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s72$/;"	m
s73	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s73$/;"	m
s8*1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s8*1$/;"	m
s81	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s81$/;"	m
s82	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s82$/;"	m
s83	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s83$/;"	m
s881	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s881$/;"	m
s91	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s91$/;"	m
s92	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s92$/;"	m
s93	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s93$/;"	m
s:1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s:1$/;"	m
s:BB	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:BB = [s:gui_termfg, s:gui_termbg, s:cterm_termfg, s:cterm_termbg] " Branch and file format blocks$/;"	v
s:BB	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:BB = [s:gui_termfg, s:gui_termbg, s:cterm_termfg, s:cterm_termbg] " Branch and file format blocks$/;"	v
s:BEGIN_BLOCK	plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK = s:BEGIN_BLOCK_KEYWORD . '\\|' . s:COMPOUND_EXPRESSION$/;"	v
s:BEGIN_BLOCK_KEYWORD	plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK_KEYWORD = '\\C^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:BEGIN_BLOCK_OP	plugged/vim-polyglot/indent/coffee.vim	/^let s:BEGIN_BLOCK_OP = '[([{:=]$'$/;"	v
s:BRACKET_CONTINUATION	plugged/vim-polyglot/indent/coffee.vim	/^let s:BRACKET_CONTINUATION = '^\\s*[}\\])]\\s*' . s:CONTINUATION_OP$/;"	v
s:BRACKET_PAIRS	plugged/vim-polyglot/indent/coffee.vim	/^let s:BRACKET_PAIRS = {']': '\\[', '}': '{', ')': '('}$/;"	v
s:BREAK_BLOCK_OP	plugged/vim-polyglot/indent/coffee.vim	/^let s:BREAK_BLOCK_OP = '\\C^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:Bookmark	plugged/nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Buffer	plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^let s:Buffer = vital#easymotion#import('Vim.Buffer')$/;"	v
s:C	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:C = s:V.import('ColorEcho')$/;"	v
s:C1	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:C1 = [ '#0E3B4F' , '#FEFCF9' , 189 , 55  , '' ]$/;"	v
s:C2	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:C2 = [ '#0E3B4F' , '#DDC6AF' , 231 , 98  , '' ]$/;"	v
s:C3	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:C3 = [ '#ffffff' , '#B9A695' , 55  , 231 , '' ]$/;"	v
s:COLORS	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:COLORS = {$/;"	v
s:COMPOUND_ASSIGNMENT	plugged/vim-polyglot/indent/ls.vim	/^let s:COMPOUND_ASSIGNMENT = '[:=]\\s*\\%(if\\|unless\\|for\\|while\\|until\\|'$/;"	v
s:COMPOUND_EXPRESSION	plugged/vim-polyglot/indent/coffee.vim	/^let s:COMPOUND_EXPRESSION = '\\C\\%([^-]-\\|[^+]+\\|[^\/]\/\\|[:=*%&|^<>]\\)\\s*'$/;"	v
s:CONTAINED_THEN	plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTAINED_THEN = '\\C[(\\[].\\{-}\\<then\\>.\\{-\\}[)\\]]'$/;"	v
s:CONTINUATION	plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTINUATION = s:CONTINUATION_OP . '\\|' . s:BEGIN_BLOCK_OP$/;"	v
s:CONTINUATION	plugged/vim-polyglot/indent/ls.vim	/^let s:CONTINUATION = '\\<\\%(is\\|isnt\\|and\\|or\\|do\\)\\>$'$/;"	v
s:CONTINUATION_BLOCK	plugged/vim-polyglot/indent/ls.vim	/^let s:CONTINUATION_BLOCK = '[([{:=]$'$/;"	v
s:CONTINUATION_OP	plugged/vim-polyglot/indent/coffee.vim	/^let s:CONTINUATION_OP = '\\C\\%(\\<\\%(is\\|isnt\\|and\\|or\\)\\>\\|'$/;"	v
s:CP1	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:CP1 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:CP1	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:CP1 =  [ '#ffffff' , '#5f00af' , 231 , 55  ]$/;"	v
s:CP1	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:CP1 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:ctermGray  ]$/;"	v
s:CP1	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:CP1 = [ s:guiWhite , s:guiDarkGray , s:ctermWhite , s:ctermDarkGray  ]$/;"	v
s:CP1	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:CP1 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm01  ]$/;"	v
s:CP1	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:CP1 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm01  ]$/;"	v
s:CP1	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:CP1 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:CP1	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:CP1 = [s:white[1], s:grey1[1], s:white[0], s:grey1[0] ]$/;"	v
s:CP2	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:CP2 = [s:guiWhite, s:gui03, s:ctermWhite, s:cterm01]$/;"	v
s:CP2	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:CP2 =  [ '#ffffff' , '#875fd7' , 231 , 98  ]$/;"	v
s:CP2	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:CP2 = [ s:guiWhite , s:gui03 , s:ctermWhite , s:ctermGray  ]$/;"	v
s:CP2	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:CP2 = [ s:guiWhite , s:guiGray , s:ctermWhite , s:ctermDarkGray  ]$/;"	v
s:CP2	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:CP2 = [ s:guiWhite , s:gui03 , s:ctermWhite , s:cterm01  ]$/;"	v
s:CP2	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:CP2 = [ s:guiWhite , s:gui03 , s:ctermWhite , s:cterm01  ]$/;"	v
s:CP2	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:CP2 = [s:guiWhite, s:gui03, s:ctermWhite, s:cterm01]$/;"	v
s:CP2	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:CP2 = [s:white[1], s:grey1[1], s:white[0], s:grey1[0] ]$/;"	v
s:CP3	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:CP3 = [s:guiWhite, s:gui0D, s:ctermWhite, s:cterm0D]$/;"	v
s:CP3	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:CP3 =  [ '#5f00af' , '#ffffff' , 55  , 231 ]$/;"	v
s:CP3	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:CP3 = [ s:guiWhite , s:gui0D , s:ctermWhite , s:ctermBlack ]$/;"	v
s:CP3	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:CP3 = [ s:guiWhite , s:guiLavender , s:ctermWhite , s:ctermLavender  ]$/;"	v
s:CP3	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:CP3 = [ s:guiWhite , s:gui0D , s:ctermWhite , s:cterm0D  ]$/;"	v
s:CP3	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:CP3 = [ s:guiWhite , s:gui0D , s:ctermWhite , s:cterm0D  ]$/;"	v
s:CP3	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:CP3 = [s:guiWhite, s:gui0D, s:ctermWhite, s:cterm0D]$/;"	v
s:CP3	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:CP3 = [s:white[1], s:grey1[1], s:white[0], s:grey1[0] ]$/;"	v
s:CTRL_R	plugged/vim-peekaboo/autoload/peekaboo.vim	/^let s:CTRL_R = "\\<c-r>"$/;"	v
s:ConvBackPats	plugged/vim-polyglot/ftplugin/latex-box/motion.vim	/^let s:ConvBackPats = map([$/;"	v
s:Creator	plugged/nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:Cursor	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:Cursor = {}$/;"	v
s:CursorManager	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:CursorManager = {}$/;"	v
s:DEFAULT_LEVEL	plugged/vim-polyglot/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = '-1'$/;"	v
s:DEFAULT_LEVEL	plugged/vim-polyglot/indent/coffee.vim	/^  let s:DEFAULT_LEVEL = 'indent(prevnlnum)'$/;"	v
s:DIRECTION	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:DIRECTION = { 'forward': 0, 'backward': 1, 'bidirection': 2}$/;"	v
s:DIRECTION	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:DIRECTION = {'forward': 0, 'backward': 1}$/;"	v
s:DOT_ACCESS	plugged/vim-polyglot/indent/coffee.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:DOT_ACCESS	plugged/vim-polyglot/indent/ls.vim	/^let s:DOT_ACCESS = '^\\.'$/;"	v
s:ELSE_COND	plugged/vim-polyglot/indent/coffee.vim	/^let s:ELSE_COND = '\\C^\\s*else\\s\\+\\<\\%(if\\|unless\\)\\>'$/;"	v
s:EMPTY_LINE	plugged/vim-textobj-indent/autoload/textobj/indent.vim	/^let s:EMPTY_LINE = -1$/;"	v
s:ER	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:ER = airline#themes#get_highlight2(['ErrorMsg', 'bg'], ['ErrorMsg', 'fg'], 'bold')$/;"	v
s:ER	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:ER = [s:gui07, s:gui08, s:cterm07, s:cterm08]$/;"	v
s:ER	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:ER = [ '#282C34', '#E06C75', s:term_black, s:term_red ]$/;"	v
s:ER	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:ER = [ '#1C1C1C' , '#D75F5F' , 234 , 167 , '' ]$/;"	v
s:ER	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:ER = [ '#1C1C1C' , '' , 234 , 167 , '' ]$/;"	v
s:Event	plugged/nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:FALSE	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	plugged/vim-polyglot/indent/autohotkey.vim	/^let s:FALSE = 0$/;"	v
s:FUNCTION	plugged/vim-polyglot/indent/coffee.vim	/^let s:FUNCTION = '[-=]>$'$/;"	v
s:FUNCTION_IMPL_TABLE	plugged/vim-textobj-user/autoload/textobj/user.vim	/^let s:FUNCTION_IMPL_TABLE = {$/;"	v
s:FlagSet	plugged/nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:GitStatusCacheTime	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:GitStatusCacheTime = 0$/;"	v
s:GitStatusCacheTimeExpiry	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^let s:GitStatusCacheTimeExpiry = 2$/;"	v
s:Go	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let s:Go = ""$/;"	v
s:Go	plugged/auto-pairs/plugin/auto-pairs.vim	/^  let s:Go = "\\<C-G>U"$/;"	v
s:Highlight	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	let s:Highlight = s:V.import("Palette.Highlight")$/;"	v
s:Hinter	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:Hinter = {$/;"	v
s:HitAHintMotion	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^let s:HitAHintMotion = s:V.import('HitAHint.Motion')$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:I1 = [s:guiWhite, s:gui0B, s:ctermWhite, s:cterm0B]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:I1 = [ '#ffffff' , '#005fff' , 231 , 27  ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:I1 = [ '#212733' , '#80D4FF' , 0   , 80  ] " guifg guibg ctermfg ctermbg$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:I1 = [ s:guiGreen , s:guiBlack , s:ctermGreen , s:ctermBlack ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:I1 = [ '#141413' , '#0a9dff' , 232 , 39  ] " blackestgravel & tardis$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^    let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:base01, s:base0A_yellow]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:base01, s:base0D_blue]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:I1 = [s:gui_insertfg, s:gui_insertbg, s:cterm_insertfg, s:cterm_insertbg] " Outside blocks in insert mode$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:I1   = [ s:gui01, s:gui0D, s:cterm01, s:cterm0D ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:I1 = [ '#141413' , '#FDE76E' , 232 , 'yellow' ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:I1 = [ '#121212', '#00ff87', 233, 48  ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:I1 = [s:gui_med_gray_hi, s:gui_blue, s:cterm_med_gray_hi, s:cterm_blue]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:I1 = [ '#666d51' , '#fee533' , 231 , 106 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:I1 = [ '#585858' , '#E4E4E4' , 59  , 188  ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:I1 = [ '#282C34', '#61AFEF', s:term_black, s:term_blue ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:I1 = [s:outerfg[1], s:golden[1], s:outerfg[0], s:golden[0]]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:I1 = [ '#ffffff' , '#00875f' , 255 , 29  ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:I1 = [ s:guiDarkGray , s:guiDarkSeafoam , s:ctermWhite , s:ctermDarkSeafoam  ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:I1 = [ '#005f5f' , '#8abeb7' , 23  , 14 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:I1 = [ s:guiWhite , s:gui0B , s:ctermWhite , s:cterm0B  ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:I1 = [ s:guiWhite , s:gui0B , s:ctermOrange , s:ctermAsh  ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:I1 = [ '#242322' , '#7eaefd' , 234 , 111 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:I1 = [ '#1a1a18' , '#1693a5' , 232 , 62 ] " blackestgravel & crystallake$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:I1 = [ '#ffffff' , '#00875f' , 255 , 29  ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:I1 = [ '#ffffff' , '#789f00' , 231 , 106 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:I1 = [ '#E4E4E4' , '#3A3A3A' , 254 , 237 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:I1 = [ '#080808' , '#66d9ef' , 232 , 81  ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:I1 = [s:gui_insertfg, s:gui_insertbg, s:cterm_insertfg, s:cterm_insertbg] " Outside blocks in insert mode$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:I1 = [ '#585858' , '#e4e4e4' , 240 , 254 ] " Mode$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:I1 = [ '#3A3A3A' , '#60F080' , 254 , 237 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:I1 = [ '#005f5f' , '#ffffff' , 23  , 231 ] " darkestcyan    & white$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I1 = [ '#0E3B4F' , '#FFF5D9' , 17  , 45 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:I1 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:I1 = [ '#87d7ff' , '#1d1f21' , 7   , 24  ] " mediumcyan     & darkestblue$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:I1 = [ '#5fff00' , s:guibg , 82  , s:termbg ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:I1 = [s:guiWhite, s:gui0B, s:ctermWhite, s:cterm0B]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:I1 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:I1 = [ s:guibg, '#5fff00' , s:termbg , 82 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:I1 = [ '#eeeeee' , '#09643f' , 255 , 30  ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:I1 = [ '#141413' , '#FDE76E' , 232 , 3 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:I1 = [ '#f0f0f0' , '#FADE3E' , 15,  3 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:I1 = [ '#1a1a18' , '#fade3e' , 232 , 221 ] " blackestgravel & warmcorn$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:I1 = ['#FFFFFF', '#87AF5F', 15, 107] " Outside blocks in normal mode (mode and file position)$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:I1 = [s:grey1[1], s:mint[1], s:grey1[0], s:mint[0] ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:I1 = [ '#CACFD2' , '#009966' , 253 , 35  ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:I1 = [ '#141413' , '#FDE76E' , 232 , 227 ]$/;"	v
s:I1	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:I1 = [ '#eeeeee' , '#00875f' , 255 , 29  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:I2 = s:N2$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:I2 = [ '#ffffff' , '#00afff' , 231 , 39  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:I2 = [ '#80D4FF' , '#212733' , 80  , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:I2 = [ s:guiBlack , s:guiGreen , s:ctermBlack , s:ctermGreen ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:I2 = [ '#f4cf86' , '#005fff' , 222 , 27  ] " dirtyblonde    & facebook$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:I2 = [s:gui_insertbg, s:gui_termbg2, s:cterm_insertbg, s:cterm_termbg2]   " Middle block$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:I2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:I2 = [ '#FDE76E' , '#32322F' , 'yellow' , 235 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:I2 = s:N2$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:I2 = [ '#ffffff' , '#8cc2fd' , 231 , 29  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:I2 = [ '#E4E4E4' , '#47AF00' , 188 , 70  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:I2 = s:N2$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:I2 = [ '#9e9e9e' , '#303030' , 247 , 236 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:I2 = s:N2$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:I2 = [ '#c5c8c6' , '#0087af' , 15  , 31 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:I2 = s:N2$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:I2 = [ s:gui02 , s:gui01 , s:ctermAsh , s:ctermOrange  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:I2 = [ '#75d7d8' , '#242322' , 80  , 234 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:I2 = [ '#515744' , '#44403a' , 101 , 238 ] " lichen & deepgravel$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:I2 = [ '#005f00' , '#00df87' , 22  , 42  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:I2 = [ '#ffffff' , '#003f3f' , 231 , 29  ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:I2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:I2 = [ '#f8f8f0' , '#232526' , 253 , 16 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:I2 = [ '#f8f8f0' , '#232526' , 253 , 208 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:I2 = [s:gui_insertbg, s:gui_termbg2, s:cterm_insertbg, s:cterm_termbg2]   " Middle block$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:I2 = [ '#e4e4e4' , '#0087af' , 254 , 31  ] " Info$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:I2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:I2 = [ '#5fafd7' , '#0087af' , 74  , 31  ] " darkcyan       & darkblue$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I2 = [ '#0E3B4F' , '#DDE58E' , 255 , 27 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:I2 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:I2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:I2 = s:N2$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:I2 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:I2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:I2 = [ '#343434' , '#a3a3a3' , 237 , 249 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:I2 = [ '#FDE76E' , '#32322F' , 3 , 'black' ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:I2 = [ '#FADE3E' , '#deded9' ,  3,  8 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:I2 = [ '#c7b386' , '#45413b' , 252 , 238 ] " bleaksand & deepgravel$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:I2 = ['#AFAF87', '#5F5F5F', 144, 59] " Next blocks inside (branch and file format)$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:I2 = s:N2$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:I2 = [ '#d75fd7' , '#4e4e4e' , 170 , 239 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:I2 = [ '#FDE76E' , '#32322F' , 227 , 238 ]$/;"	v
s:I2	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:I2 = [ '#005f00' , '#00d787' , 22  , 42  ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:I3 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi] " inside text$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:I3 = [ '#333333' , '#efefef' , 59  , 255 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:I3 = [ '#E6E1CF' , '#212733' , 15  , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:I3 = [ s:guiGreen , s:guiBlack , s:ctermGreen , s:ctermBlack ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:I3 = [ '#0a9dff' , '#242321' , 39  , 235 ] " tardis         & darkgravel$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:base0D_blue, s:base01]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:I3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:I3 = [ '#FDE76E' , '#242424' , 'yellow' , 234 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:I3 = s:N3$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:I3 = [s:gui_blue, s:gui_med_gray_hi, s:cterm_blue, s:cterm_med_gray_hi]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:I3 = [ '#ffffff' , '#204458' , 231 , 23  ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:I3 = [ '#EEEEEE' , '#2E8700' , 231  , 28 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:I3 = [ '#61AFEF', '#282C34', s:term_blue, '' ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:I3 = [s:golden[1], s:innerbg[1], s:golden[0], s:innerbg[0]]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:I3 = [ '#87d7ff' , '#005f87' , 117 , 24  ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:I3 = [ s:guiWhite , s:guiDarkGray , s:ctermWhite , s:ctermShadow  ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:I3 = [ '#ffffff' , '#005f87' , 255 , 24 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:I3 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm00  ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:I3 = [ s:guiWhite , s:gui01 , s:ctermOrange , s:ctermBlack  ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:I3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:I3 = [ '#1693a5' , '#2e2d2a' , 39 , 235 ] " crystallake & darkgravel$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:I3 = [ '#005f5f' , '#afff87' , 23  , 156 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:I3 = [ '#ffffff' , '#002b2b' , 231 , 23  ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:I3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:I3 = [ '#f8f8f0' , '#465457' , 253 , 67  ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:I3 = [ '#eeeeee' , '#005f87' , 255 , 24  ] " StatusLine$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:I3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:I3 = [ '#87d7ff' , '#005f87' , 117 , 24  ] " mediumcyan     & darkestblue$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I3 = [ '#ffffff' , '#9ED47B' , 15  , 17 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:I3 = [ '#11c279' , '#2e2e2e' , 36 , 235 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:I3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:I3 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:I3 = [ '#0d935c' , '#e1e1e1' , 29 , 188 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:I3 = [ '#767676' , s:guibg, 243 , s:termbg ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:I3 = [ '#343434' , '#b0b0b0' , 237 , 250 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:I3 = [ '#FDE76E' , '#242424' , 3 , 233 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:I3 = [ '#FADE3E' , '#888a85' ,  3, 15 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:I3 = [ '#f4cf86' , '#242321' , 222 , 235 ] " lighttannedskin & darkgravel$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:I3 = ['#AFAF87', '#5F5F5F', 144, 59] " The middle block$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:I3 = s:N3$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:I3 = [ '#c6c6c6' , '#3a3a3a' , 251 , 237 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:I3 = [ '#FDE76E' , '#242424' , 227 , 235 ]$/;"	v
s:I3	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:I3 = [ '#005f5f' , '#afff87' , 23  , 156 ]$/;"	v
s:I4	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:I4 = [ '#FADE3E' , 'yellow' ]$/;"	v
s:I4	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I4 = [ '#ffffff' , '#6BAD3F' , 255 , 53 ]$/;"	v
s:I4	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:I4 = [ '#FADE3E' , 11 ]$/;"	v
s:I4	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:I4 = [ '#FDE76E' , '#141413' , 11,  0 ]$/;"	v
s:I4	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:I4 = [ '#FADE3E' , 221 ]$/;"	v
s:I5	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:I5 = [ '#ffffff' , '#6BAD3F' , 17  , 172 ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:IA = [s:gui_light_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:IA = [ s:IN1[1] , s:IN2[1] , s:IN1[3] , s:IN2[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:IA = [ s:N1[1] , s:N3[1] , s:N1[3] , s:N3[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:IA = [ s:N3[1] , s:N2[1] , s:N3[3] , s:N2[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let s:IA = [s:gui_dark_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let s:IA = [s:gui_dark_gray, s:gui_med_gray_hi, s:cterm_lightlight_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^    let s:IA = [s:gui_dark_gray, s:gui_med_gray_hi, s:base03_brblack, s:base01, '']$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^    let s:IA = [s:gui_dark_gray, s:gui_med_gray_hi, s:base04, s:base01, '']$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:IA = [s:gui_light_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi, '']$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:IA = [ '#4e4e4e' , '#204458' , 59 , 23 , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:IA = [s:middle[1], s:innerbg[1], s:middle[3], s:innerbg[0]]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3], s:N3[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:IA = [ '#4e4e4e' , '#002b2b' , 59 , 23 , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:IA = [ '#666666' , '#262626' , 242 , 235 , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:IA = [ '#1b1d1e' , '#465457' , 233 , 67 , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:IA = [ '#585858' , '#e4e4e4' , 240 , 254 , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:IA = [ '#666666' , '#262626' , 242 , 235 , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:IA = [ s:N2[0] , s:N3[1] , s:N2[2] , s:N3[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:IA = [ '#5e5e5e' , '#222222' , 59 , 235 , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:IA = [ s:N2[1] , s:N3[1] , s:N2[3] , s:N3[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:IA  = [ '#4e4e4e' , s:guibg  , 239 , s:termbg  , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:IA = [ '#a1a1a1' , '#dddddd' , 145 , 188 , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:IA  = [ '#4e4e4e' , s:guibg  , 239 , s:termbg  , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:IA = [ '#777777' , '#c7c7c7' , 244 , 251 , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:IA = [ s:N2[1], s:N3[1], s:N2[3], s:N3[3], '' ]	$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:IA = [ s:N1[1] , s:N3[1] , s:N1[3] , s:N3[3] , '' ]$/;"	v
s:IA	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:IA = [ '#767676' , s:N3[1] , 243 , s:N3[3] , '' ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:IA1 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:IA1   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:IA1 = [ '#4e4e4e', '#1c1c1c', 239, 234, '' ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:IA1 = [ '#585858' , '#E4E4E4' , 59 , 188 , '' ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:IA1 = [ '#282C34', '#ABB2BF', s:term_black, s:term_white ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:IA1 = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:IA1 = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:IA1 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 , '' ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:IA1 = [ '#666666' , '#b2b2b2' , 242 , 249 , '' ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:IA1 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:IA1 = [ '#0E3B4F' , '#FEFCF9' , 239 , 234 , '' ]$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:IA1 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA1	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:IA1 = [ '#6c6c6c' , '#b2b2b2' , 242 , 249 , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:IA2 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:IA2   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:IA2 = [ '#4e4e4e', '#262626', 239, 235, '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:IA2 = [ '#E4E4E4' , '#466D79' , 188 , 60 , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:IA2 = [ '#ABB2BF', '#3E4452', s:term_white, s:term_grey ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:IA2 = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:IA2 = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:IA2 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:IA2 = [ '#8a8a8a' , '#d0d0d0' , 245 , 252 , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:IA2 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:IA2 = [ '#0E3B4F' , '#DDC6AF' , 239 , 235 , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:IA2 = [ '#4e4e4e' , s:guisep , 239 , s:termsep , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:IA2 = [ '#4e4e4e' , s:guibg2 , 239 , s:termbg2 , '' ]$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:IA2 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA2	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:IA2 = [ '#8a8a8a' , '#d0d0d0' , 245 , 252 , '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:IA3 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:IA3   = [ s:gui05, s:gui01, s:cterm05, s:cterm01 ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:IA3 = [ '#4e4e4e', '#1c1c1c', 239, 234, 'bold' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:IA3 = [ '#EEEEEE' , '#324E59' , 231 , 59 , '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:IA3 = s:N2$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:IA3 = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:IA3 = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:IA3 = [ '#b2b2b2' , '#4a4a4a' , 247 , 238 , '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:IA3 = [ '#a8a8a8' , '#ffffff' , 248 , 255 , '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:IA3 = [s:gui_inactivefg, s:gui_inactivebg, s:cterm_inactivefg, s:cterm_inactivebg, '']$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:IA3 = [ '#ffffff' , '#A28E79' , 239 , 236 , '' ]$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:IA3 = ['#4E4E4E', '#1C1C1C', 239, 234, '']$/;"	v
s:IA3	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:IA3 = [ '#a8a8a8' , '#eeeeee' , 248 , 255 , '' ]$/;"	v
s:IM	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:IM = [ '#40403C' , 236 ]$/;"	v
s:IM	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:IM = [ '#40403C' , 7 ]$/;"	v
s:IM	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:IM = [ '#40403C' , 7 ]$/;"	v
s:IM	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:IM = [ '#40403C' , 238 ]$/;"	v
s:IN1	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:IN1 = [s:guiGray, s:gui01, s:ctermGray, s:cterm01]$/;"	v
s:IN1	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:IN1 = [ '#9e9e9e' , '#9e9e9e' , 247 , 247 ]$/;"	v
s:IN1	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:IN1 = [ s:guiBlack     , s:guiGray  , s:ctermBlack      , s:ctermGray  ]$/;"	v
s:IN1	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:IN1 = [ s:guiGray , s:guiDarkGray , s:ctermGray , s:ctermDarkGray ]$/;"	v
s:IN1	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:IN1 = [ s:guiGray , s:gui01 , s:ctermGray , s:cterm01 ]$/;"	v
s:IN1	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:IN1 = [ s:gui00 , s:gui01 , s:cterm00 , s:cterm01 ]$/;"	v
s:IN1	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:IN1 = [s:guiGray, s:gui01, s:ctermGray, s:cterm01]$/;"	v
s:IN1	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:IN1 = [s:grey0[1], s:grey1[1], s:grey0[0], s:grey1[0] ]$/;"	v
s:IN2	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:IN2 = [s:gui02, s:guiAlmostBlack, s:cterm02, s:ctermAlmostBlack]$/;"	v
s:IN2	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:IN2 = [ '#efefef' , '#efefef' , 255 , 255 ]$/;"	v
s:IN2	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:IN2 = [ s:guiLightgray , s:guiBlack , s:ctermLightgray , s:ctermBlack ]$/;"	v
s:IN2	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:IN2 = [ s:guiBgPurple , s:guiShadow , s:ctermBgPurple , s:ctermShadow ]$/;"	v
s:IN2	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:IN2 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00 ]$/;"	v
s:IN2	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:IN2 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00 ]$/;"	v
s:IN2	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:IN2 = [s:gui02, s:guiAlmostBlack, s:cterm02, s:ctermAlmostBlack]$/;"	v
s:IN2	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:IN2 = [s:grey0[1], s:grey1[1], s:grey0[0], s:grey1[0] ]$/;"	v
s:IN3	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:IN3 = [s:gui02, s:guiAlmostBlack, s:cterm02, s:ctermAlmostBlack]$/;"	v
s:IN3	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:IN3 = [ s:guiLightgray , s:guiBlack , s:ctermLightgray , s:ctermBlack ]$/;"	v
s:IN3	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:IN3 = [ s:guiBgPurple , s:guiShadow , s:ctermBgPurple , s:ctermShadow ]$/;"	v
s:IN3	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:IN3 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00 ]$/;"	v
s:IN3	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:IN3 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00 ]$/;"	v
s:IN3	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:IN3 = [s:gui02, s:guiAlmostBlack, s:cterm02, s:ctermAlmostBlack]$/;"	v
s:IN3	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:IN3 = [s:grey0[1], s:grey1[1], s:grey0[0], s:grey1[0] ]$/;"	v
s:INDENT_AFTER_KEYWORD	plugged/vim-polyglot/indent/ls.vim	/^let s:INDENT_AFTER_KEYWORD = '^\\%(if\\|unless\\|else\\|for\\|while\\|until\\|'$/;"	v
s:INDENT_AFTER_OPERATOR	plugged/vim-polyglot/indent/ls.vim	/^let s:INDENT_AFTER_OPERATOR = '\\%([([{:=]\\|[-=]>\\)$'$/;"	v
s:J	plugged/vim-polyglot/autoload/crystal_lang.vim	/^    let s:J = s:V.import('Web.JSON')$/;"	v
s:KEYWORD_PAIRS	plugged/vim-polyglot/indent/coffee.vim	/^let s:KEYWORD_PAIRS = [$/;"	v
s:KeyMap	plugged/nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:LabelCache	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:LabelCache = {}$/;"	v
s:Left	plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:Left = s:Go."\\<LEFT>"$/;"	v
s:MAX_LOOKBACK	plugged/vim-polyglot/indent/coffee.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MAX_LOOKBACK	plugged/vim-polyglot/indent/ls.vim	/^let s:MAX_LOOKBACK = 50$/;"	v
s:MenuController	plugged/nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	plugged/nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:N1 = [s:gui07, s:gui0D, s:cterm07, s:cterm0D]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:N1 = [ '#ffffff' , '#5f00af' , 231 , 55  ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:N1 = [ '#212733' , '#BBE67E' , 0   , 114 ] " guifg guibg ctermfg ctermbg$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:N1 = [ s:guiWhite     , s:guiBlack , s:ctermWhite     , s:ctermGray ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:N1 = [ '#141413' , '#aeee00' , 232 , 154 ] " blackestgravel & lime$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^    let s:N1 = [s:gui_dark_gray, s:gui_green, s:base01, s:base04]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:N1 = [s:gui_dark_gray, s:gui_green, s:base00_black, s:base0B_green]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:N1 = [s:gui_normalfg, s:gui_normalbg, s:cterm_normalfg, s:cterm_normalbg] " Outside blocks in normal mode$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:N1   = [ s:gui01, s:gui0B, s:cterm01, s:cterm0B ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:N1 = [ '#141413' , '#CAE682' ,  232 , 'green' ] " mode$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:N1 = [ '#121212', '#5f87ff', 233, 69  ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:N1 = [s:gui_dark_gray, s:gui_green, s:cterm_dark_gray, s:cterm_green]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:N1 = [ '#ffffff' , '#1f7ad8' , 231  , 36 ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:N1   = [ '#585858' , '#E4E4E4' , 59  , 188 ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let s:N1   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:N1 = [ '#282C34', '#98C379', s:term_black, s:term_green ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:N1 = [s:outerfg[1], s:gray[1], s:outerfg[0], s:gray[0]]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:N1 = [ '#005f00' , '#afd700' , 22  , 148 ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:N1 = [ s:guiSilver , s:guiLavender , s:ctermSilver , s:ctermLavender  ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:N1 = [ '#282a2e' , '#c5c8c6' , 'black' , 15      ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:N1 = [ s:gui07 , s:gui0D , s:cterm07 , s:cterm0D  ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:N1 = [ s:gui07 , s:gui0D , s:ctermAsh , s:ctermBlood ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:N1 = [ '#e2e2e2' , '#4f3598' , 254 , 56  ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:N1 = [ '#1a1a18' , '#ffffff' , 232 , 255 ] " blackestgravel & snow$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:N1 = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:N1 = [ '#ffffff' , '#005252' , 231  , 36 ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:N1 = [ '#E4E4E4' , '#3A3A3A' , 254 , 237 ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:N1 = [ '#080808' , '#e6db74' , 232 , 144 ] " mode$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:N1 = [s:gui_normalfg, s:gui_normalbg, s:cterm_normalfg, s:cterm_normalbg] " Outside blocks in normal mode$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:N1 = [ '#585858' , '#e4e4e4' , 240 , 254 ] " Mode$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:N1 = [ '#3A3A3A' , '#C0D8F8' , 254 , 237 ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:N1 = [ '#005f00' , '#afd700' , 22  , 148 ] " darkestgreen   & brightgreen$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:N1   = [ '#0E3B4F' , '#FFEEE5' , 17  , 190 ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:N1 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:N1 = [ '#005f00' , '#1d1f21' , 7  , 8 ]    " darkestgreen   & brightgreen$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:N1 = [ '#00dfff' , s:guibg , 45  , s:termbg ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:N1 = [s:guiWhite, s:gui0D, s:ctermWhite, s:cterm0D]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:N1 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:N1 = [ s:guibg , '#00dfff' , s:termbg , 45 ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:N1 = [ '#343434' , '#a0a0a0' , 237 , 248 ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:N1 = [ '#141413' , '#CAE682' , 232 , 2 ] " mode$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:N1 = [ '#f0f0f0' , '#86CD74' , 15,  2 ] " mode$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:N1 = [ '#141413' , '#c7b386' , 232 , 252 ] " blackestgravel & bleaksand$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:N1 = ['#FFFFFF', '#5F87FF', 15, 69]  " Outside blocks in normal mode (mode and file position)$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:N1 = [s:grey1[1], s:teal[1], s:grey1[0], s:teal[0] ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:N1 = [ '#bcbcbc' , '#875faf' , 250 , 97  ]$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:N1 = [ '#141413' , '#CAE682' , 232 , 192 ] " mode$/;"	v
s:N1	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:N1 = [ '#eeeeee' , '#005fff' , 255 , 27  ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:N2 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:N2 = [ '#ffffff' , '#875fd7' , 231 , 98  ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:N2 = [ '#BBE67E' , '#212733' , 114 , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:N2 = [ s:guiLightgray , s:guiGray  , s:ctermLightgray , s:ctermGray  ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:N2 = [ '#f4cf86' , '#45413b' , 222 , 238 ] " dirtyblonde    & deepgravel$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^    let s:N2 = [s:gui_lightlight_gray, s:gui_med_gray_lo, s:cterm_lightlight_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^    let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:base00_black, s:base02]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^    let s:N2 = [s:gui_lightlight_gray, s:gui_med_gray_lo, s:base05_white, s:base02]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:base04, s:base02]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:N2 = [s:gui_termfg2, s:gui_termbg2, s:cterm_normalbg, s:cterm_termbg2]     " Middle block$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:N2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:N2 = [ '#CAE682' , '#32322F' , 'green' , 235 ]  " info$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:N2 = [ '#5f87ff', '#262626', 69 , 235 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:N2 = [s:gui_light_gray, s:gui_med_gray_lo, s:cterm_light_gray, s:cterm_med_gray_lo]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:N2 = [ '#ffffff' , '#8cc2fd' , 231 , 29 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:N2   = [ '#E4E4E4' , '#0087AF' , 188 , 31 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let s:N2   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:N2 = [ '#ABB2BF', '#3E4452', s:term_white, s:term_grey ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:N2 = [ '#93a1a1' , '#586e75' , 245 , 240 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:N2 = [ s:guiWhite , s:guiDarkGray , s:ctermWhite , s:ctermDarkGray  ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:N2 = [ '#c5c8c6' , '#373b41' , 15      , 8       ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:N2 = [ s:guiWhite , s:gui01 , s:ctermWhite , s:cterm01  ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:N2 = [ s:guiWhite , s:gui01 , s:ctermIron , s:ctermCongealing  ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:N2 = [ '#ff5fd7' , '#242322' , 206 , 234 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:N2 = [ '#ffffff' , '#44403a' , 255, 238 ] " snow & deepgravel$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:N2 = [ '#000087' , '#00dfff' , 18  , 45  ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:N2 = [ '#ffffff' , '#003f3f' , 231 , 29 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:N2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:N2 = [ '#f8f8f0' , '#232526' , 253 , 16 ] " info$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:N2 = [ '#f8f8f0' , '#232526' , 253 , 208 ] " info$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:N2 = [s:gui_termfg2, s:gui_termbg2, s:cterm_normalbg, s:cterm_termbg2]     " Middle block$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:N2 = [ '#e4e4e4' , '#0087af' , 254 , 31  ] " Info$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:N2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:N2 = [ '#9e9e9e' , '#303030' , 247 , 236 ] " gray8          & gray2$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:N2   = [ '#0E3B4F' , '#FFD3CB' , 255 , 238 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:N2 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:N2 = [ '#9e9e9e' , '#303030' , 247 , 236 ] " gray8          & gray2$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:N2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:N2 = [s:guiWhite, s:gui01, s:ctermWhite, s:cterm01]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:N2 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:N2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:N2 = [ '#343434' , '#b3b3b3' , 237 , 250 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:N2 = [ '#CAE682' , '#32322F' , 2 , 'black' ] " info$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:N2 = [ '#86CD74' , '#deded9' ,  2,  8 ] " info$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:N2 = [ '#c7b386' , '#45413b' , 252, 238 ] " bleaksand & deepgravel$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:N2 = ['#AFAF87', '#5F5F5F', 144, 59] " Next blocks inside (branch and file format)$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:N2 = [s:white[1], s:grey2[1], s:white[0], s:grey2[0] ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:N2 = [ '#d75fd7' , '#4e4e4e' , 170 , 239 ]$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:N2 = [ '#CAE682' , '#32322F' , 192 , 238 ] " info$/;"	v
s:N2	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:N2 = [ '#000087' , '#00d7ff' , 18  , 45  ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:N3 = [s:gui02, s:guiDarkGray, s:cterm02, s:ctermDarkGray]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:N3 = [s:gui_light_gray, s:gui_med_gray_hi, s:cterm_light_gray, s:cterm_med_gray_hi] " inside text$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:N3 = [ '#333333' , '#efefef' , 59  , 255 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:N3 = [ '#E6E1CF' , '#212733' , 15  , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:N3 = [ s:guiWhite     , s:guiBlack , s:ctermWhite     , s:ctermBlack ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:N3 = [ '#8cffba' , '#242321' , 121 , 235 ] " saltwatertaffy & darkgravel$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:cterm_green, s:cterm_med_gray_hi]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^    let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:base04, s:base01]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:base0B_green, s:base01]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:N3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:N3 = [ '#CAE682' , '#242424' , 'green' , 234 ]  " statusline$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:N3 = [ '#5f87ff', '#1c1c1c', 69 , 234, 'bold' ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:N3 = [s:gui_green, s:gui_med_gray_hi, s:cterm_green, s:cterm_med_gray_hi]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:N3 = [ '#ffffff' , '#204458' , 231  , 23 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:N3   = [ '#EEEEEE' , '#005F87' , 231  , 24]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/dark_minimal.vim	/^let s:N3   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:N3 = [ '#98C379', '#282C34', s:term_green, '' ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:N3 = [s:gray[1], s:innerbg[1], s:gray[0], s:innerbg[0]]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:N3 = [ '#93a1a1' , '#073642' , 240 , 233 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:N3 = [ s:guiShadow , s:guiLavender , s:ctermBgPurple , s:ctermShadow  ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/hybridline.vim	/^let s:N3 = [ '#ffffff' , '#282a2e' , 255     , 'black' ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:N3 = [ s:gui02 , s:gui00 , s:cterm02 , s:cterm00  ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:N3 = [ s:gui02 , s:gui00 , s:ctermRed , s:ctermBlack  ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:N3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:N3 = [ '#90a680' , '#2e2d2a' , 64, 235 ] " dilutedpaint & darkgravel$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:N3 = [ '#005fff' , '#afffff' , 27  , 159 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:N3 = [ '#ffffff' , '#002b2b' , 231  , 23 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:N3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:N3 = [ '#f8f8f0' , '#465457' , 253 , 67  ] " statusline$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:N3 = [ '#eeeeee' , '#005f87' , 255 , 24  ] " StatusLine$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:N3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:N3 = [ '#ffffff' , '#121212' , 231 , 233 ] " white          & gray4$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:N3   = [ '#ffffff' , '#F7846E' , 85  , 234 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:N3 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:N3 = [ '#c8c8c8' , '#2e2e2e' , 188 , 235 ] " white          & gray4$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:N3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:N3 = [s:gui02, s:guiDarkGray, s:cterm02, s:ctermDarkGray]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:N3 = [ '#414141' , '#e1e1e1' , 59 , 188 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:N3 = [ '#767676' , s:guibg, 243 , s:termbg]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:N3 = [ '#343434' , '#c7c7c7' , 237 , 252 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:N3 = [ '#CAE682' , '#242424' , 2 , 233 ] " statusline$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:N3 = [ '#86CD74' , '#888a85' ,  2, 15 ] " statusline$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:N3 = [ '#b88853' , '#242321' , 137, 235 ] " toffee & darkgravel$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:N3 = ['#AFAF87', '#5F5F5F', 144, 59] " The middle block$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:N3 = [s:mint[1], s:grey2[1], s:mint[0], s:grey2[0] ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:N3 = [ '#c6c6c6' , '#3a3a3a' , 251 , 237 ]$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:N3 = [ '#CAE682' , '#242424' , 192 , 235 ] " statusline$/;"	v
s:N3	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:N3 = [ '#005fff' , '#afffff' , 27  , 159 ]$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:N4 = [ '#666462' , 241 ]                   " mediumgravel$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:N4 = [ '#86CD74' , 'DarkGreen' ]                " mode modified$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:N4 = [ '#777470' , 240 ] " gravel$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:N4   = [ '#ffffff' , '#FF5D4F' , 255 , 53  ]$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:N4 = [ '#86CD74' , 10 ]                   " mode modified$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:N4 = [ '#CAE682' , '#141413' , 10,  0 ] " mode modified$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:N4 = [ '#857f78' , 243 ] " gravel$/;"	v
s:N4	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:N4 = [ '#86CD74' , 113 ]                   " mode modified$/;"	v
s:NERDTree	plugged/nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTreeIndicatorMap	plugged/nerdtree-git-plugin/nerdtree_plugin/git_status.vim	/^    let s:NERDTreeIndicatorMap = {$/;"	v
s:NERDTreeSortStarIndex	plugged/nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:Notifier	plugged/nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:OUTDENT_AFTER	plugged/vim-polyglot/indent/ls.vim	/^let s:OUTDENT_AFTER = '^\\%(return\\|break\\|continue\\|throw\\)\\>'$/;"	v
s:Opener	plugged/nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:P	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:P = s:V.import('Process')$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:PA = [ '#f4cf86' , 222 ]                   " dirtyblonde$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:PA = [ '#94E42C' , 005 ]$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:PA = [ '#ab3e5d' , 161 ] " raspberry$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:PA = [ '#94E42C' , 6 ]$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:PA = [ '#94E42C' , 6 ]$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:PA = [ '#f9ef6d' , 154 ] " bleaklemon$/;"	v
s:PA	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:PA = [ '#94E42C' , 47 ]$/;"	v
s:PATTERN_FLAGS_TABLE	plugged/vim-textobj-user/autoload/textobj/user.vim	/^let s:PATTERN_FLAGS_TABLE = {$/;"	v
s:PATTERN_IMPL_TABLE	plugged/vim-textobj-user/autoload/textobj/user.vim	/^let s:PATTERN_IMPL_TABLE = {$/;"	v
s:POSTFIX_CONDITION	plugged/vim-polyglot/indent/coffee.vim	/^let s:POSTFIX_CONDITION = '\\C\\S\\s\\+\\zs\\<\\%(if\\|unless\\|when\\|while\\|until\\)\\>'$/;"	v
s:POSTFIX_CONDITION	plugged/vim-polyglot/indent/ls.vim	/^let s:POSTFIX_CONDITION = '\\S\\s\\+\\zs\\<\\%(if\\|unless\\)\\>'$/;"	v
s:PS	plugged/vim-polyglot/ftplugin/purescript.vim	/^let s:PS = []$/;"	v
s:Path	plugged/nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:QUOTE	plugged/vim-peekaboo/autoload/peekaboo.vim	/^let s:QUOTE  = '"'$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:R1 = [s:gui08, s:gui00, s:cterm08, s:cterm00]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:R1 = [ '#ffffff' , '#ff0000' , 231 , 196 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:R1 = [ s:guiOrange , s:guiBlack  , s:ctermOrange , s:ctermBlack  ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^    let s:R1 = [s:gui_dark_gray, s:gui_red, s:base01, s:base09]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:R1 = [s:gui_dark_gray, s:gui_red, s:base01, s:base08_red]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:R1 = [s:gui_replacefg, s:gui_replacebg, s:cterm_replacefg, s:cterm_replacebg]  " Outside blocks in replace mode$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:R1   = [ s:gui01, s:gui08, s:cterm01, s:cterm08 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:R1 = [ '#141413' , '#E5786D' , 232 , 'red' ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:R1 = [ '#ffffff' , '#ea9299' , 231 , 106 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:R1 = [ '#585858' , '#E4E4E4' , 59  , 188  ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:R1 = [ '#282C34', '#E06C75', s:term_black, s:term_red ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:R1 = [s:outerfg[1], s:blue[1], s:outerfg[0], s:blue[0]]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:R1 = [ s:guiFuschia , s:guiDarkGray , s:ctermFuschia, s:ctermShadow ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:R1 = [ s:gui08 , s:gui01 , s:cterm08, s:cterm00 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:R1 = [ s:gui08 , s:gui01 , s:ctermBlood, s:ctermBlack ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:R1 = [ '#d75fff' , '#ffffff','171','231']$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:R1 = [ '#E4E4E4' , '#3A3A3A' , 254 , 237 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:R1 = [ '#080808' , '#f92672' , 232 , 161 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:R1 = [s:gui_replacefg, s:gui_replacebg, s:cterm_replacefg, s:cterm_replacebg]  " Outside blocks in replace mode$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:R1 = [ '#3A3A3A' , '#D0D090' , 254 , 237 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:R1 = [ '#0E3B4F' , '#C1F9CD' , 17  , 45  ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:R1 = [s:gui08, s:gui00, s:cterm08, s:cterm00]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:R1 = [ '#141413' , '#E5786D' , 232 , 1 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:R1 = [ '#f0f0f0' , '#E55345' , 15,  1 ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:R1 = [s:hot_pink[1], s:grey2[1], s:hot_pink[0], s:grey2[0] ]$/;"	v
s:R1	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:R1 = [ '#141413' , '#E5786D' , 232 , 173 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:R2 = s:N2$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:R2 = [ '#ffffff' , '#ff5f5f' , 231 , 203 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:R2 = [ s:guiBlack  , s:guiOrange , s:ctermBlack  , s:ctermOrange ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:R2 = [s:gui_termfg, s:gui_termbg2, s:cterm_termfg, s:cterm_termbg2]            " Middle block$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:R2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:R2 = [ '#E5786D' , '#32322F' , 'red' , 235 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:R2 = [ '#ffffff' , '#8cc2fd' , 88 , 29 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:R2 = [ '#E4E4E4' , '#AF5F00' , 188 , 130  ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:R2 = s:N2$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:R2 = s:N2$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:R2 = s:N2$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:R2 = [ s:gui02 , s:gui01 , s:ctermRed , s:ctermBlack  ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:R2 = [ '#5f005f' , '#d75fff','53','171']$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:R2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:R2 = [ '#f8f8f0' , '#232526' , 253 , 16 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:R2 = [ '#f8f8f0' , '#232526' , 253 , 208 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:R2 = [s:gui_termfg, s:gui_termbg2, s:cterm_termfg, s:cterm_termbg2]            " Middle block$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:R2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:R2 = [ '#0E3B4F' , '#8BEFC7' , 255 , 27  ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:R2 = s:N2$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:R2 = [ '#E5786D' , '#32322F' , 1 , 'black' ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:R2 = [ '#E55345' , '#deded9' ,  1,  8 ]$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:R2 = s:N2$/;"	v
s:R2	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:R2 = [ '#E5786D' , '#32322F' , 173 , 238 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:R3 = s:I3$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:R3 = [ '#333333' , '#efefef' , 59  , 255 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:R3 = [ s:guiOrange , s:guiBlack  , s:ctermOrange , s:ctermBlack  ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:R3 = [s:gui_red, s:gui_med_gray_hi, s:base08_red, s:base01]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:R3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:R3 = [ '#E5786D' , '#242424' , 'red' , 234 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:R3 = [ '#ffffff' , '#204458' , 231  , 23  ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:R3 = [ '#EEEEEE' , '#875300' , 231  , 94  ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:R3 = [ '#E06C75', '#282C34', s:term_red, '' ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:R3 = [s:blue[1], s:innerbg[1], s:blue[0], s:innerbg[0]]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:R3 = s:I3$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:R3 = s:I3$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:R3 = [ s:guiWhite , s:gui01 , s:ctermIron , s:ctermBlack  ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:R3 = [ '#ff87ff' , '#8700af','213','91']$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:R3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:R3 = [ '#f8f8f0' , '#465457' , 253 , 67  ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:R3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:R3 = [ '#ffffff' , '#04BEC3' , 15  , 17  ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:R3 = s:I3$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:R3 = [ '#E5786D' , '#242424' , 1 , 233 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:R3 = [ '#E55345' , '#888a85' ,  1, 15 ]$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:R3 = s:I3$/;"	v
s:R3	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:R3 = [ '#E5786D' , '#242424' , 173 , 235 ]$/;"	v
s:R4	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:R4 = [ '#E55345' , 'red' ]$/;"	v
s:R4	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:R4 = [ '#ffffff' , '#008492' , 255 , 53  ]$/;"	v
s:R4	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:R4 = [ '#E55345' , 9 ]$/;"	v
s:R4	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:R4 = [ '#E5786D' , '#141413' ,  9,  0 ]$/;"	v
s:R4	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:R4 = [ '#E55345' , 203 ]$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:RE = [ '#212733' , '#F07178' , 0   , 167 ] " guifg guibg ctermfg ctermbg$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:RE = [ '#ff9eb8' , 211 ]                   " dress$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:RE = [ '#233e09' , 22 ] " oakleaf$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:RE = [ '#ffffff' , '#d70000' , 231 , 160 ] " white          & brightred$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:RE = [ '#ffffff' , '#d70000' , 231 , 160 ] " white          & brightred$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:RE = [ '#c7915b' , 173 ] " nut$/;"	v
s:RE	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:RE = [ '#c6c6c6' , '#ce537a' , 251, 168 ]$/;"	v
s:REPLAY	plugged/vim-peekaboo/autoload/peekaboo.vim	/^let s:REPLAY = '@'$/;"	v
s:RE_ATTR	plugged/vim-textobj-jsxattr/plugin/textobj/jsxattr.vim	/^let s:RE_ATTR = s:RE_ATTR_NAME . s:RE_ATTR_RHS$/;"	v
s:RE_ATTR_A	plugged/vim-textobj-jsxattr/plugin/textobj/jsxattr.vim	/^let s:RE_ATTR_A = '\\v\\s+' . s:RE_ATTR$/;"	v
s:RE_ATTR_I	plugged/vim-textobj-jsxattr/plugin/textobj/jsxattr.vim	/^let s:RE_ATTR_I = '\\v' . s:RE_ATTR$/;"	v
s:RE_ATTR_NAME	plugged/vim-textobj-jsxattr/plugin/textobj/jsxattr.vim	/^let s:RE_ATTR_NAME = '[a-zA-Z0-9\\-_:@\\.]+'$/;"	v
s:RE_ATTR_RHS	plugged/vim-textobj-jsxattr/plugin/textobj/jsxattr.vim	/^let s:RE_ATTR_RHS = '(\\=' . s:RE_ATTR_VALUE . ')?'$/;"	v
s:RE_ATTR_VALUE	plugged/vim-textobj-jsxattr/plugin/textobj/jsxattr.vim	/^let s:RE_ATTR_VALUE = '('$/;"	v
s:RE_BRACES	plugged/vim-textobj-jsxattr/plugin/textobj/jsxattr.vim	/^let s:RE_BRACES = '\\{[^{]*\\}'$/;"	v
s:RE_DOUBLE_QUOTED_STR	plugged/vim-textobj-jsxattr/plugin/textobj/jsxattr.vim	/^let s:RE_DOUBLE_QUOTED_STR = '"[^"]*"'$/;"	v
s:RE_SINGLE_QUOTED_STR	plugged/vim-textobj-jsxattr/plugin/textobj/jsxattr.vim	/^let s:RE_SINGLE_QUOTED_STR = "'[^']*'"$/;"	v
s:RE_WORD	plugged/vim-textobj-jsxattr/plugin/textobj/jsxattr.vim	/^let s:RE_WORD = '\\w+'$/;"	v
s:Right	plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:Right = s:Go."\\<RIGHT>"$/;"	v
s:SID	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:SID = s:GetSID()$/;"	v
s:SINGLE_LINE_ELSE	plugged/vim-polyglot/indent/coffee.vim	/^let s:SINGLE_LINE_ELSE = '\\C^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SINGLE_LINE_ELSE	plugged/vim-polyglot/indent/ls.vim	/^let s:SINGLE_LINE_ELSE = '^else\\s\\+\\%(\\<\\%(if\\|unless\\)\\>\\)\\@!'$/;"	v
s:SNR	config/plugins/nerdtree.vim	/^let s:SNR = '<SNR>'.s:SID().'_'$/;"	v
s:SNR	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val])) . "]"'), '')$/;"	v
s:SNR	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:SNR = join(map(range(len("\\<SNR>")), '"[\\\\x" . printf("%0x", char2nr("\\<SNR>"[v:val])) . "]"'), '')$/;"	v
s:SYNTAX_COMMENT	plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_COMMENT = 'coffee\\%(Comment\\|BlockComment\\|HeregexComment\\)'$/;"	v
s:SYNTAX_STRING	plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_STRING = 'coffee\\%(String\\|AssignString\\|Embed\\|Regex\\|Heregex\\|'$/;"	v
s:SYNTAX_STRING_COMMENT	plugged/vim-polyglot/indent/coffee.vim	/^let s:SYNTAX_STRING_COMMENT = s:SYNTAX_STRING . '\\|' . s:SYNTAX_COMMENT$/;"	v
s:ShiftTab	plugged/supertab/plugin/supertab.vim	/^        let s:ShiftTab = function(stab)$/;"	v
s:ShiftTab	plugged/supertab/plugin/supertab.vim	/^      let s:ShiftTab = stab$/;"	v
s:ShiftWidth	plugged/vim-polyglot/indent/coffee.vim	/^  let s:ShiftWidth = function('shiftwidth')$/;"	v
s:SourcedFile	plugged/vim-snippets/plugin/vimsnippets.vim	/^let s:SourcedFile=expand("<sfile>")$/;"	v
s:State	plugged/tagbar/autoload/tagbar/state.vim	/^let s:State = {$/;"	v
s:Strlen	plugged/tabular/autoload/tabular.vim	/^  let s:Strlen = function("strdisplaywidth")$/;"	v
s:TE	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:TE = [ '#1C1C1C' , '#3A3A3A' , 254 , 237 , '' ]$/;"	v
s:TE	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:TE = [ '#1C1C1C' , '#3A3A3A' , 254 , 237 , '' ]$/;"	v
s:TRUE	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	plugged/vim-polyglot/indent/autohotkey.vim	/^let s:TRUE = !0$/;"	v
s:TYPE	autoload/plug.vim	/^let s:TYPE = {$/;"	v
s:TYPE	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:TYPE = {'dict': type({}), 'funcref': type(function('call')), 'string': type(''), 'list': type([])}$/;"	v
s:TYPE_DICT	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_STRING	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:TYPE_STRING = type('')$/;"	v
s:Tab	plugged/supertab/plugin/supertab.vim	/^      let s:Tab = function(substitute(existing_tab, '()$', '', ''))$/;"	v
s:TabularCommands	plugged/tabular/plugin/Tabular.vim	/^let s:TabularCommands = {}$/;"	v
s:TreeDirNode	plugged/nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	plugged/nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:UI	plugged/nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:V	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:V = vital#easymotion#new()$/;"	v
s:V	plugged/vim-easymotion/autoload/EasyMotion/overwin.vim	/^let s:V = vital#easymotion#new()$/;"	v
s:V	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:V = vital#crystal#new()$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:V1 = [s:guiWhite, s:gui08, s:ctermWhite, s:cterm08]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:V1 = [ '#121212' , '#ff5f00' , 233 , 202 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:V1 = [ '#212733' , '#FFAE57' , 0   , 173 ] " guifg guibg ctermfg ctermbg$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:V1 = [ s:guiBlue  , s:guiBlack , s:ctermBlue  , s:ctermBlack ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:V1 = [ '#141413' , '#ffa724' , 232 , 214 ] " blackestgravel & orange$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^  let s:V1 = [s:gui_dark_gray, s:gui_pink, s:base01, s:base0F]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:V1 = [s:gui_dark_gray, s:gui_pink, s:base01, s:base0E_magenta]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:V1 = [s:gui_visualfg, s:gui_visualbg, s:cterm_visualfg, s:cterm_visualbg] " Outside blocks in visual mode$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:V1   = [ s:gui01, s:gui0E, s:cterm01, s:cterm0E ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:V1 = [ '#141413' , '#B5D3F3' , 232 , 'blue' ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:V1 = [ '#121212', '#5fff5f', 233, 83 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:V1 = [s:gui_dark_gray, s:gui_pink, s:cterm_dark_gray, s:cterm_pink]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:V1 = [ '#ffff9a' , '#ff9d00' , 222 , 208 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:V1 = [ '#585858' , '#E4E4E4' , 59 , 188 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:V1 = [ '#282C34', '#C678DD', s:term_black, s:term_purple ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:V1 = [s:outerfg[1], s:pink[1], s:outerfg[0], s:pink[0]]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:V1 = [ '#1a1a18' , '#ffffff' , 232 , 255 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:V1 = [ s:guiWhite , s:guiFuschia , s:ctermWhite , s:ctermFuschia ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:V1 = [ s:guiWhite , s:gui08 , s:ctermWhite , s:cterm08 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:V1 = [ s:guiWhite , s:gui08 , s:ctermAsh , s:ctermWinter ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:V1 = [ '#0087ff' , '#ffffff','33','231']$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:V1 = [ '#242322' , '#e6987a' , 234 , 180 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:V1 = [ '#1a1a18' , '#ab3e5d' , 232 , 161 ] " blackestgravel & raspberry$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:V1 = [ '#ffffff' , '#ff5f00' , 255 , 202 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:V1 = [ '#ffff9a' , '#ff8036' , 222 , 208 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:V1 = [ '#E4E4E4' , '#3A3A3A' , 254 , 237 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:V1 = [ '#080808' , '#a6e22e' , 232 , 118 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:V1 = [s:gui_visualfg, s:gui_visualbg, s:cterm_visualfg, s:cterm_visualbg] " Outside blocks in visual mode$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:V1 = [ '#005f87', '#e4e4e4', 24,  254 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:V1 = [ '#3A3A3A' , '#F0C0F0' , 254 , 237 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/powerlineish.vim	/^let s:V1 = [ '#080808' , '#ffaf00' , 232 , 214 ] " gray3          & brightestorange$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:V1 = [ '#0E3B4F' , '#FFEEE5' , 232 , 214 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:V1 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/ravenpower.vim	/^let s:V1 = [ '#080808' , '#ffaf00' , 232 , 214 ] " gray3          & brightestorange$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:V1 = [ '#dfdf00' , s:guibg , 184 , s:termbg ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:V1 = [s:guiWhite, s:gui08, s:ctermWhite, s:cterm08]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:V1 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:V1 = [ s:guibg, '#dfdf00' , s:termbg , 184 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:V1 = [ '#ffff9a' , '#ff6003' , 222 , 202 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:V1 = [ '#141413' , '#B5D3F3' , 232 , 4 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:V1 = [ '#f0f0f0' , '#7CB0E6' , 15,  4 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:V1 = [ '#1c1b1a' , '#9a4820' , 233 , 88 ] " blackgravel & warmadobe$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:V1 = ['#080808', '#FFAF00', 232, 214]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:V1 = ['#FFFFFF', '#AF5F00', 15, 130]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:V1 = [s:grey1[1], s:pink[1], s:grey1[0], s:pink[0] ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/violet.vim	/^let s:V1 = [ '#5f0000' , '#ff5faf' , 52 , 205 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:V1 = [ '#141413' , '#B5D3F3' , 232 , 153 ]$/;"	v
s:V1	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:V1 = [ '#eeeeee' , '#ff5f00' , 255 , 202 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:V2 = s:N2$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:V2 = [ '#121212' , '#ffaf00' , 233 , 214 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:V2 = [ '#FFAE57' , '#212733' , 173 , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:V2 = [ s:guiBlack , s:guiBlue  , s:ctermBlack , s:ctermBlue  ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:V2 = [ '#000000' , '#fade3e' , 16  , 221 ] " coal           & dalespale$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:V2 = [s:gui_visualbg, s:gui_termbg2, s:cterm_visualbg, s:cterm_termbg2]   " Middle block$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:V2   = [ s:gui06, s:gui02, s:cterm06, s:cterm02 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:V2 = [ '#B5D3F3' , '#32322F' , 'blue' , 235 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:V2 = s:N2$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:V2 = [ '#ffffff' , '#8cc2fd' , 231 , 29 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:V2 = [ '#E4E4E4' , '#AF2800' , 188 , 124 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:V2 = s:N2$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:V2 = [ '#ffffff' , '#44403a' , 255, 238 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:V2 = s:N2$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:V2 = s:N2$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:V2 = [ s:gui02 , s:gui01 , s:ctermWinter , s:ctermAsh  ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:V2 = [ '#005faf' , '#5fafff','25','75']$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:V2 = [ '#dbc570' , '#242322' , 186 , 234 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:V2 = [ '#000000' , '#908571' , 16 , 252 ] " coal & winterterrain$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:V2 = [ '#5f0000' , '#ffaf00' , 52  , 214 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:V2 = [ '#ffffff' , '#003f3f' , 231 , 29 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:V2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:V2 = [ '#f8f8f0' , '#232526' , 253 , 16 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^  let s:V2 = [ '#f8f8f0' , '#232526' , 253 , 208 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:V2 = [s:gui_visualbg, s:gui_termbg2, s:cterm_visualbg, s:cterm_termbg2]   " Middle block$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:V2 = [ '',        '#0087af', '',  31  ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:V2 = [ '#E4E4E4' , '#4E4E4E' , 254 , 239 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:V2 = [ '#0E3B4F' , '#FF9DA5' , 232 , 202 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:V2 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:V2 = [ '#ff5f00' , s:guibg , 202 , s:termbg ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:V2 = s:N2$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:V2 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:V2 = [ '#ff5f00' , s:guibg2, 202 , s:termbg2 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:V2 = [ '#343434' , '#a3a3a3' , 237 , 249 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:V2 = [ '#B5D3F3' , '#32322F' , 4 , 'black' ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:V2 = [ '#7CB0E6' , '#deded9' ,  4,  8 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:V2 = [ '#000000' , '#88633f' , 16 , 95 ] " coal & cappuccino$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:V2 = ['#AFAF87', '#5F5F5F', 144, 59]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:V2 = s:N2$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:V2 = [ '#B5D3F3' , '#32322F' , 153 , 238 ]$/;"	v
s:V2	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:V2 = [ '#5f0000' , '#ffaf00' , 52  , 214 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:V3 = s:I3$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/aurora.vim	/^let s:V3 = [ '#333333' , '#efefef' , 59  , 255 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/ayu_mirage.vim	/^let s:V3 = [ '#E6E1CF' , '#212733' , 15  , 0   ] " guifg guibg ctermfg ctermbg$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:V3 = [ s:guiBlue  , s:guiBlack , s:ctermBlue  , s:ctermBlack ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:V3 = [ '#000000' , '#b88853' , 16  , 137 ] " coal           & toffee$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^  let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:base0E_magenta, s:base01]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:V3   = [ s:gui09, s:gui01, s:cterm09, s:cterm01 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:V3 = [ '#B5D3F3' , '#242424' , 'blue' , 234 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:V3 = s:N3$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:V3 = [s:gui_pink, s:gui_med_gray_hi, s:cterm_pink, s:cterm_med_gray_hi]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:V3 = [ '#ffffff' , '#204458' , 231  , 23  ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/cool.vim	/^let s:V3 = [ '#EEEEEE' , '#872800' , 231  , 88  ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:V3 = [ '#C678DD', '#282C34', s:term_purple, '' ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:V3 = [s:pink[1], s:innerbg[1], s:pink[0], s:innerbg[0]]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/durant.vim	/^let s:V3 = [ '#90a680' , '#2e2d2a' , 64, 235 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:V3 = s:I3$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:V3 = s:I3$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:V3 = [ s:guiWhite , s:gui01 , s:ctermWinter , s:ctermBlack  ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/kalisi.vim	/^let s:V3 = [ '#87d7ff' , '#005faf','117','25']$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/kolor.vim	/^let s:V3 = [ '#e2e2e2' , '#4a4a4a' , 254 , 238 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:V3 = [ '#ab3e5d' , '#8c7f77' , 161 , 245 ] " raspberry & wetcoldterrain$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/light.vim	/^let s:V3 = [ '#df5f00' , '#ffff87' , 166 , 228 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:V3 = [ '#ffffff' , '#002b2b' , 231  , 23  ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:V3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/molokai.vim	/^let s:V3 = [ '#f8f8f0' , '#465457' , 253 , 67  ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/papercolor.vim	/^let s:V3 = [ '#e4e4e4', '#005f87', 254, 24  ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:V3 = [ '#EEEEEE' , '#262626' , 255 , 235 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:V3 = [ '#ffffff' , '#FF5B6F' , 15  , 52  ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:V3 = [ '#6565ff' , '#2e2e2e' , 63 , 235 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:V3 = [ '#767676' , s:guibg , 7   , s:termbg ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:V3 = s:I3$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:V3 = [ '#0000b3' , '#e1e1e1' , 19 , 188 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:V3 = [ '#767676' , s:guibg, 243 , s:termbg ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:V3 = [ '#343434' , '#b0b0b0' , 237 , 250 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:V3 = [ '#B5D3F3' , '#242424' , 4 , 233 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:V3 = [ '#7CB0E6' , '#888a85' ,  4, 15 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:V3 = [ '#88633f' , '#c7b386' , 95 , 252 ] " cappuccino & bleaksand$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/understated.vim	/^let s:V3 = ['#AFAF87', '#5F5F5F', 144, 59]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:V3 = s:I3$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:V3 = [ '#B5D3F3' , '#242424' , 153 , 235 ]$/;"	v
s:V3	plugged/vim-airline-themes/autoload/airline/themes/xtermlight.vim	/^let s:V3 = [ '#d75f00' , '#ffff87' , 166 , 228 ]$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/badwolf.vim	/^let s:V4 = [ '#c7915b' , 173 ]                   " coffee$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/base16color.vim	/^let s:V4 = [ '#7CB0E6' , 'blue' ]$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/laederon.vim	/^let s:V4 = [ '#515744' , 101 ] " lichen$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/qwq.vim	/^let s:V4 = [ '#ffffff' , '#FF003F' , 255  , 53  ]$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/term.vim	/^let s:V4 = [ '#7CB0E6' , 12 ]$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/term_light.vim	/^let s:V4 = [ '#B5D3F3' , '#141413' , 12,  0 ]$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/ubaryd.vim	/^let s:V4 = [ '#c14c3d' , 160 ] " tannedumbrella$/;"	v
s:V4	plugged/vim-airline-themes/autoload/airline/themes/wombat.vim	/^let s:V4 = [ '#7CB0E6' , 111 ]$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital = {}$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:Vital._get_module = s:_function('s:_get_builtin_module')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:Vital._get_module = s:_function('s:_get_module')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital = {}$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital._import = s:_function('s:_import')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.exists = s:_function('s:exists')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.import = s:_function('s:import')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.load = s:_function('s:load')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.plugin_name = s:_function('s:plugin_name')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.search = s:_function('s:search')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.unload = s:_function('s:unload')$/;"	v
s:Vital	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:Vital.vital_files = s:_function('s:vital_files')$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:WI = [s:gui07, s:gui09, s:cterm07, s:cterm09]$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/behelit.vim	/^let s:WI = [ '#121212', '#d7005f', 233, 161 ]$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/cobalt2.vim	/^let s:WI = [ '#204458', '#ffffff', 231, 88 ]$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^let s:WI = [ '#282C34', '#E5C07B', s:term_black, s:term_yellow ]$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/luna.vim	/^let s:WI = [ '#ffffff', '#5f0000', 231, 88 ]$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/minimalist.vim	/^let s:WI = [ '#1C1C1C' , '#FFAF5F' , 234 , 215 , '' ]$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/peaksea.vim	/^let s:WI = [ '#1C1C1C' , '#E0C060' , 234 , 215 , '' ]$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/raven.vim	/^let s:WI = [ '#ff0000', '#2e2e2e', 196, 235 ]$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/silver.vim	/^let s:WI = [ '#ff0000', '#e1e1e1', 196, 188 ]$/;"	v
s:WI	plugged/vim-airline-themes/autoload/airline/themes/sol.vim	/^let s:WI = [ '#eeeeee', '#e33900', 255, 166 ]$/;"	v
s:_UNDEFINED	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:_UNDEFINED = function('s:_undefined')$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set = {$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.and = s:_base_set.intersection$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.ge = s:_base_set.issuperset$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.le = s:_base_set.issubset$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.or = s:_base_set.union$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.sub = s:_base_set.difference$/;"	v
s:_base_set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:_base_set.xor = s:_base_set.symmetric_difference$/;"	v
s:_engine	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:_engine = exists("+regexpengine") ? '\\%#=2' : ''$/;"	v
s:_function	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  let s:_function = function('function')$/;"	v
s:_plugin_name	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_plugin_name	plugged/vim-polyglot/autoload/vital/_crystal.vim	/^let s:_plugin_name = expand('<sfile>:t:r')$/;"	v
s:_regex	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:_regex = exists("+regexpengine")$/;"	v
s:_s	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_s	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_s	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:_s = '<SNR>' . s:_SID() . '_'$/;"	v
s:_unify_path_cache	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	plugged/vim-polyglot/autoload/vital/crystal.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:abstract_prototype	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:accents	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:accents = {}$/;"	v
s:access_modifier_regex	plugged/vim-polyglot/indent/crystal.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(public\\|protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:access_modifier_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(public\\|protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:access_modifier_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:access_modifier_regex = '\\C^\\s*\\%(public\\|protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:active_winnr	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:active_winnr = -1$/;"	v
s:airline_a_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_inactive = [ '#4e4e4e' , '#1c1c1c' , 239 , 234 , '' ]$/;"	v
s:airline_a_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_insert = [ '#00005f' , '#00dfff' , 17  , 45  ]$/;"	v
s:airline_a_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_normal   = [ '#00005f' , '#dfff00' , 17  , 190 ]$/;"	v
s:airline_a_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_a_visual = [ '#000000' , '#ffaf00' , 232 , 214 ]$/;"	v
s:airline_b_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_inactive = [ '#4e4e4e' , '#262626' , 239 , 235 , '' ]$/;"	v
s:airline_b_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_insert = [ '#ffffff' , '#005fff' , 255 , 27  ]$/;"	v
s:airline_b_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_normal   = [ '#ffffff' , '#444444' , 255 , 238 ]$/;"	v
s:airline_b_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_b_visual = [ '#000000' , '#ff5f00' , 232 , 202 ]$/;"	v
s:airline_c_inactive	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_inactive = [ '#4e4e4e' , '#303030' , 239 , 236 , '' ]$/;"	v
s:airline_c_insert	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_insert = [ '#ffffff' , '#000080' , 15  , 17  ]$/;"	v
s:airline_c_normal	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_normal   = [ '#9cffd3' , '#202020' , 85  , 234 ]$/;"	v
s:airline_c_visual	plugged/vim-airline/autoload/airline/themes/dark.vim	/^let s:airline_c_visual = [ '#ffffff' , '#5f0000' , 15  , 52  ]$/;"	v
s:airline_initialized	plugged/vim-airline/plugin/airline.vim	/^let s:airline_initialized = 0$/;"	v
s:airline_tagbar_last_lookup_time	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_time = 0$/;"	v
s:airline_tagbar_last_lookup_val	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:airline_tagbar_last_lookup_val = ''$/;"	v
s:alchemist_iex_runner	plugged/alchemist.vim/after/plugin/alchemist.vim	/^  let s:alchemist_iex_runner = "ConqueTerm"$/;"	v
s:alchemist_iex_runner	plugged/alchemist.vim/after/plugin/alchemist.vim	/^  let s:alchemist_iex_runner = "terminal"$/;"	v
s:all_tokens	plugged/vim-polyglot/indent/erlang.vim	/^let s:all_tokens = {}$/;"	v
s:alphabets	plugged/vim-cursorword/autoload/cursorword.vim	/^let s:alphabets = '^[\\x00-\\x7f\\xb5\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u01bf\\u01c4-\\u02af\\u0370-\\u0373\\u0376\\u0377\\u0386-\\u0481\\u048a-\\u052f]\\+$'$/;"	v
s:anon_func_end	plugged/vim-polyglot/indent/lua.vim	/^let s:anon_func_end = '\\<end\\%(\\s*[)}]\\)\\+'$/;"	v
s:anon_func_start	plugged/vim-polyglot/indent/lua.vim	/^let s:anon_func_start = '\\S\\+\\s*[({].*\\<function\\s*(.*)\\s*$'$/;"	v
s:ansi	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:ansi = {'black': 30, 'red': 31, 'green': 32, 'yellow': 33, 'blue': 34, 'magenta': 35, 'cyan': 36}$/;"	v
s:app_prototype	plugged/vim-rails/autoload/rails.vim	/^let s:app_prototype = {}$/;"	v
s:app_prototype	plugged/vim-rails/autoload/rails.vim	/^let s:app_prototype.cache = s:cache_prototype$/;"	v
s:apps	plugged/vim-rails/autoload/rails.vim	/^  let s:apps = {}$/;"	v
s:aqua	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:aqua   = s:getGruvColor('GruvboxAqua')$/;"	v
s:aqua	plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua   = s:gb.bright_aqua$/;"	v
s:aqua	plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua   = s:gb.faded_aqua$/;"	v
s:aqua	plugged/gruvbox/colors/gruvbox.vim	/^  let s:aqua[1]   = 14$/;"	v
s:array_entry	plugged/vim-polyglot/indent/ansible.vim	/^let s:array_entry = '\\v^\\s*-\\s' " - foo$/;"	v
s:assert	plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:assert	plugged/vim-test/spec/fixtures/themis/math.vim	/^let s:assert = themis#helper("assert")$/;"	v
s:attributes	plugged/vim-polyglot/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:attributes	plugged/vim-polyglot/indent/pug.vim	/^let s:attributes = '\\%((.\\{-\\})\\)'$/;"	v
s:attributes	plugged/vim-polyglot/indent/slim.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:attributes	plugged/vim-polyglot/indent/slime.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:autocommands_done	plugged/tagbar/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:autoload_roots	plugged/vim-bookmarks/examples/bm-autoload-example.vim	/^let s:autoload_roots = []$/;"	v
s:available	plugged/vim-gitgutter/autoload/gitgutter/async.vim	/^let s:available = has('nvim') || ($/;"	v
s:backslash_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:backslash_continuation_regex = '%\\@<!\\\\\\s*$'$/;"	v
s:backslash_continuation_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:backslash_continuation_regex = '%\\@<!\\\\\\s*$'$/;"	v
s:bad_input	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:bad_input = 0$/;"	v
s:base	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	let s:base.variables.modules = s:Signals.make()$/;"	v
s:base	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^let s:base = {$/;"	v
s:base	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^let s:base = {$/;"	v
s:base	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:base = {}$/;"	v
s:base00_black	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base00_black   = 0$/;"	v
s:base01	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base01         = 18$/;"	v
s:base02	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base02         = 19$/;"	v
s:base03_brblack	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base03_brblack = 8$/;"	v
s:base04	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base04         = 20$/;"	v
s:base05_white	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base05_white   = 7$/;"	v
s:base06	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base06         = 21$/;"	v
s:base08_red	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base08_red     = 1$/;"	v
s:base09	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base09         = 16$/;"	v
s:base0A_yellow	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base0A_yellow  = 3$/;"	v
s:base0B_green	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base0B_green   = 2$/;"	v
s:base0C_cyan	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base0C_cyan    = 6$/;"	v
s:base0D_blue	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base0D_blue    = 4$/;"	v
s:base0E_magenta	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base0E_magenta = 5$/;"	v
s:base0F	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:base0F         = 17$/;"	v
s:baseIndentExpr	plugged/vim-polyglot/indent/twig.vim	/^let s:baseIndentExpr=&indentexpr$/;"	v
s:base_spec	autoload/plug.vim	/^let s:base_spec = { 'branch': 'master', 'frozen': 0 }$/;"	v
s:basic16	plugged/vim-airline/autoload/airline/msdos.vim	/^let s:basic16 = [$/;"	v
s:beflet	plugged/vim-polyglot/indent/ocaml.vim	/^let s:beflet = '^\\s*\\(initializer\\|method\\|try\\)\\|\\(\\<\\(begin\\|do\\|else\\|in\\|then\\|try\\)\\|->\\|<-\\|=\\|;\\|(\\)\\s*$'$/;"	v
s:before_function_called	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:before_function_called = 0$/;"	v
s:better_whitespace_initialized	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:better_whitespace_initialized = 0$/;"	v
s:bg0	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg0  = s:getGruvColor('GruvboxBg0')$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.dark0_hard$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.dark0_soft$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.light0_hard$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^    let s:bg0  = s:gb.light0_soft$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0  = s:gb.dark0$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0  = s:gb.light0$/;"	v
s:bg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg0[1]    = 0$/;"	v
s:bg1	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg1  = s:getGruvColor('GruvboxBg1')$/;"	v
s:bg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg1  = s:gb.dark1$/;"	v
s:bg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg1  = s:gb.light1$/;"	v
s:bg2	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg2  = s:getGruvColor('GruvboxBg2')$/;"	v
s:bg2	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg2  = s:gb.dark2$/;"	v
s:bg2	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg2  = s:gb.light2$/;"	v
s:bg3	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg3  = s:gb.dark3$/;"	v
s:bg3	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg3  = s:gb.light3$/;"	v
s:bg4	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:bg4  = s:getGruvColor('GruvboxBg4')$/;"	v
s:bg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg4  = s:gb.dark4$/;"	v
s:bg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bg4  = s:gb.light4$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = fnamemodify(s:bin.preview, ':8')$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^    let s:bin.preview = split(system('for %A in ("'.s:bin.preview.'") do @echo %~sA'), "\\n")[0]$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^  let s:bin.preview = (executable('ruby') ? 'ruby' : 'bash').' '.escape(s:bin.preview, '\\')$/;"	v
s:bin	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin = {$/;"	v
s:bin_dir	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:bin_dir = expand('<sfile>:h:h:h').'\/bin\/'$/;"	v
s:bin_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:bin_regex = '0b[01]\\%(_\\?[01]\\)*\\%(\\>\\|im\\>\\|\\ze[^01]\\)'$/;"	v
s:binop_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:binop_chars = "=+\\\\U2D*\/\\\\%÷^&|⊻<>≤≥≡≠≢∈∉⋅×∪∩⊆⊈⊂⊄⊊←→∋∌⊕⊖⊞⊟∘∧⊗⊘↑↓∨⊠±"$/;"	v
s:binop_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:binop_chars = "=+\\\\U2D*\/\\\\%÷^&|⊻<>≤≥≡≠≢∈∉⋅×∪∩⊆⊈⊂⊄⊊←→∋∌⊕⊖⊞⊟∘∧⊗⊘↑↓∨⊠±"$/;"	v
s:binop_chars_extra	plugged/vim-polyglot/autoload/julia.vim	/^let s:binop_chars_extra = "\\\\U214B\\\\U2190-\\\\U2194\\\\U219A\\\\U219B\\\\U21A0\\\\U21A3\\\\U21A6\\\\U21AE\\\\U21CE\\\\U21CF\\\\U21D2\\\\U21D4\\\\U21F4-\\\\U21FF\\\\U2208-\\\\U220D\\\\U2213\\\\U2214\\\\U2217-\\\\U2219\\\\U221D\\\\U2224-\\\\U222A\\\\U2237\\\\U2238\\\\U223A\\\\U223B\\\\U223D\\\\U223E\\\\U2240-\\\\U228B\\\\U228D-\\\\U229C\\\\U229E-\\\\U22A3\\\\U22A9\\\\U22AC\\\\U22AE\\\\U22B0-\\\\U22B7\\\\U22BB-\\\\U22BD\\\\U22C4-\\\\U22C7\\\\U22C9-\\\\U22D3\\\\U22D5-\\\\U22ED\\\\U22F2-\\\\U22FF\\\\U25B7\\\\U27C8\\\\U27C9\\\\U27D1\\\\U27D2\\\\U27D5-\\\\U27D7\\\\U27F0\\\\U27F1\\\\U27F5-\\\\U27F7\\\\U27F7\\\\U27F9-\\\\U27FF\\\\U2900-\\\\U2918\\\\U291D-\\\\U2920\\\\U2944-\\\\U2970\\\\U29B7\\\\U29B8\\\\U29BC\\\\U29BE-\\\\U29C1\\\\U29E1\\\\U29E3-\\\\U29E5\\\\U29F4\\\\U29F6\\\\U29F7\\\\U29FA\\\\U29FB\\\\U2A07\\\\U2A08\\\\U2A1D\\\\U2A22-\\\\U2A2E\\\\U2A30-\\\\U2A3D\\\\U2A40-\\\\U2A45\\\\U2A4A-\\\\U2A58\\\\U2A5A-\\\\U2A63\\\\U2A66\\\\U2A67\\\\U2A6A-\\\\U2AD9\\\\U2ADB\\\\U2AF7-\\\\U2AFA\\\\U2B30-\\\\U2B44\\\\U2B47-\\\\U2B4C\\\\UFFE9-\\\\UFFEC"$/;"	v
s:binop_chars_extra	plugged/vim-polyglot/syntax/julia.vim	/^let s:binop_chars_extra = "\\\\U214B\\\\U2190-\\\\U2194\\\\U219A\\\\U219B\\\\U21A0\\\\U21A3\\\\U21A6\\\\U21AE\\\\U21CE\\\\U21CF\\\\U21D2\\\\U21D4\\\\U21F4-\\\\U21FF\\\\U2208-\\\\U220D\\\\U2213\\\\U2214\\\\U2217-\\\\U2219\\\\U221D\\\\U2224-\\\\U222A\\\\U2237\\\\U2238\\\\U223A\\\\U223B\\\\U223D\\\\U223E\\\\U2240-\\\\U228B\\\\U228D-\\\\U229C\\\\U229E-\\\\U22A3\\\\U22A9\\\\U22AC\\\\U22AE\\\\U22B0-\\\\U22B7\\\\U22BB-\\\\U22BD\\\\U22C4-\\\\U22C7\\\\U22C9-\\\\U22D3\\\\U22D5-\\\\U22ED\\\\U22F2-\\\\U22FF\\\\U25B7\\\\U27C8\\\\U27C9\\\\U27D1\\\\U27D2\\\\U27D5-\\\\U27D7\\\\U27F0\\\\U27F1\\\\U27F5-\\\\U27F7\\\\U27F7\\\\U27F9-\\\\U27FF\\\\U2900-\\\\U2918\\\\U291D-\\\\U2920\\\\U2944-\\\\U2970\\\\U29B7\\\\U29B8\\\\U29BC\\\\U29BE-\\\\U29C1\\\\U29E1\\\\U29E3-\\\\U29E5\\\\U29F4\\\\U29F6\\\\U29F7\\\\U29FA\\\\U29FB\\\\U2A07\\\\U2A08\\\\U2A1D\\\\U2A22-\\\\U2A2E\\\\U2A30-\\\\U2A3D\\\\U2A40-\\\\U2A45\\\\U2A4A-\\\\U2A58\\\\U2A5A-\\\\U2A63\\\\U2A66\\\\U2A67\\\\U2A6A-\\\\U2AD9\\\\U2ADB\\\\U2AF7-\\\\U2AFA\\\\U2B30-\\\\U2B44\\\\U2B47-\\\\U2B4C\\\\UFFE9-\\\\UFFEC"$/;"	v
s:block_close	plugged/vim-polyglot/indent/nix.vim	/^let s:block_close = '\\%(}\\|]\\)'$/;"	v
s:block_continuation_regex	plugged/vim-polyglot/indent/crystal.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_continuation_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:block_continuation_regex = '^\\s*[^])}\\t ].*'.s:block_regex$/;"	v
s:block_open	plugged/vim-polyglot/indent/nix.vim	/^let s:block_open  = '\\%({\\|[\\)'$/;"	v
s:block_regex	plugged/vim-polyglot/indent/crystal.vim	/^let s:block_regex =$/;"	v
s:block_regex	plugged/vim-polyglot/indent/json.vim	/^let s:block_regex = '\\%({\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:block_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:block_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:block_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:block_regex =$/;"	v
s:block_rules	plugged/vim-polyglot/indent/cython.vim	/^let s:block_rules = {$/;"	v
s:block_rules	plugged/vim-polyglot/indent/python.vim	/^let s:block_rules = {$/;"	v
s:block_rules_multiple	plugged/vim-polyglot/indent/cython.vim	/^let s:block_rules_multiple = {$/;"	v
s:block_rules_multiple	plugged/vim-polyglot/indent/python.vim	/^let s:block_rules_multiple = {$/;"	v
s:blue	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:blue   = s:getGruvColor('GruvboxBlue')$/;"	v
s:blue	plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue   = s:gb.bright_blue$/;"	v
s:blue	plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue   = s:gb.faded_blue$/;"	v
s:blue	plugged/gruvbox/colors/gruvbox.vim	/^  let s:blue[1]   = 12$/;"	v
s:blue	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:blue    = [ 67, '#5f87af']$/;"	v
s:bold	plugged/gruvbox/colors/gruvbox.vim	/^  let s:bold = ''$/;"	v
s:bold	plugged/gruvbox/colors/gruvbox.vim	/^let s:bold = 'bold,'$/;"	v
s:bracketBlocks	plugged/vim-polyglot/indent/julia.vim	/^let s:bracketBlocks = '\\<julia\\%(\\%(\\%(Printf\\)\\?Par\\|SqBra\\|CurBra\\)Block\\|ParBlockInRange\\|StringVars\\%(Par\\|SqBra\\|CurBra\\)\\|Dollar\\%(Par\\|SqBra\\)\\|QuotedParBlockS\\?\\)\\>'$/;"	v
s:bracket_continuation_regex	plugged/vim-polyglot/indent/crystal.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_continuation_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:bracket_continuation_regex = '%\\@<!\\%([({[]\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:bracket_switch_continuation_regex	plugged/vim-polyglot/indent/crystal.vim	/^let s:bracket_switch_continuation_regex = '^\\([^(]\\+\\zs).\\+\\)\\+'.s:continuation_regex$/;"	v
s:bracket_switch_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:bracket_switch_continuation_regex = '^\\([^(]\\+\\zs).\\+\\)\\+'.s:continuation_regex$/;"	v
s:bracket_switch_continuation_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:bracket_switch_continuation_regex = '^\\([^(]\\+\\zs).\\+\\)\\+'.s:continuation_regex$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:browsefilter	plugged/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	plugged/vim-ruby/ftplugin/eruby.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	plugged/vim-ruby/ftplugin/eruby.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:bstfile	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:bstfile = expand('<sfile>:p:h') . '\/vimcomplete'$/;"	v
s:buf_min_count	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:buf_min_count = get(g:, 'airline#extensions#tabline#buffer_min_count', 0)$/;"	v
s:buf_modified_symbol	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_modified_symbol = g:airline_symbols.modified$/;"	v
s:buf_nr	plugged/alchemist.vim/after/plugin/alchemist.vim	/^let s:buf_nr = -1$/;"	v
s:buf_nr_format	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_nr_format = get(g:, 'airline#extensions#tabline#buffer_nr_format', '%s: ')$/;"	v
s:buf_nr_show	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:buf_nr_show = get(g:, 'airline#extensions#tabline#buffer_nr_show', 0)$/;"	v
s:buf_peekaboo	plugged/vim-peekaboo/autoload/peekaboo.vim	/^let s:buf_peekaboo = 0$/;"	v
s:buffer_counter	plugged/far.vim/autoload/far.vim	/^let s:buffer_counter = 1$/;"	v
s:buffer_name	plugged/vim-notes/autoload/xolox/notes/tags.vim	/^  let s:buffer_name = 'Tagged Notes' " The buffer name for the list of tagged notes.$/;"	v
s:buffer_prototype	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_prototype	plugged/vim-rails/autoload/rails.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_seqno	plugged/tagbar/autoload/tagbar.vim	/^let s:buffer_seqno = 0$/;"	v
s:bufnr	plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:bufnr       = bufnr('')$/;"	v
s:builder	plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 0})$/;"	v
s:builder	plugged/vim-airline/t/builder.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:builder	plugged/vim-airline/t/extensions_default.vim	/^    let s:builder = airline#builder#new({'active': 1})$/;"	v
s:bullet_pattern	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^let s:bullet_pattern = '^\\s*\\(' . s:generate_list_item_bullet_pattern() . '\\)\\s\\+'$/;"	v
s:bvars	plugged/vim-polyglot/indent/javascript.vim	/^let s:bvars = {$/;"	v
s:bx	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^let s:bx = '{\\%("[^"]*"\\|''[^'']*''\\|\\$#\\|\\${\\w\\+}\\|\\$\\+\\|{[^{]\\+\\|[^{}]\\)\\{-}}'$/;"	v
s:c_flag	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:c_flag = s:git_supports_command_line_config_override()$/;"	v
s:cache_command	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:cache_command = {}$/;"	v
s:cache_mtime	plugged/vim-notes/autoload/xolox/notes.vim	/^  let s:cache_mtime = 0$/;"	v
s:cache_prototype	plugged/vim-rails/autoload/rails.vim	/^let s:cache_prototype = {'dict': {}}$/;"	v
s:cache_sid	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:cache_sid = {}$/;"	v
s:cache_sid	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:cache_sid = {}$/;"	v
s:cached_fnames	plugged/vim-notes/autoload/xolox/notes.vim	/^  let s:cached_fnames = []$/;"	v
s:cached_pairs	plugged/vim-notes/autoload/xolox/notes.vim	/^  let s:cached_pairs = {}$/;"	v
s:cached_titles	plugged/vim-notes/autoload/xolox/notes.vim	/^  let s:cached_titles = []$/;"	v
s:can_preserve_syntax	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:can_preserve_syntax = s:has_patch(7, 4, 792)$/;"	v
s:can_use_dll	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^let s:can_use_dll = xolox#misc#os#can_use_dll()$/;"	v
s:canonical_filetypes	plugged/vim-easytags/autoload/xolox/easytags/filetypes.vim	/^let s:canonical_filetypes = {}$/;"	v
s:cases	plugged/vim-textobj-user/t/move.vim	/^let s:cases = [$/;"	v
s:channel_log	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:channel_log = s:plugin_dir.'channel.log'$/;"	v
s:char	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:char = ''$/;"	v
s:char_bottom_left	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_bottom_left  = ['*', '╰'][s:unicode]$/;"	v
s:char_bottom_right	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_bottom_right = ['*', '╯'][s:unicode]$/;"	v
s:char_sides	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_sides        = ['|', '│'][s:unicode]$/;"	v
s:char_top_bottom	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_bottom   = ['-', '─'][s:unicode]$/;"	v
s:char_top_left	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_left     = ['*', '╭'][s:unicode]$/;"	v
s:char_top_right	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:char_top_right    = ['*', '╮'][s:unicode]$/;"	v
s:checked_ctags	plugged/tagbar/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags_types	plugged/tagbar/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:clojure_syntax_keywords	plugged/vim-polyglot/syntax/clojure.vim	/^let s:clojure_syntax_keywords = {$/;"	v
s:close_pat	plugged/vim-polyglot/indent/tex.vim	/^let s:close_pat = '\\\\\\@<!\\%(\\\\end\\|\\\\right\\a\\@!\\|\\\\)\\|\\\\\\]\\|}\\)'$/;"	v
s:close_patt	plugged/vim-polyglot/indent/lua.vim	/^let s:close_patt = '\\C\\%(\\<\\%(end\\|until\\)\\>\\|)\\|}\\)'$/;"	v
s:cm	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:cm = s:CursorManager.new()$/;"	v
s:cmdheight	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:cmdheight = {}$/;"	v
s:cmdline	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:cmdline = s:V.import('Over.Commandline.Base')$/;"	v
s:coffeeIndentExpr	plugged/vim-polyglot/after/indent/html.vim	/^let s:coffeeIndentExpr = &l:indentexpr$/;"	v
s:color_column	plugged/gruvbox/colors/gruvbox.vim	/^  let s:color_column = get(s:gb, g:gruvbox_color_column)$/;"	v
s:color_column	plugged/gruvbox/colors/gruvbox.vim	/^let s:color_column = s:bg1$/;"	v
s:color_template	plugged/vim-airline/autoload/airline/extensions/ctrlp.vim	/^let s:color_template = get(g:, 'airline#extensions#ctrlp#color_template', 'insert')$/;"	v
s:color_template	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:color_template = get(g:, 'airline#extensions#promptline#color_template', 'normal')$/;"	v
s:color_template	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:color_template = get(g:, 'airline#extensions#tmuxline#color_template', 'normal')$/;"	v
s:column	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^let s:column = {$/;"	v
s:column_display	plugged/vim-airline/autoload/airline/extensions/csv.vim	/^let s:column_display = get(g:, 'airline#extensions#csv#column_display', 'Number')$/;"	v
s:column_width	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:column_width = &columns$/;"	v
s:column_width	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:column_width = &columns$/;"	v
s:comma_first	plugged/vim-polyglot/indent/solidity.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	plugged/vim-polyglot/indent/solidity.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:commands	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:comment	plugged/vim-polyglot/indent/ansible.vim	/^let s:comment = '\\v^\\s*#' " # comment$/;"	v
s:common_efm	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:compare_typeinfo	plugged/tagbar/autoload/tagbar/sorting.vim	/^let s:compare_typeinfo = {}$/;"	v
s:completion_type	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:completion_type = ''$/;"	v
s:conceal	plugged/vim-polyglot/syntax/markdown.vim	/^  let s:conceal = ' conceal'$/;"	v
s:conceal	plugged/vim-polyglot/syntax/markdown.vim	/^let s:conceal = ''$/;"	v
s:concealends	plugged/vim-polyglot/syntax/markdown.vim	/^  let s:concealends = ' concealends'$/;"	v
s:concealends	plugged/vim-polyglot/syntax/markdown.vim	/^let s:concealends = ''$/;"	v
s:config	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:config = {$/;"	v
s:contexts	plugged/vim-airline/autoload/airline.vim	/^let s:contexts = {}$/;"	v
s:continuable_regex	plugged/vim-polyglot/indent/crystal.vim	/^let s:continuable_regex =$/;"	v
s:continuable_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:continuable_regex =$/;"	v
s:continuable_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:continuable_regex =$/;"	v
s:continuation	plugged/vim-polyglot/indent/javascript.vim	/^let s:continuation = get(g:,'javascript_continuation',$/;"	v
s:continuation	plugged/vim-polyglot/indent/typescript.vim	/^let s:continuation = get(g:,'typescript_continuation',$/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/crystal.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:continuation_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_term$/;"	v
s:continuation_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:continuation_regex =$/;"	v
s:converter	plugged/vim-bookmarks/autoload/unite/filters/converter_vim_bookmarks_long.vim	/^let s:converter = {$/;"	v
s:converter	plugged/vim-bookmarks/autoload/unite/filters/converter_vim_bookmarks_short.vim	/^let s:converter = {$/;"	v
s:core_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let s:core_funcrefs = [$/;"	v
s:counter	plugged/vim-textobj-user/t/script-local.vim	/^let s:counter = [0]$/;"	v
s:countonly	plugged/vim-polyglot/indent/html.vim	/^let s:countonly = 0$/;"	v
s:cow	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:cow = [$/;"	v
s:cpo_orig	plugged/vim-polyglot/syntax/plantuml.vim	/^let s:cpo_orig=&cpo$/;"	v
s:cpo_sav	plugged/vim-polyglot/indent/eruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/clojure.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/puppet.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-polyglot/syntax/ruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-ruby/indent/eruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_sav	plugged/vim-ruby/syntax/ruby.vim	/^let s:cpo_sav = &cpo$/;"	v
s:cpo_save	autoload/plug.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/fzf.vim/plugin/fzf.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/goyo.vim/autoload/goyo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-easytags/autoload/xolox/easytags.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-peekaboo/autoload/peekaboo.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/cucumber.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/exunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/haml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/nim.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/rustc.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/sbt.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/compiler/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftdetect/polyglot.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/clojure.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mma.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/mustache.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/plantuml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/ftplugin/vifm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/applescript.vim	/^let s:cpo_save=&cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/crystal.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/graphql.vim	/^let s:cpo_save = &cpoptions$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/html.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/json.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/nix.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/solidity.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/swift.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/indent/typescript.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/c.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/eelixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/elixir.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/erlang.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/mma.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/perl.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/pod.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/raml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/tt2.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-polyglot/syntax/vifm.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-ruby/compiler/eruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-ruby/compiler/rake.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-ruby/compiler/rspec.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-ruby/compiler/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-ruby/compiler/rubyunit.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-ruby/ftplugin/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	plugged/vim-ruby/indent/ruby.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpoptions_save	plugged/vim-polyglot/ftplugin/qml.vim	/^let s:cpoptions_save = &cpoptions$/;"	v
s:cposet	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:cposet=&cpoptions$/;"	v
s:crystal_deindent_keywords	plugged/vim-polyglot/indent/crystal.vim	/^let s:crystal_deindent_keywords =$/;"	v
s:crystal_indent_keywords	plugged/vim-polyglot/indent/crystal.vim	/^let s:crystal_indent_keywords =$/;"	v
s:cs	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^let s:cs = ctrlspace#context#Configuration().Symbols.CS$/;"	v
s:ctags_is_uctags	plugged/tagbar/autoload/tagbar.vim	/^let s:ctags_is_uctags     = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm00 = "234"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm00 = 233$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm00 = 17$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm00 = 233$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm00 = 233$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm00 = 236$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm00 = 23$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm00 = 233$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm00 = 53$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm00 = 58$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm00 = 23$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm00 = 00$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm00 = 235$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm00 = 17$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm00 = 233$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm00 = 0$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm00 = 234$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm00 = "233"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm00 = "234"$/;"	v
s:cterm00	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm00 = "236"$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm01 = "138"$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm01 = 22$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm01 = 58$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm01 = 17$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm01 = 236$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm01 = 234$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm01 = 18$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm01 = 23$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm01 = 236$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm01 = 235$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm01 = 237$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm01 = 235$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm01 = 22$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm01 = 23$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm01 = 237$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm01 = 24$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm01 = 52$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm01 = 10$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm01 = 18$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm01 = 234$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm01 = 17$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm01 = 18$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm01 = 0$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm01 = 23$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm01 = 18$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm01 = 234$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm01 = 10$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm01 = 18$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm01 = 59$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm01 = "235"$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm01 = "235"$/;"	v
s:cterm01	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm01 = "131"$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm02 = "180"$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm02 = 23$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm02 = 60$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm02 = 239$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm02 = 236$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm02 = 19$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm02 = 23$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm02 = 240$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm02 = 237$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm02 = 239$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm02 = 102$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm02 = 238$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm02 = 22$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm02 = 60$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm02 = 241$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm02 = 58$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm02 = 11$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm02 = 19$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm02 = 236$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm02 = 19$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm02 = 0$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm02 = 60$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm02 = 19$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm02 = 236$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm02 = 11$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm02 = 19$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm02 = 59$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm02 = "59"$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm02 = "239"$/;"	v
s:cterm02	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm02 = "167"$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm03 = "102"$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm03 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm03 = 23$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm03 = 102$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm03 = 101$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm03 = 95$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm03 = 96$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm03 = 66$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm03 = 65$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm03 = 241$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm03 = 66$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm03 = 249$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm03 = 239$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm03 = 8$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm03 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm03 = 243$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm03 = 240$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm03 = 95$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm03 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm03 = 109$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm03 = 102$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm03 = 239$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm03 = 28$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm03 = 66$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm03 = 96$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm03 = 244$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm03 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm03 = 58$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm03 = 95$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm03 = 95$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm03 = 102$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm03 = 60$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm03 = 08$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm03 = 95$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm03 = 239$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm03 = 60$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm03 = 8$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm03 = 236$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm03 = 66$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm03 = 8$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm03 = 239$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm03 = 8$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm03 = 59$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm03          = "66"$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm03 = "66"$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm03 = "59"$/;"	v
s:cterm03	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm03 = "152"$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm04 = "131"$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm04 = 72$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm04 = 145$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm04 = 138$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm04 = 139$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm04 = 67$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm04 = 252$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm04 = 249$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm04 = 20$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm04 = 246$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm04 = 249$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm04 = 144$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm04 = 146$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm04 = 145$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm04 = 248$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm04 = 28$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm04 = 146$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm04 = 250$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm04 = 109$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm04 = 101$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm04 = 145$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm04 = 144$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm04 = 145$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm04 = 145$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm04 = 12$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm04 = 20$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm04 = 249$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm04 = 188$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm04 = 20$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm04 = 240$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm04 = 20$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm04 = 249$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm04 = 12$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm04 = 20$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm04 = 102$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm04          = "145"$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm04 = "145"$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm04 = "145"$/;"	v
s:cterm04	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm04 = "138"$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm05 = "95"$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm05 = 145$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm05 = 109$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm05 = 144$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm05 = 145$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm05 = 139$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm05 = 109$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm05 = 108$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm05 = 102$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm05 = 145$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm05 = 253$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm05 = 252$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm05 = 7$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm05 = 145$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm05 = 250$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm05 = 253$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm05 = 138$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm05 = 253$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm05 = 250$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm05 = 34$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm05 = 145$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm05 = 252$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm05 = 101$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm05 = 15$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm05 = 152$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm05 = 07$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm05 = 144$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm05 = 252$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm05 = 188$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm05 = 7$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm05 = 248$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm05 = 109$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm05 = 7$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm05 = 252$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm05 = 7$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm05 = 248$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm05          = "152"$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm05 = "152"$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm05 = "152"$/;"	v
s:cterm05	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm05 = "180"$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm06 = "109"$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm06 = 152$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm06 = 153$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm06 = 138$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm06 = 15$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm06 = 21$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm06 = 151$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm06 = 254$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm06 = 145$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm06 = 15$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm06 = 254$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm06 = 40$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm06 = 189$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm06 = 180$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm06 = 15$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm06 = 188$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm06 = 13$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm06 = 21$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm06 = 145$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm06 = 15$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm06 = 21$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm06 = 224$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm06 = 21$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm06 = 253$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm06 = 13$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm06 = 21$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm06 = 251$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm06          = "188"$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm06 = "188"$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm06 = "188"$/;"	v
s:cterm06	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm06 = "217"$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm07 = "222"$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm07 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm07 = 195$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm07 = 145$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm07 = 153$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm07 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm07 = 10$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm07 = 229$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm07 = 230$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm07 = 188$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm07 = 230$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm07 = 15$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm07 = "189"$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm07 = "15"$/;"	v
s:cterm07	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm07 = "222"$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm08 = "101"$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm08 = 66$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm08 = 180$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm08 = 167$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm08 = 197$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm08 = 166$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm08 = 161$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm08 = 161$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm08 = 167$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm08 = 9$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm08 = 217$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm08 = 24$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm08 = 203$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm08 = 131$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm08 = 210$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm08 = 95$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm08 = 167$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm08 = 166$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm08 = 243$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm08 = 28$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm08 = 137$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm08 = 167$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm08 = 9$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm08 = 131$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm08 = 168$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm08 = 197$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm08 = 166$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm08 = 131$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm08 = 01$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm08 = 203$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm08 = 162$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm08 = 167$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm08 = 166$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm08 = 198$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm08 = 1$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm08 = 167$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm08 = "88"$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm08 = "88"$/;"	v
s:cterm08	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm08 = "242"$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm09 = "138"$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm09 = 182$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm09 = 66$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm09 = 186$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm09 = 130$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm09 = 166$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm09 = 130$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm09 = 94$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm09 = 94$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm09 = 173$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm09 = 166$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm09 = 202$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm09 = 216$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm09 = 16$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm09 = 64$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm09 = 208$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm09 = 173$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm09 = 209$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm09 = 101$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm09 = 172$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm09 = 203$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm09 = 246$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm09 = 28$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm09 = 143$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm09 = 208$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm09 = 208$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm09 = 211$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm09 = 131$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm09 = 173$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm09 = 208$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm09 = 203$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm09 = 173$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm09 = 09$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm09 = 16$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm09 = 208$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm09 = 209$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm09 = 173$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm09 = 16$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm09 = 173$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm09 = 166$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm09 = 16$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm09 = 208$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm09 = 16$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm09 = 9$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm09 = 179$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm09          = "209"$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm09 = "209"$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm09 = "209"$/;"	v
s:cterm09	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm09 = "131"$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0A = "180"$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0A = 11$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0A = 60$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0A = 150$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0A = 178$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0A = 172$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0A = 137$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0A = 100$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0A = 228$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0A = 179$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0A = 215$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0A = 179$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0A = 130$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0A = 222$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0A = 221$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0A = 65$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0A = 214$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0A = 247$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0A = 28$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0A = 107$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0A = 221$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0A = 198$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0A = 137$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0A = 216$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0A = 216$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0A = 214$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0A = 186$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0A = 03$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0A = 220$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0A = 221$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0A = 136$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0A = 142$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0A = 3$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0A = 228$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm0A          = "221"$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0A = "221"$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0A = "221"$/;"	v
s:cterm0A	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0A = "167"$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0B = "102"$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0B = 35$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0B = 96$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0B = 115$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0B = 71$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0B = 71$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0B = 65$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0B = 65$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0B = 70$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0B = 71$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0B = 149$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0B = 143$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0B = 30$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0B = 41$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0B = 143$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0B = 114$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0B = 65$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0B = 41$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0B = 29$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0B = 245$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0B = 34$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0B = 72$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0B = 107$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0B = 82$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0B = 29$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0B = 29$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0B = 143$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0B = 3$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0B = 29$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0B = 144$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0B = 02$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0B = 72$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0B = 71$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0B = 143$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0B = 41$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0B = 100$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0B = 2$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0B = 107$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0B = "22"$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0B = "28"$/;"	v
s:cterm0B	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0B = "152"$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0C = "130"$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0C = 153$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0C = 95$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0C = 110$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0C = 36$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0C = 37$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0C = 30$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0C = 29$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0C = 31$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0C = 152$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0C = 110$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0C = 115$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0C = 125$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0C = 117$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0C = 109$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0C = 80$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0C = 60$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0C = 37$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0C = 12$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0C = 244$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0C = 22$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0C = 67$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0C = 30$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0C = 14$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0C = 115$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0C = 107$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0C = 109$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0C = 158$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0C = 12$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0C = 109$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0C = 06$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0C = 79$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0C = 37$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0C = 71$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0C = 50$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0C = 36$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0C = 37$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0C = 6$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0C = 152$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm0C          = "73"$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0C = "73"$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0C = "73"$/;"	v
s:cterm0C	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0C = "138"$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0D = "60"$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0D = 38$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0D = 101$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0D = 140$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0D = 31$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0D = 74$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0D = 67$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0D = 74$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0D = 75$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0D = 4$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0D = 60$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0D = 32$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0D = 109$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0D = 60$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0D = 241$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0D = 28$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0D = 97$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0D = 31$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0D = 27$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0D = 38$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0D = 67$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0D = 109$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0D = 81$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0D = 109$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0D = 04$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0D = 39$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0D = 24$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0D = 73$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0D = 4$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0D = 12$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0D = 32$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0D = 4$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0D = 68$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0D = 4$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0D = 103$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0D = "25"$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0D = "04"$/;"	v
s:cterm0D	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0D = "180"$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0E = "152"$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0E = 132$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0E = 65$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0E = 175$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0E = 134$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0E = 62$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0E = 61$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0E = 129$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0E = 103$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0E = 175$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0E = 183$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0E = 5$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0E = 172$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0E = 128$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0E = 139$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0E = 176$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0E = 95$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0E = 134$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0E = 243$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0E = 34$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0E = 132$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0E = 168$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0E = 165$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0E = 89$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0E = 139$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0E = 141$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0E = 134$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0E = 139$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:cterm0E = 05$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0E = 97$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0E = 126$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0E = 146$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0E = 5$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0E = 212$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0E = 12$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0E = 5$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0E = 127$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:cterm0E = 5$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0E = 103$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm0E          = "176"$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0E = "176"$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0E = "176"$/;"	v
s:cterm0E	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0E = "217"$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:cterm0F = "187"$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:cterm0F = 179$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:cterm0F = 65$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:cterm0F = 174$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:cterm0F = 167$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:cterm0F = 135$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:cterm0F = 170$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:cterm0F = 5$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:cterm0F = 5$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:cterm0F = 94$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:cterm0F = 130$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:cterm0F = 131$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:cterm0F = 180$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:cterm0F = 17$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:cterm0F = 173$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:cterm0F = 89$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:cterm0F = 131$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:cterm0F = 173$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:cterm0F = 95$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:cterm0F = 131$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:cterm0F = 12$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:cterm0F = 240$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:cterm0F = 22$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:cterm0F = 131$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:cterm0F = 130$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:cterm0F = 57$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:cterm0F = 130$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:cterm0F = 132$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:cterm0F = 138$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:cterm0F = 167$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:cterm0F = 12$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:cterm0F = 137$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm0F = 14$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^  let s:cterm0F = 17$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:cterm0F = 169$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:cterm0F = 88$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:cterm0F = 137$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:cterm0F = 17$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:cterm0F = 58$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:cterm0F = 168$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm0F = 17$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:cterm0F = 167$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm0F = 14$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^  let s:cterm0F = 17$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:cterm0F = 95$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:cterm0F          = "137"$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:cterm0F = "137"$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:cterm0F = "137"$/;"	v
s:cterm0F	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:cterm0F = "231"$/;"	v
s:ctermAlmostBlack	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:ctermAlmostBlack = "235"$/;"	v
s:ctermAlmostBlack	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:ctermAlmostBlack = "235"$/;"	v
s:ctermAsh	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermAsh = "234"$/;"	v
s:ctermBgPurple	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermBgPurple    = "59"$/;"	v
s:ctermBlack	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:ctermBlack     = "232"$/;"	v
s:ctermBlack	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBlack = "00"$/;"	v
s:ctermBlood	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBlood = "88"$/;"	v
s:ctermBlue	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:ctermBlue      = "074"$/;"	v
s:ctermBrightRed	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBrightRed = "09"$/;"	v
s:ctermBrown	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBrown = "94"$/;"	v
s:ctermBruise	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermBruise = "53"$/;"	v
s:ctermCongealing	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermCongealing = "52"$/;"	v
s:ctermDarkGray	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:ctermDarkGray = "240"$/;"	v
s:ctermDarkGray	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermDarkGray    = "235"$/;"	v
s:ctermDarkGray	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:ctermDarkGray = "240"$/;"	v
s:ctermDarkSeafoam	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermDarkSeafoam = "22"$/;"	v
s:ctermFuschia	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermFuschia     = "88"$/;"	v
s:ctermGray	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:ctermGray = "243"$/;"	v
s:ctermGray	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:ctermGray      = "235"$/;"	v
s:ctermGray	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermGray = "243"$/;"	v
s:ctermGray	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:ctermGray = "243"$/;"	v
s:ctermGray	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:ctermGray = "243"$/;"	v
s:ctermGreen	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:ctermGreen     = "150"$/;"	v
s:ctermGreen	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermGreen = "02"$/;"	v
s:ctermGrey	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermGrey = "08"$/;"	v
s:ctermIron	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermIron = "242"$/;"	v
s:ctermLavender	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermLavender    = "25"$/;"	v
s:ctermLightgray	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:ctermLightgray = "242"$/;"	v
s:ctermOrange	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:ctermOrange    = "215"$/;"	v
s:ctermOrange	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermOrange = "166"$/;"	v
s:ctermPoison	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermPoison = "58"$/;"	v
s:ctermPurple	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermPurple = "05"$/;"	v
s:ctermRed	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:ctermRed       = "203"$/;"	v
s:ctermRed	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermRed = "01"$/;"	v
s:ctermShadow	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermShadow      = "233"$/;"	v
s:ctermSilver	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermSilver      = "189"$/;"	v
s:ctermWhite	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:ctermWhite = "231"$/;"	v
s:ctermWhite	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:ctermWhite     = "254"$/;"	v
s:ctermWhite	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:ctermWhite = "231"$/;"	v
s:ctermWhite	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:ctermWhite = "231"$/;"	v
s:ctermWhite	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermWhite = "15"$/;"	v
s:ctermWhite	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:ctermWhite = "231"$/;"	v
s:ctermWinter	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:ctermWinter = "30"$/;"	v
s:cterm_alert	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_alert     = 88   " Modified file alert color$/;"	v
s:cterm_blue	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_blue = 110$/;"	v
s:cterm_blue	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_blue = 67$/;"	v
s:cterm_blue	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_blue = 110$/;"	v
s:cterm_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_dark_gray = 236$/;"	v
s:cterm_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_dark_gray = 234$/;"	v
s:cterm_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_dark_gray = 236$/;"	v
s:cterm_green	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_green = 150$/;"	v
s:cterm_green	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_green = 151$/;"	v
s:cterm_green	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_green = 150$/;"	v
s:cterm_inactivebg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_inactivebg = s:cterm02$/;"	v
s:cterm_inactivebg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_inactivebg = 234 " Background for inactive mode$/;"	v
s:cterm_inactivefg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_inactivefg = s:cterm04$/;"	v
s:cterm_inactivefg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_inactivefg = 239 " Foreground for inactive mode$/;"	v
s:cterm_insertbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_insertbg  = s:cterm0B$/;"	v
s:cterm_insertbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_insertbg  = 70   " Background for insert mode and file position blocks$/;"	v
s:cterm_insertfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_insertfg  = s:cterm07$/;"	v
s:cterm_insertfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_insertfg  = 15   " Foreground for insert mode and file position blocks$/;"	v
s:cterm_light_gray	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_light_gray = 249$/;"	v
s:cterm_light_gray	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_light_gray = 239$/;"	v
s:cterm_light_gray	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_light_gray = 249$/;"	v
s:cterm_lightlight_gray	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_lightlight_gray = 245$/;"	v
s:cterm_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_med_gray_hi = 238$/;"	v
s:cterm_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_med_gray_hi = 236$/;"	v
s:cterm_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_med_gray_hi = 238$/;"	v
s:cterm_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_med_gray_lo = 237$/;"	v
s:cterm_normalbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_normalbg  = s:cterm0D$/;"	v
s:cterm_normalbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_normalbg  = 27   " Background for normal mode and file position blocks$/;"	v
s:cterm_normalfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_normalfg  = s:cterm07$/;"	v
s:cterm_normalfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_normalfg  = 15   " Foreground for normal mode and file position blocks$/;"	v
s:cterm_orange	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_orange = 216$/;"	v
s:cterm_orange	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_orange = 173$/;"	v
s:cterm_orange	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_orange = 179$/;"	v
s:cterm_pink	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_pink = 182$/;"	v
s:cterm_pink	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_pink = 182$/;"	v
s:cterm_pink	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_pink = 182$/;"	v
s:cterm_purple	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_purple = 146$/;"	v
s:cterm_purple	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_purple = 139$/;"	v
s:cterm_purple	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_purple = 146$/;"	v
s:cterm_red	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:cterm_red = 174$/;"	v
s:cterm_red	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:cterm_red = 131$/;"	v
s:cterm_red	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:cterm_red = 174$/;"	v
s:cterm_replacebg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_replacebg = s:cterm08$/;"	v
s:cterm_replacebg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_replacebg = 88   " Background for replace mode and file position blocks$/;"	v
s:cterm_replacefg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_replacefg = s:cterm07$/;"	v
s:cterm_replacefg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_replacefg = 15   " Foreground for replace mode and file position blocks$/;"	v
s:cterm_termbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_termbg    = s:cterm02$/;"	v
s:cterm_termbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_termbg    = 237  " Background for branch and file format blocks$/;"	v
s:cterm_termbg2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_termbg2   = s:cterm00$/;"	v
s:cterm_termbg2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_termbg2   = 234  " Background for middle block$/;"	v
s:cterm_termfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_termfg    = s:cterm06$/;"	v
s:cterm_termfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_termfg    = 144  " Foreground for branch and file format blocks$/;"	v
s:cterm_termfg2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_termfg2   = s:cterm06$/;"	v
s:cterm_termfg2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_termfg2   = 39   " Foreground for middle block$/;"	v
s:cterm_visualbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_visualbg  = s:cterm09$/;"	v
s:cterm_visualbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_visualbg  = 166  " Background for visual mode and file position blocks$/;"	v
s:cterm_visualfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:cterm_visualfg  = s:cterm07$/;"	v
s:cterm_visualfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:cterm_visualfg  = 15   " Foreground for visual mode and file position blocks$/;"	v
s:ctrlspace	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:ctrlspace = get(g:, 'CtrlSpaceLoaded', 0)$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:current_bufnr = cur$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_bufnr = -1$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:current_bufnr = curbuf$/;"	v
s:current_bufnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_bufnr = -1$/;"	v
s:current_dir	plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:current_dir = expand('%:p:h')$/;"	v
s:current_fileencodings	plugged/vim-polyglot/ftdetect/polyglot.vim	/^let s:current_fileencodings = ''$/;"	v
s:current_fileformats	plugged/vim-polyglot/ftdetect/polyglot.vim	/^let s:current_fileformats = ''$/;"	v
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_modified = 0$/;"	v
s:current_modified	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_modified = 0$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/coffee.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/javascript/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/jsx.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/after/syntax/typescript/graphql.vim	/^  let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/syntax/ansible.vim	/^  let s:current_syntax=b:current_syntax$/;"	v
s:current_syntax	plugged/vim-polyglot/syntax/dockerfile.vim	/^let s:current_syntax = b:current_syntax$/;"	v
s:current_syntax_save	plugged/vim-polyglot/after/syntax/haml.vim	/^  let s:current_syntax_save = b:current_syntax$/;"	v
s:current_syntax_save	plugged/vim-polyglot/after/syntax/html.vim	/^  let s:current_syntax_save = b:current_syntax$/;"	v
s:current_tabcnt	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:current_tabcnt = -1$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:current_tabline = b.build()$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabline = ''$/;"	v
s:current_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:current_tabline = b.build()$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/ctrlspace.vim	/^let s:current_tabnr = -1$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^  let s:current_tabnr = curtab$/;"	v
s:current_tabnr	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:current_tabnr = -1$/;"	v
s:current_visible_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^  let s:current_visible_buffers = copy(b.buffers)$/;"	v
s:current_visible_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:current_visible_buffers = []$/;"	v
s:currently_tagged_notes	plugged/vim-notes/autoload/xolox/notes/tags.vim	/^  let s:currently_tagged_notes = {} " The in-memory representation of tags and the notes in which they're used.$/;"	v
s:dark	plugged/one/colors/one.vim	/^    let s:dark = 1$/;"	v
s:dark	plugged/one/colors/one.vim	/^  let s:dark = 0$/;"	v
s:dark	plugged/vim-one/colors/one.vim	/^    let s:dark = 1$/;"	v
s:dark	plugged/vim-one/colors/one.vim	/^  let s:dark = 0$/;"	v
s:dark_lavender	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:dark_lavender = [97, "#875faf"]$/;"	v
s:dark_mint	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:dark_mint = [49, "#87af87"]$/;"	v
s:debug	plugged/far.vim/autoload/far/tools.vim	/^let s:debug = exists('g:far#debug')? g:far#debug : 0$/;"	v
s:debug_enabled	plugged/tagbar/autoload/tagbar/debug.vim	/^let s:debug_enabled = 0$/;"	v
s:debug_file	plugged/tagbar/autoload/tagbar/debug.vim	/^let s:debug_file = ''$/;"	v
s:decIndent	plugged/vim-polyglot/indent/plantuml.vim	/^let s:decIndent = '^\\s*\\%(end\\|else\\|}\\)'$/;"	v
s:dec_num	plugged/vim-polyglot/syntax/nim.vim	/^  let s:dec_num = '\\d%(_?\\d)*'$/;"	v
s:dec_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:dec_regex = '\\d\\%(_\\?\\d\\)*\\%(\\>\\|im\\>\\|\\ze\\D\\)'$/;"	v
s:defArgMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:defArgMatcher = '\\%((\\_.\\{-})\\)'$/;"	v
s:defMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:defMatcher = '\\%(\\%(private\\|protected\\)\\%(\\[[^\\]]*\\]\\)\\?\\s\\+\\|abstract\\s\\+\\|override\\s\\+\\)*\\<def\\>'$/;"	v
s:default_action	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:default_action = {$/;"	v
s:default_checks	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:default_checks = ['indent', 'trailing', 'mixed-indent-file']$/;"	v
s:default_compact	plugged/vim-peekaboo/autoload/peekaboo.vim	/^let s:default_compact = 0$/;"	v
s:default_delay	plugged/vim-peekaboo/autoload/peekaboo.vim	/^let s:default_delay = 0$/;"	v
s:default_mappings	plugged/vim-polyglot/autoload/julia_blocks.vim	/^let s:default_mappings = {$/;"	v
s:default_normal_maps	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:default_normal_maps = {'!':1, '@':1, '=':1, 'q':1, 'r':1, 't':1, 'T':1, 'y':1, '[':1, ']':1, '\\':1, 'd':1, 'f':1, 'F':1, 'g':1, '"':1, 'z':1, 'c':1, 'm':1, '<':1, '>':1}$/;"	v
s:default_projections	plugged/vim-rails/autoload/rails.vim	/^let s:default_projections = {$/;"	v
s:default_visual_maps	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:default_visual_maps = {'i':1, 'a':1, 'f':1, 'F':1, 't':1, 'T':1}$/;"	v
s:default_window	plugged/vim-peekaboo/autoload/peekaboo.vim	/^let s:default_window = 'vertical botright 30new'$/;"	v
s:defaultconfig	plugged/tmux-complete.vim/autoload/asyncomplete/sources/tmuxcomplete.vim	/^let s:defaultconfig = {$/;"	v
s:defaultopts	plugged/tmux-complete.vim/autoload/asyncomplete/sources/tmuxcomplete.vim	/^let s:defaultopts = {$/;"	v
s:delayed_update_files	plugged/tagbar/autoload/tagbar.vim	/^let s:delayed_update_files = []$/;"	v
s:delimitMate_extra_excluded_regions	plugged/vim-polyglot/ftplugin/rust.vim	/^	let s:delimitMate_extra_excluded_regions = ',rustLifetimeCandidate,rustGenericLifetimeCandidate'$/;"	v
s:delimiters	plugged/vim-polyglot/ftplugin/caddyfile.vim	/^let s:delimiters = {'left': '#'}$/;"	v
s:delims	plugged/vim-polyglot/ftplugin/toml.vim	/^let s:delims = { 'left': '#' }$/;"	v
s:dictionary_entry	plugged/vim-polyglot/indent/ansible.vim	/^let s:dictionary_entry = '\\v^\\s*[^:-]+:\\s*$' " with_items:$/;"	v
s:did_indent	plugged/vim-polyglot/after/indent/jsx.vim	/^  let s:did_indent=b:did_indent$/;"	v
s:dir	plugged/vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = fnameescape(s:dir)$/;"	v
s:dir	plugged/vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = substitute(s:dir, '\\ ', '\\\\ ', 'g')$/;"	v
s:dir	plugged/vim-polyglot/ftplugin/clojure.vim	/^		let s:dir = substitute(s:dir, '\\', '\\\\\\\\', 'g')$/;"	v
s:dirArrows	plugged/nerdtree/syntax/nerdtree.vim	/^let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~]\\-').escape(g:NERDTreeDirArrowExpandable, '~]\\-')$/;"	v
s:dir_for_worktree	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:directives_end	plugged/vim-polyglot/indent/blade.vim	/^    let s:directives_end .= '\\|' . join(values(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_end	plugged/vim-polyglot/indent/blade.vim	/^let s:directives_end = 'else\\|end\\|empty\\|show\\|stop\\|append\\|overwrite'$/;"	v
s:directives_start	plugged/vim-polyglot/indent/blade.vim	/^    let s:directives_start .= '\\|' . join(keys(g:blade_custom_directives_pairs), '\\|')$/;"	v
s:directives_start	plugged/vim-polyglot/indent/blade.vim	/^let s:directives_start = 'if\\|else\\|unless\\|for\\|while\\|empty\\|push\\|section\\|can\\|hasSection\\|verbatim\\|php\\|' .$/;"	v
s:discovered_filetypes	plugged/vim-easytags/autoload/xolox/easytags/filetypes.vim	/^let s:discovered_filetypes = 0$/;"	v
s:done	plugged/vim-gitgutter/test/runner.vim	/^  let s:done += 1$/;"	v
s:done	plugged/vim-gitgutter/test/runner.vim	/^let s:done = 0$/;"	v
s:dot_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:dot_continuation_regex = '%\\@<!\\.\\s*\\%(#.*\\)\\=$'$/;"	v
s:dot_continuation_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:dot_continuation_regex = '%\\@<!\\.\\s*\\%(#.*\\)\\=$'$/;"	v
s:ds_pattern	plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:ds_pattern = '\\v"'  . s:string_chunk . '"'$/;"	v
s:dummy_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:dummy_sign_id = s:first_sign_id - 1$/;"	v
s:echorizer	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:echorizer = {$/;"	v
s:ed	plugged/vim-polyglot/syntax/tt2.vim	/^        let s:ed = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:efm_generate	plugged/vim-rails/autoload/rails.vim	/^let s:efm_generate =$/;"	v
s:emacs	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:emacs = {$/;"	v
s:emmet_settings	plugged/emmet-vim/autoload/emmet.vim	/^let s:emmet_settings = {$/;"	v
s:enabled	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:enabled = get(g:, 'airline#extensions#localsearch#enabled', 1)$/;"	v
s:enabled	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:enabled = get(g:, 'airline#extensions#whitespace#enabled', 1)$/;"	v
s:end_end_regex	plugged/vim-polyglot/indent/crystal.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>\\|{%\\s*\\<\\%(end\\)\\>'$/;"	v
s:end_end_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_end_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:end_end_regex = '\\%(^\\|[^.:@$]\\)\\@<=\\<end:\\@!\\>'$/;"	v
s:end_middle_regex	plugged/vim-polyglot/indent/crystal.vim	/^let s:end_middle_regex =$/;"	v
s:end_middle_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_middle_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:end_middle_regex = '\\<\\%(ensure\\|else\\|\\%(\\%(^\\|;\\)\\s*\\)\\@<=\\<rescue:\\@!\\>\\|when\\|elsif\\):\\@!\\>'$/;"	v
s:end_skip_expr	plugged/vim-polyglot/indent/crystal.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_skip_expr	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_skip_expr	plugged/vim-ruby/indent/ruby.vim	/^let s:end_skip_expr = s:skip_expr .$/;"	v
s:end_start_regex	plugged/vim-polyglot/indent/crystal.vim	/^let s:end_start_regex =$/;"	v
s:end_start_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:end_start_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:end_start_regex =$/;"	v
s:endtag	plugged/vim-polyglot/after/indent/jsx.vim	/^let s:endtag = '^\\s*\\\/\\?>\\s*;\\='$/;"	v
s:endtags	plugged/vim-polyglot/indent/html.vim	/^let s:endtags = [0,0,0,0,0,0,0]   " long enough for the highest index$/;"	v
s:enoimpl	plugged/vim-misc/autoload/xolox/misc/open.vim	/^let s:enoimpl = "vim-misc %s: %s() hasn't been implemented for your platform! If you have suggestions, please get in touch at https:\/\/github.com\/xolox\/vim-misc\/issues"$/;"	v
s:env	plugged/vim-startify/autoload/startify.vim	/^  let s:env = sort(s:env, 's:compare_by_key_len')$/;"	v
s:env	plugged/vim-startify/autoload/startify.vim	/^  let s:env = sort(s:env, 's:compare_by_val_len')$/;"	v
s:envbeginpattern	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:envbeginpattern = s:notcomment . s:notbslash . '\\\\begin\\s*{.\\{-}}'$/;"	v
s:envendpattern	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:envendpattern = s:notcomment . s:notbslash . '\\\\end\\s*{.\\{-}}'$/;"	v
s:environment	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:environment = {}$/;"	v
s:eol_whitespace_pattern	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    let s:eol_whitespace_pattern .= '\\|[' . s:whitespace_chars . ']\\+\\ze[\\u0009]'$/;"	v
s:eol_whitespace_pattern	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^    let s:eol_whitespace_pattern = '[^\\u0009' . s:whitespace_chars . ']\\@1<=' . s:eol_whitespace_pattern$/;"	v
s:eol_whitespace_pattern	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:eol_whitespace_pattern = '[\\u0009' . s:whitespace_chars . ']\\+$'$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^let s:error_symbol = get(g:, 'airline#extensions#ale#error_symbol', 'E:')$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:error_symbol = get(g:, 'airline#extensions#neomake#error_symbol', 'E:')$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:error_symbol = get(g:, 'airline#extensions#syntastic#error_symbol', 'E:')$/;"	v
s:error_symbol	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:error_symbol = get(g:, 'airline#extensions#ycm#error_symbol', 'E:')$/;"	v
s:errored	plugged/vim-gitgutter/test/runner.vim	/^      let s:errored = 0$/;"	v
s:errored	plugged/vim-gitgutter/test/runner.vim	/^let s:errored = 0$/;"	v
s:errors	plugged/vim-gitgutter/test/runner.vim	/^      let s:errors += 1$/;"	v
s:errors	plugged/vim-gitgutter/test/runner.vim	/^  let s:errors += 1$/;"	v
s:errors	plugged/vim-gitgutter/test/runner.vim	/^let s:errors = 0$/;"	v
s:errors	plugged/vim-polyglot/autoload/elm.vim	/^let s:errors = []$/;"	v
s:executables	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:executables = {}$/;"	v
s:exists	plugged/emmet-vim/autoload/emmet/lang.vim	/^let s:exists = {}$/;"	v
s:exp	plugged/vim-polyglot/syntax/nim.vim	/^  let s:exp = '%([eE][+-]?'.s:dec_num.')'$/;"	v
s:expand_bufnr	plugged/tagbar/autoload/tagbar.vim	/^let s:expand_bufnr = -1$/;"	v
s:exs_re	plugged/vim-polyglot/syntax/python.vim	/^      let s:exs_re .= '|BlockingIOError|ChildProcessError|ConnectionError|BrokenPipeError|ConnectionAbortedError|ConnectionRefusedError|ConnectionResetError|FileExistsError|FileNotFoundError|InterruptedError|IsADirectoryError|NotADirectoryError|PermissionError|ProcessLookupError|TimeoutError|StopAsyncIteration|ResourceWarning'$/;"	v
s:exs_re	plugged/vim-polyglot/syntax/python.vim	/^      let s:exs_re .= '|StandardError'$/;"	v
s:exs_re	plugged/vim-polyglot/syntax/python.vim	/^    let s:exs_re = 'BaseException|Exception|ArithmeticError|LookupError|EnvironmentError|AssertionError|AttributeError|BufferError|EOFError|FloatingPointError|GeneratorExit|IOError|ImportError|IndexError|KeyError|KeyboardInterrupt|MemoryError|NameError|NotImplementedError|OSError|OverflowError|ReferenceError|RuntimeError|StopIteration|SyntaxError|IndentationError|TabError|SystemError|SystemExit|TypeError|UnboundLocalError|UnicodeError|UnicodeEncodeError|UnicodeDecodeError|UnicodeTranslateError|ValueError|VMSError|WindowsError|ZeroDivisionError|Warning|UserWarning|BytesWarning|DeprecationWarning|PendingDepricationWarning|SyntaxWarning|RuntimeWarning|FutureWarning|ImportWarning|UnicodeWarning'$/;"	v
s:ext	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext = {}$/;"	v
s:ext	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:ext._theme_funcrefs = []$/;"	v
s:fail	plugged/vim-gitgutter/test/runner.vim	/^      let s:fail += 1$/;"	v
s:fail	plugged/vim-gitgutter/test/runner.vim	/^let s:fail = 0$/;"	v
s:far_buffer_name	plugged/far.vim/autoload/far.vim	/^let s:far_buffer_name = 'FAR %d'$/;"	v
s:far_params_meta	plugged/far.vim/autoload/far.vim	/^let s:far_params_meta = {$/;"	v
s:far_preview_buffer_name	plugged/far.vim/autoload/far.vim	/^let s:far_preview_buffer_name = 'Preview'$/;"	v
s:fg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg0 = s:gb.dark0$/;"	v
s:fg0	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg0 = s:gb.light0$/;"	v
s:fg1	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:fg1  = s:getGruvColor('GruvboxFg1')$/;"	v
s:fg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1 = s:gb.dark1$/;"	v
s:fg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1 = s:gb.light1$/;"	v
s:fg1	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg1[1]    = 15$/;"	v
s:fg2	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg2 = s:gb.dark2$/;"	v
s:fg2	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg2 = s:gb.light2$/;"	v
s:fg3	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg3 = s:gb.dark3$/;"	v
s:fg3	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg3 = s:gb.light3$/;"	v
s:fg4	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:fg4  = s:getGruvColor('GruvboxFg4')$/;"	v
s:fg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4 = s:gb.dark4$/;"	v
s:fg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4 = s:gb.light4$/;"	v
s:fg4	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4[1]    = 7$/;"	v
s:fg4_256	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4_256 = s:gb.dark4_256$/;"	v
s:fg4_256	plugged/gruvbox/colors/gruvbox.vim	/^  let s:fg4_256 = s:gb.light4_256$/;"	v
s:file	plugged/vim-rails/autoload/rails.vim	/^let s:file = expand('<sfile>:p')$/;"	v
s:file_name	plugged/vim-polyglot/indent/erlang.vim	/^let s:file_name = ''$/;"	v
s:file_prototype	plugged/vim-rails/autoload/rails.vim	/^let s:file_prototype = {}$/;"	v
s:files	plugged/vim-polyglot/ftplugin/vifm-rename.vim	/^let s:files = getline(1, '$')$/;"	v
s:filetype_groups	plugged/vim-easytags/autoload/xolox/easytags/filetypes.vim	/^let s:filetype_groups = {}$/;"	v
s:filetype_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_overrides = {$/;"	v
s:filetype_regex_overrides	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:filetype_regex_overrides = {}$/;"	v
s:filtermx	plugged/emmet-vim/autoload/emmet.vim	/^let s:filtermx = '|\\(\\%(bem\\|html\\|blade\\|haml\\|slim\\|e\\|c\\|s\\|fc\\|xsl\\|t\\|\\\/[^ ]\\+\\)\\s*,\\{0,1}\\s*\\)*$'$/;"	v
s:find_win_params_meta	plugged/far.vim/autoload/far.vim	/^let s:find_win_params_meta = copy(s:win_params_meta)$/;"	v
s:first_rtp	autoload/plug.vim	/^let s:first_rtp = s:escrtp(get(s:split_rtp(), 0, ''))$/;"	v
s:first_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:fixed_column	plugged/vim-startify/autoload/startify.vim	/^let s:fixed_column = len(s:padding_left) + 2$/;"	v
s:flags	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:flags = get(g:, 'airline#extensions#tagbar#flags', '')$/;"	v
s:float_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex = '\\%(' . s:float_regex3 .$/;"	v
s:float_regex1	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex1 = '\\.\\d\\%(_\\?\\d\\)*\\%([eEf][-+]\\?\\d\\+\\)\\?\\%(\\>\\|im\\>\\|\\ze\\D\\)'$/;"	v
s:float_regex2	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex2 = '\\d\\%(_\\?\\d\\)*\\.\\%(\\d\\%(_\\?\\d\\)*\\)\\?\\%([eEf][-+]\\?\\d\\+\\)\\?\\%(\\>\\|im\\>\\|\\ze\\D\\)'$/;"	v
s:float_regex3	plugged/vim-polyglot/syntax/julia.vim	/^let s:float_regex3 = '\\d\\%(_\\?\\d\\)*[eEf][-+]\\?\\d\\+\\%(\\>\\|im\\>\\|\\ze\\D\\)'$/;"	v
s:float_suf	plugged/vim-polyglot/syntax/nim.vim	/^  let s:float_suf = '%(''%(%(f|F)%(32|64|128)?|d|D))'$/;"	v
s:fmod	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^  let s:fmod = ':.'$/;"	v
s:fmod	plugged/vim-airline/autoload/airline/extensions/fugitiveline.vim	/^  let s:fmod = ':p'$/;"	v
s:fnamecollapse	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fnamecollapse = get(g:, 'airline#extensions#tabline#fnamecollapse', 1)$/;"	v
s:fnametruncate	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/default.vim	/^let s:fnametruncate = get(g:, 'airline#extensions#tabline#fnametruncate', 0)$/;"	v
s:foldable_groups	plugged/vim-polyglot/syntax/ruby.vim	/^let s:foldable_groups = split($/;"	v
s:foldable_groups	plugged/vim-ruby/syntax/ruby.vim	/^let s:foldable_groups = split($/;"	v
s:folded	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:folded = '\\(% Fake\\|\\\\\\(document\\|begin\\|end\\|paragraph\\|'$/;"	v
s:foldparts	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:foldparts = '^\\s*\\\\\\%(' . join(g:LatexBox_fold_parts, '\\|') . '\\)'$/;"	v
s:formatelempat	plugged/tabular/autoload/tabular.vim	/^let s:formatelempat = '\\%([lrc]\\d\\+\\)'$/;"	v
s:formatter	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^let s:formatter = get(g:, 'airline#extensions#wordcount#formatter', 'default')$/;"	v
s:from_mode	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:from_mode = ''$/;"	v
s:frozenset	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:frozenset = deepcopy(s:_base_set)$/;"	v
s:ft	plugged/vim-polyglot/syntax/c.vim	/^let s:ft = matchstr(&ft, '^\\([^.]\\)\\+')$/;"	v
s:fullComplete	plugged/vim-polyglot/autoload/elm.vim	/^let s:fullComplete = ''$/;"	v
s:funcNameMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:funcNameMatcher = '\\w\\+'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^      let s:funcs_re .= '\\=@!'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^      let s:funcs_re .= '|ascii|exec|print'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^      let s:funcs_re .= '|print'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^    let s:funcs_re .= '|apply|basestring|buffer|cmp|coerce|execfile|file|intern|long|raw_input|reduce|reload|unichr|unicode|xrange'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^  let s:funcs_re = '__import__|abs|all|any|bin|callable|chr|classmethod|compile|complex|delattr|dir|divmod|enumerate|eval|filter|format|getattr|globals|hasattr|hash|help|hex|id|input|isinstance|issubclass|iter|len|locals|map|max|memoryview|min|next|oct|open|ord|pow|property|range|repr|reversed|round|setattr|slice|sorted|staticmethod|sum|super|type|vars|zip'$/;"	v
s:funcs_re	plugged/vim-polyglot/syntax/python.vim	/^  let s:funcs_re = 'syn match pythonBuiltinFunc ''\\v\\.@<!\\zs<%(' . s:funcs_re . ')>'$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb = {}$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.aqua   = s:aqua$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg0 = s:bg0$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg1 = s:bg1$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg2 = s:bg2$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg3 = s:bg3$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bg4 = s:bg4$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.blue   = s:blue$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_aqua    = ['#8ec07c', 108]     " 142-192-124$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_blue    = ['#83a598', 109]     " 131-165-152$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_green   = ['#b8bb26', 142]     " 184-187-38$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_orange  = ['#fe8019', 208]     " 254-128-25$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_purple  = ['#d3869b', 175]     " 211-134-155$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_red     = ['#fb4934', 167]     " 251-73-52$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.bright_yellow  = ['#fabd2f', 214]     " 250-189-47$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0       = ['#282828', 235]     " 40-40-40$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0_hard  = ['#1d2021', 234]     " 29-32-33$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark0_soft  = ['#32302f', 236]     " 50-48-47$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark1       = ['#3c3836', 237]     " 60-56-54$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark2       = ['#504945', 239]     " 80-73-69$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark3       = ['#665c54', 241]     " 102-92-84$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark4       = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.dark4_256   = ['#7c6f64', 243]     " 124-111-100$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_aqua     = ['#427b58', 66]      " 66-123-88$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_blue     = ['#076678', 24]      " 7-102-120$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_green    = ['#79740e', 100]     " 121-116-14$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_orange   = ['#af3a03', 130]     " 175-58-3$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_purple   = ['#8f3f71', 96]      " 143-63-113$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_red      = ['#9d0006', 88]      " 157-0-6$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.faded_yellow   = ['#b57614', 136]     " 181-118-20$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg0 = s:fg0$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg1 = s:fg1$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg2 = s:fg2$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg3 = s:fg3$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg4 = s:fg4$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.fg4_256 = s:fg4_256$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray = s:gray$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray_244    = ['#928374', 244]     " 146-131-116$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.gray_245    = ['#928374', 245]     " 146-131-116$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.green  = s:green$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0      = ['#fbf1c7', 229]     " 253-244-193$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0_hard = ['#f9f5d7', 230]     " 249-245-215$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light0_soft = ['#f2e5bc', 228]     " 242-229-188$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light1      = ['#ebdbb2', 223]     " 235-219-178$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light2      = ['#d5c4a1', 250]     " 213-196-161$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light3      = ['#bdae93', 248]     " 189-174-147$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light4      = ['#a89984', 246]     " 168-153-132$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.light4_256  = ['#a89984', 246]     " 168-153-132$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_aqua   = ['#689d6a', 72]      " 104-157-106$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_blue   = ['#458588', 66]      " 69-133-136$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_green  = ['#98971a', 106]     " 152-151-26$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_orange = ['#d65d0e', 166]     " 214-93-14$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_purple = ['#b16286', 132]     " 177-98-134$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_red    = ['#cc241d', 124]     " 204-36-29$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.neutral_yellow = ['#d79921', 172]     " 215-153-33$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.orange = s:orange$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.purple = s:purple$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.red    = s:red$/;"	v
s:gb	plugged/gruvbox/colors/gruvbox.vim	/^let s:gb.yellow = s:yellow$/;"	v
s:git_versions	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:golden	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:golden  = [143, '#afaf5f']$/;"	v
s:got_fmt_error	plugged/vim-polyglot/autoload/rustfmt.vim	/^let s:got_fmt_error = 0$/;"	v
s:gray	plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray = s:gb.gray_244$/;"	v
s:gray	plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray = s:gb.gray_245$/;"	v
s:gray	plugged/gruvbox/colors/gruvbox.vim	/^  let s:gray[1]   = 8$/;"	v
s:gray	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:gray    = [245, '#8a8a8a']$/;"	v
s:gray_purple	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:gray_purple = [146, "#afafd7"]$/;"	v
s:green	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:green = s:getGruvColor('GruvboxGreen')$/;"	v
s:green	plugged/gruvbox/colors/gruvbox.vim	/^  let s:green  = s:gb.bright_green$/;"	v
s:green	plugged/gruvbox/colors/gruvbox.vim	/^  let s:green  = s:gb.faded_green$/;"	v
s:green	plugged/gruvbox/colors/gruvbox.vim	/^  let s:green[1]  = 10$/;"	v
s:grey0	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:grey0 = [102, "#878787"] "lightest grey$/;"	v
s:grey1	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:grey1 = [238, "#444444"] "mid grey$/;"	v
s:grey2	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:grey2 = [235, "#303030"] "darkest grey$/;"	v
s:grouping_algorithms	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:grouping_algorithms = {$/;"	v
s:guard	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:guard = {}$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui00 = "#1c1c1c" " ANSI Black$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui00 = "#090300"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui00 = "#031A16"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui00 = "#1C2023"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui00 = "#20201d"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui00 = "#1b1918"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui00 = "#1b181b"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui00 = "#161b1d"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui00 = "#131513"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui00 = "#28211c"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui00 = "#0c0d0e"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui00 = "#000000"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui00 = "#232c31"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui00 = "#111111"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui00 = "#181818"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui00 = "#2d2d2d"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui00 = "#16130F"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui00 = "#2C3E50"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui00 = "#1d1f21"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui00 = "#101010"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui00 = "#001100"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui00 = "#0b1c2c"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui00 = "#322931"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui00 = "#000000"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui00 = "#231f20"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui00 = "#201602"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui00 = "#3B3228"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui00 = "#272822"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui00 = "#2e3440"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui00 = "#2b303b"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui00 = "#1b2b34"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui00 = "#2f1e2e"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui00 = "#000000"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui00 = "#2b2b2b"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui00 = "#151718"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui00 = "#000000"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui00 = "#002b36"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui00 = "#1f2022"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui00 = "#1d1f21"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui00 = "#1e1e1e"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui00 = "#151515"$/;"	v
s:gui00	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui00 = "#303030" " ANSI Black$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui01 = "#af8787" " ANSI Red$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui01 = "#3a3432"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui01 = "#0B342D"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui01 = "#393F45"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui01 = "#292824"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui01 = "#2c2421"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui01 = "#292329"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui01 = "#1f292e"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui01 = "#242924"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui01 = "#36312e"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui01 = "#2e2f30"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui01 = "#303030"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui01 = "#202020"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui01 = "#202020"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui01 = "#1c3657"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui01 = "#333333"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui01 = "#282828"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui01 = "#393939"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui01 = "#2C2620"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui01 = "#34495E"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui01 = "#282a2e"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui01 = "#252525"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui01 = "#003300"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui01 = "#223b54"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui01 = "#433b42"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui01 = "#404040"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui01 = "#1c3f95"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui01 = "#302e00"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui01 = "#534636"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui01 = "#383830"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui01 = "#3b4252"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui01 = "#343d46"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui01 = "#343d46"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui01 = "#41323f"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui01 = "#202020"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui01 = "#272935"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui01 = "#282a2b"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui01 = "#040404"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui01 = "#073642"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui01 = "#282828"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui01 = "#202020"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui01 = "#282a2e"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui01 = "#323537"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui01 = "#262626"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui01 = "#262626"$/;"	v
s:gui01	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui01 = "#af5f5f" " ANSI Red$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui02 = "#dfaf87" " ANSI Green$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui02 = "#4a4543"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui02 = "#184E45"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui02 = "#565E65"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui02 = "#6e6b5e"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui02 = "#68615e"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui02 = "#695d69"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui02 = "#516d7b"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui02 = "#5e6e5e"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui02 = "#5e5d5c"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui02 = "#515253"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui02 = "#505050"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui02 = "#303030"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui02 = "#303030"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui02 = "#2a343a"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui02 = "#555555"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui02 = "#383838"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui02 = "#515151"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui02 = "#433B32"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui02 = "#7F8C8D"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui02 = "#373b41"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui02 = "#464646"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui02 = "#005500"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui02 = "#405c79"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui02 = "#5c545b"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui02 = "#606060"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui02 = "#5a5758"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui02 = "#5f5b17"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui02 = "#645240"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui02 = "#49483e"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui02 = "#434c5e"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui02 = "#4f5b66"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui02 = "#4f5b66"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui02 = "#4f424c"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui02 = "#303030"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui02 = "#3a4055"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui02 = "#3B758C"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui02 = "#102015"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui02 = "#586e75"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui02 = "#444155"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui02 = "#303030"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui02 = "#373b41"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui02 = "#464b50"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui02 = "#4f5b66"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui02 = "#4f5b66"$/;"	v
s:gui02	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui02 = "#d75f5f" " ANSI Green$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui03 = "#878787" " ANSI Yellow$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui03 = "#5c5855"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui03 = "#2B685E"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui03 = "#747C84"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui03 = "#7d7a68"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui03 = "#766e6b"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui03 = "#776977"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui03 = "#5a7b8c"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui03 = "#687d68"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui03 = "#666666"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui03 = "#737475"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui03 = "#b0b0b0"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui03 = "#505050"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui03 = "#505050"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui03 = "#3f4944"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui03 = "#777777"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui03 = "#585858"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui03 = "#747369"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui03 = "#5A5047"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui03 = "#95A5A6"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui03 = "#969896"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui03 = "#525252"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui03 = "#007700"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui03 = "#627e99"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui03 = "#797379"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui03 = "#808080"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui03 = "#737171"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui03 = "#6c6823"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui03 = "#7e705a"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui03 = "#75715e"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui03 = "#4c566a"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui03 = "#65737e"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui03 = "#65737e"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui03 = "#776e71"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui03 = "#505050"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui03 = "#5a647e"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui03 = "#41535B"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui03 = "#343434"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui03 = "#657b83"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui03 = "#585858"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui03 = "#505050"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui03 = "#969896"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui03 = "#5f5a60"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui03 = "#65737e"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui03 = "#65737e"$/;"	v
s:gui03	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui03 = "#afd7d7" " ANSI Yellow$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui04 = "#af5f5f" " ANSI Blue$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui04 = "#807d7c"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui04 = "#5F9C92"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui04 = "#ADB3BA"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui04 = "#999580"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui04 = "#9c9491"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui04 = "#9e8f9e"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui04 = "#7195a8"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui04 = "#809980"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui04 = "#797977"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui04 = "#959697"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui04 = "#d0d0d0"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui04 = "#b0b0b0"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui04 = "#B0B0B0"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui04 = "#84898c"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui04 = "#999999"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui04 = "#b8b8b8"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui04 = "#a09f93"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui04 = "#8A8075"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui04 = "#BDC3C7"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui04 = "#b4b7b4"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui04 = "#ababab"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui04 = "#009900"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui04 = "#aabcce"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui04 = "#989498"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui04 = "#c0c0c0"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui04 = "#959ca1"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui04 = "#86813b"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui04 = "#b8afad"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui04 = "#a59f85"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui04 = "#d8dee9"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui04 = "#a7adba"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui04 = "#a7adba"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui04 = "#8d8687"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui04 = "#b0b0b0"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui04 = "#d4cfc9"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui04 = "#43a5d5"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui04 = "#555555"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui04 = "#839496"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui04 = "#b8b8b8"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui04 = "#B0B0B0"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui04 = "#b4b7b4"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui04 = "#838184"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui04 = "#a7adba"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui04 = "#a7adba"$/;"	v
s:gui04	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui04 = "#af8787" " ANSI Blue$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui05 = "#875f5f" " ANSI Magenta$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui05 = "#a5a2a2"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui05 = "#81B5AC"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui05 = "#C7CCD1"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui05 = "#a6a28c"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui05 = "#a8a19f"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui05 = "#ab9bab"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui05 = "#7ea2b4"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui05 = "#8ca68c"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui05 = "#8a8986"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui05 = "#b7b8b9"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui05 = "#e0e0e0"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui05 = "#d0d0d0"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui05 = "#D0D0D0"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui05 = "#9ea7a6"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui05 = "#bbbbbb"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui05 = "#d8d8d8"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui05 = "#d3d0c8"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui05 = "#A39A90"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui05 = "#e0e0e0"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui05 = "#c5c8c6"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui05 = "#b9b9b9"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui05 = "#00bb00"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui05 = "#cbd6e2"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui05 = "#b9b5b8"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui05 = "#d0d0d0"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui05 = "#d9d8d8"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui05 = "#948e48"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui05 = "#d0c8c6"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui05 = "#f8f8f2"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui05 = "#e5e9f0"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui05 = "#c0c5ce"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui05 = "#c0c5ce"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui05 = "#a39e9b"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui05 = "#d0d0d0"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui05 = "#e6e1dc"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui05 = "#d6d6d6"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui05 = "#ababab"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui05 = "#93a1a1"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui05 = "#a3a3a3"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui05 = "#D0D0D0"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui05 = "#c5c8c6"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui05 = "#a7a7a7"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui05 = "#c0c5ce"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui05 = "#c0c5ce"$/;"	v
s:gui05	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui05 = "#dfaf87" " ANSI Magenta$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui06 = "#87afaf" " ANSI Cyan$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui06 = "#d6d5d4"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui06 = "#A7CEC8"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui06 = "#DFE2E5"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui06 = "#e8e4cf"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui06 = "#e6e2e0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui06 = "#d8cad8"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui06 = "#c1e4f6"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui06 = "#cfe8cf"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui06 = "#9d9b97"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui06 = "#dadbdc"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui06 = "#f5f5f5"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui06 = "#E0E0E0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui06 = "#a7cfa3"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui06 = "#dddddd"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui06 = "#e8e8e8"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui06 = "#e8e6df"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui06 = "#BEB6AE"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui06 = "#f5f5f5"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui06 = "#e3e3e3"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui06 = "#00dd00"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui06 = "#e5ebf1"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui06 = "#d5d3d5"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui06 = "#e7e7e8"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui06 = "#ccc37a"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui06 = "#e9e1dd"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui06 = "#f5f4f1"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui06 = "#eceff4"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui06 = "#dfe1e8"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui06 = "#cdd3de"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui06 = "#b9b6b0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui06 = "#f4f1ed"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui06 = "#eeeeee"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui06 = "#eee8d5"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui06 = "#e8e8e8"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui06 = "#E0E0E0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui06 = "#e0e0e0"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui06 = "#c3c3c3"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui06 = "#cdd3de"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui06 = "#cdd3de"$/;"	v
s:gui06	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui06 = "#ffafaf" " ANSI Cyan$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui07 = "#ffdf87" " ANSI White$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui07 = "#f7f7f7"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui07 = "#D2E7E4"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui07 = "#F3F4F5"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui07 = "#fefbec"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui07 = "#f1efee"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui07 = "#f7f3f7"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui07 = "#ebf8ff"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui07 = "#f0fff0"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui07 = "#baae9e"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui07 = "#fcfdfe"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui07 = "#f5f5f5"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui07 = "#F5F5F5"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui07 = "#b5d8f6"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui07 = "#f8f8f8"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui07 = "#f2f0ec"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui07 = "#DBD6D1"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui07 = "#ECF0F1"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui07 = "#f7f7f7"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui07 = "#00ff00"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui07 = "#f7f9fb"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui07 = "#faf0a5"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui07 = "#f5eeeb"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui07 = "#f9f8f5"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui07 = "#8fbcbb"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui07 = "#eff1f5"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui07 = "#d8dee9"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui07 = "#e7e9db"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui07 = "#f9f7f3"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui07 = "#f9f9f9"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui07 = "#fdf6e3"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui07 = "#f8f8f8"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui07 = "#FFFFFF"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui07 = "#ffffff"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui07 = "#d8dee9"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui07 = "#d8dee9"$/;"	v
s:gui07	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui07 = "#f7e4c0" " ANSI White$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui08 = "#87875f"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui08 = "#db2d20"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui08 = "#3E9688"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui08 = "#C7AE95"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui08 = "#d73737"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui08 = "#f22c40"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui08 = "#ca402b"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui08 = "#d22d72"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui08 = "#e6193c"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui08 = "#cf6a4c"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui08 = "#e31a1c"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui08 = "#fb0120"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui08 = "#fb9fb1"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui08 = "#AC4142"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui08 = "#2a5491"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui08 = "#ff4136"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui08 = "#ab4642"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui08 = "#f2777a"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui08 = "#826D57"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui08 = "#E74C3C"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui08 = "#CC342B"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui08 = "#7c7c7c"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui08 = "#007700"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui08 = "#bf8b56"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui08 = "#dd464c"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui08 = "#ff0000"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui08 = "#ee2e24"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui08 = "#c35359"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui08 = "#cb6077"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui08 = "#f92672"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui08 = "#88c0d0"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui08 = "#bf616a"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui08 = "#ec5f67"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui08 = "#ef6155"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui08 = "#eb008a"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui08 = "#da4939"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui08 = "#Cd3f45"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui08 = "#e92f2f"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui08 = "#dc322f"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui08 = "#f2241f"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui08 = "#FF0086"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui08 = "#cc6666"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui08 = "#cf6a4c"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui08 = "#870000"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui08 = "#870000"$/;"	v
s:gui08	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui08 = "#686868"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui09 = "#af1600"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui09 = "#e8bbd0"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui09 = "#3E7996"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui09 = "#C7C795"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui09 = "#b65611"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui09 = "#df5320"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui09 = "#a65926"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui09 = "#935c25"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui09 = "#87711d"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui09 = "#cf7d34"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui09 = "#e6550d"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui09 = "#fc6d24"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui09 = "#eda987"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui09 = "#D28445"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui09 = "#43820d"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui09 = "#ff851b"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui09 = "#dc9656"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui09 = "#f99157"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui09 = "#828257"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui09 = "#E67E22"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui09 = "#F96A38"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui09 = "#999999"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui09 = "#009900"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui09 = "#bfbf56"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui09 = "#fd8b19"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui09 = "#ff9900"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui09 = "#f386a1"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui09 = "#b36144"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui09 = "#d28b71"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui09 = "#fd971f"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui09 = "#81a1c1"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui09 = "#d08770"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui09 = "#f99157"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui09 = "#f99b15"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui09 = "#f29333"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui09 = "#cc7833"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui09 = "#db7b55"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui09 = "#e09448"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui09 = "#cb4b16"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui09 = "#ffa500"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui09 = "#FD8900"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui09 = "#de935f"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui09 = "#cda869"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui09 = "#f99157"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui09 = "#f99157"$/;"	v
s:gui09	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui09 = "#af5f5f"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0A = "#af875f"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0A = "#fded02"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0A = "#3E4C96"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0A = "#AEC795"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0A = "#cfb017"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0A = "#d5911a"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0A = "#bb8a35"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0A = "#8a8a0f"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0A = "#c3c322"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0A = "#f9ee98"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0A = "#dca060"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0A = "#fda331"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0A = "#ddb26f"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0A = "#F4BF75"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0A = "#a03b1e"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0A = "#ffdc00"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0A = "#f7ca88"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0A = "#ffcc66"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0A = "#6D8257"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0A = "#F1C40F"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0A = "#FBA922"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0A = "#a0a0a0"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0A = "#007700"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0A = "#8bbf56"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0A = "#fdcc59"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0A = "#ff0099"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0A = "#ffd204"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0A = "#a88339"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0A = "#f4bc87"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0A = "#f4bf75"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0A = "#5e81ac"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0A = "#ebcb8b"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0A = "#fac863"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0A = "#fec418"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0A = "#f8ca12"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0A = "#ffc66d"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0A = "#e6cd69"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0A = "#dddd13"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0A = "#b58900"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0A = "#b1951d"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0A = "#ABA800"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0A = "#f0c674"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0A = "#f9ee98"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0A = "#fac863"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0A = "#fac863"$/;"	v
s:gui0A	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0A = "#d75f5f"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0B = "#878787"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0B = "#01a252"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0B = "#883E96"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0B = "#95C7AE"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0B = "#60ac39"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0B = "#5ab738"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0B = "#379a37"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0B = "#568c3b"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0B = "#29a329"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0B = "#54be0d"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0B = "#31a354"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0B = "#a1c659"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0B = "#acc267"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0B = "#90A959"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0B = "#237986"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0B = "#2ecc40"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0B = "#a1b56c"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0B = "#99cc99"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0B = "#57826D"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0B = "#2ECC71"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0B = "#198844"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0B = "#8e8e8e"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0B = "#00bb00"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0B = "#56bf8b"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0B = "#8fc13e"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0B = "#33ff00"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0B = "#00853e"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0B = "#18974e"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0B = "#beb55b"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0B = "#a6e22e"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0B = "#bf616a"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0B = "#a3be8c"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0B = "#99c794"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0B = "#48b685"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0B = "#37b349"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0B = "#a5c261"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0B = "#9fca56"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0B = "#0ed839"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0B = "#859900"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0B = "#67b11d"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0B = "#00C918"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0B = "#b5bd68"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0B = "#8f9d6a"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0B = "#437019"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0B = "#437019"$/;"	v
s:gui0B	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0B = "#afd7d7"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0C = "#af5f00"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0C = "#b5e4f4"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0C = "#963E4C"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0C = "#95AEC7"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0C = "#1fad83"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0C = "#00ad9c"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0C = "#159393"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0C = "#2d8f6f"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0C = "#1999b3"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0C = "#afc4db"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0C = "#80b1d3"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0C = "#76c7b7"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0C = "#12cfc0"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0C = "#75B5AA"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0C = "#b02f30"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0C = "#7fdbff"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0C = "#86c1b9"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0C = "#66cccc"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0C = "#576D82"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0C = "#1ABC9C"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0C = "#3971ED"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0C = "#868686"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0C = "#005500"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0C = "#568bbf"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0C = "#149b93"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0C = "#00ffff"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0C = "#85cebc"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0C = "#75a738"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0C = "#7bbda4"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0C = "#a1efe4"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0C = "#d08770"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0C = "#96b5b4"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0C = "#5fb3b3"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0C = "#5bc4bf"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0C = "#00aabb"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0C = "#519f50"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0C = "#55dbbe"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0C = "#23edda"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0C = "#2aa198"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0C = "#2d9574"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0C = "#1faaaa"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0C = "#8abeb7"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0C = "#afc4db"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0C = "#5fb3b3"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0C = "#5fb3b3"$/;"	v
s:gui0C	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0C = "#af8787"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0D = "#5f5f87"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0D = "#01a0e4"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0D = "#96883E"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0D = "#AE95C7"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0D = "#6684e1"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0D = "#407ee7"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0D = "#516aec"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0D = "#257fad"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0D = "#3d62f5"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0D = "#5ea6ea"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0D = "#3182bd"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0D = "#6fb3d2"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0D = "#6fc2ef"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0D = "#6A9FB5"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0D = "#484d79"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0D = "#0074d9"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0D = "#7cafc2"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0D = "#6699cc"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0D = "#6D5782"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0D = "#3498DB"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0D = "#3971ED"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0D = "#686868"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0D = "#009900"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0D = "#8b56bf"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0D = "#1290bf"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0D = "#0066ff"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0D = "#009ddc"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0D = "#477ca1"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0D = "#8ab3b5"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0D = "#66d9ef"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0D = "#ebcb8b"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0D = "#8fa1b3"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0D = "#6699cc"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0D = "#06b6ef"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0D = "#0e5a94"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0D = "#6d9cbe"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0D = "#55b5db"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0D = "#3b48e3"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0D = "#268bd2"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0D = "#4f97d7"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0D = "#3777E6"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0D = "#81a2be"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0D = "#7587a6"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0D = "#0d61ac"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0D = "#0d61ac"$/;"	v
s:gui0D	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0D = "#dfaf87"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0E = "#afd7d7"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0E = "#a16a94"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0E = "#4C963E"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0E = "#C795AE"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0E = "#b854d4"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0E = "#6666ea"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0E = "#7b59c0"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0E = "#5d5db1"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0E = "#ad2bee"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0E = "#9b859d"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0E = "#756bb1"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0E = "#d381c3"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0E = "#e1a3ee"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0E = "#AA759F"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0E = "#c59820"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0E = "#b10dc9"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0E = "#ba8baf"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0E = "#cc99cc"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0E = "#82576D"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0E = "#9B59B6"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0E = "#A36AC7"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0E = "#747474"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0E = "#00bb00"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0E = "#bf568b"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0E = "#c85e7c"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0E = "#cc00ff"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0E = "#98005d"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0E = "#8868b3"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0E = "#a89bb9"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0E = "#ae81ff"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0E = "#a3be8c"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0E = "#b48ead"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0E = "#c594c5"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0E = "#815ba4"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0E = "#b31e8d"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0E = "#b6b3eb"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0E = "#a074c4"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0E = "#f996e2"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0E = "#6c71c4"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0E = "#a31db1"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0E = "#AD00A1"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0E = "#b294bb"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0E = "#9b859d"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0E = "#c594c5"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0E = "#c594c5"$/;"	v
s:gui0E	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0E = "#ffb2af"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:gui0F = "#dfdfaf"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_3024.vim	/^let s:gui0F = "#cdab53"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_apathy.vim	/^let s:gui0F = "#3E965B"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_ashes.vim	/^let s:gui0F = "#C79595"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierdune.vim	/^let s:gui0F = "#d43552"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierforest.vim	/^let s:gui0F = "#c33ff3"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierheath.vim	/^let s:gui0F = "#cc33cc"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierlakeside.vim	/^let s:gui0F = "#b72dd2"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_atelierseaside.vim	/^let s:gui0F = "#e619c3"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_bespin.vim	/^let s:gui0F = "#937121"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_brewer.vim	/^let s:gui0F = "#b15928"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_bright.vim	/^let s:gui0F = "#be643c"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_chalk.vim	/^let s:gui0F = "#deaf8f"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_classic.vim	/^let s:gui0F = "#8F5536"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_codeschool.vim	/^let s:gui0F = "#c98344"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_colors.vim	/^let s:gui0F = "#85144b"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_default.vim	/^let s:gui0F = "#a16946"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_eighties.vim	/^let s:gui0F = "#d27b53"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_embers.vim	/^let s:gui0F = "#825757"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_flat.vim	/^let s:gui0F = "#be643c"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_google.vim	/^let s:gui0F = "#3971ED"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_grayscale.vim	/^let s:gui0F = "#5e5e5e"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_greenscreen.vim	/^let s:gui0F = "#005500"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_harmonic16.vim	/^let s:gui0F = "#bf5656"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_hopscotch.vim	/^let s:gui0F = "#b33508"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_isotope.vim	/^let s:gui0F = "#3300ff"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_londontube.vim	/^let s:gui0F = "#b06110"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_marrakesh.vim	/^let s:gui0F = "#b3588e"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_mocha.vim	/^let s:gui0F = "#bb9584"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_monokai.vim	/^let s:gui0F = "#cc6633"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_nord.vim	/^let s:gui0F = "#b48ead"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_ocean.vim	/^let s:gui0F = "#ab7967"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_oceanicnext.vim	/^let s:gui0F = "#ab7967"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_paraiso.vim	/^let s:gui0F = "#e96ba8"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_pop.vim	/^let s:gui0F = "#7a2d00"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_railscasts.vim	/^let s:gui0F = "#bc9458"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_seti.vim	/^let s:gui0F = "#8a553f"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_shapeshifter.vim	/^let s:gui0F = "#69542d"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_solarized.vim	/^let s:gui0F = "#d33682"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui0F = "#b03060"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_summerfruit.vim	/^let s:gui0F = "#cc6633"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_tomorrow.vim	/^let s:gui0F = "#a3685a"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/base16_twilight.vim	/^let s:gui0F = "#9b703f"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:gui0F = "#ab7967"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:gui0F = "#ab7967"$/;"	v
s:gui0F	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:gui0F = "#ffffff"$/;"	v
s:guiAlmostBlack	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:guiAlmostBlack = "#2a2a2a"$/;"	v
s:guiAlmostBlack	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:guiAlmostBlack = "#2a2a2a"$/;"	v
s:guiBgPurple	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiBgPurple    = "#8076aa" " background purple$/;"	v
s:guiBlack	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:guiBlack       = "#080808"$/;"	v
s:guiBlue	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:guiBlue        = "#5fafd7"$/;"	v
s:guiDarkGray	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:guiDarkGray = "#545454"$/;"	v
s:guiDarkGray	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiDarkGray    = "#49483e" " dark gray$/;"	v
s:guiDarkGray	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:guiDarkGray = "#545454"$/;"	v
s:guiDarkSeafoam	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiDarkSeafoam = "#80ffbd" "dark-seafoam$/;"	v
s:guiDustyLilac	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiDustyLilac  = "#efe6ff" "dusty-lilac$/;"	v
s:guiFuschia	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiFuschia     = "#f92672" "fuschia$/;"	v
s:guiGold	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiGold        = "#e6c000" "gold$/;"	v
s:guiGoldenrod	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiGoldenrod   = "#fffea0" "goldenrod$/;"	v
s:guiGray	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:guiGray = "#666666"$/;"	v
s:guiGray	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:guiGray        = "#262626"$/;"	v
s:guiGray	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiGray        = "#49483e" " gray$/;"	v
s:guiGray	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiGray = "#8076aa"$/;"	v
s:guiGray	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:guiGray = "#666666"$/;"	v
s:guiGray	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:guiGray = "#666666"$/;"	v
s:guiGreen	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:guiGreen       = "#afd787"$/;"	v
s:guiLavender	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiLavender    = "#ae81ff" "lavender$/;"	v
s:guiLightgray	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:guiLightgray   = "#6c6c6c"$/;"	v
s:guiLilac	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiLilac       = "#c5a3ff" "lilac$/;"	v
s:guiOrange	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:guiOrange      = "#ffaf5f"$/;"	v
s:guiPeach	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiPeach       = "#ff857f" "peach$/;"	v
s:guiRed	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:guiRed         = "#ff5f5f"$/;"	v
s:guiRose	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiRose        = "#ffb8d1" "rose$/;"	v
s:guiSeafoam	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiSeafoam     = "#c2ffdf" "seafoam$/;"	v
s:guiShadow	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiShadow      = "#3b3a32" " shadow$/;"	v
s:guiSilver	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiSilver      = "#f8f8f0" "silver$/;"	v
s:guiViolet	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiViolet      = "#63588d" " violet$/;"	v
s:guiWhite	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:guiWhite = "#ffffff"$/;"	v
s:guiWhite	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:guiWhite       = "#e4e4e4"$/;"	v
s:guiWhite	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:guiWhite = "#f8f8f0"$/;"	v
s:guiWhite	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:guiWhite = "#ffffff"$/;"	v
s:guiWhite	plugged/vim-airline-themes/autoload/airline/themes/jet.vim	/^let s:guiWhite = "#ffffff"$/;"	v
s:guiWhite	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:guiWhite = "#ffffff"$/;"	v
s:gui_alert	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_alert       = '#870000'$/;"	v
s:gui_blue	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_blue = '#87afd7'$/;"	v
s:gui_blue	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_blue = '#6a9fb5'$/;"	v
s:gui_blue	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:gui_blue            = '#6a9fb5'$/;"	v
s:gui_blue	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_blue = '#87afd7'$/;"	v
s:gui_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_dark_gray = '#303030'$/;"	v
s:gui_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_dark_gray = '#202020'$/;"	v
s:gui_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:gui_dark_gray       = '#202020'$/;"	v
s:gui_dark_gray	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_dark_gray = '#303030'$/;"	v
s:gui_green	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_green = '#005f87'$/;"	v
s:gui_green	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_green = '#99cc99'$/;"	v
s:gui_green	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:gui_green           = '#99cc99'$/;"	v
s:gui_green	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_green = '#afd787'$/;"	v
s:gui_inactivebg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_inactivebg   = s:gui02$/;"	v
s:gui_inactivebg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_inactivebg   = '#1C1C1C'$/;"	v
s:gui_inactivefg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_inactivefg   = s:gui04$/;"	v
s:gui_inactivefg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_inactivefg   = '#4E4E4E'$/;"	v
s:gui_insertbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_insertbg    = s:gui0B$/;"	v
s:gui_insertbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_insertbg    = '#87AF5F'$/;"	v
s:gui_insertfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_insertfg    = s:gui07$/;"	v
s:gui_insertfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_insertfg    = '#FFFFFF'$/;"	v
s:gui_light_gray	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_light_gray = '#b2b2b2'$/;"	v
s:gui_light_gray	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_light_gray = '#505050'$/;"	v
s:gui_light_gray	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:gui_light_gray      = '#505050'$/;"	v
s:gui_light_gray	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_light_gray = '#b2b2b2'$/;"	v
s:gui_lightlight_gray	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_lightlight_gray = '#8A8A8A'$/;"	v
s:gui_lightlight_gray	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:gui_lightlight_gray = '#8A8A8A'$/;"	v
s:gui_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_med_gray_hi = '#444444'$/;"	v
s:gui_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_med_gray_hi = '#303030'$/;"	v
s:gui_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:gui_med_gray_hi     = '#303030'$/;"	v
s:gui_med_gray_hi	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_med_gray_hi = '#444444'$/;"	v
s:gui_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:gui_med_gray_lo     = '#3a3a3a'$/;"	v
s:gui_med_gray_lo	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_med_gray_lo = '#3a3a3a'$/;"	v
s:gui_normalbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_normalbg    = s:gui0D$/;"	v
s:gui_normalbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_normalbg    = '#5F87FF'$/;"	v
s:gui_normalfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_normalfg    = s:gui07$/;"	v
s:gui_normalfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_normalfg    = '#FFFFFF'$/;"	v
s:gui_orange	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_orange = '#ffaf87'$/;"	v
s:gui_orange	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_orange = '#d28445'$/;"	v
s:gui_orange	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:gui_orange          = '#d28445'$/;"	v
s:gui_orange	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_orange = '#d7af5f'$/;"	v
s:gui_pink	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:gui_pink	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:gui_pink	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:gui_pink            = '#d7afd7'$/;"	v
s:gui_pink	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_pink = '#d7afd7'$/;"	v
s:gui_purple	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_purple = '#afafd7'$/;"	v
s:gui_purple	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_purple = '#aa759f'$/;"	v
s:gui_purple	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:gui_purple          = '#aa759f'$/;"	v
s:gui_purple	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_purple = '#afafd7'$/;"	v
s:gui_red	plugged/vim-airline-themes/autoload/airline/themes/angr.vim	/^let s:gui_red = '#d78787'$/;"	v
s:gui_red	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:gui_red = '#ac4142'$/;"	v
s:gui_red	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:gui_red             = '#ac4142'$/;"	v
s:gui_red	plugged/vim-airline-themes/autoload/airline/themes/bubblegum.vim	/^let s:gui_red = '#d78787'$/;"	v
s:gui_replacebg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_replacebg   = s:gui08$/;"	v
s:gui_replacebg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_replacebg   = '#870000'$/;"	v
s:gui_replacefg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_replacefg   = s:gui07$/;"	v
s:gui_replacefg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_replacefg   = '#FFFFFF'$/;"	v
s:gui_termbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_termbg      = s:gui02$/;"	v
s:gui_termbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_termbg      = '#5F5F5F'$/;"	v
s:gui_termbg2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_termbg2     = s:gui00$/;"	v
s:gui_termbg2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_termbg2     = '#1C1C1C'$/;"	v
s:gui_termfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_termfg      = s:gui06$/;"	v
s:gui_termfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_termfg      = '#AFAF87'$/;"	v
s:gui_termfg2	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_termfg2     = s:gui06$/;"	v
s:gui_termfg2	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_termfg2     = '#F5F5F5'$/;"	v
s:gui_visualbg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_visualbg    = s:gui09$/;"	v
s:gui_visualbg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_visualbg    = '#ff8c00'$/;"	v
s:gui_visualfg	plugged/vim-airline-themes/autoload/airline/themes/base16_spacemacs.vim	/^let s:gui_visualfg    = s:gui07$/;"	v
s:gui_visualfg	plugged/vim-airline-themes/autoload/airline/themes/murmur.vim	/^let s:gui_visualfg    = '#FFFFFF'$/;"	v
s:guibg	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:guibg = '#080808'$/;"	v
s:guibg	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:guibg = '#080808'$/;"	v
s:guibg2	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:guibg2 = '#1c1c1c'$/;"	v
s:guisep	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:guisep = '#303030'$/;"	v
s:h	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^    let s:h.ids[s:group] = []$/;"	v
s:h	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:h = {}$/;"	v
s:h	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:h.ids = {}$/;"	v
s:handlers	plugged/vim-misc/autoload/xolox/misc/open.vim	/^let s:handlers = ['gnome-open', 'kde-open', 'exo-open', 'xdg-open', 'cygstart']$/;"	v
s:has_dict_maparg	plugged/supertab/plugin/supertab.vim	/^  let s:has_dict_maparg = v:version > 703 || (v:version == 703 && has('patch32'))$/;"	v
s:has_projections	plugged/vim-rails/autoload/rails.vim	/^let s:has_projections = {$/;"	v
s:has_reltime	plugged/vim-misc/autoload/xolox/misc/timer.vim	/^let s:has_reltime = has('reltime')$/;"	v
s:hash_colors	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:have_cached_items	plugged/vim-notes/autoload/xolox/notes.vim	/^  let s:have_cached_items = 0$/;"	v
s:have_cached_names	plugged/vim-notes/autoload/xolox/notes.vim	/^  let s:have_cached_names = 0$/;"	v
s:have_cached_titles	plugged/vim-notes/autoload/xolox/notes.vim	/^  let s:have_cached_titles = 0$/;"	v
s:head_format	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:head_format = get(g:, 'airline#extensions#branch#format', 0)$/;"	v
s:hex_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:hex_regex = '0x\\x\\%(_\\?\\x\\)*\\%(\\>\\|im\\>\\|\\ze\\X\\)'$/;"	v
s:hexfloat_regex1	plugged/vim-polyglot/syntax/julia.vim	/^let s:hexfloat_regex1 = '0x\\.\\%\\(\\x\\%(_\\?\\x\\)*\\)\\?[pP][-+]\\?\\d\\+\\%(\\>\\|im\\>\\|\\ze\\X\\)'$/;"	v
s:hexfloat_regex2	plugged/vim-polyglot/syntax/julia.vim	/^let s:hexfloat_regex2 = '0x\\x\\%(_\\?\\x\\)*\\%\\(\\.\\%\\(\\x\\%(_\\?\\x\\)*\\)\\?\\)\\?[pP][-+]\\?\\d\\+\\%(\\>\\|im\\>\\|\\ze\\X\\)'$/;"	v
s:hi_group_cursor	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:hi_group_cursor = 'multiple_cursors_cursor'$/;"	v
s:hi_group_visual	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:hi_group_visual = 'multiple_cursors_visual'$/;"	v
s:hl_groups	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:hl_groups = {}$/;"	v
s:hls_cursor	plugged/gruvbox/colors/gruvbox.vim	/^  let s:hls_cursor = get(s:gb, g:gruvbox_hls_cursor)$/;"	v
s:hls_cursor	plugged/gruvbox/colors/gruvbox.vim	/^let s:hls_cursor = s:orange$/;"	v
s:hooks	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks = [$/;"	v
s:hooks_camel	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks_camel = [$/;"	v
s:hot_pink	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:hot_pink = [201, "#ff00ff" ]$/;"	v
s:htmlIndentExpr	plugged/vim-polyglot/after/indent/html.vim	/^let s:htmlIndentExpr = &l:indentexpr$/;"	v
s:html_indent	plugged/vim-polyglot/indent/vue.vim	/^let s:html_indent = s:get_indentexpr('html')$/;"	v
s:htmlindent	plugged/vim-polyglot/indent/blade.vim	/^let s:htmlindent = &indentexpr$/;"	v
s:hue_1	plugged/one/colors/one.vim	/^    let s:hue_1  = '0184bc' " cyan$/;"	v
s:hue_1	plugged/one/colors/one.vim	/^    let s:hue_1  = '56b6c2' " cyan$/;"	v
s:hue_1	plugged/vim-one/colors/one.vim	/^    let s:hue_1  = '0184bc' " cyan$/;"	v
s:hue_1	plugged/vim-one/colors/one.vim	/^    let s:hue_1  = '56b6c2' " cyan$/;"	v
s:hue_2	plugged/one/colors/one.vim	/^    let s:hue_2  = '4078f2' " blue$/;"	v
s:hue_2	plugged/one/colors/one.vim	/^    let s:hue_2  = '61afef' " blue$/;"	v
s:hue_2	plugged/vim-one/colors/one.vim	/^    let s:hue_2  = '4078f2' " blue$/;"	v
s:hue_2	plugged/vim-one/colors/one.vim	/^    let s:hue_2  = '61afef' " blue$/;"	v
s:hue_3	plugged/one/colors/one.vim	/^    let s:hue_3  = 'a626a4' " purple$/;"	v
s:hue_3	plugged/one/colors/one.vim	/^    let s:hue_3  = 'c678dd' " purple$/;"	v
s:hue_3	plugged/vim-one/colors/one.vim	/^    let s:hue_3  = 'a626a4' " purple$/;"	v
s:hue_3	plugged/vim-one/colors/one.vim	/^    let s:hue_3  = 'c678dd' " purple$/;"	v
s:hue_4	plugged/one/colors/one.vim	/^    let s:hue_4  = '50a14f' " green$/;"	v
s:hue_4	plugged/one/colors/one.vim	/^    let s:hue_4  = '98c379' " green$/;"	v
s:hue_4	plugged/vim-one/colors/one.vim	/^    let s:hue_4  = '50a14f' " green$/;"	v
s:hue_4	plugged/vim-one/colors/one.vim	/^    let s:hue_4  = '98c379' " green$/;"	v
s:hue_5	plugged/one/colors/one.vim	/^    let s:hue_5   = 'e06c75' " red 1$/;"	v
s:hue_5	plugged/one/colors/one.vim	/^    let s:hue_5   = 'e45649' " red 1$/;"	v
s:hue_5	plugged/vim-one/colors/one.vim	/^    let s:hue_5   = 'e06c75' " red 1$/;"	v
s:hue_5	plugged/vim-one/colors/one.vim	/^    let s:hue_5   = 'e45649' " red 1$/;"	v
s:hue_5_2	plugged/one/colors/one.vim	/^    let s:hue_5_2 = 'be5046' " red 2$/;"	v
s:hue_5_2	plugged/one/colors/one.vim	/^    let s:hue_5_2 = 'ca1243' " red 2$/;"	v
s:hue_5_2	plugged/vim-one/colors/one.vim	/^    let s:hue_5_2 = 'be5046' " red 2$/;"	v
s:hue_5_2	plugged/vim-one/colors/one.vim	/^    let s:hue_5_2 = 'ca1243' " red 2$/;"	v
s:hue_6	plugged/one/colors/one.vim	/^    let s:hue_6   = '986801' " orange 1$/;"	v
s:hue_6	plugged/one/colors/one.vim	/^    let s:hue_6   = 'd19a66' " orange 1$/;"	v
s:hue_6	plugged/vim-one/colors/one.vim	/^    let s:hue_6   = '986801' " orange 1$/;"	v
s:hue_6	plugged/vim-one/colors/one.vim	/^    let s:hue_6   = 'd19a66' " orange 1$/;"	v
s:hue_6_2	plugged/one/colors/one.vim	/^    let s:hue_6_2 = 'c18401' " orange 2$/;"	v
s:hue_6_2	plugged/one/colors/one.vim	/^    let s:hue_6_2 = 'e5c07b' " orange 2$/;"	v
s:hue_6_2	plugged/vim-one/colors/one.vim	/^    let s:hue_6_2 = 'c18401' " orange 2$/;"	v
s:hue_6_2	plugged/vim-one/colors/one.vim	/^    let s:hue_6_2 = 'e5c07b' " orange 2$/;"	v
s:hunk_re	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:hunk_symbols	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:hunk_symbols = get(g:, 'airline#extensions#hunks#hunk_symbols', ['+', '~', '-'])$/;"	v
s:i	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = g:omlet_indent_struct$/;"	v
s:i	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = matchstr(s:m,'\\d\\+')$/;"	v
s:i	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:i = s:idef$/;"	v
s:iTerm_escape_template	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:iTerm_escape_template = '\\033]Pl%s\\033\\\\'$/;"	v
s:ics	plugged/tagbar/syntax/tagbar.vim	/^let s:ics = escape(join(g:tagbar_iconchars, ''), ']^\\-')$/;"	v
s:id	plugged/vim-bookmarks/autoload/ctrlp/bookmarks.vim	/^let s:id = g:ctrlp_builtins + len(g:ctrlp_ext_vars)$/;"	v
s:idef	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = 2$/;"	v
s:idef	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = g:omlet_indent$/;"	v
s:idef	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:idef = matchstr(s:m,'\\d\\+')$/;"	v
s:idregex	plugged/vim-polyglot/autoload/julia.vim	/^let s:idregex = '[^' . s:nonidS_chars . '0-9!' . s:uniop_chars . s:binop_chars . '][^' . s:nonidS_chars . s:uniop_chars . s:binop_chars . s:binop_chars_extra . ']*'$/;"	v
s:idregex	plugged/vim-polyglot/syntax/julia.vim	/^let s:idregex = '\\%([^' . s:nonidS_chars . '0-9!?' . s:uniop_chars . s:binop_chars . '][^' . s:nonidS_chars . s:uniop_chars . s:binop_chars . s:binop_chars_extra . ']*\\|\\<?\\>\\)'$/;"	v
s:improved_contrast	plugged/vim-airline-themes/autoload/airline/themes/base16.vim	/^let s:improved_contrast = get(g:, 'airline_base16_improved_contrast', 0)$/;"	v
s:improved_contrast	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:improved_contrast = get(g:, 'airline_base16_improved_contrast', 0)$/;"	v
s:in_comm	plugged/vim-polyglot/indent/javascript.vim	/^let s:in_comm = s:skip_expr[:-14] . "'comment\\\\|doc'"$/;"	v
s:inactive_funcrefs	plugged/vim-airline/autoload/airline.vim	/^let s:inactive_funcrefs = []$/;"	v
s:incIndent	plugged/vim-polyglot/indent/plantuml.vim	/^let s:incIndent =$/;"	v
s:indent	plugged/vim-gitgutter/test/runner.vim	/^let s:indent = ''$/;"	v
s:indent	plugged/vim-gitgutter/test/runner.vim	/^let s:indent = max(map(copy(s:tests), {_, val -> len(FriendlyName(val))}))$/;"	v
s:indent_access_modifier_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:indent_access_modifier_regex = '\\C^\\s*\\%(protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:indent_access_modifier_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:indent_access_modifier_regex = '\\C^\\s*\\%(protected\\|private\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:indent_tags	plugged/vim-polyglot/indent/html.vim	/^let s:indent_tags = {}$/;"	v
s:infixkeywords	plugged/vim-polyglot/syntax/julia.vim	/^  let s:infixkeywords = '\\<\\%(in\\)\\>'$/;"	v
s:infixkeywords	plugged/vim-polyglot/syntax/julia.vim	/^  let s:infixkeywords = '\\<\\%(in\\|isa\\)\\>'$/;"	v
s:init	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:init=0$/;"	v
s:init_done	plugged/tagbar/autoload/tagbar.vim	/^let s:init_done = 0$/;"	v
s:innerbg	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:innerbg = [234, '#1c1c1c']$/;"	v
s:instance	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:instance = {}$/;"	v
s:int_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:int_regex = '\\%(' . s:hex_regex .$/;"	v
s:int_suf	plugged/vim-polyglot/syntax/nim.vim	/^  let s:int_suf = '%(''%(%(i|I|u|U)%(8|16|32|64)|u|U))'$/;"	v
s:interp_dollar	plugged/vim-polyglot/syntax/julia.vim	/^let s:interp_dollar = '\\([' . s:nonidS_chars . s:uniop_chars . s:binop_chars . '!?]\\|^\\)\\@'.s:d(1).'<=\\$'$/;"	v
s:invalid_keywords	plugged/vim-easytags/autoload/xolox/easytags.vim	/^let s:invalid_keywords = {$/;"	v
s:inverse	plugged/gruvbox/colors/gruvbox.vim	/^  let s:inverse = ''$/;"	v
s:inverse	plugged/gruvbox/colors/gruvbox.vim	/^let s:inverse = 'inverse,'$/;"	v
s:invert_selection	plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_selection = ''$/;"	v
s:invert_selection	plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_selection = s:inverse$/;"	v
s:invert_signs	plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_signs = s:inverse$/;"	v
s:invert_signs	plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_signs = ''$/;"	v
s:invert_tabline	plugged/gruvbox/colors/gruvbox.vim	/^    let s:invert_tabline = s:inverse$/;"	v
s:invert_tabline	plugged/gruvbox/colors/gruvbox.vim	/^let s:invert_tabline = ''$/;"	v
s:is_AppleTerminal	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_AppleTerminal = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'Apple_Terminal'$/;"	v
s:is_cygwin	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_dark	plugged/gruvbox/colors/gruvbox.vim	/^let s:is_dark=(&background == 'dark')$/;"	v
s:is_enabled	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^  let s:is_enabled = 0$/;"	v
s:is_good	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_good = !has('gui_running') && !s:is_win && !s:is_AppleTerminal$/;"	v
s:is_iTerm	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_iTerm = exists('$TERM_PROGRAM') && $TERM_PROGRAM =~# 'iTerm.app'$/;"	v
s:is_mac	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_maximized	plugged/tagbar/autoload/tagbar.vim	/^let s:is_maximized    = 0$/;"	v
s:is_unix	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_vital_vim	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_vital_vim	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:is_vital_vim = s:plugin_name is# 'vital'$/;"	v
s:is_win	autoload/plug.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/fzf.vim/autoload/fzf/vim/complete.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/fzf.vim/plugin/fzf.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:is_win = has('win32') || has('win64')$/;"	v
s:is_win32term	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:is_win32term = (has('win32') || has('win64')) &&$/;"	v
s:is_windows	plugged/deoplete.nvim/autoload/deoplete/init.vim	/^let s:is_windows = ((has('win32') || has('win64')) ? v:true : v:false)$/;"	v
s:is_windows	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:iskeyword_save	plugged/vim-polyglot/syntax/php.vim	/^let s:iskeyword_save = &iskeyword$/;"	v
s:italic	plugged/gruvbox/colors/gruvbox.vim	/^  let s:italic = ''$/;"	v
s:italic	plugged/gruvbox/colors/gruvbox.vim	/^let s:italic = 'italic,'$/;"	v
s:italicize_comments	plugged/gruvbox/colors/gruvbox.vim	/^    let s:italicize_comments = ''$/;"	v
s:italicize_comments	plugged/gruvbox/colors/gruvbox.vim	/^let s:italicize_comments = s:italic$/;"	v
s:italicize_strings	plugged/gruvbox/colors/gruvbox.vim	/^    let s:italicize_strings = s:italic$/;"	v
s:italicize_strings	plugged/gruvbox/colors/gruvbox.vim	/^let s:italicize_strings = ''$/;"	v
s:js_keywords	plugged/vim-polyglot/indent/solidity.vim	/^let s:js_keywords = '^\\s*\\(break\\|case\\|catch\\|continue\\|debugger\\|default\\|delete\\|do\\|else\\|finally\\|for\\|function\\|if\\|in\\|instanceof\\|new\\|return\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\)'$/;"	v
s:jsx_pragma_pattern	plugged/vim-polyglot/ftdetect/polyglot.vim	/^let s:jsx_pragma_pattern = '\\%^\\_s*\\\/\\*\\*\\%(\\_.\\%(\\*\\\/\\)\\@!\\)*@jsx\\_.\\{-}\\*\\\/'$/;"	v
s:julia_blocks_functions	plugged/vim-polyglot/autoload/julia_blocks.vim	/^let s:julia_blocks_functions = {$/;"	v
s:julia_highlight_operators	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_highlight_operators = get(g:, "julia_highlight_operators", 1)$/;"	v
s:julia_spellcheck_comments	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_comments = get(g:, "julia_spellcheck_comments", 1)$/;"	v
s:julia_spellcheck_docstrings	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_docstrings = get(g:, "julia_spellcheck_docstrings", 1)$/;"	v
s:julia_spellcheck_strings	plugged/vim-polyglot/syntax/julia.vim	/^let s:julia_spellcheck_strings = get(g:, "julia_spellcheck_strings", 0)$/;"	v
s:keepcpo	plugged/vim-polyglot/ftplugin/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/indent/cmake.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/cmake.vim	/^let s:keepcpo= &cpo$/;"	v
s:keepcpo	plugged/vim-polyglot/syntax/cucumber.vim	/^let s:keepcpo= &cpo$/;"	v
s:key_value	plugged/vim-polyglot/indent/ansible.vim	/^let s:key_value = '\\v^\\s*[^:-]+:\\s*\\S' " apt: name=package$/;"	v
s:keywords	plugged/vim-polyglot/syntax/julia.vim	/^  let s:keywords = '\\<\\%(return\\|local\\|global\\|import\\%(all\\)\\?\\|export\\|using\\|const\\)\\>'$/;"	v
s:keywords	plugged/vim-polyglot/syntax/julia.vim	/^  let s:keywords = '\\<\\%(return\\|local\\|global\\|import\\%(all\\)\\?\\|export\\|using\\|const\\|where\\)\\>'$/;"	v
s:kind	plugged/vim-bookmarks/autoload/unite/kinds/vim_bookmarks.vim	/^let s:kind = {$/;"	v
s:known_files	plugged/tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:language	plugged/vim-polyglot/indent/vue.vim	/^    let s:language.indentexpr = s:get_indentexpr(s:language.name)$/;"	v
s:languages	plugged/vim-polyglot/indent/vue.vim	/^let s:languages = [$/;"	v
s:last_alt_bufnr	plugged/tagbar/autoload/tagbar.vim	/^let s:last_alt_bufnr = -1$/;"	v
s:last_changedtick	plugged/vim-polyglot/indent/erlang.vim	/^let s:last_changedtick = -1$/;"	v
s:last_disk_sync	plugged/vim-notes/autoload/xolox/notes/tags.vim	/^  let s:last_disk_sync = 0 " Whether the on-disk representation of the tags has been read.$/;"	v
s:last_file	plugged/vim-bookmarks/examples/bm-autoload-example.vim	/^let s:last_file = ''$/;"	v
s:last_highlight_tline	plugged/tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:last_mode	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:last_mode = ''$/;"	v
s:last_root	plugged/vim-bookmarks/examples/bm-autoload-example.vim	/^let s:last_root = ''$/;"	v
s:last_rtp	autoload/plug.vim	/^let s:last_rtp  = s:escrtp(get(s:split_rtp(), -1, ''))$/;"	v
s:latency_debug_file	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:latency_debug_file = ''$/;"	v
s:lavender	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:lavender = [183, "#dfafff"]$/;"	v
s:layout	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:layout = get(g:, 'airline#extensions#default#layout', [$/;"	v
s:layout_keys	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:layout_keys = ['window', 'up', 'down', 'left', 'right']$/;"	v
s:leading_operator_regex	plugged/vim-polyglot/indent/crystal.vim	/^let s:leading_operator_regex = '^\\s*[.]'$/;"	v
s:leading_operator_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:leading_operator_regex = '^\\s*[.]'$/;"	v
s:leading_operator_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:leading_operator_regex = '^\\s*[.]'$/;"	v
s:left	plugged/vim-textobj-erb/plugin/textobj/erb.vim	/^let s:left = '<%' . s:left_modifiers . s:whitespace$/;"	v
s:left_modifiers	plugged/vim-textobj-erb/plugin/textobj/erb.vim	/^let s:left_modifiers = '\\(-\\|=\\{1,2}\\|#\\)\\?'$/;"	v
s:letlim	plugged/vim-polyglot/indent/ocaml.vim	/^let s:letlim = '\\(\\<\\(sig\\|struct\\)\\|;;\\)\\s*$'$/;"	v
s:letpat	plugged/vim-polyglot/indent/ocaml.vim	/^let s:letpat = '^\\s*\\(let\\|type\\|module\\|class\\|open\\|exception\\|val\\|include\\|external\\)\\>'$/;"	v
s:light_blue	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:light_blue = [159, "#afffff"]$/;"	v
s:light_pink	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:light_pink = [218, "#ffafdf"]$/;"	v
s:light_yellow	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:light_yellow = [229, "#ffffaf"]$/;"	v
s:lim	plugged/vim-polyglot/indent/ocaml.vim	/^let s:lim = '^\\s*\\(exception\\|external\\|include\\|let\\|module\\|open\\|type\\|val\\)\\>'$/;"	v
s:line_term	plugged/vim-polyglot/indent/json.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:line_term	plugged/vim-polyglot/indent/solidity.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:lines	plugged/tmux-complete.vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines = deepcopy(s:words)$/;"	v
s:lines	plugged/tmux-complete.vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines.description = 'lines in the current tmux session'$/;"	v
s:lines	plugged/tmux-complete.vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:lines.name = 'tmuxcomplete\/lines'$/;"	v
s:lines	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:lines = join(getline(1, 5) + [getline('$')], "\\n")$/;"	v
s:lines	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	plugged/vim-polyglot/ftplugin/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	plugged/vim-polyglot/syntax/eelixir.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	plugged/vim-polyglot/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	plugged/vim-polyglot/syntax/jst.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	plugged/vim-polyglot/syntax/liquid.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	plugged/vim-polyglot/syntax/ragel.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	plugged/vim-ruby/ftplugin/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:lines	plugged/vim-ruby/syntax/eruby.vim	/^  let s:lines = getline(1)."\\n".getline(2)."\\n".getline(3)."\\n".getline(4)."\\n".getline(5)."\\n".getline("$")$/;"	v
s:list_close_pat	plugged/vim-polyglot/indent/tex.vim	/^let s:list_close_pat	= '\\\\\\@<!\\\\end{\\%(' . join(s:list_envs, '\\|') . '\\)}'$/;"	v
s:list_envs	plugged/vim-polyglot/indent/tex.vim	/^let s:list_envs = ['itemize', 'enumerate', 'description']$/;"	v
s:list_open_pat	plugged/vim-polyglot/indent/tex.vim	/^let s:list_open_pat = '\\\\\\@<!\\\\begin{\\%(' . join(s:list_envs, '\\|') . '\\)}'$/;"	v
s:loaded	autoload/plug.vim	/^let s:loaded = get(s:, 'loaded', {})$/;"	v
s:loaded	plugged/vim-airline/autoload/airline/init.vim	/^let s:loaded = 0$/;"	v
s:loaded	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:loaded = s:FALSE$/;"	v
s:loaded	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:loaded = {}$/;"	v
s:loaded	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:loaded = {}$/;"	v
s:loading_index	plugged/vim-notes/autoload/xolox/notes/tags.vim	/^  let s:loading_index = 0$/;"	v
s:log_file	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:log_file    = s:plugin_dir.'gitgutter.log'$/;"	v
s:logfile	plugged/far.vim/autoload/far/tools.vim	/^let s:logfile = $HOME.'\/far.vim.log'$/;"	v
s:logging	plugged/emmet-vim/unittest.vim	/^let s:logging = 0$/;"	v
s:m	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'default\\s*=\\s*\\d\\+')$/;"	v
s:m	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:m = matchstr(s:modeline,'struct\\s*=\\s*\\d\\+')$/;"	v
s:mac_gui	autoload/plug.vim	/^let s:mac_gui = has('gui_macvim') && has('gui_running')$/;"	v
s:macro_regex	plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:macro_regex = '@\\%(#\\@!\\S\\)\\+\\s\\+'$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:match_words = ""$/;"	v
s:match_words	plugged/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	plugged/vim-ruby/ftplugin/eruby.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	plugged/vim-ruby/ftplugin/eruby.vim	/^let s:match_words = ""$/;"	v
s:maximal_number_of_compared_movments	plugged/vim-easymotion/t/compare_movements_spec.vim	/^let s:maximal_number_of_compared_movments = 10000$/;"	v
s:me	autoload/plug.vim	/^let s:me = resolve(expand('<sfile>:p'))$/;"	v
s:messages	plugged/vim-gitgutter/test/runner.vim	/^let s:messages = []$/;"	v
s:middle	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:middle  = ['#bcbcbc', '#444444', 250, 238]$/;"	v
s:middle_patt	plugged/vim-polyglot/indent/lua.vim	/^let s:middle_patt = '\\C\\<\\%(else\\|elseif\\)\\>'$/;"	v
s:mint	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:mint = [158, "#afffd7"]$/;"	v
s:modeline	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:modeline = ""$/;"	v
s:modeline	plugged/vim-polyglot/ftplugin/ocaml.vim	/^  let s:modeline = getline(".")$/;"	v
s:modep	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^let s:modep = "[nvoicsxl]"$/;"	v
s:modes	plugged/supertab/plugin/supertab.vim	/^  let s:modes = '\/^E\/^Y\/^L\/^N\/^K\/^T\/^I\/^]\/^F\/^D\/^V\/^P\/^U\/^O\/s'$/;"	v
s:modes	plugged/supertab/plugin/supertab.vim	/^  let s:modes = s:modes . '\/n\/p'$/;"	v
s:modified	plugged/vim-airline-themes/autoload/airline/themes/alduin.vim	/^let s:modified = { 'airline_c': [s:gui07, '', s:cterm07, '', ''] }$/;"	v
s:modified	plugged/vim-airline-themes/autoload/airline/themes/badcat.vim	/^let s:modified = { 'airline_c': [ '#ffb964', '', s:ctermRed, '', '' ] }$/;"	v
s:modified	plugged/vim-airline-themes/autoload/airline/themes/fairyfloss.vim	/^let s:modified = { 'airline_c': [ s:guiRose, '', 215, '', '' ] }$/;"	v
s:modified	plugged/vim-airline-themes/autoload/airline/themes/jellybeans.vim	/^let s:modified = { 'airline_c': [ '#ffb964', '', 215, '', '' ] }$/;"	v
s:modified	plugged/vim-airline-themes/autoload/airline/themes/sierra.vim	/^let s:modified = { 'airline_c': [s:gui07, '', s:cterm07, '', ''] }$/;"	v
s:modified	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:modified = { 'airline_c': [s:dark_mint[1], s:grey2[1], s:dark_mint[0], s:grey2[0] ] }$/;"	v
s:module	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^let s:module = {$/;"	v
s:module	plugged/vim-polyglot/indent/ocaml.vim	/^let s:module = '\\<\\%(begin\\|sig\\|struct\\|object\\)\\>'$/;"	v
s:module_func_match	plugged/alchemist.vim/after/plugin/alchemist.vim	/^let s:module_func_match = '[A-Za-z0-9\\._?!]\\+'$/;"	v
s:module_match	plugged/alchemist.vim/after/plugin/alchemist.vim	/^let s:module_match = '[:A-Za-z0-9\\._]\\+'$/;"	v
s:modules	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:modules = s:V.import("Over.Commandline.Modules")$/;"	v
s:mono_1	plugged/one/colors/one.vim	/^    let s:mono_1 = '494b53'$/;"	v
s:mono_1	plugged/one/colors/one.vim	/^    let s:mono_1 = 'abb2bf'$/;"	v
s:mono_1	plugged/vim-one/colors/one.vim	/^    let s:mono_1 = '494b53'$/;"	v
s:mono_1	plugged/vim-one/colors/one.vim	/^    let s:mono_1 = 'abb2bf'$/;"	v
s:mono_2	plugged/one/colors/one.vim	/^    let s:mono_2 = '696c77'$/;"	v
s:mono_2	plugged/one/colors/one.vim	/^    let s:mono_2 = '828997'$/;"	v
s:mono_2	plugged/vim-one/colors/one.vim	/^    let s:mono_2 = '696c77'$/;"	v
s:mono_2	plugged/vim-one/colors/one.vim	/^    let s:mono_2 = '828997'$/;"	v
s:mono_3	plugged/one/colors/one.vim	/^    let s:mono_3 = '5c6370'$/;"	v
s:mono_3	plugged/one/colors/one.vim	/^    let s:mono_3 = 'a0a1a7'$/;"	v
s:mono_3	plugged/vim-one/colors/one.vim	/^    let s:mono_3 = '5c6370'$/;"	v
s:mono_3	plugged/vim-one/colors/one.vim	/^    let s:mono_3 = 'a0a1a7'$/;"	v
s:mono_4	plugged/one/colors/one.vim	/^    let s:mono_4 = '4b5263'$/;"	v
s:mono_4	plugged/one/colors/one.vim	/^    let s:mono_4 = 'c2c2c3'$/;"	v
s:mono_4	plugged/vim-one/colors/one.vim	/^    let s:mono_4 = '4b5263'$/;"	v
s:mono_4	plugged/vim-one/colors/one.vim	/^    let s:mono_4 = 'c2c2c3'$/;"	v
s:mq_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:mq_jobs        = {}$/;"	v
s:msg	plugged/vim-easytags/plugin/easytags.vim	/^        let s:msg .= " On Ubuntu & Debian you can install Exuberant Ctags by"$/;"	v
s:msg	plugged/vim-easytags/plugin/easytags.vim	/^        let s:msg .= " Please download & install Exuberant Ctags from http:\/\/ctags.sf.net"$/;"	v
s:msg	plugged/vim-easytags/plugin/easytags.vim	/^        let s:msg .= " installing the package named `exuberant-ctags':"$/;"	v
s:msg	plugged/vim-easytags/plugin/easytags.vim	/^        let s:msg .= " sudo apt-get install exuberant-ctags"$/;"	v
s:msg	plugged/vim-easytags/plugin/easytags.vim	/^      let s:msg .= " or newer is required while you have version %s installed!"$/;"	v
s:msg	plugged/vim-easytags/plugin/easytags.vim	/^      let s:msg = "easytags.vim %s: Plug-in not loaded because Exuberant Ctags 5.5"$/;"	v
s:msg	plugged/vim-easytags/plugin/easytags.vim	/^      let s:msg = "easytags.vim %s: Plug-in not loaded because Exuberant Ctags isn't installed!"$/;"	v
s:msl_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:msl_regex = '\\%([\\\\*+\/.:([]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)' . s:line_term$/;"	v
s:mx	plugged/emmet-vim/autoload/emmet/lang/html.vim	/^let s:mx = '\\([+>]\\|[<^]\\+\\)\\{-}\\s*'$/;"	v
s:named_module_entry	plugged/vim-polyglot/indent/ansible.vim	/^let s:named_module_entry = '\\v^\\s*-\\s*(name|hosts|role):\\s*\\S' " - name: 'do stuff'$/;"	v
s:names	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:names = {'0': 'index', '1': 'orig', '2':'fetch', '3':'merge'}$/;"	v
s:nbs	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:nbs = nr2char(0x2007)$/;"	v
s:nearby_disabled	plugged/tagbar/autoload/tagbar.vim	/^let s:nearby_disabled = 0$/;"	v
s:need_trans	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:needs_cppstructure_match	plugged/vim-polyglot/after/syntax/cpp.vim	/^	let s:needs_cppstructure_match += 1$/;"	v
s:needs_cppstructure_match	plugged/vim-polyglot/after/syntax/cpp.vim	/^	let s:needs_cppstructure_match += 2$/;"	v
s:needs_cppstructure_match	plugged/vim-polyglot/after/syntax/cpp.vim	/^let s:needs_cppstructure_match = 0$/;"	v
s:new_log_session	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:new_log_session = 1$/;"	v
s:new_window	plugged/tagbar/autoload/tagbar.vim	/^let s:new_window      = 1$/;"	v
s:next_sign_id	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:nomacro	plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:nomacro = '\\%(' . s:macro_regex . '\\)\\@<!'$/;"	v
s:nomodeline	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:nomodeline = (v:version > 703 || (v:version == 703 && has('patch442'))) ? '<nomodeline>' : ''$/;"	v
s:non_bracket_continuation_regex	plugged/vim-polyglot/indent/crystal.vim	/^let s:non_bracket_continuation_regex = '\\%([\\\\.,:*\/%+]\\|\\<and\\|\\<or\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\)\\s*\\%(#.*\\)\\=$'$/;"	v
s:non_bracket_continuation_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:non_bracket_continuation_regex =$/;"	v
s:non_bracket_continuation_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:non_bracket_continuation_regex =$/;"	v
s:non_ui_property_names	plugged/vim-textobj-user/autoload/textobj/user.vim	/^let s:non_ui_property_names = [$/;"	v
s:non_zero_only	plugged/vim-airline/autoload/airline/extensions/hunks.vim	/^let s:non_zero_only = get(g:, 'airline#extensions#hunks#non_zero_only', 0)$/;"	v
s:none	plugged/gruvbox/colors/gruvbox.vim	/^let s:none = ['NONE', 'NONE']$/;"	v
s:nonidS_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:nonidS_chars = "[:space:])\\\\U5D}" . s:nonid_chars$/;"	v
s:nonidS_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:nonidS_chars = "[:space:])\\\\U5D}" . s:nonid_chars$/;"	v
s:nonid_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:nonid_chars = "\\U01-\\U07" . "\\U0E-\\U1F" .$/;"	v
s:nonid_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:nonid_chars = "\\U01-\\U07" . "\\U0E-\\U1F" .$/;"	v
s:notbslash	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:notbslash = '\\%(\\\\\\@<!\\%(\\\\\\\\\\)*\\)\\@<='$/;"	v
s:notcomment	plugged/vim-polyglot/ftplugin/latex-box/folding.vim	/^let s:notcomment = '\\%(\\%(\\\\\\@<!\\%(\\\\\\\\\\)*\\)\\@<=%.*\\)\\@<!'$/;"	v
s:nowait	plugged/vim-startify/autoload/startify.vim	/^let s:nowait         = v:version >= 704 || (v:version == 703 && has('patch1261')) ? '<nowait>' : ''$/;"	v
s:number_column	plugged/gruvbox/colors/gruvbox.vim	/^  let s:number_column = get(s:gb, g:gruvbox_number_column)$/;"	v
s:number_column	plugged/gruvbox/colors/gruvbox.vim	/^let s:number_column = s:none$/;"	v
s:number_map	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = &encoding == 'utf-8'$/;"	v
s:number_map	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:number_map = {$/;"	v
s:numfiles	plugged/vim-startify/autoload/startify.vim	/^let s:numfiles       = get(g:, 'startify_files_number', 10)$/;"	v
s:nvim	autoload/plug.vim	/^let s:nvim = has('nvim-0.2') || (has('nvim') && exists('*jobwait') && !s:is_win)$/;"	v
s:obj	plugged/vim-polyglot/indent/ocaml.vim	/^let s:obj = '^\\s*\\(constraint\\|inherit\\|initializer\\|method\\|val\\)\\>\\|\\<\\(object\\|object\\s*(.*)\\)\\s*$'$/;"	v
s:oct_regex	plugged/vim-polyglot/syntax/julia.vim	/^let s:oct_regex = '0o\\o\\%(_\\?\\o\\)*\\%(\\>\\|im\\>\\|\\ze\\O\\)'$/;"	v
s:old_cpo	plugged/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_style	plugged/vim-polyglot/syntax/erlang.vim	/^let s:old_style = (exists("g:erlang_old_style_highlight") &&$/;"	v
s:old_width	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:old_width = 0$/;"	v
s:one_line_scope_regex	plugged/vim-polyglot/indent/solidity.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:oneline	plugged/vim-polyglot/syntax/markdown.vim	/^    let s:oneline = ' oneline'$/;"	v
s:oneline	plugged/vim-polyglot/syntax/markdown.vim	/^    let s:oneline = ''$/;"	v
s:open_pat	plugged/vim-polyglot/indent/tex.vim	/^let s:open_pat = '\\\\\\@<!\\%(\\\\begin\\|\\\\left\\a\\@!\\|\\\\(\\|\\\\\\[\\|{\\)'$/;"	v
s:open_patt	plugged/vim-polyglot/indent/lua.vim	/^let s:open_patt = '\\C\\%(\\<\\%(function\\|if\\|repeat\\|do\\)\\>\\|(\\|{\\)'$/;"	v
s:operators	plugged/vim-polyglot/autoload/julia.vim	/^let s:operators = '\\%(' . '\\.\\%([-+*\/^÷%|&!]\\|\/\/\\|\\\\\\|<<\\|>>>\\?\\)\\?=' .$/;"	v
s:operators	plugged/vim-polyglot/syntax/julia.vim	/^let s:operators = '\\%(' . '\\.\\%([-+*\/^÷%|&!]\\|\/\/\\|\\\\\\|<<\\|>>>\\?\\)\\?=' .$/;"	v
s:opfirst	plugged/vim-polyglot/indent/javascript.vim	/^let s:opfirst = '^' . get(g:,'javascript_opfirst',$/;"	v
s:opfirst	plugged/vim-polyglot/indent/typescript.vim	/^let s:opfirst = '^' . get(g:,'typescript_opfirst',$/;"	v
s:option	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:option = {}$/;"	v
s:orange	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:orange = s:getGruvColor('GruvboxOrange')$/;"	v
s:orange	plugged/gruvbox/colors/gruvbox.vim	/^  let s:orange = s:gb.bright_orange$/;"	v
s:orange	plugged/gruvbox/colors/gruvbox.vim	/^  let s:orange = s:gb.faded_orange$/;"	v
s:orange	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:orange  = [166, '#d75f00']$/;"	v
s:outerfg	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:outerfg = [ 16, '#000000']$/;"	v
s:overwin	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:overwin = {$/;"	v
s:overwrite	plugged/vim-airline/autoload/airline/extensions/bufferline.vim	/^let s:overwrite = get(g:, 'airline#extensions#bufferline#overwrite_variables', 1)$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p = {'normal':{}, 'inactive':{}, 'insert':{}, 'replace':{}, 'visual':{}, 'tabline':{}, 'terminal':{}}$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.left =  [ [ s:bg4, s:bg1 ], [ s:bg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.middle = [ [ s:bg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.inactive.right = [ [ s:bg4, s:bg1 ], [ s:bg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.left = [ [ s:bg0, s:blue, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.insert.right = [ [ s:bg0, s:blue ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.error = [ [ s:bg0, s:orange ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.left = [ [ s:bg0, s:fg4, 'bold' ], [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.middle = [ [ s:fg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.right = [ [ s:bg0, s:fg4 ], [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.normal.warning = [ [ s:bg2, s:yellow ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.left = [ [ s:bg0, s:aqua, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.replace.right = [ [ s:bg0, s:aqua ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.left = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.middle = [ [ s:bg0, s:bg0 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.right = [ [ s:bg0, s:orange ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.tabline.tabsel = [ [ s:bg0, s:fg4 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.left = [ [ s:bg0, s:green, 'bold' ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.middle = [ [ s:fg4, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.terminal.right = [ [ s:bg0, s:green ], [ s:fg1, s:bg2 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.left = [ [ s:bg0, s:orange, 'bold' ], [ s:bg0, s:bg4 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.middle = [ [ s:fg4, s:bg1 ] ]$/;"	v
s:p	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:p.visual.right = [ [ s:bg0, s:orange ], [ s:bg0, s:bg4 ] ]$/;"	v
s:padding	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^let s:padding = s:spc . s:spc . s:spc$/;"	v
s:padding_left	plugged/vim-startify/autoload/startify.vim	/^let s:padding_left = repeat(' ', get(g:, 'startify_padding_left', 3))$/;"	v
s:padding_left	plugged/vim-startify/syntax/startify.vim	/^let s:padding_left = repeat(' ', get(g:, 'startify_padding_left', 3))$/;"	v
s:paren_pairs	plugged/vim-polyglot/indent/cython.vim	/^let s:paren_pairs = {'()': 50, '[]': 100, '{}': 1000}$/;"	v
s:paren_pairs	plugged/vim-polyglot/indent/python.vim	/^let s:paren_pairs = {'()': 50, '[]': 100, '{}': 1000}$/;"	v
s:parts	plugged/vim-airline/autoload/airline/parts.vim	/^let s:parts = {}$/;"	v
s:paste_buffer_temporary_text	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:paste_buffer_temporary_text = ''$/;"	v
s:paste_buffer_temporary_type	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:paste_buffer_temporary_type = ''$/;"	v
s:pat	plugged/vim-polyglot/compiler/coffee.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:pat	plugged/vim-polyglot/compiler/ls.vim	/^let s:pat = '^' . current_compiler$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . '][-+# ]\\?\\)\\@<=[^*(]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? :\\)\\@='$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(^[' . s:ics . '] \\?\\)\\@3<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	plugged/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\S\\@<![' . s:ics . ']\\([-+# ]\\?\\)\\@='$/;"	v
s:pattern	plugged/vim-textobj-user/t/move.vim	/^let s:pattern = '<\\a\\+>'$/;"	v
s:paused	plugged/tagbar/autoload/tagbar.vim	/^let s:paused = 0$/;"	v
s:phpindent	plugged/vim-polyglot/indent/blade.vim	/^let s:phpindent = &indentexpr$/;"	v
s:pink	plugged/vim-airline-themes/autoload/airline/themes/distinguished.vim	/^let s:pink    = [131, '#af5f5f']$/;"	v
s:pink	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:pink = [212, "#ff87d7"]$/;"	v
s:plug_buf	autoload/plug.vim	/^let s:plug_buf = get(s:, 'plug_buf', -1)$/;"	v
s:plug_src	autoload/plug.vim	/^let s:plug_src = 'https:\/\/github.com\/junegunn\/vim-plug.git'$/;"	v
s:plug_tab	autoload/plug.vim	/^let s:plug_tab = get(s:, 'plug_tab', -1)$/;"	v
s:plugin	plugged/vim-textobj-user/autoload/textobj/user.vim	/^let s:plugin = {}$/;"	v
s:plugin_dir	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^let s:plugin_dir  = expand('<sfile>:p:h:h:h').'\/'$/;"	v
s:plugin_home	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:plugin_home = expand('<sfile>:p:h:h')$/;"	v
s:plugin_name	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:plugin_name	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:plugin_name = expand('<sfile>:t:r')$/;"	v
s:pmenu	plugged/one/colors/one.vim	/^    let s:pmenu        = '333841'$/;"	v
s:pmenu	plugged/one/colors/one.vim	/^    let s:pmenu        = 'dfdfdf'$/;"	v
s:pmenu	plugged/vim-one/colors/one.vim	/^    let s:pmenu        = '333841'$/;"	v
s:pmenu	plugged/vim-one/colors/one.vim	/^    let s:pmenu        = 'dfdfdf'$/;"	v
s:po_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:po_jobs        = {}$/;"	v
s:pre_less_cur_syn	plugged/vim-polyglot/after/syntax/html.vim	/^   let s:pre_less_cur_syn = b:current_syntax$/;"	v
s:predefined_quotes	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:predefined_quotes = [$/;"	v
s:prefix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:prefix = printf("vital-over(%s) Exception", s:vname)$/;"	v
s:previously_tagged_notes	plugged/vim-notes/autoload/xolox/notes/tags.vim	/^  let s:previously_tagged_notes = {} " Copy of index as it is \/ should be now on disk (to detect changes).$/;"	v
s:priorities	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:priorities = {$/;"	v
s:project_root	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:project_root	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:project_root = expand('<sfile>:h:h:h')$/;"	v
s:projections_for_gems	plugged/vim-rails/autoload/rails.vim	/^let s:projections_for_gems = {}$/;"	v
s:prompt_snapshot_file	plugged/vim-airline/autoload/airline/extensions/promptline.vim	/^let s:prompt_snapshot_file = get(g:, 'airline#extensions#promptline#snapshot_file', '')$/;"	v
s:prototype	plugged/vim-airline/autoload/airline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype = {}$/;"	v
s:prototype	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^let s:prototype.overflow_group = 'airline_tab'$/;"	v
s:ps1xml_cpo_save	plugged/vim-polyglot/syntax/ps1xml.vim	/^let s:ps1xml_cpo_save = &cpo$/;"	v
s:purple	plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple = s:gb.bright_purple$/;"	v
s:purple	plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple = s:gb.faded_purple$/;"	v
s:purple	plugged/gruvbox/colors/gruvbox.vim	/^  let s:purple[1] = 13$/;"	v
s:pwin_by_tagbar	plugged/tagbar/autoload/tagbar.vim	/^let s:pwin_by_tagbar = 0$/;"	v
s:quotable	plugged/vim-polyglot/syntax/julia.vim	/^let s:quotable = '\\%(' . s:idregex . '\\|?\\|' . s:operators . '\\|' . s:float_regex . '\\|' . s:int_regex . '\\)'$/;"	v
s:quotes	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:quotes = exists('g:startify_custom_header_quotes')$/;"	v
s:quoting_colon	plugged/vim-polyglot/syntax/julia.vim	/^let s:quoting_colon = '\\%(\\%(^\\s*\\|\\s\\{6,\\}\\|[' . s:nonid_chars . s:uniop_chars . s:binop_chars . '?]\\s*\\)\\@'.s:d(6).'<=\\|\\%(\\<\\%(return\\|if\\|else\\%(if\\)\\?\\|while\\|try\\|begin\\)\\s*\\)\\@'.s:d(9).'<=\\)\\zs:'$/;"	v
s:quoting_colonS	plugged/vim-polyglot/syntax/julia.vim	/^let s:quoting_colonS = '\\s\\@'.s:d(1).'<=:'$/;"	v
s:radix_chars	plugged/vim-polyglot/syntax/clojure.vim	/^let s:radix_chars = "0123456789abcdefghijklmnopqrstuvwxyz"$/;"	v
s:readable_prototype	plugged/vim-rails/autoload/rails.vim	/^let s:readable_prototype = {}$/;"	v
s:red	plugged/gruvbox/colors/gruvbox.vim	/^  let s:red    = s:gb.bright_red$/;"	v
s:red	plugged/gruvbox/colors/gruvbox.vim	/^  let s:red    = s:gb.faded_red$/;"	v
s:red	plugged/gruvbox/colors/gruvbox.vim	/^  let s:red[1]    = 9$/;"	v
s:red	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:red = [197, "#ff005f" ]$/;"	v
s:redirects	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:redirects = {}$/;"	v
s:refar_params_meta	plugged/far.vim/autoload/far.vim	/^let s:refar_params_meta = {$/;"	v
s:register	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:register = {}$/;"	v
s:rel	plugged/vim-polyglot/indent/javascript.vim	/^let s:rel = has('reltime')$/;"	v
s:relative_path	plugged/vim-startify/autoload/startify.vim	/^let s:relative_path  = get(g:, 'startify_relative_path') ? ':~:.' : ':p:~'$/;"	v
s:repl_params_meta	plugged/far.vim/autoload/far.vim	/^let s:repl_params_meta = {$/;"	v
s:repo_prototype	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:retry_keys	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:retry_keys = ""$/;"	v
s:returnTypeMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:returnTypeMatcher = '\\%(:\\s*\\w\\+' . s:typeSpecMatcher . '\\?\\)'$/;"	v
s:right	plugged/vim-textobj-erb/plugin/textobj/erb.vim	/^let s:right = s:whitespace . s:right_modifiers . '%>'$/;"	v
s:right_modifiers	plugged/vim-textobj-erb/plugin/textobj/erb.vim	/^let s:right_modifiers = '\\-\\?'$/;"	v
s:root_dir	plugged/vim-easymotion/t/compare_movements_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	plugged/vim-easymotion/t/easymotion_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	plugged/vim-easymotion/t/operator_pending_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	plugged/vim-easymotion/t/smartsign_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:ruby_deindent_keywords	plugged/vim-polyglot/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_deindent_keywords	plugged/vim-ruby/indent/ruby.vim	/^let s:ruby_deindent_keywords =$/;"	v
s:ruby_indent_keywords	plugged/vim-polyglot/indent/ruby.vim	/^let s:ruby_indent_keywords =$/;"	v
s:ruby_indent_keywords	plugged/vim-ruby/indent/ruby.vim	/^let s:ruby_indent_keywords =$/;"	v
s:ruby_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_path	plugged/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_path = s:build_path(s:ruby_paths)$/;"	v
s:ruby_path	plugged/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_path = type(g:ruby_path) == type([]) ? join(g:ruby_path, ',') : g:ruby_path$/;"	v
s:ruby_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:ruby_paths	plugged/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_default_path$/;"	v
s:ruby_paths	plugged/vim-ruby/ftplugin/ruby.vim	/^  let s:ruby_paths = g:ruby_version_paths[b:ruby_version]$/;"	v
s:rubycomplete_debug	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_debug	plugged/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_debug = 0$/;"	v
s:rubycomplete_rails_loaded	plugged/vim-polyglot/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:rubycomplete_rails_loaded	plugged/vim-ruby/autoload/rubycomplete.vim	/^let s:rubycomplete_rails_loaded = 0$/;"	v
s:runner_id	plugged/vim-test/plugin/test.vim	/^      let s:runner_id = tolower(s:language).'#'.tolower(s:runner)$/;"	v
s:s	plugged/vim-polyglot/ftplugin/ocaml.vim	/^let s:s = line2byte(line('.'))+col('.')-1$/;"	v
s:save_cpo	plugged/emmet-vim/autoload/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/emmet-vim/plugin/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	plugged/supertab/plugin/supertab.vim	/^let s:save_cpo=&cpo$/;"	v
s:save_cpo	plugged/tabular/after/plugin/TabularMaps.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tmux-complete.vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tmux-complete.vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/tmux-complete.vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/ultisnips/ftplugin/snippets.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-bookmarks/autoload/unite/filters/converter_vim_bookmarks_long.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-bookmarks/autoload/unite/filters/converter_vim_bookmarks_short.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-bookmarks/autoload/unite/kinds/vim_bookmarks.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-bookmarks/autoload/unite/sources/vim_bookmarks.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-cursorword/autoload/cursorword.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-cursorword/plugin/cursorword.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-easymotion/plugin/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/after/indent/objc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/autoload/crystal_lang.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/autoload/vital/_crystal/ColorEcho.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/autoload/vital/_crystal/Web/JSON.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/cargo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/compiler/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/crystal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/julia.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/ftplugin/toml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/ansible.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/clojure.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-polyglot/indent/rust.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-ruby/ftplugin/eruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-textobj-function-javascript/after/ftplugin/javascript/textobj-function.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-textobj-function-javascript/autoload/textobj/function/javascript.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	plugged/vim-textobj-ruby/plugin/textobj/ruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:savecpo	plugged/tabular/autoload/tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:savecpo	plugged/tabular/plugin/Tabular.vim	/^let s:savecpo = &cpo$/;"	v
s:saved_char	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_char = ''$/;"	v
s:saved_keys	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_keys = ""$/;"	v
s:saved_line	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_line = 0$/;"	v
s:saved_linecount	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:saved_linecount = -1$/;"	v
s:scalar_value	plugged/vim-polyglot/indent/ansible.vim	/^let s:scalar_value = '\\v:\\s*[>|\\|]\\s*$' " shell: >$/;"	v
s:script	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^let s:script = expand('<sfile>:h:h') . "\/sh\/tmuxcomplete"$/;"	v
s:script_path	plugged/vim-airline/autoload/airline/extensions.vim	/^let s:script_path = tolower(resolve(expand('<sfile>:p:h')))$/;"	v
s:scriptdir	plugged/vim-notes/autoload/xolox/notes.vim	/^let s:scriptdir = expand('<sfile>:p:h')$/;"	v
s:scroll	plugged/vim-peekaboo/autoload/peekaboo.vim	/^let s:scroll = {$/;"	v
s:search	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:search = s:cmdline.make()$/;"	v
s:search	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:search.highlights.prompt = 'Question'$/;"	v
s:section_truncate_width	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_truncate_width = get(g:, 'airline#extensions#default#section_truncate_width', {$/;"	v
s:section_use_groups	plugged/vim-airline/autoload/airline/extensions/default.vim	/^let s:section_use_groups     = get(g:, 'airline#extensions#default#section_use_groupitems', 1)$/;"	v
s:sections	plugged/vim-airline/autoload/airline.vim	/^let s:sections = ['a','b','c','gutter','x','y','z', 'error', 'warning']$/;"	v
s:sections	plugged/vim-airline/t/init.vim	/^let s:sections = ['a', 'b', 'c', 'gutter', 'x', 'y', 'z', 'warning']$/;"	v
s:seed	plugged/emmet-vim/autoload/emmet/util.vim	/^let s:seed = localtime()$/;"	v
s:sep	plugged/vim-startify/autoload/startify.vim	/^let s:sep = startify#get_separator()$/;"	v
s:sep	plugged/vim-startify/syntax/startify.vim	/^let s:sep = startify#get_separator()$/;"	v
s:separators	plugged/vim-airline/autoload/airline/highlighter.vim	/^let s:separators = {}$/;"	v
s:session_dir	plugged/vim-startify/autoload/startify.vim	/^let s:session_dir    = resolve(expand(get(g:, 'startify_session_dir',$/;"	v
s:set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^let s:set = deepcopy(s:_base_set)$/;"	v
s:set_match_words	plugged/ultisnips/ftplugin/snippets.vim	/^  let s:set_match_words = 1$/;"	v
s:settings	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:settings = {$/;"	v
s:settings_if_default	plugged/vim-multiple-cursors/plugin/multiple_cursors.vim	/^let s:settings_if_default = {$/;"	v
s:sfile	plugged/emmet-vim/unittest.vim	/^let s:sfile = expand('<sfile>')$/;"	v
s:sha1size	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:sha1size = get(g:, 'airline#extensions#branch#sha1_len', 7)$/;"	v
s:shade_hl_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:shade_hl_defaults = {$/;"	v
s:shade_hl_line_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:shade_hl_line_defaults = {$/;"	v
s:shadow_notes	plugged/vim-notes/autoload/xolox/notes.vim	/^  let s:shadow_notes = ['New note', 'Note taking commands', 'Note taking syntax']$/;"	v
s:short_help	plugged/tagbar/autoload/tagbar.vim	/^let s:short_help      = 1$/;"	v
s:show_buffers	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:show_buffers = get(g:, 'airline#extensions#tabline#show_buffers', 1)$/;"	v
s:show_line_numbers	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^let s:show_line_numbers = get(g:, 'airline#extensions#ale#show_line_numbers', 1)$/;"	v
s:show_message	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:show_message = get(g:, 'airline#extensions#whitespace#show_message', 1)$/;"	v
s:show_special	plugged/vim-startify/autoload/startify.vim	/^let s:show_special   = get(g:, 'startify_enable_special', 1)$/;"	v
s:sid	plugged/vim-rails/autoload/rails.vim	/^let s:sid = s:sub(maparg("<SID>xx"),'xx$','')$/;"	v
s:sign_column	plugged/gruvbox/colors/gruvbox.vim	/^    let s:sign_column = get(s:gb, g:gruvbox_sign_column)$/;"	v
s:sign_column	plugged/gruvbox/colors/gruvbox.vim	/^  let s:sign_column = s:number_column$/;"	v
s:sign_column	plugged/gruvbox/colors/gruvbox.vim	/^let s:sign_column = s:bg1$/;"	v
s:skipPatterns	plugged/vim-polyglot/indent/julia.vim	/^let s:skipPatterns = '\\<julia\\%(Comprehension\\%(For\\|If\\)\\|RangeEnd\\|Comment[LM]\\|\\%([bsv]\\|ip\\|big\\|MIME\\|Shell\\|Printf\\|Doc\\)\\=String\\|RegEx\\|SymbolS\\?\\)\\>'$/;"	v
s:skip_after_opening_paren	plugged/vim-polyglot/indent/cython.vim	/^let s:skip_after_opening_paren = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_after_opening_paren	plugged/vim-polyglot/indent/python.vim	/^let s:skip_after_opening_paren = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_check_ft	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:skip_check_ft = {'make': ['indent', 'mixed-indent-file']}$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/crystal.vim	/^let s:skip_expr =$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/javascript.vim	/^let s:skip_expr = "s:SynAt(line('.'),col('.')) =~? b:syng_strcom"$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/lua.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~# 'luaComment\\\\|luaString'"$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/solidity.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:skip_expr	plugged/vim-polyglot/indent/typescript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),0),'name') =~? '".s:syng_strcom."'"$/;"	v
s:skip_expr	plugged/vim-ruby/indent/ruby.vim	/^let s:skip_expr =$/;"	v
s:skip_search	plugged/vim-polyglot/indent/cython.vim	/^let s:skip_search = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_search	plugged/vim-polyglot/indent/python.vim	/^let s:skip_search = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_special_chars	plugged/vim-polyglot/indent/cython.vim	/^    let s:skip_special_chars .= '|| s:is_concealed(line("."), col("."))'$/;"	v
s:skip_special_chars	plugged/vim-polyglot/indent/cython.vim	/^let s:skip_special_chars = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_special_chars	plugged/vim-polyglot/indent/python.vim	/^    let s:skip_special_chars .= '|| s:is_concealed(line("."), col("."))'$/;"	v
s:skip_special_chars	plugged/vim-polyglot/indent/python.vim	/^let s:skip_special_chars = 'synIDattr(synID(line("."), col("."), 0), "name") ' .$/;"	v
s:skip_symbol	plugged/vim-airline/autoload/airline/extensions/tabline/formatters/unique_tail_improved.vim	/^let s:skip_symbol = '…'$/;"	v
s:skip_syntax	plugged/vim-polyglot/indent/nix.vim	/^let s:skip_syntax = '\\%(Comment\\|String\\)$'$/;"	v
s:skiplist	plugged/vim-startify/autoload/startify.vim	/^let s:skiplist = get(g:, 'startify_skiplist', [$/;"	v
s:slash	plugged/vim-test/autoload/test/csharp.vim	/^let s:slash = (has('win32') || has('win64')) && fnamemodify(&shell, ':t') ==? 'cmd.exe' ? '\\' : '\/'$/;"	v
s:sock_type	plugged/vim-polyglot/autoload/go/config.vim	/^let s:sock_type = (has('win32') || has('win64')) ? 'tcp' : 'unix'$/;"	v
s:solarized	plugged/vim-airline-themes/autoload/airline/themes/base16_shell.vim	/^let s:solarized         = get(g:, 'airline_base16_solarized', 0)$/;"	v
s:source	plugged/tmux-complete.vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^let s:source = {$/;"	v
s:source	plugged/tmux-complete.vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^let s:source = {$/;"	v
s:source	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^let s:source = {$/;"	v
s:source	plugged/vim-bookmarks/autoload/unite/sources/vim_bookmarks.vim	/^let s:source = {$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/ctrlspace.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/example.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/localsearch.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/obsession.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/tabline/tabs.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/tagbar.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/vimtex.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/virtualenv.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/windowswap.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/section.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:spc	plugged/vim-airline/autoload/airline/util.vim	/^let s:spc = g:airline_symbols.space$/;"	v
s:special_grey	plugged/one/colors/one.vim	/^    let s:special_grey = '3b4048'$/;"	v
s:special_grey	plugged/one/colors/one.vim	/^    let s:special_grey = 'd3d3d3'$/;"	v
s:special_grey	plugged/vim-one/colors/one.vim	/^    let s:special_grey = '3b4048'$/;"	v
s:special_grey	plugged/vim-one/colors/one.vim	/^    let s:special_grey = 'd3d3d3'$/;"	v
s:special_keys	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:special_keys = {$/;"	v
s:spell_cluster	plugged/vim-polyglot/syntax/ruby.vim	/^let s:spell_cluster = exists('ruby_spellcheck_strings') ? ',@Spell' : ''$/;"	v
s:spell_cluster	plugged/vim-ruby/syntax/ruby.vim	/^let s:spell_cluster = exists('ruby_spellcheck_strings') ? ',@Spell' : ''$/;"	v
s:splat_regex	plugged/vim-polyglot/indent/crystal.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:splat_regex	plugged/vim-polyglot/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:splat_regex	plugged/vim-ruby/indent/ruby.vim	/^let s:splat_regex = '[[,(]\\s*\\*\\s*\\%(#.*\\)\\=$'$/;"	v
s:sql_define	plugged/vim-rails/autoload/rails.vim	/^let s:sql_define = substitute($/;"	v
s:ss_pattern	plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:ss_pattern = '\\v''' . s:string_chunk . ''''$/;"	v
s:st	plugged/vim-polyglot/syntax/tt2.vim	/^        let s:st = strpart(s:str,0,stridx(s:str,' '))$/;"	v
s:statusline_in_use	plugged/tagbar/autoload/tagbar.vim	/^let s:statusline_in_use = 0$/;"	v
s:stop_statement	plugged/vim-polyglot/indent/cython.vim	/^let s:stop_statement = '^\\s*\\(break\\|continue\\|raise\\|return\\|pass\\)\\>'$/;"	v
s:stop_statement	plugged/vim-polyglot/indent/python.vim	/^let s:stop_statement = '^\\s*\\(break\\|continue\\|raise\\|return\\|pass\\)\\>'$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^        let s:str = substitute(s:str,'[^ ]* ','',"")$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = b:tt2_syn_tags . ' '$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = substitute(s:str,' \\+',' ','g')$/;"	v
s:str	plugged/vim-polyglot/syntax/tt2.vim	/^    let s:str = substitute(s:str,'^ \\+','','g')$/;"	v
s:strchars	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  let s:strchars = function('strchars')$/;"	v
s:string_chunk	plugged/auto-pairs/plugin/auto-pairs.vim	/^let s:string_chunk = '\\v%(\\\\\\_.|[^\\1]|[\\r\\n]){-}'$/;"	v
s:strip_whitespace_pattern	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:strip_whitespace_pattern = s:eol_whitespace_pattern$/;"	v
s:subtype	plugged/vim-polyglot/syntax/liquid.vim	/^  let s:subtype = exists('b:liquid_subtype') ? b:liquid_subtype : ''$/;"	v
s:suggest_sources	plugged/far.vim/autoload/far.vim	/^let s:suggest_sources = keys(filter(copy(g:far#sources), "get(g:far#sources[v:key], 'suggest', '1')"))$/;"	v
s:suite	plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^let s:suite = themis#suite('custom')$/;"	v
s:suite	plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:suite	plugged/vim-test/spec/fixtures/themis/math.vim	/^let s:suite = themis#suite("math")$/;"	v
s:supported_filetypes	plugged/vim-easytags/autoload/xolox/easytags/filetypes.vim	/^let s:supported_filetypes = []$/;"	v
s:supports_star	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:symbol	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^let s:symbol = get(g:, 'airline#extensions#whitespace#symbol', g:airline_symbols.whitespace)$/;"	v
s:syng_com	plugged/vim-polyglot/indent/typescript.vim	/^let s:syng_com = 'comment\\|doc'$/;"	v
s:syng_linecom	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_multiline	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_str	plugged/vim-polyglot/indent/typescript.vim	/^let s:syng_str = 'string\\|template\\|special'$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/crystal.vim	/^let s:syng_strcom = '\\<crystal\\%(Regexp\\|RegexpDelimiter\\|RegexpEscape' .$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_strcom = s:syng_stringdoc +$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_strcom	plugged/vim-polyglot/indent/typescript.vim	/^let s:syng_strcom = 'string\\|comment\\|regex\\|special\\|doc\\|template\\%(braces\\)\\@!'$/;"	v
s:syng_strcom	plugged/vim-ruby/indent/ruby.vim	/^let s:syng_strcom = s:syng_stringdoc +$/;"	v
s:syng_string	plugged/vim-polyglot/indent/crystal.vim	/^let s:syng_string =$/;"	v
s:syng_string	plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_string	plugged/vim-polyglot/indent/solidity.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:syng_string	plugged/vim-ruby/indent/ruby.vim	/^let s:syng_string =$/;"	v
s:syng_stringdoc	plugged/vim-polyglot/indent/crystal.vim	/^let s:syng_stringdoc =$/;"	v
s:syng_stringdoc	plugged/vim-polyglot/indent/ruby.vim	/^let s:syng_stringdoc = s:syng_string + ['Documentation']$/;"	v
s:syng_stringdoc	plugged/vim-ruby/indent/ruby.vim	/^let s:syng_stringdoc = s:syng_string + ['Documentation']$/;"	v
s:syntax_accent	plugged/one/colors/one.vim	/^    let s:syntax_accent = '526fff'$/;"	v
s:syntax_accent	plugged/one/colors/one.vim	/^    let s:syntax_accent = '528bff'$/;"	v
s:syntax_accent	plugged/vim-one/colors/one.vim	/^    let s:syntax_accent = '526fff'$/;"	v
s:syntax_accent	plugged/vim-one/colors/one.vim	/^    let s:syntax_accent = '528bff'$/;"	v
s:syntax_accent_2	plugged/one/colors/one.vim	/^    let s:syntax_accent_2 = '0083be'$/;"	v
s:syntax_accent_2	plugged/vim-one/colors/one.vim	/^    let s:syntax_accent_2 = '0083be'$/;"	v
s:syntax_bg	plugged/one/colors/one.vim	/^    let s:syntax_bg     = '282c34'$/;"	v
s:syntax_bg	plugged/one/colors/one.vim	/^    let s:syntax_bg     = 'fafafa'$/;"	v
s:syntax_bg	plugged/vim-one/colors/one.vim	/^    let s:syntax_bg     = '282c34'$/;"	v
s:syntax_bg	plugged/vim-one/colors/one.vim	/^    let s:syntax_bg     = 'fafafa'$/;"	v
s:syntax_cursor	plugged/one/colors/one.vim	/^    let s:syntax_cursor = '2c323c'$/;"	v
s:syntax_cursor	plugged/one/colors/one.vim	/^    let s:syntax_cursor = 'f0f0f0'$/;"	v
s:syntax_cursor	plugged/vim-one/colors/one.vim	/^    let s:syntax_cursor = '2c323c'$/;"	v
s:syntax_cursor	plugged/vim-one/colors/one.vim	/^    let s:syntax_cursor = 'f0f0f0'$/;"	v
s:syntax_fg	plugged/one/colors/one.vim	/^  let s:syntax_fg = s:mono_1$/;"	v
s:syntax_fg	plugged/vim-one/colors/one.vim	/^  let s:syntax_fg = s:mono_1$/;"	v
s:syntax_fold_bg	plugged/one/colors/one.vim	/^  let s:syntax_fold_bg = s:mono_3$/;"	v
s:syntax_fold_bg	plugged/vim-one/colors/one.vim	/^  let s:syntax_fold_bg = s:mono_3$/;"	v
s:syntax_gutter	plugged/one/colors/one.vim	/^    let s:syntax_gutter = '636d83'$/;"	v
s:syntax_gutter	plugged/one/colors/one.vim	/^    let s:syntax_gutter = '9e9e9e'$/;"	v
s:syntax_gutter	plugged/vim-one/colors/one.vim	/^    let s:syntax_gutter = '636d83'$/;"	v
s:syntax_gutter	plugged/vim-one/colors/one.vim	/^    let s:syntax_gutter = '9e9e9e'$/;"	v
s:t_string	plugged/vim-gitgutter/autoload/gitgutter.vim	/^let s:t_string = type('')$/;"	v
s:tabHelp	plugged/supertab/plugin/supertab.vim	/^  let s:tabHelp =$/;"	v
s:tab_min_count	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^let s:tab_min_count = get(g:, 'airline#extensions#tabline#tab_min_count', 0)$/;"	v
s:taboo	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^let s:taboo = get(g:, 'airline#extensions#taboo#enabled', 1) && get(g:, 'loaded_taboo', 0)$/;"	v
s:tag	plugged/vim-polyglot/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	plugged/vim-polyglot/indent/pug.vim	/^let s:tag = '\\([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	plugged/vim-polyglot/indent/slim.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tag	plugged/vim-polyglot/indent/slime.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tagkinds	plugged/vim-easytags/autoload/xolox/easytags.vim	/^let s:tagkinds = {}$/;"	v
s:target_hl2_first_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl2_first_defaults = {$/;"	v
s:target_hl2_second_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl2_second_defaults = {$/;"	v
s:target_hl_defaults	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_defaults = {$/;"	v
s:target_hl_inc	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_inc = {$/;"	v
s:target_hl_inc_cursor	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_inc_cursor = {$/;"	v
s:target_hl_move	plugged/vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_move = {$/;"	v
s:teal	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:teal = [123, "#87ffff"]$/;"	v
s:temp_buffer	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_buffer = tempname()$/;"	v
s:temp_files	plugged/vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:temp_index	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^let s:temp_index = tempname()$/;"	v
s:template	plugged/vim-notes/plugin/notes.vim	/^  let s:template = 'au BufNewFile,BufRead %s if &bt == "" | setl ft=notes | end'$/;"	v
s:term_black	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_black = 0$/;"	v
s:term_black	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_black = 235$/;"	v
s:term_blue	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_blue = 39$/;"	v
s:term_blue	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_blue = 4$/;"	v
s:term_green	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_green = 114$/;"	v
s:term_green	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_green = 2$/;"	v
s:term_grey	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_grey = 236$/;"	v
s:term_grey	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_grey = 8$/;"	v
s:term_purple	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_purple = 170$/;"	v
s:term_purple	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_purple = 5$/;"	v
s:term_red	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_red = 1$/;"	v
s:term_red	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_red = 204$/;"	v
s:term_white	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_white = 145$/;"	v
s:term_white	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_white = 7$/;"	v
s:term_yellow	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_yellow = 180$/;"	v
s:term_yellow	plugged/vim-airline-themes/autoload/airline/themes/deus.vim	/^  let s:term_yellow = 3$/;"	v
s:termbg	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:termbg = 232$/;"	v
s:termbg	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:termbg = 232$/;"	v
s:termbg2	plugged/vim-airline-themes/autoload/airline/themes/simple.vim	/^let s:termbg2= 234$/;"	v
s:termsep	plugged/vim-airline-themes/autoload/airline/themes/serene.vim	/^let s:termsep = 236$/;"	v
s:ternary	plugged/vim-polyglot/indent/solidity.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary_q	plugged/vim-polyglot/indent/solidity.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
s:test_repo	plugged/vim-gitgutter/test/test_gitgutter.vim	/^let s:test_repo   = s:current_dir.'\/test-repo'$/;"	v
s:tests	plugged/vim-gitgutter/test/runner.vim	/^  let s:tests = filter(s:tests, 'v:val =~ argv(1)')$/;"	v
s:tests	plugged/vim-gitgutter/test/runner.vim	/^let s:tests = split(substitute(@q, 'function \\(\\k*()\\)', '\\1', 'g'))$/;"	v
s:tf	plugged/vim-startify/autoload/startify.vim	/^let s:tf             = exists('g:startify_transformations')$/;"	v
s:timers_initialized	plugged/vim-easytags/autoload/xolox/easytags.vim	/^  let s:timers_initialized = 1$/;"	v
s:tmux_is_last_pane	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^let s:tmux_is_last_pane = 0$/;"	v
s:tmuxline_snapshot_file	plugged/vim-airline/autoload/airline/extensions/tmuxline.vim	/^let s:tmuxline_snapshot_file = get(g:, 'airline#extensions#tmuxline#snapshot_file', '')$/;"	v
s:to_be_snr_prefix	plugged/vim-textobj-user/t/snr-prefix.vim	/^let s:to_be_snr_prefix = {}$/;"	v
s:to_cursor	plugged/vim-easymotion/t/compare_movements_spec.vim	/^let s:to_cursor = {}$/;"	v
s:to_mode	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:to_mode = ''$/;"	v
s:topLev	plugged/vim-polyglot/after/indent/objc.vim	/^let s:topLev = '^\\s*@\\%(class\\|end\\|implementation\\|interface\\|protocol\\|\\)\\>'$/;"	v
s:transformations	plugged/vim-rails/autoload/rails.vim	/^let s:transformations = {}$/;"	v
s:tree_up_dir_line	plugged/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:triggers	autoload/plug.vim	/^let s:triggers = get(s:, 'triggers', {})$/;"	v
s:type	plugged/vim-polyglot/indent/ocaml.vim	/^let s:type = '^\\s*\\%(class\\|let\\|type\\)\\>.*='$/;"	v
s:typeSpecMatcher	plugged/vim-polyglot/indent/scala.vim	/^let s:typeSpecMatcher = '\\%(\\s*\\[\\_[^\\]]*\\]\\)'$/;"	v
s:type_init_done	plugged/tagbar/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:type_length	plugged/vim-polyglot/ftplugin/latex-box/complete.vim	/^let s:type_length=0$/;"	v
s:types	plugged/supertab/plugin/supertab.vim	/^  let s:types = s:types . "np"$/;"	v
s:types	plugged/supertab/plugin/supertab.vim	/^  let s:types =$/;"	v
s:ui_property_names	plugged/vim-textobj-user/autoload/textobj/user.vim	/^let s:ui_property_names = [$/;"	v
s:uname	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^      let s:uname = system('echo -n $(uname -s)')$/;"	v
s:undercurl	plugged/gruvbox/colors/gruvbox.vim	/^  let s:undercurl = ''$/;"	v
s:undercurl	plugged/gruvbox/colors/gruvbox.vim	/^let s:undercurl = 'undercurl,'$/;"	v
s:underline	plugged/gruvbox/colors/gruvbox.vim	/^  let s:underline = ''$/;"	v
s:underline	plugged/gruvbox/colors/gruvbox.vim	/^let s:underline = 'underline,'$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eelixir.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/pug.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/pug.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/stylus.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-polyglot/ftplugin/stylus.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_ftplugin	plugged/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-ruby/ftplugin/eruby.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	plugged/vim-ruby/ftplugin/eruby.vim	/^let s:undo_ftplugin = ""$/;"	v
s:undo_lock	plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^let s:undo_lock = {}$/;"	v
s:undo_lock	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^let s:undo_lock = {}$/;"	v
s:undo_params_meta	plugged/far.vim/autoload/far.vim	/^let s:undo_params_meta = {$/;"	v
s:unicode	plugged/vim-startify/autoload/startify/fortune.vim	/^let s:unicode = &encoding == 'utf-8' && get(g:, 'startify_fortune_use_unicode')$/;"	v
s:uniop_chars	plugged/vim-polyglot/autoload/julia.vim	/^let s:uniop_chars = "+\\\\U2D~¬√∛∜"$/;"	v
s:uniop_chars	plugged/vim-polyglot/syntax/julia.vim	/^let s:uniop_chars = "+\\\\U2D~¬√∛∜"$/;"	v
s:unique_marker	plugged/vim-misc/autoload/xolox/misc/timer.vim	/^let s:unique_marker = 'xolox#misc#timer#value'$/;"	v
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source = {$/;"	v
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.expand = {$/;"	v
s:unite_source	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^let s:unite_source.action_table.preview = {$/;"	v
s:untracked_jobs	plugged/vim-airline/autoload/airline/async.vim	/^let s:untracked_jobs = {}$/;"	v
s:use_dll	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^let s:use_dll = 0$/;"	v
s:use_word_boundary	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^let s:use_word_boundary = 1$/;"	v
s:vala_cpo_save	plugged/vim-polyglot/syntax/vala.vim	/^let s:vala_cpo_save = &cpo$/;"	v
s:var_stmt	plugged/vim-polyglot/indent/solidity.vim	/^let s:var_stmt = '^\\s*var'$/;"	v
s:variable	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^let s:variable = {}$/;"	v
s:vcs_config	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^let s:vcs_config = {$/;"	v
s:verbosefiles	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^let s:verbosefiles = []$/;"	v
s:version	plugged/vim-devicons/plugin/webdevicons.vim	/^let s:version = '0.10.0'$/;"	v
s:version_file	plugged/vim-polyglot/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:version_file	plugged/vim-ruby/ftplugin/ruby.vim	/^  let s:version_file = findfile('.ruby-version', '.;')$/;"	v
s:vert_split	plugged/gruvbox/colors/gruvbox.vim	/^  let s:vert_split = get(s:gb, g:gruvbox_vert_split)$/;"	v
s:vert_split	plugged/gruvbox/colors/gruvbox.vim	/^let s:vert_split = s:bg0$/;"	v
s:vertsplit	plugged/one/colors/one.vim	/^    let s:vertsplit    = '181a1f'$/;"	v
s:vertsplit	plugged/one/colors/one.vim	/^    let s:vertsplit    = 'e7e9e1'$/;"	v
s:vertsplit	plugged/vim-one/colors/one.vim	/^    let s:vertsplit    = '181a1f'$/;"	v
s:vertsplit	plugged/vim-one/colors/one.vim	/^    let s:vertsplit    = 'e7e9e1'$/;"	v
s:view_types	plugged/vim-rails/autoload/rails.vim	/^let s:view_types = split('rhtml,erb,rxml,builder,rjs,haml',',')$/;"	v
s:viewer	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^		  let s:viewer = 'open'$/;"	v
s:viewer	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^		  let s:viewer = 'xdg-open'$/;"	v
s:viewer	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^	let s:viewer = ''$/;"	v
s:vim8	autoload/plug.vim	/^let s:vim8 = has('patch-8.0.0039') && exists('*job_start')$/;"	v
s:vim_bg	plugged/gruvbox/colors/gruvbox.vim	/^let s:vim_bg = ['bg', 'bg']$/;"	v
s:vim_cmdline_mapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:vim_cmdline_mapping = {$/;"	v
s:vim_fg	plugged/gruvbox/colors/gruvbox.vim	/^let s:vim_fg = ['fg', 'fg']$/;"	v
s:vim_quitting	plugged/tagbar/autoload/tagbar.vim	/^let s:vim_quitting = 0$/;"	v
s:visibility_symbols	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^let s:visibility_symbols = {$/;"	v
s:visual_grey	plugged/one/colors/one.vim	/^    let s:visual_grey  = '3e4452'$/;"	v
s:visual_grey	plugged/one/colors/one.vim	/^    let s:visual_grey  = 'd0d0d0'$/;"	v
s:visual_grey	plugged/vim-one/colors/one.vim	/^    let s:visual_grey  = '3e4452'$/;"	v
s:visual_grey	plugged/vim-one/colors/one.vim	/^    let s:visual_grey  = 'd0d0d0'$/;"	v
s:vital_base_dir	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vital_base_dir	plugged/vim-polyglot/autoload/vital/crystal.vim	/^let s:vital_base_dir = expand('<sfile>:h')$/;"	v
s:vname	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:vname = expand("<sfile>:h:h:h:h:t")$/;"	v
s:vname	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:vname = expand("<sfile>:h:h:t")$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/ale.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#ale#warning_symbol', 'W:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/neomake.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#neomake#warning_symbol', 'W:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/syntastic.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#syntastic#warning_symbol', 'W:')$/;"	v
s:warning_symbol	plugged/vim-airline/autoload/airline/extensions/ycm.vim	/^let s:warning_symbol = get(g:, 'airline#extensions#ycm#warning_symbol', 'W:')$/;"	v
s:warnings	plugged/tagbar/autoload/tagbar.vim	/^let s:warnings = {$/;"	v
s:wcswidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  let s:wcswidth = function('strwidth')$/;"	v
s:white	plugged/vim-airline-themes/autoload/airline/themes/vice.vim	/^let s:white = [231, "#ffffff"]$/;"	v
s:whitespace	plugged/vim-textobj-erb/plugin/textobj/erb.vim	/^let s:whitespace = '\\(\\s\\|\\n\\)*'$/;"	v
s:whitespace_chars	plugged/vim-better-whitespace/plugin/better-whitespace.vim	/^let s:whitespace_chars='\\u0020\\u00a0\\u1680\\u180e\\u2000-\\u200b\\u202f\\u205f\\u3000\\ufeff'$/;"	v
s:wide	plugged/fzf.vim/autoload/fzf/vim.vim	/^let s:wide = 120$/;"	v
s:win_params_meta	plugged/far.vim/autoload/far.vim	/^let s:win_params_meta = {$/;"	v
s:win_sep	plugged/vim-polyglot/ftplugin/dart.vim	/^let s:win_sep = (has('win32') || has('win64')) ? '\/' : ''$/;"	v
s:window_expanded	plugged/tagbar/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:window_pos	plugged/tagbar/autoload/tagbar.vim	/^let s:window_pos = {$/;"	v
s:windows_compatible	plugged/vim-misc/autoload/xolox/misc/path.vim	/^let s:windows_compatible = xolox#misc#os#is_win()$/;"	v
s:winrestcmd	plugged/tagbar/autoload/tagbar.vim	/^let s:winrestcmd      = ''$/;"	v
s:words	plugged/tmux-complete.vim/autoload/unite/sources/tmuxcomplete.vim	/^let s:words = {$/;"	v
s:words	plugged/vim-polyglot/autoload/clojurecomplete.vim	/^let s:words = ["*","*'","*1","*2","*3","*agent*","*allow-unresolved-vars*","*assert*","*clojure-version*","*command-line-args*","*compile-files*","*compile-path*","*compiler-options*","*data-readers*","*default-data-reader-fn*","*e","*err*","*file*","*flush-on-newline*","*fn-loader*","*in*","*math-context*","*ns*","*out*","*print-dup*","*print-length*","*print-level*","*print-meta*","*print-readably*","*read-eval*","*source-path*","*suppress-read*","*unchecked-math*","*use-context-classloader*","*verbose-defrecords*","*warn-on-reflection*","+","+'","-","-'","->","->>","->ArrayChunk","->Eduction","->Vec","->VecNode","->VecSeq","-cache-protocol-fn","-reset-methods",".","..","\/","<","<=","=","==",">",">=","EMPTY-NODE","Throwable->map","accessor","aclone","add-classpath","add-watch","agent","agent-error","agent-errors","aget","alength","alias","all-ns","alter","alter-meta!","alter-var-root","amap","ancestors","and","apply","areduce","array-map","as->","aset","aset-boolean","aset-byte","aset-char","aset-double","aset-float","aset-int","aset-long","aset-short","assert","assoc!","assoc","assoc-in","associative?","atom","await","await-for","await1","bases","bean","bigdec","bigint","biginteger","binding","bit-and","bit-and-not","bit-clear","bit-flip","bit-not","bit-or","bit-set","bit-shift-left","bit-shift-right","bit-test","bit-xor","boolean","boolean-array","booleans","bound-fn","bound-fn*","bound?","butlast","byte","byte-array","bytes","case","cast","cat","catch","char","char-array","char-escape-string","char-name-string","char?","chars","chunk","chunk-append","chunk-buffer","chunk-cons","chunk-first","chunk-next","chunk-rest","chunked-seq?","class","class?","clear-agent-errors","clojure-version","coll?","comment","commute","comp","comparator","compare","compare-and-set!","compile","complement","completing","concat","cond","cond->","cond->>","condp","conj!","conj","cons","constantly","construct-proxy","contains?","count","counted?","create-ns","create-struct","cycle","dec","dec'","decimal?","declare","dedupe","def","default-data-readers","definline","definterface","defmacro","defmethod","defmulti","defn","defn-","defonce","defprotocol","defrecord","defstruct","deftype","delay","delay?","deliver","denominator","deref","derive","descendants","destructure","disj!","disj","dissoc!","dissoc","distinct","distinct?","do","doall","dorun","doseq","dosync","dotimes","doto","double","double-array","doubles","drop","drop-last","drop-while","eduction","empty","empty?","ensure","ensure-reduced","enumeration-seq","error-handler","error-mode","eval","even?","every-pred","every?","ex-data","ex-info","extend","extend-protocol","extend-type","extenders","extends?","false?","ffirst","file-seq","filter","filterv","finally","find","find-keyword","find-ns","find-protocol-impl","find-protocol-method","find-var","first","flatten","float","float-array","float?","floats","flush","fn","fn","fn?","fnext","fnil","for","force","format","frequencies","future","future-call","future-cancel","future-cancelled?","future-done?","future?","gen-class","gen-interface","gensym","get","get-in","get-method","get-proxy-class","get-thread-bindings","get-validator","group-by","hash","hash-combine","hash-map","hash-ordered-coll","hash-set","hash-unordered-coll","identical?","identity","if","if-let","if-not","if-some","ifn?","import","in-ns","inc","inc'","init-proxy","instance?","int","int-array","integer?","interleave","intern","interpose","into","into-array","ints","io!","isa?","iterate","iterator-seq","juxt","keep","keep-indexed","key","keys","keyword","keyword?","last","lazy-cat","lazy-seq","let","let","letfn","line-seq","list","list*","list?","load","load-file","load-reader","load-string","loaded-libs","locking","long","long-array","longs","loop","loop","macroexpand","macroexpand-1","make-array","make-hierarchy","map","map-entry?","map-indexed","map?","mapcat","mapv","max","max-key","memfn","memoize","merge","merge-with","meta","method-sig","methods","min","min-key","mix-collection-hash","mod","monitor-enter","monitor-exit","munge","name","namespace","namespace-munge","neg?","new","newline","next","nfirst","nil?","nnext","not","not-any?","not-empty","not-every?","not=","ns","ns-aliases","ns-imports","ns-interns","ns-map","ns-name","ns-publics","ns-refers","ns-resolve","ns-unalias","ns-unmap","nth","nthnext","nthrest","num","number?","numerator","object-array","odd?","or","parents","partial","partition","partition-all","partition-by","pcalls","peek","persistent!","pmap","pop!","pop","pop-thread-bindings","pos?","pr","pr-str","prefer-method","prefers","primitives-classnames","print","print-ctor","print-dup","print-method","print-simple","print-str","printf","println","println-str","prn","prn-str","promise","proxy","proxy-call-with-super","proxy-mappings","proxy-name","proxy-super","push-thread-bindings","pvalues","quot","quote","rand","rand-int","rand-nth","random-sample","range","ratio?","rational?","rationalize","re-find","re-groups","re-matcher","re-matches","re-pattern","re-seq","read","read-line","read-string","reader-conditional","reader-conditional?","realized?","record?","recur","reduce","reduce-kv","reduced","reduced?","reductions","ref","ref-history-count","ref-max-history","ref-min-history","ref-set","refer","refer-clojure","reify","release-pending-sends","rem","remove","remove-all-methods","remove-method","remove-ns","remove-watch","repeat","repeatedly","replace","replicate","require","reset!","reset-meta!","resolve","rest","restart-agent","resultset-seq","reverse","reversible?","rseq","rsubseq","run!","satisfies?","second","select-keys","send","send-off","send-via","seq","seq?","seque","sequence","sequential?","set!","set","set-agent-send-executor!","set-agent-send-off-executor!","set-error-handler!","set-error-mode!","set-validator!","set?","short","short-array","shorts","shuffle","shutdown-agents","slurp","some","some->","some->>","some-fn","some?","sort","sort-by","sorted-map","sorted-map-by","sorted-set","sorted-set-by","sorted?","special-symbol?","spit","split-at","split-with","str","string?","struct","struct-map","subs","subseq","subvec","supers","swap!","symbol","symbol?","sync","tagged-literal","tagged-literal?","take","take-last","take-nth","take-while","test","the-ns","thread-bound?","throw","time","to-array","to-array-2d","trampoline","transduce","transient","tree-seq","true?","try","type","unchecked-add","unchecked-add-int","unchecked-byte","unchecked-char","unchecked-dec","unchecked-dec-int","unchecked-divide-int","unchecked-double","unchecked-float","unchecked-inc","unchecked-inc-int","unchecked-int","unchecked-long","unchecked-multiply","unchecked-multiply-int","unchecked-negate","unchecked-negate-int","unchecked-remainder-int","unchecked-short","unchecked-subtract","unchecked-subtract-int","underive","unquote","unquote-splicing","unreduced","unsigned-bit-shift-right","update","update-in","update-proxy","use","val","vals","var","var-get","var-set","var?","vary-meta","vec","vector","vector-of","vector?","volatile!","volatile?","vreset!","vswap!","when","when-first","when-let","when-not","when-some","while","with-bindings","with-bindings*","with-in-str","with-loading-context","with-local-vars","with-meta","with-open","with-out-str","with-precision","with-redefs","with-redefs-fn","xml-seq","zero?","zipmap"]$/;"	v
s:worktree_for_dir	plugged/vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:xterm_escape_template	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^let s:xterm_escape_template = '\\033]12;%s\\007'$/;"	v
s:yaml	plugged/vim-rails/autoload/rails.vim	/^let s:yaml = {}$/;"	v
s:yamlKey	plugged/vim-polyglot/syntax/ansible.vim	/^  let s:yamlKey = "yamlBlockMappingKey"$/;"	v
s:yamlKey	plugged/vim-polyglot/syntax/ansible.vim	/^  let s:yamlKey = g:ansible_yamlKeyName$/;"	v
s:yellow	plugged/gruvbox/autoload/lightline/colorscheme/gruvbox.vim	/^  let s:yellow = s:getGruvColor('GruvboxYellow')$/;"	v
s:yellow	plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow = s:gb.bright_yellow$/;"	v
s:yellow	plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow = s:gb.faded_yellow$/;"	v
s:yellow	plugged/gruvbox/colors/gruvbox.vim	/^  let s:yellow[1] = 11$/;"	v
s:yesmacro	plugged/vim-polyglot/ftplugin/julia.vim	/^  let s:yesmacro = s:nomacro . '\\%('. s:macro_regex . '\\)\\+'$/;"	v
s:z	plugged/vim-polyglot/indent/javascript.vim	/^let s:z = has('patch-7.4.984') ? 'z' : ''$/;"	v
s;1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s;1$/;"	m
s;2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s;2$/;"	m
s;3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s;3$/;"	m
s<,1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s<,1$/;"	m
s<1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s<1$/;"	m
s<<1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s<<1$/;"	m
s=1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s=1$/;"	m
s=2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s=2$/;"	m
s=3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s=3$/;"	m
s>1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s>1$/;"	m
s?1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s?1$/;"	m
s@1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s@1$/;"	m
s[1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s[1$/;"	m
s[2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s[2$/;"	m
s[3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s[3$/;"	m
s\1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s\\1$/;"	m
s\2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s\\2$/;"	m
s\3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s\\3$/;"	m
s]1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s]1$/;"	m
s]2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s]2$/;"	m
s]3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s]3$/;"	m
s^1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s^1$/;"	m
s_	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal s_$/;"	m
s_1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s_1$/;"	m
s`1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s`1$/;"	m
s`2	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s`2$/;"	m
s`3	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s`3$/;"	m
sa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal sa$/;"	m
saa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal saa$/;"	m
save_by_filetype	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^function! s:save_by_filetype(filter_tags, headers, entries, cache, directory) " {{{1$/;"	f
save_index	plugged/vim-notes/misc/notes/search-notes.py	/^    def save_index(self):$/;"	m	class:NotesIndex
save_item	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! s:save_item(items, lines, indent)$/;"	f
save_last_seen_change	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:save_last_seen_change(bufnr) abort$/;"	f
save_mark	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def save_mark(name):$/;"	f
save_pos	plugged/vim-polyglot/indent/typescript.vim	/^function s:save_pos(f,...)$/;"	f
scala#ConditionalConfirm	plugged/vim-polyglot/indent/scala.vim	/^function! scala#ConditionalConfirm(msg)$/;"	f
scala#CountBrackets	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountBrackets(line, openBracket, closedBracket)$/;"	f
scala#CountCurlies	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountCurlies(line)$/;"	f
scala#CountParens	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CountParens(line)$/;"	f
scala#CurlyMatcher	plugged/vim-polyglot/indent/scala.vim	/^function! scala#CurlyMatcher()$/;"	f
scala#GetDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetDirForFuzzyFinder(from, addon)$/;"	f
scala#GetLine	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLine(lnum)$/;"	f
scala#GetLineAndColumnThatMatchesBracket	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineAndColumnThatMatchesCurly	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesCurly()$/;"	f
scala#GetLineAndColumnThatMatchesParen	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineAndColumnThatMatchesParen()$/;"	f
scala#GetLineThatMatchesBracket	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesBracket(openBracket, closedBracket)$/;"	f
scala#GetLineThatMatchesCurly	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesCurly()$/;"	f
scala#GetLineThatMatchesParen	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetLineThatMatchesParen()$/;"	f
scala#GetMainDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetMainDirForFuzzyFinder(from)$/;"	f
scala#GetPrevCodeLine	plugged/vim-polyglot/indent/scala.vim	/^function! scala#GetPrevCodeLine(lnum)$/;"	f
scala#GetRootDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetRootDirForFuzzyFinder(from)$/;"	f
scala#GetTestDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#GetTestDirForFuzzyFinder(from)$/;"	f
scala#InvertBracketType	plugged/vim-polyglot/indent/scala.vim	/^function! scala#InvertBracketType(openBracket, closedBracket)$/;"	f
scala#IsParentCase	plugged/vim-polyglot/indent/scala.vim	/^function! scala#IsParentCase()$/;"	f
scala#LineCompletesBrackets	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesBrackets(openBracket, closedBracket)$/;"	f
scala#LineCompletesDefValr	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesDefValr(lnum, line)$/;"	f
scala#LineCompletesIfElse	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesIfElse(lnum, line)$/;"	f
scala#LineCompletesXML	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineCompletesXML(lnum, line)$/;"	f
scala#LineEndsInIncomplete	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineEndsInIncomplete(line)$/;"	f
scala#LineIsAClosingXML	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineIsAClosingXML(line)$/;"	f
scala#LineIsCompleteIf	plugged/vim-polyglot/indent/scala.vim	/^function! scala#LineIsCompleteIf(line)$/;"	f
scala#MatchesIncompleteDefValr	plugged/vim-polyglot/indent/scala.vim	/^function! scala#MatchesIncompleteDefValr(line)$/;"	f
scala#NumberOfBraceGroups	plugged/vim-polyglot/indent/scala.vim	/^function! scala#NumberOfBraceGroups(line)$/;"	f
scala#SanitizeDirForFuzzyFinder	plugged/vim-polyglot/ftplugin/scala.vim	/^    function! scala#SanitizeDirForFuzzyFinder(dir)$/;"	f
scala#SpecificLineCompletesBrackets	plugged/vim-polyglot/indent/scala.vim	/^function! scala#SpecificLineCompletesBrackets(lnum, openBracket, closedBracket)$/;"	f
scala#Test	plugged/vim-polyglot/indent/scala.vim	/^function! scala#Test(lnum, line, openBracket, closedBracket)$/;"	f
scala#Testhelper	plugged/vim-polyglot/indent/scala.vim	/^function! scala#Testhelper(lnum, line, openBracket, closedBracket, iteration)$/;"	f
scan	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
scanlineforuris	plugged/vim-rails/autoload/rails.vim	/^function! s:scanlineforuris(line) abort$/;"	f
schemaEdit	plugged/vim-rails/autoload/rails.vim	/^function! s:schemaEdit(cmd,...)$/;"	f
schemaList	plugged/vim-rails/autoload/rails.vim	/^function! s:schemaList(A,L,P) abort$/;"	f
scoped_completions	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def scoped_completions(self, source, filename, parent):$/;"	m	class:Server
script_completion	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def script_completion(self, source, line, col, filename):$/;"	m	class:Server
scroll	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:scroll(direction) "{{{$/;"	f
scss_indent#GetIndent	plugged/vim-polyglot/autoload/scss_indent.vim	/^fun! scss_indent#GetIndent(lnum)$/;"	f
search	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    search = False$/;"	v	class:AppleHelpBuilder
search	plugged/far.vim/rplugin/python3/far/sources/shell.py	/^def search(ctx, args, cmdargs):$/;"	f
search	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:search(pattern) abort dict$/;"	f
search	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:search(pattern) abort dict$/;"	f
search.keymapping	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.keymapping() "{{{$/;"	f
search.on_char	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_char(cmdline) "{{{$/;"	f
search.on_enter	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_enter(cmdline) "{{{$/;"	f
search.on_leave	plugged/vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_leave(cmdline) "{{{$/;"	f
search_block	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! s:search_block(block) "{{{$/;"	f
search_head	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! s:search_head(block, indent) "{{{$/;"	f
search_history_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:search_history_sink(lines)$/;"	f
search_index	plugged/vim-notes/misc/notes/search-notes.py	/^    def search_index(self, keywords):$/;"	m	class:NotesIndex
search_tail	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! s:search_tail(block, head_indent, syntax)$/;"	f
searchsyn	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:searchsyn(pattern, syn, flags, mode) abort$/;"	f
searchsyn	plugged/vim-ruby/ftplugin/ruby.vim	/^function! s:searchsyn(pattern, syn, flags, mode) abort$/;"	f
section	autoload/plug.vim	/^function! s:section(flags)$/;"	f
section_is_empty	plugged/vim-airline/autoload/airline/builder.vim	/^function! s:section_is_empty(self, content)$/;"	f
sectionmovement	plugged/vim-polyglot/ftplugin/mustache.vim	/^function! s:sectionmovement(pattern,flags,mode,count)$/;"	f
seealso	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class seealso(nodes.Admonition, nodes.Element):$/;"	c
select	plugged/alchemist.vim/elixir_sense.py	/^import select, socket$/;"	i
select	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def select(start, end):$/;"	f
select	plugged/vim-textobj-indent/autoload/textobj/indent.vim	/^function! s:select(include_empty_lines_p, block_border_type)  "{{{2$/;"	f
select_a	plugged/vim-textobj-function-javascript/autoload/textobj/function/javascript.vim	/^function! s:select_a()$/;"	f
select_a	plugged/vim-textobj-underscore/plugin/textobj/underscore.vim	/^function! s:select_a()$/;"	f
select_function_wrapper	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:select_function_wrapper(function_name, spec_name, previous_mode)$/;"	f
select_i	plugged/vim-textobj-function-javascript/autoload/textobj/function/javascript.vim	/^function! s:select_i()$/;"	f
select_i	plugged/vim-textobj-underscore/plugin/textobj/underscore.vim	/^function! s:select_i()$/;"	f
select_in_visual_mode	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:select_in_visual_mode(region)$/;"	f
select_instance_variable	plugged/vim-ruby-refactoring/features/step_definitions/rename_instance_variable_steps.rb	/^def select_instance_variable$/;"	f
select_line	plugged/vim-ruby-refactoring/features/step_definitions/extract_method_steps.rb	/^def select_line$/;"	f
select_lines	plugged/vim-ruby-refactoring/features/step_definitions/extract_method_steps.rb	/^def select_lines$/;"	f
select_local_variable	plugged/vim-ruby-refactoring/features/step_definitions/rename_local_variable_steps.rb	/^def select_local_variable$/;"	f
select_magic_number	plugged/vim-ruby-refactoring/features/step_definitions/extract_constant_steps.rb	/^def select_magic_number$/;"	f
select_method	plugged/vim-ruby-refactoring/features/support/shared_methods.rb	/^def select_method$/;"	f
select_next_tab	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def select_next_tab(self, backwards=False):$/;"	m	class:SnippetInstance
select_pair_wrapper	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:select_pair_wrapper(patterns, flags, previous_mode)$/;"	f
select_rspec_let	plugged/vim-ruby-refactoring/features/step_definitions/extract_let_steps.rb	/^def select_rspec_let$/;"	f
select_tab	plugged/vim-airline/autoload/airline/extensions/tabline/buffers.vim	/^function! s:select_tab(buf_index)$/;"	f
select_tags_file	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! s:select_tags_file(tagsfile, kind) " {{{2$/;"	f
select_variable_assignment	plugged/vim-ruby-refactoring/features/step_definitions/extract_let_steps.rb	/^def select_variable_assignment$/;"	f
select_variable_contents	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractvariable.vim	/^function! s:select_variable_contents()$/;"	f
selectiveexpand	plugged/vim-rails/autoload/rails.vim	/^function! s:selectiveexpand(pat,good,default,...)$/;"	f
semi	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def semi(snip):$/;"	f
send	plugged/ultisnips/test/vim_interface.py	/^    def send(self, keys):$/;"	m	class:VimInterfaceWindows
send_to_terminal	plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterface
send_to_terminal	plugged/ultisnips/test/vim_interface.py	/^    def send_to_terminal(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterface
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmux
send_to_vim	plugged/ultisnips/test/vim_interface.py	/^    def send_to_vim(self, s):$/;"	m	class:VimInterfaceTmuxNeovim
sep	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            sep  = False,$/;"	v
separator	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:separator()$/;"	f
separator	plugged/vim-test/autoload/test/python/djangotest.vim	/^function! s:separator() abort$/;"	f
separator	plugged/vim-test/autoload/test/python/pyunit.vim	/^function! s:separator() abort$/;"	f
set	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def set(self, line, column):$/;"	m	class:_SnippetUtilCursor
set	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:set(var, default)$/;"	f
set	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set(...) abort$/;"	f
set	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:set(name, config)$/;"	f
set	plugged/vim-gitgutter/plugin/gitgutter.vim	/^function! s:set(var, default) abort$/;"	f
set.add	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.add(x) abort$/;"	f
set.clear	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.clear() abort$/;"	f
set.difference_update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.difference_update(t) abort$/;"	f
set.discard	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.discard(e) abort$/;"	f
set.iand	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.iand(t) abort$/;"	f
set.intersection_update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.intersection_update(t) abort$/;"	f
set.ior	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.ior(t) abort$/;"	f
set.isub	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.isub(t) abort$/;"	f
set.ixor	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.ixor(t) abort$/;"	f
set.pop	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.pop() abort$/;"	f
set.remove	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.remove(e) abort$/;"	f
set.symmetric_difference_update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.symmetric_difference_update(t) abort$/;"	f
set.update	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^function! s:set.update(iterable) abort$/;"	f
setCursorHold	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setCursorHold()$/;"	f
setDictionaries	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setDictionaries()$/;"	f
setFolded	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! s:setFolded(folded) abort dict$/;"	f
setSyntax	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:setSyntax()$/;"	f
setUp	plugged/ultisnips/test/vim_test_case.py	/^    def setUp(self):$/;"	m	class:VimTestCase
setUp	plugged/vim-test/spec/fixtures/maven/MathTest.java	/^	protected void setUp() throws Exception {$/;"	m	class:MathTest
setUp	plugged/vim-test/spec/fixtures/maven/MathTestCase.java	/^	protected void setUp() throws Exception {$/;"	m	class:MathTestCase
setUp	plugged/vim-test/spec/fixtures/maven/MathTests.java	/^	protected void setUp() throws Exception {$/;"	m	class:MathTests
setUp	plugged/vim-test/spec/fixtures/maven/TestMath.java	/^	protected void setUp() throws Exception {$/;"	m	class:TestMath
set_color	plugged/goyo.vim/autoload/goyo.vim	/^function! s:set_color(group, attr, color)$/;"	f
set_cursor	plugged/vim-startify/autoload/startify.vim	/^function! s:set_cursor() abort$/;"	f
set_cursor_color_for	plugged/vim-airline/autoload/airline/extensions/cursormode.vim	/^function! s:set_cursor_color_for(mode)$/;"	f
set_cursor_from_pos	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def set_cursor_from_pos(pos):$/;"	f
set_custom	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! s:set_custom(dest, name_or_dict, value) abort$/;"	f
set_custom	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def set_custom(self, custom):$/;"	m	class:Parent
set_custom_section	plugged/vim-startify/autoload/startify.vim	/^function! s:set_custom_section(section) abort$/;"	f
set_debug	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/helper.py	/^def set_debug(logger, path):$/;"	f
set_default	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_file_content	plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def set_file_content(string)$/;"	f
set_file_content	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def set_file_content(string)$/;"	f
set_filetype	plugged/vim-ruby-refactoring/features/support/shared_methods.rb	/^def set_filetype$/;"	f
set_mappings	plugged/vim-startify/autoload/startify.vim	/^function! s:set_mappings() abort$/;"	f
set_mark	plugged/vim-startify/autoload/startify.vim	/^function! s:set_mark(type, ...) abort$/;"	f
set_mark_from_pos	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def set_mark_from_pos(name, pos):$/;"	f
set_mark_tick	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:set_mark_tick(...)$/;"	f
set_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:set_path(bufnr, path)$/;"	f
set_path_options	plugged/vim-rails/autoload/rails.vim	/^function! s:set_path_options() abort$/;"	f
set_pattern	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def set_pattern(variable, keys, pattern):$/;"	f
set_precedence	plugged/supertab/ftplugin/html.vim	/^        let set_precedence = !eclim#util#ListContains(natures, 'php')$/;"	v
set_precedence	plugged/supertab/ftplugin/html.vim	/^  let set_precedence = 1$/;"	v
set_prefix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:set_prefix(prefix)$/;"	f
set_quickfix_title	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:set_quickfix_title(keywords, pattern) " {{{2$/;"	f
set_source_attributes	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^    def set_source_attributes(self, context):$/;"	m	class:Parent
set_translator	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def set_translator(self, name, translator_class):$/;"	m	class:Sphinx
set_up_auto_save	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:set_up_auto_save(file)$/;"	f
set_value	plugged/deoplete.nvim/autoload/deoplete/custom.vim	/^function! s:set_value(dest, name, value) abort$/;"	f
set_zoomed	plugged/vim-zoom/autoload/zoom.vim	/^function! s:set_zoomed(...)$/;"	f
setf	plugged/vim-polyglot/ftdetect/polyglot.vim	/^function! s:setf(filetype) abort$/;"	f
setf	plugged/vim-ruby/ftdetect/ruby.vim	/^function! s:setf(filetype) abort$/;"	f
setf	plugged/vim-ruby/ftdetect/ruby_extra.vim	/^function! s:setf(filetype) abort$/;"	f
setline	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:setline(lnum, text) abort$/;"	f
settings	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^        from jedi import settings$/;"	i
setup	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^def setup(vim, level, output_file=None):$/;"	f
setupTemplate	plugged/vim-polyglot/ftdetect/polyglot.vim	/^function! s:setupTemplate()$/;"	f
setup_extension	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def setup_extension(self, extension):$/;"	m	class:Sphinx
setup_keymaps	plugged/tagbar/plugin/tagbar.vim	/^function! s:setup_keymaps() abort$/;"	f
setup_maps	plugged/vim-gitgutter/autoload/gitgutter.vim	/^function! s:setup_maps()$/;"	f
setup_options	plugged/tagbar/plugin/tagbar.vim	/^function! s:setup_options() abort$/;"	f
setup_other_plugins	plugged/ultisnips/test_all.py	/^def setup_other_plugins(all_plugins):$/;"	f
setup_pad	plugged/goyo.vim/autoload/goyo.vim	/^function! s:setup_pad(bufnr, vert, size, repel)$/;"	f
setup_vim_server	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:setup_vim_server()$/;"	f
severe	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def severe(self, *args, **kwargs):$/;"	m	class:AutodocReporter
sh	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal sh$/;"	m
sha	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal sha$/;"	m
shall_skip	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def shall_skip(module, opts):$/;"	f
shb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal shb$/;"	m
shellesc	autoload/plug.vim	/^function! s:shellesc(arg)$/;"	f
shellesc	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellesc_cmd	autoload/plug.vim	/^function! s:shellesc_cmd(arg)$/;"	f
shellescape	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellslash	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path) abort$/;"	f
shift	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def shift(self, amount=1):$/;"	m	class:SnippetUtil
shift	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:shift(list) abort$/;"	f
shift	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:shift(list) abort$/;"	f
shlex	plugged/alchemist.vim/elixir_sense.py	/^import subprocess, shlex$/;"	i
shortpath	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:shortpath()$/;"	f
should_use_migemo	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_migemo(char) "{{{$/;"	f
should_use_regexp	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_regexp() "{{{$/;"	f
should_use_smartsign	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_smartsign(char) "{{{$/;"	f
showMenu	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node)$/;"	f
show_bookmarks	plugged/vim-startify/autoload/startify.vim	/^function! s:show_bookmarks() abort$/;"	f
show_category	plugged/emmet-vim/unittest.vim	/^function! s:show_category(category)$/;"	f
show_commands	plugged/vim-startify/autoload/startify.vim	/^function! s:show_commands() abort$/;"	f
show_dir	plugged/vim-startify/autoload/startify.vim	/^function! s:show_dir() abort$/;"	f
show_done	plugged/emmet-vim/unittest.vim	/^function! s:show_done()$/;"	f
show_files	plugged/vim-startify/autoload/startify.vim	/^function! s:show_files() abort$/;"	f
show_lists	plugged/vim-startify/autoload/startify.vim	/^function! s:show_lists(lists) abort$/;"	f
show_message	plugged/vim-misc/autoload/xolox/misc/msg.vim	/^function! s:show_message(hlgroup, args) " {{{1$/;"	f
show_ng	plugged/emmet-vim/unittest.vim	/^function! s:show_ng(no, expect, got)$/;"	f
show_ok	plugged/emmet-vim/unittest.vim	/^function! s:show_ok()$/;"	f
show_pass	plugged/emmet-vim/unittest.vim	/^function! s:show_pass(pass)$/;"	f
show_sessions	plugged/vim-startify/autoload/startify.vim	/^function! s:show_sessions() abort$/;"	f
show_skip	plugged/emmet-vim/unittest.vim	/^function! s:show_skip(no, title)$/;"	f
show_tabline	plugged/vim-airline/autoload/airline/extensions/tabline/autoshow.vim	/^function! s:show_tabline(min_count, total_count)$/;"	f
show_title	plugged/emmet-vim/unittest.vim	/^function! s:show_title(no, title)$/;"	f
show_type	plugged/emmet-vim/unittest.vim	/^function! s:show_type(type)$/;"	f
shutdown	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def shutdown(self):$/;"	m	class:Client
shutil	plugged/ultisnips/test/vim_interface.py	/^import shutil$/;"	i
sid2sfuncs	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
sid2sfuncs	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:sid2sfuncs(sid) abort$/;"	f
signs	plugged/vim-bookmarks/t/bm_sign_spec.vim	/^    let signs = util#redir_execute(":sign place file=". g:test_file)$/;"	v
signs	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:signs(filename)$/;"	f
silent_call	plugged/ultisnips/test/vim_interface.py	/^def silent_call(cmd):$/;"	f
skip_func	plugged/vim-polyglot/indent/typescript.vim	/^function s:skip_func()$/;"	f
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^        if self.vim.has_version(7, 4, 214) else None$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchContext
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchPreviouslySelectedPlaceholder
skip_if	plugged/ultisnips/test/test_Autotrigger.py	/^    skip_if = check_required_vim_version$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
skip_if	plugged/ultisnips/test/test_Chars.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:_UmlautsBase
skip_if	plugged/ultisnips/test/test_Editing.py	/^    skip_if = check_required_vim_version$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
skip_if	plugged/ultisnips/test/test_Editing.py	/^    skip_if = check_required_vim_version$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove2
skip_if	plugged/ultisnips/test/test_Format.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_InDefValue_Leave
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_ShebangPython
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_SimpleExample
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_TextInNextLine
skip_if	plugged/ultisnips/test/test_Interpolation.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TabStop_Shell_WithUmlauts
skip_if	plugged/ultisnips/test/test_SnippetOptions.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
skip_if	plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	v	class:Transformation_LowerCaseAsciiResult
skip_if	plugged/ultisnips/test/test_Transformation.py	/^    skip_if = lambda self: no_unidecode_available()$/;"	v	class:Transformation_SimpleCaseAsciiResult
skip_if	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    skip_if = lambda self: running_on_windows()$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
skip_if	plugged/ultisnips/test/vim_test_case.py	/^    skip_if = lambda self: None$/;"	v	class:VimTestCase
skip_latency_measure	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:skip_latency_measure()$/;"	f
sleeptime	plugged/ultisnips/test/vim_test_case.py	/^    sleeptime = 0.00$/;"	v	class:VimTestCase
smart_execute_command	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smartdict_jp	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let smartdict_jp = g:EasyMotion#sticky_table#jp$/;"	v
smartdict_us	plugged/vim-easymotion/t/smartsign_spec.vim	/^        let smartdict_us = g:EasyMotion#sticky_table#us$/;"	v
snakecase	plugged/vim-ruby-refactoring/plugin/refactorings/general/introducevariable.vim	/^function! s:snakecase(word)$/;"	f
snapshot	autoload/plug.vim	/^function! s:snapshot(force, ...) abort$/;"	f
snipMate_Disabled	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Disabled(_VimTest):$/;"	c
snipMate_EmptyLinesContinueSnippets	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_EmptyLinesContinueSnippets(_VimTest):$/;"	c
snipMate_Extends	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Extends(_VimTest):$/;"	c
snipMate_Interpolation	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Interpolation(_VimTest):$/;"	c
snipMate_InterpolationWithSystem	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_InterpolationWithSystem(_VimTest):$/;"	c
snipMate_Issue658	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Issue658(_VimTest):$/;"	c
snipMate_MultiMatches	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_MultiMatches(_VimTest):$/;"	c
snipMate_NoNestedTabstops	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_NoNestedTabstops(_VimTest):$/;"	c
snipMate_OtherFiletype	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OtherFiletype(_VimTest):$/;"	c
snipMate_OverwrittenByRegExpTrigger	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_OverwrittenByRegExpTrigger(_VimTest):$/;"	c
snipMate_SimpleSnippet	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippet(_VimTest):$/;"	c
snipMate_SimpleSnippetInSnippetFile	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetInSnippetFile(_VimTest):$/;"	c
snipMate_SimpleSnippetSubDirectory	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_SimpleSnippetSubDirectory(_VimTest):$/;"	c
snipMate_TestMirrors	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrors(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders(_VimTest):$/;"	c
snipMate_TestMirrorsInPlaceholders_Overwrite	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestMirrorsInPlaceholders_Overwrite(_VimTest):$/;"	c
snipMate_TestNoBraceTabstops	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstops(_VimTest):$/;"	c
snipMate_TestNoBraceTabstopsAndMirrors	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_TestNoBraceTabstopsAndMirrors(_VimTest):$/;"	c
snipMate_Visual_Simple	plugged/ultisnips/test/test_SnipMate.py	/^class snipMate_Visual_Simple(_VimTest):$/;"	c
snippet_end	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def snippet_end(self):$/;"	m	class:SnippetUtil
snippet_manager	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^import UltiSnips.snippet_manager$/;"	i
snippet_start	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def snippet_start(self):$/;"	m	class:SnippetUtil
snippets	plugged/ultisnips/test/test_Autocommands.py	/^    snippets = ('test', '[ ${1:foo} ]')$/;"	v	class:Autocommands
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('trig', 'success')$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('trig', 'success')$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü $1')$/;"	v	class:Snippet_With_Umlauts_Mirrors
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü ${2:hello}ßß\\nüüüü')$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('ül', 'üü ${1:world} üü `!p snip.rv = len(t[1])*"a"`')$/;"	v	class:Snippet_With_Umlauts_Python
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = ('ül', 'üüüüüßßßß')$/;"	v	class:Snippet_With_Umlauts_TypeOn
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote("'")$/;"	v	class:Snippet_With_SingleQuote_List
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('"')$/;"	v	class:Snippet_With_DoubleQuote_List
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('ü')$/;"	v	class:Snippet_With_Umlauts
snippets	plugged/ultisnips/test/test_Chars.py	/^    snippets = _snip_quote('ü')$/;"	v	class:Snippet_With_Umlauts_List
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ('test', '$1 $2')$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ('test', '$1 $2')$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
snippets	plugged/ultisnips/test/test_Completion.py	/^    snippets = ('test', '$1 ${1:blah}')$/;"	v	class:Completion_SimpleExample_ECR
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ($/;"	v	class:JumpForward_DefSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('i', 'if $1:\\n\\t$2')$/;"	v	class:Undo_ChangesInPlaceholder
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('i', 'if $1:\\n\\t$2')$/;"	v	class:Undo_CompletelyUndoSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('i', 'if:\\n\\t$1')$/;"	v	class:Undo_RemoveOneSnippetByTime
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('i', 'if:\\n\\t$1')$/;"	v	class:Undo_RemoveOneSnippetByTime2
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '$1 Hello\\naaa ${1} bbb\\nWorld')$/;"	v	class:Undo_RemoveEditInTabstop
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '$1hello\\nnice\\nworld')$/;"	v	class:DeleteLastTwoLinesInSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '${1:hello} $1')$/;"	v	class:DeleteSnippetInsertion0
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '${1:hi}\\n${2:world}\\nend')$/;"	v	class:DeleteCurrentTabStop2_JumpBack
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '${1:hi}\\n${2:world}\\nend')$/;"	v	class:DeleteCurrentTabStop3_JumpAround
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '${1:hi}\\nend')$/;"	v	class:DeleteCurrentTabStop1_JumpBack
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', '${1:one}(${2:xxx})${3:three}')$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', 'A${1:C} ${0:DDD}', 'This is Case 1')$/;"	v	class:Backspace_TabStop_Zero
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', 'A${1:C} ${2:DDD}', 'This is Case 1')$/;"	v	class:Backspace_TabStop_NotZero
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', 'Hello\\n${1:Hello}World')$/;"	v	class:Undo_RemoveWholeSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', 'Hello\\naaa ${1} bbb\\nWorld')$/;"	v	class:Undo_RemoveMultilineSnippet
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', r"$1${1\/(.*)\/(?0::.)\/}")$/;"	v	class:DeleteSnippetInsertion1
snippets	plugged/ultisnips/test/test_Editing.py	/^    snippets = ('test', r"if $1: $2")$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ('hallo', 'Hallo Welt!')$/;"	v	class:_SimpleExpands
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ('hallo', 'Hallo Welt!\\nUnd Wie gehts')$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ('hallo', 'Hallo Welt!\\nUnd Wie gehts')$/;"	v	class:MultilineExpand_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ('hallo', 'Hallo Welt\\n')$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Expand.py	/^    snippets = ('test', 'SimpleText')$/;"	v	class:ExitSnippetModeAfterTabstopZero
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ('pd', 'padding: ${1:0}px')$/;"	v	class:VirtualEdit
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ('test', '${1:hello} ${2:world} ${0}')$/;"	v	class:RetainsTheUnnamedRegister
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ('test', '${1:hello} ${2:world} ${0}')$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ('test', '${2:#2} ${1:#1};$0')$/;"	v	class:Bug1251994
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ('test', '\\t${1}${0}')$/;"	v	class:ShiftWidthZero
snippets	plugged/ultisnips/test/test_Fixes.py	/^    snippets = ('test', 'hello')$/;"	v	class:NonUnicodeDataInUnnamedRegister
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ('fold',$/;"	v	class:FoldOverwrite_Simple_ECR
snippets	plugged/ultisnips/test/test_Folding.py	/^    snippets = ('fold',$/;"	v	class:Fold_DeleteMiddleLine_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ($/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('m', '\\tBlaahblah \\t\\t  ')$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('test', '${1:longer expand}\\n$1\\n$0', '', 'f')$/;"	v	class:FOSimple_Break_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('test', '${1:longer expand}after\\nstart$1end')$/;"	v	class:FOTextAfter_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('test', '${1:longer expand}after\\nstart$1end')$/;"	v	class:FOWrapOnLongWord_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('test', 'Before${1:longer expand}After\\nstart$1end')$/;"	v	class:FOTextBeforeAndAfter_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('test', 'for\\n    blah')$/;"	v	class:ProperIndenting_SimpleCase_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('test', 'hui')$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
snippets	plugged/ultisnips/test/test_Format.py	/^    snippets = ('test', 'hui')$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_CanOverwriteTabstop
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_OptExists
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_OptNoExists
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonCode_TrickyReferences
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToSelectedPlaceholders
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:PythonVisual_HasAccessToZeroPlaceholders
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ($/;"	v	class:Python_WeirdScoping_Error
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'Hallo ${1:now `echo fromecho`} end')$/;"	v	class:TabStop_Shell_InDefValue_Leave
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'Hallo ${1:now `echo fromecho`} end')$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'h`!p snip.rv = snip.v.mode + snip.v.text`b')$/;"	v	class:PythonVisual_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'h`!p snip.rv = snip.v.mode + snip.v.text`b')$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'h`!p snip.rv = snip.v.mode + snip.v.text`b')$/;"	v	class:PythonVisual_SelectOneWord
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'hi `echo hallo` you!')$/;"	v	class:TabStop_Shell_SimpleExample
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'hi `echo hallo`\\nWeiter')$/;"	v	class:TabStop_Shell_TextInNextLine
snippets	plugged/ultisnips/test/test_Interpolation.py	/^    snippets = ('test', 'hi `echo höüäh` you!')$/;"	v	class:TabStop_Shell_WithUmlauts
snippets	plugged/ultisnips/test/test_ListSnippets.py	/^    snippets = (('testblah', 'BLAAH', 'Say BLAH'),$/;"	v	class:_ListAllSnippets
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = 'test', '$1 $1_'$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = 'test', '$1 $1_'$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = 'test', '$1 $1_'$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = 'test', '$1 $1_'$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = 'test', 'welt${1:welt${2:welt}welt} $2'$/;"	v	class:Mirror_TestKillTabstop_Kill
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ($/;"	v	class:MirrorRealLifeExample_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '    $1\\n$1\\na$1b\\n$1\\ntest $1 mich')$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 $1 $1 $1')$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 $1 $1 $1')$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 $1')$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 $1')$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 ${1:replace me}')$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 ${1:replace me}')$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 ${1:this is it} $1')$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 ${1:this is it} $1')$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1 Hinten\\n$1')$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1 Hinten')$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1')$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1')$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1')$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1\\n$1')$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n$1\\n$1')$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n${1:sometext}')$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\nVorne $1 Hinten')$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\nVorne $1')$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', '$1\\n\\n$1\\n\\n$1')$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ObenVorne $1 ObenHinten\\nVorne $1 Hinten')$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'Vorne $1 Hinten\\n$1')$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'Vorne $1\\n$1')$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:$1.h $1.c}\\ntest $1')$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:$1.h}')$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:$1}')$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:$1}')$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:snip} ${3:$1.h $2}')$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha $1 ${2:snip} ${3:$1.h $2}')$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha $5 ${1:blub} $4 $0 ${2:$1.h} $1 $3 ${4:More}')$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:blub} ${2:$1.h}')$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:blub} ${2:$1}')$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:default value} $1\\nanother: $1 mirror')$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:default value} $1\\nanother: $1 mirror')$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:defa}\\n$1')$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Mirror.py	/^    snippets = ('test', 'ha ${1:defa}\\n$1')$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('<trh', '<tr>\\n\\t<th>$1<\/th>\\n\\t$2\\n<\/tr>\\n$3')$/;"	v	class:CursorMovement_BS_InEditMode
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', '${1:Hi}\\n${2:blub}')$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', '${1:Hi}\\n${2:blub}')$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', '${1:Some}')$/;"	v	class:IMMoving_CursorsKeys_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', r"$1 ${1:a tab}")$/;"	v	class:CursorMovement_Multiline_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', r"$1 ${1:a tab}")$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', r"$1 ${2:a tab} ${1:Tab}")$/;"	v	class:IMMoving_NoExiting_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', r"$1 ${2:blub} ${1:Tab}")$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
snippets	plugged/ultisnips/test/test_Movement.py	/^    snippets = ('test', r"${1:Hi} ${2:blub}")$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
snippets	plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = ($/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
snippets	plugged/ultisnips/test/test_MultipleMatches.py	/^    snippets = (('test', 'Case1', 'This is Case 1'),$/;"	v	class:_MultipleMatches
snippets	plugged/ultisnips/test/test_Plugin.py	/^    snippets = ('long', 'Hello', '', 'w')$/;"	v	class:Plugin_SuperTab_SimpleTest
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_InnerWOTabStop_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInnerInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_LeavingInner_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_MirroredZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_BackspaceZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero2_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ($/;"	v	class:RecTabsStops_TypeInZero_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', 'M START\\n    $0\\nM END')$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', 'M START\\n    $1\\nM END -> $0')$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', 'M START\\n$0\\nM END')$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', 'M START\\n$0\\nM END')$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', 'M START\\n$0\\nM END')$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Recursive.py	/^    snippets = ('m', '[ ${1:first}  ${2:sec} ]')$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ('for',$/;"	v	class:ExclusiveSelection_RealWorldCase_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ('for',$/;"	v	class:OldSelection_RealWorldCase_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ('test', '${1:World}')$/;"	v	class:_SelectModeMappings
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ('test', 'h${1:blah}w $1')$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
snippets	plugged/ultisnips/test/test_Selection.py	/^    snippets = ('test', 'h${1:blah}w $1')$/;"	v	class:OldSelection_SimpleTabstop_Test
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ($/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('((?<=\\W)|^)(\\.)', 'self.', '', 'r')$/;"	v	class:_Regex_Self
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('(.*test)', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('(test *)+', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_Multiple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('(test)', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('(test)', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('(test.*)', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('hi',$/;"	v	class:_TabExpand_RealWorld
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test ', 'Expand me!', '', 'r')$/;"	v	class:SnippetOptions_Regex_WithSpace
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test it', 'Expand me!', '', 'b')$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test it', 'Expand me!', '', 'b')$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test it', 'Expand me!', '', 'b')$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test me', 'Expand me!')$/;"	v	class:MultiWordSnippet_Simple
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test', 'Expand me!', '', 'b')$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test', 'Expand me!', '', 'b')$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test', 'Expand me!', '', 'b')$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = ('test', '\\t\\tExpand\\tme!\\t', '', 't')$/;"	v	class:_No_Tab_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test it', 'Expand me!', '', 'i'), )$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test it', 'Expand me!', '', 'i'), )$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test it', 'Expand me!', '', 'w'), )$/;"	v	class:_MultiWord_SnippetOptions_ExpandWordSnippets
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'i'), )$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
snippets	plugged/ultisnips/test/test_SnippetOptions.py	/^    snippets = (('test', 'Expand me!', '', 'w'), )$/;"	v	class:_SnippetOptions_ExpandWordSnippets
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteExisting
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
snippets	plugged/ultisnips/test/test_SnippetPriorities.py	/^    snippets = ($/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirst_RLExample
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ($/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond_RLExample
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('echo', '$0 run')$/;"	v	class:TabStop_Exit_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('echo', 'echo ${1:Hallo}')$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'Hallo ${1:WELT} ups')$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $0 $1')$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $0 a small feed')$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $0\\nnice $1 work\\n$3 $2\\nSeem to work')$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $2 $1')$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo $2 $1')$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${0:End} ${1:Beginning}')$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${0:End} a small feed')$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${1:End} ${0:Beginning}')$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${2:End} mitte ${1:Beginning}')$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'hallo ${2:End} mitte${1:Beginning}')$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('hallo', 'nothing ${1:i} hups')$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', "$1: ${1:'${2:second}'} $2")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', "$2: ${2:'${1:second}'} $1")$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', '[ $1$2 ] $1')$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', '\\\\${1:literal}')$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', '\\n\\\\${1:literal}')$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'each_byte { |${1:byte}| $0 }')$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi $1 $2 ${1:first line\\nsecond line} ${2:Hi} world')$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi $1 ${1:first line\\nsecond line} world')$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi $1 ${1:first line\\nsecond line} world')$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:first line\\nsecond line} world')$/;"	v	class:TabStop_Multiline_Leave
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:first line\\nsecond line} world')$/;"	v	class:TabStop_Multiline_Overwrite
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second ${3:third}}} $4')$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second ${3:third}}} $4')$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second ${3:third}}} $4')$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second}} $2')$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second}} $2')$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'hi ${1:this ${2:second}} $2')$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'snip $1')$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'snip ${1:default}')$/;"	v	class:TabStopEscapingWhenSelected_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 'snip ${1:i}')$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', 't$1t${2: }t{\\n\\t$0\\n}')$/;"	v	class:TabStop_CROnlyOnSelectedNear
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r":latex:\\`$1\\`$0")$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"These are two backslashes \\\\\\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash3
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"This \\ is a backslash!")$/;"	v	class:TabStop_EscapingChars_Backslash
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"This is a backslash \\\\ done")$/;"	v	class:TabStop_EscapingChars_Backslash2
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"\\\\$1{$2}")$/;"	v	class:TabStop_EscapingChars_Backslash4
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"a\\${1:literal}")$/;"	v	class:TabStop_EscapingCharsDollars1
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"snip \\$0 $$0 end")$/;"	v	class:TabStop_EscapingCharsDollars
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"snip \\` literal")$/;"	v	class:TabStop_EscapingCharsBackticks
snippets	plugged/ultisnips/test/test_TabStop.py	/^    snippets = ('test', r"usage: \\`basename \\$0\\` ${1:args}")$/;"	v	class:TabStop_EscapingChars_RealLife
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/(aa)|.*\/(?1:yes:no\\\\)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/(aa)|.*\/(?1:yes\\:no\\))\/}"$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/(aa)|.*\/(?1:yes\\\\:no)\/}"$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = 'test', r"$1 ${1\/.*\/\\L$0$0\\E\/}_"$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('ascii', '$1 ${1\/(.*)\/$1\/a}')$/;"	v	class:Transformation_SimpleCaseAsciiResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('ascii', '$1 ${1\/(.*)\/\\L$1\\E\/a}')$/;"	v	class:Transformation_LowerCaseAsciiResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(.)\/\\\\u$1\/}')$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(.*)\/\\L$1\\E\/}')$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(.*)\/\\\\U$1\\E\/}')$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(.*)\/\\l$1\/}')$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}')$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(?:(^a)|(^b)).*\/(?1:yes:no)\/}')$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/([ab])oo\/$1ull\/}')$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/(^a).*\/(?0:began with an a)\/}')$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/foo\/batzl\/}')$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '$1 ${1\/foo\/batzl\/}')$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '${1:Some Text}${1\/.+\/\\\\U$0\\E\/}\\n${1\/.+\/\\L$0\\E\/}')$/;"	v	class:Transformation_MultipleTransformations_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '${1\/.+\/is something\/}${1:some}')$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '${1\/.+\/is something\/}${1:some}')$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '${1\/.+\/is something\/}${1}')$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '${1\/.+\/is something\/}${1}')$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '${1\/foo\/batzl\/} $1')$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', '${1\/foo\/batzl\/} ${1:replace me}')$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', 'snip ${1\/.+\/(?0:m1)\/} ${2\/.+\/(?0:m2)\/} '$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', 'snip ${1\/.+\/(?0:m1)\/} ${2\/.+\/(?0:m2)\/} '$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', 'snip ${1\/.+\/(?0:matched)\/} ${1:default}')$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', 'snip ${1\/.+\/(?0:matched)\/} ${1:default}')$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/(\\w+(?:\\W+\\w+){,7})\\W*(.+)?\/$1(?2:...)\/}")$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/(dead) (par[^ ]*)\/this $2 is a bit $1\/}")$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/, *\/, \/g}")$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/, *\/-\/g}")$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/, *\/\\n\/}")$/;"	v	class:Transformation_CINewlines_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/, *\/\\t\/}")$/;"	v	class:Transformation_CITabstop_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/^.*?(-)?(>)?$\/(?2::(?1:>:.))\/}")$/;"	v	class:Transformation_ConditionalInConditional_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/hal((?:lo)|(?:ul))\/(?1:ha\\($1\\))\/}")$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${1\/test\/blah\/i}")$/;"	v	class:Transformation_OptionIgnoreCase_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"$1 ${2:${1\/.+\/(?0:defined $0)\/}}")$/;"	v	class:Transformation_InsideTabOvertype_ECR
snippets	plugged/ultisnips/test/test_Transformation.py	/^    snippets = ('test', r"${VISUAL\/^\/* \/mg}")$/;"	v	class:Transformation_OptionMultiline_ECR
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ("te'stâ", 'abc123ά', '123êabc')$/;"	v	class:VerifyVimDict3
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('te"stâ', 'abc123ά', '123êabc')$/;"	v	class:VerifyVimDict2
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('testme',$/;"	v	class:TestLangmapWithUtf8_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('testme',$/;"	v	class:TestNonEmptyLangmapWithSemi_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('testme',$/;"	v	class:TestNonEmptyLangmap_ExpectCorrectResult
snippets	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    snippets = ('testâ', 'abc123ά', '123\\'êabc')$/;"	v	class:VerifyVimDict1
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('if', 'if {\\n\\t${VISUAL}$0\\n}')$/;"	v	class:Visual_LineSelect_DedentLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'beg\\n\\t${0:${VISUAL}}\\nend')$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'beg\\n\\t${VISUAL}\\n\\t${1:here_we_go}\\nend')$/;"	v	class:Visual_LineSelect_WithTabStop
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'beg\\n\\t${VISUAL}\\nend')$/;"	v	class:Visual_LineSelect_CheckIndentSimple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'beg\\n\\t${VISUAL}\\nend')$/;"	v	class:Visual_LineSelect_CheckIndentTwice
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${1:${VISUAL}}b')$/;"	v	class:Visual_InDefaultText_SelectOneWord
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${1:${VISUAL}}b')$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${1:bef${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${1:bef${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${1:beforea${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${1:beforea${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${1:beforeaaa${VISUAL}aft}b')$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${2:ahh}${VISUAL}${1:ups}b', 'Description', 'i')$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL:world}b')$/;"	v	class:VisualWithDefault_ExpandWithVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL:world}b')$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b${VISUAL}a')$/;"	v	class:Visual_SelectOneWord_TwiceVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_CrossOneLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_ExpandTwice
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_NoVisualSelection_Ignore
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b')$/;"	v	class:Visual_SelectOneWord
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', '', 'i')$/;"	v	class:Visual_SelectOneWordExclusive
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', '', 'i')$/;"	v	class:Visual_SelectOneWordInclusive
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', '', 'i')$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', 'Description', 'i')$/;"	v	class:Visual_SelectOneWord_Inword
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'h${VISUAL}b', 'Description', 'i')$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', 'hello\\n\\t ${1:${VISUAL}}\\nend')$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', r"h${1:bef${VISUAL\/.\/\\U$0\\E\/g}aft}b")$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL:\\\/\\\/ body}b")$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL:world\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_LineSelect_Simple
snippets	plugged/ultisnips/test/test_Visual.py	/^    snippets = ('test', r"h${VISUAL\/.\/\\U$0\\E\/g}b")$/;"	v	class:VisualTransformation_SelectOneWord
snippets	plugged/ultisnips/test/vim_test_case.py	/^    snippets = ()$/;"	v	class:VimTestCase
snippets_in_current_scope	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def snippets_in_current_scope(self, searchAll):$/;"	m	class:SnippetManager
snr_prefix	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:snr_prefix(sfile)$/;"	f
sob	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal sob$/;"	m
socket	plugged/alchemist.vim/elixir_sense.py	/^import select, socket$/;"	i
softRefreshNerdTree	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:softRefreshNerdTree()$/;"	f
sort	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sortTags	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! s:sortTags(compare_typeinfo) abort dict$/;"	f
sort_buffers	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:sort_buffers(...)$/;"	f
sort_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_by_tick	plugged/vim-startify/autoload/startify.vim	/^function! s:sort_by_tick(one, two)$/;"	f
sort_key	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^def sort_key(item):$/;"	f
sort_longest_to_shortest	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:sort_longest_to_shortest(a, b)$/;"	f
sort_parameter_declaration_position_pairs	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:sort_parameter_declaration_position_pairs(pair1, pair2)$/;"	f
sort_parameters_by_declaration	plugged/vim-ruby-refactoring/plugin/refactorings/general/extractmethod.vim	/^function! s:sort_parameters_by_declaration(parameters)$/;"	f
sortedfiles	plugged/vim-easytags/misc/easytags/why-so-slow.py	/^sortedfiles = sorted([(s, n) for (n, s) in counters.iteritems()], reverse=True)$/;"	v
source	autoload/plug.vim	/^function! s:source(from, ...)$/;"	f
source	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^import deoplete.source  # noqa$/;"	i
source.gather_candidates	plugged/tmux-complete.vim/autoload/neocomplcache/sources/tmuxcomplete.vim	/^function! s:source.gather_candidates(context)$/;"	f
source.gather_candidates	plugged/tmux-complete.vim/autoload/neocomplete/sources/tmuxcomplete.vim	/^function! s:source.gather_candidates(context)$/;"	f
source.gather_candidates	plugged/ultisnips/autoload/neocomplete/sources/ultisnips.vim	/^function! s:source.gather_candidates(context)$/;"	f
source.gather_candidates	plugged/vim-bookmarks/autoload/unite/sources/vim_bookmarks.vim	/^function! s:source.gather_candidates(args, context) abort " {{{$/;"	f
source.hooks.on_syntax	plugged/vim-bookmarks/autoload/unite/sources/vim_bookmarks.vim	/^function! s:source.hooks.on_syntax(args, context) abort " {{{$/;"	f
spa	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal spa$/;"	m
space_before_function_paren	plugged/vim-snippets/pythonx/javascript_snippets.py	/^def space_before_function_paren(snip):$/;"	f
spaces_to_indent	plugged/ultisnips/pythonx/UltiSnips/indent_util.py	/^    def spaces_to_indent(self, indent):$/;"	m	class:IndentUtil
span	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
span	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
spawn	autoload/plug.vim	/^function! s:spawn(name, cmd, opts)$/;"	f
spawn	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
spb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal spb$/;"	m
spc	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal spc$/;"	m
specEdit	plugged/vim-rails/autoload/rails.vim	/^function! s:specEdit(cmd,...) abort$/;"	f
specList	plugged/vim-rails/autoload/rails.vim	/^function! s:specList(A,L,P)$/;"	f
special	plugged/vim-rails/after/syntax/ruby/rails.vim	/^let special = filter(copy(keywords), 'v:val =~# ''^\\h\\k*[?!]$''')$/;"	v
split	plugged/vim-rails/autoload/rails.vim	/^function! s:split(arg, ...)$/;"	f
split3	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split_at_whitespace	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^def split_at_whitespace(string):$/;"	f
split_by_displaywidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_by_keys	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:split_by_keys(str)$/;"	f
split_leftright	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
split_module	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^def split_module(text, default_value=None):$/;"	f
split_posix_text	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:split_posix_text(text, ...) abort$/;"	f
split_rtp	autoload/plug.vim	/^function! s:split_rtp()$/;"	f
stab	plugged/supertab/plugin/supertab.vim	/^        let stab = ''$/;"	v
stab	plugged/supertab/plugin/supertab.vim	/^        let stab = substitute(stab, '()$', '', '')$/;"	v
stab	plugged/supertab/plugin/supertab.vim	/^        let stab = substitute(stab, '<SID>\\c', '<SNR>' . existing_stab.sid . '_', '')$/;"	v
stab	plugged/supertab/plugin/supertab.vim	/^      let stab = substitute(stab, '\\(<[-a-zA-Z0-9]\\+>\\)', '\\\\\\1', 'g')$/;"	v
stab	plugged/supertab/plugin/supertab.vim	/^    let stab = maparg('<s-tab>', 'i')$/;"	v
stage	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:stage(hunk_diff)$/;"	f
stage_info	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
start	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^def start(count, desc_len=0, server_timeout=10, short_types=False,$/;"	f
start	plugged/ultisnips/pythonx/UltiSnips/text_objects/_base.py	/^    def start(self):$/;"	m	class:TextObject
start	plugged/vim-gitgutter/unplace.vim	/^let start = reltime()$/;"	v
start_background	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^def start_background(compl_queue):$/;"	f
start_latency_measure	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:start_latency_measure()$/;"	f
start_of_file	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class start_of_file(nodes.Element):$/;"	c
start_resize_timer	plugged/far.vim/autoload/far.vim	/^function! s:start_resize_timer() abort$/;"	f
start_server	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def start_server(self):$/;"	m	class:Source
startify	plugged/vim-startify/plugin/startify.vim	/^augroup startify$/;"	a
startify#debug	plugged/vim-startify/autoload/startify.vim	/^function! startify#debug()$/;"	f
startify#fortune#boxed	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#boxed(...) abort$/;"	f
startify#fortune#cowsay	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#cowsay(...) abort$/;"	f
startify#fortune#predefined_quotes	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#predefined_quotes() abort$/;"	f
startify#fortune#quote	plugged/vim-startify/autoload/startify/fortune.vim	/^function! startify#fortune#quote() abort$/;"	f
startify#get_lastline	plugged/vim-startify/autoload/startify.vim	/^function! startify#get_lastline() abort$/;"	f
startify#get_separator	plugged/vim-startify/autoload/startify.vim	/^function! startify#get_separator() abort$/;"	f
startify#insane_in_the_membrane	plugged/vim-startify/autoload/startify.vim	/^function! startify#insane_in_the_membrane() abort$/;"	f
startify#open_buffers	plugged/vim-startify/autoload/startify.vim	/^function! startify#open_buffers(...) abort$/;"	f
startify#session_close	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_close() abort$/;"	f
startify#session_delete	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_delete(bang, ...) abort$/;"	f
startify#session_delete_buffers	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_delete_buffers()$/;"	f
startify#session_list	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_list(lead, ...) abort$/;"	f
startify#session_list_as_string	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_list_as_string(lead, ...) abort$/;"	f
startify#session_load	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_load(...) abort$/;"	f
startify#session_save	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_save(bang, ...) abort$/;"	f
startify#session_write	plugged/vim-startify/autoload/startify.vim	/^function! startify#session_write(spath)$/;"	f
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:MirrorToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:PythonCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:ShellCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TabStopToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:TransformationToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VimLCodeToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream):$/;"	m	class:VisualToken
starts_here	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^    def starts_here(cls, stream, chars=r'{}\\$`'):$/;"	m	class:EscapeCharToken
starts_with	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:starts_with(text, expr, lnum)$/;"	f
starts_with	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:starts_with(str, prefix) abort$/;"	f
startswith	plugged/vim-rails/autoload/rails.vim	/^function! s:startswith(string,prefix)$/;"	f
startup_load_bookmarks	plugged/vim-bookmarks/plugin/bookmark.vim	/^function! s:startup_load_bookmarks(file)$/;"	f
stat	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^import stat$/;"	i
statistics	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^    import statistics$/;"	i
status	autoload/plug.vim	/^function! s:status()$/;"	f
status	plugged/deoplete-jedi/tests/test.py	/^    status = status_labels[cmp(float(change), 0.0)]$/;"	v
status_iterator	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def status_iterator(self, iterable, summary, colorfunc=darkgreen, length=0,$/;"	m	class:Sphinx
status_labels	plugged/deoplete-jedi/tests/test.py	/^status_labels = {-1: 'down', 0: 'unchanged', 1: 'up'}$/;"	v
status_load	autoload/plug.vim	/^function! s:status_load(lnum)$/;"	f
status_update	autoload/plug.vim	/^function! s:status_update() range$/;"	f
stdev	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^    stdev = None$/;"	v
stdev	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^    stdev = statistics.stdev$/;"	v
stdout	plugged/tmux-complete.vim/autoload/asyncomplete/sources/tmuxcomplete.vim	/^function! s:stdout(params, id, data, event) abort$/;"	f
stepmatch	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:stepmatch(receiver,target)$/;"	f
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSameLine
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSameLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_DelSecondLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine1
steps	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^    steps = ($/;"	v	class:MovePosition_InsSameLine2
steps	plugged/vim-polyglot/ftplugin/cucumber.vim	/^function! s:steps(lnum)$/;"	f
still_have_issues	plugged/deoplete.nvim/autoload/health/deoplete.vim	/^function! s:still_have_issues() abort$/;"	f
stl	plugged/vim-airline/t/builder.vim	/^    let stl = s:builder.build()$/;"	v
stl	plugged/vim-airline/t/extensions_default.vim	/^    let stl = s:builder.build()$/;"	v
stocks	plugged/deoplete-jedi/tests/test.py	/^stocks = csv.reader(open('stocks.csv', 'rb'))$/;"	v
stop_server	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def stop_server(self):$/;"	m	class:Source
store	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^def store(key, value):$/;"	f
store	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:store(targets) abort$/;"	f
str	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:str(longsig, full) abort dict$/;"	f
strchars	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
stream_read	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^def stream_read(pipe):$/;"	f
stream_write	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^def stream_write(pipe, obj):$/;"	f
strfmt	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! s:strfmt() abort dict$/;"	f
strfmt	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! s:strfmt() abort dict$/;"	f
string	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^import string$/;"	i
string	plugged/vim-polyglot/ftplugin/ocaml.vim	/^import string$/;"	m
string	plugged/vim-snippets/pythonx/vimsnippets.py	/^import string, vim$/;"	i
strip	plugged/alchemist.vim/after/plugin/alchemist.vim	/^function! s:strip(input_string)$/;"	f
strip	plugged/alchemist.vim/autoload/elixircomplete.vim	/^function! s:strip(input_string)$/;"	f
strip	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:strip(str)$/;"	f
strip	plugged/vim-devicons/plugin/webdevicons.vim	/^function! s:strip(input)$/;"	f
stripComment	plugged/vim-polyglot/indent/haskell.vim	/^function! s:stripComment(line)$/;"	f
strip_color	plugged/vim-polyglot/autoload/elm/util.vim	/^fun! s:strip_color(msg) abort$/;"	f
strip_decor	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^def strip_decor(source):$/;"	f
strip_dot	plugged/alchemist.vim/autoload/elixircomplete.vim	/^function! s:strip_dot(input_string)$/;"	f
strip_namespace_and_macro_chars	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:strip_namespace_and_macro_chars(word)$/;"	f
strip_trailing_new_line	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:strip_trailing_new_line(line) abort$/;"	f
strip_white_space	plugged/vim-commentary/plugin/commentary.vim	/^function! s:strip_white_space(l,r,line) abort$/;"	f
strpart	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:strpart(s, i, l)$/;"	f
struct	plugged/alchemist.vim/elixir_sense.py	/^import struct$/;"	i
struct	plugged/alchemist.vim/erl_terms.py	/^import struct$/;"	i
struct	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^import struct$/;"	i
strwidth	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def strwidth(string):$/;"	f
strwidthpart	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart_reverse	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
stylesheetEdit	plugged/vim-rails/autoload/rails.vim	/^function! s:stylesheetEdit(cmd,...) abort$/;"	f
stylesheetList	plugged/vim-rails/autoload/rails.vim	/^function! s:stylesheetList(A, L, P) abort$/;"	f
sub	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
sub	plugged/vim-rails/autoload/rails.vim	/^function! s:sub(str,pat,rep)$/;"	f
subprocess	plugged/alchemist.vim/elixir_sense.py	/^import subprocess, shlex$/;"	i
subprocess	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^import subprocess$/;"	i
subprocess	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^import subprocess$/;"	i
subprocess	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^import subprocess$/;"	i
subprocess	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^import subprocess$/;"	i
subprocess	plugged/far.vim/rplugin/python3/far/sources/shell.py	/^import subprocess$/;"	i
subprocess	plugged/ultisnips/test/vim_interface.py	/^import subprocess$/;"	i
subprocess	plugged/ultisnips/test/vim_test_case.py	/^import subprocess$/;"	i
subprocess	plugged/ultisnips/test_all.py	/^import subprocess$/;"	i
substitute_last	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_path_separator	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
suffix	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            suffix = '.' + opts.suffix,$/;"	v
suffix	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:suffix(left, suffix)$/;"	f
suffixes	plugged/vim-rails/autoload/rails.vim	/^function! s:suffixes(type) abort$/;"	f
suite	plugged/vim-test/spec/fixtures/commontest/test_SUITE.erl	/^suite() ->$/;"	f	module:test_SUITE
suite.addition	plugged/vim-test/spec/fixtures/themis/math.vim	/^function! s:suite.addition() abort$/;"	f
suite.custom_option	plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^function! s:suite.custom_option() abort$/;"	f
suite.custom_source	plugged/deoplete.nvim/test/autoload/deoplete/custom.vim	/^function! s:suite.custom_source() abort$/;"	f
suite.subtraction	plugged/vim-test/spec/fixtures/themis/math.vim	/^function! s:suite.subtraction() abort$/;"	f
suite.vimoption2python	plugged/deoplete.nvim/test/autoload/deoplete/util.vim	/^function! s:suite.vimoption2python() abort$/;"	f
summary	plugged/vim-gitgutter/test/runner.vim	/^let summary = [$/;"	v
supertab_close_preview	plugged/supertab/plugin/supertab.vim	/^    augroup supertab_close_preview$/;"	a
supported_image_types	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    supported_image_types = ['image\/png', 'image\/gif', 'image\/jpeg',$/;"	v	class:AppleHelpBuilder
supported_image_types	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    supported_image_types = []$/;"	v	class:Builder
surroundings	plugged/vim-commentary/plugin/commentary.vim	/^function! s:surroundings() abort$/;"	f
suspend_proxy_edits	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def suspend_proxy_edits():$/;"	f
suspend_proxy_edits	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.buffer_proxy import use_proxy_buffer, suspend_proxy_edits$/;"	i
sw	plugged/vim-polyglot/autoload/elixir/indent.vim	/^function! s:sw()$/;"	f
sw	plugged/vim-polyglot/indent/caddyfile.vim	/^	function! s:sw()$/;"	f
sw	plugged/vim-polyglot/indent/cython.vim	/^    function! s:sw()$/;"	f
sw	plugged/vim-polyglot/indent/go.vim	/^  func s:sw()$/;"	f
sw	plugged/vim-polyglot/indent/javascript.vim	/^  function s:sw()$/;"	f
sw	plugged/vim-polyglot/indent/python.vim	/^    function! s:sw()$/;"	f
sw	plugged/vim-polyglot/indent/typescript.vim	/^  function s:sw()$/;"	f
swap	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^function! s:swap(dict) abort$/;"	f
switch_in	autoload/plug.vim	/^function! s:switch_in()$/;"	f
switch_out	autoload/plug.vim	/^function! s:switch_out(...)$/;"	f
syn	plugged/vim-polyglot/indent/cucumber.vim	/^function! s:syn(lnum)$/;"	f
syn_at	plugged/vim-polyglot/indent/typescript.vim	/^function s:syn_at(l,c)$/;"	f
syn_id_name	plugged/vim-polyglot/indent/clojure.vim	/^	function! s:syn_id_name()$/;"	f
sync_active_winnr	plugged/vim-airline/autoload/airline/extensions.vim	/^function! s:sync_active_winnr()$/;"	f
sync_value	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:sync_value(s)$/;"	f
synid	plugged/vim-endwise/plugin/endwise.vim	/^function! s:synid()$/;"	f
synid	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:synid() abort$/;"	f
synid	plugged/vim-ruby/ftplugin/ruby.vim	/^function! s:synid() abort$/;"	f
syntax	autoload/plug.vim	/^function! s:syntax()$/;"	f
syntax	plugged/vim-test/autoload/test/ruby/minitest.vim	/^function! s:syntax(file) abort$/;"	f
syntax_available	plugged/vim-polyglot/syntax/vue.vim	/^function! s:syntax_available(language)$/;"	f
syntax_from_block	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! s:syntax_from_block(block) "{{{$/;"	f
syntax_highlight	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! s:syntax_highlight(line)$/;"	f
syntax_include	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:syntax_include(filetype)$/;"	f
syntax_keyword	plugged/vim-polyglot/syntax/clojure.vim	/^function! s:syntax_keyword(dict)$/;"	f
sys	plugged/alchemist.vim/elixir_sense_client	/^import os, sys, getopt$/;"	i
sys	plugged/alchemist.vim/rplugin/python3/deoplete/sources/alchemist.py	/^import os, sys$/;"	i
sys	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^import sys$/;"	i
sys	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^            '-c', r'import sys; print("\\n".join(sys.path))',$/;"	i
sys	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^import sys$/;"	i
sys	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/utils.py	/^import sys$/;"	i
sys	plugged/deoplete-jedi/tests/sphinx-3000.py	/^import sys$/;"	i
sys	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^import sys$/;"	i
sys	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^import sys$/;"	i
sys	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/matcher_cpsm.py	/^import sys$/;"	i
sys	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^import sys$/;"	i
sys	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^import sys$/;"	i
sys	plugged/deoplete.nvim/test/conftest.py	/^import sys$/;"	i
sys	plugged/ultisnips/pythonx/UltiSnips/_diff.py	/^import sys$/;"	i
sys	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^import sys$/;"	i
sys	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^import sys$/;"	i
sys	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^import sys$/;"	i
sys	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^import sys$/;"	i
sys	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^import sys$/;"	i
sys	plugged/ultisnips/test/constant.py	/^import sys$/;"	i
sys	plugged/ultisnips/test/test_Plugin.py	/^import sys$/;"	i
sys	plugged/ultisnips/test/vim_interface.py	/^        post_config.append('import vim, sys')$/;"	i
sys	plugged/ultisnips/test_all.py	/^    import sys$/;"	i
sys	plugged/ultisnips/utils/get_tm_snippets.py	/^    import sys$/;"	i
sys	plugged/vim-easytags/misc/easytags/highlight.py	/^import sys$/;"	i
sys	plugged/vim-easytags/misc/easytags/normalize-tags.py	/^import os, sys, time$/;"	i
sys	plugged/vim-easytags/misc/easytags/why-so-slow.py	/^import os, sys$/;"	i
sys	plugged/vim-notes/misc/notes/search-notes.py	/^import sys$/;"	i
sys_path	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^def sys_path(refresh=False):$/;"	f
syslog	plugged/alchemist.vim/elixir_sense.py	/^import syslog$/;"	i
system	autoload/plug.vim	/^function! s:system(cmd, ...)$/;"	f
system	plugged/vim-polyglot/autoload/rust.vim	/^function! s:system(pwd, cmd)$/;"	f
system	plugged/vim-polyglot/autoload/vital/_crystal/Process.vim	/^function! s:system(str, ...) abort$/;"	f
system_chomp	autoload/plug.vim	/^function! s:system_chomp(...)$/;"	f
system_message	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def system_message(self, level, message, *children, **kwargs):$/;"	m	class:AutodocReporter
s{1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s{1$/;"	m
s|1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s|1$/;"	m
s}1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s}1$/;"	m
s~1	plugged/vim-easymotion/t/smartsign_spec.vim	/^        normal s~1$/;"	m
t	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map t <Plug>(easymotion-bd-t)$/;"	m
t	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map t <Plug>(easymotion-t)$/;"	m
t/	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map t\/ <Plug>(easymotion-tn)$/;"	m
t;	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal t;$/;"	m
t;a	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal t;a$/;"	m
tH	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal tH$/;"	m
tab2spacelen	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:tab2spacelen(line, col_num) abort$/;"	f
tabline_evaluated_length	plugged/vim-airline/autoload/airline/extensions/tabline/builder.vim	/^function! s:tabline_evaluated_length(tabline)$/;"	f
tabular#DoGTabularize	plugged/tabular/autoload/tabular.vim	/^function! tabular#DoGTabularize()$/;"	f
tabular#ElementFormatPattern	plugged/tabular/autoload/tabular.vim	/^function! tabular#ElementFormatPattern()$/;"	f
tabular#PipeRange	plugged/tabular/autoload/tabular.vim	/^function! tabular#PipeRange(includepat, ...) range$/;"	f
tabular#PipeRangeWithOptions	plugged/tabular/autoload/tabular.vim	/^function! tabular#PipeRangeWithOptions(includepat, filterlist, options) range$/;"	f
tabular#SplitDelimUnitTest	plugged/tabular/autoload/tabular.vim	/^function! tabular#SplitDelimUnitTest()$/;"	f
tabular#TabularizeStrings	plugged/tabular/autoload/tabular.vim	/^function! tabular#TabularizeStrings(strings, delim, ...)$/;"	f
tabular_col_spec	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class tabular_col_spec(nodes.Element):$/;"	c
tag_under_cursor	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:tag_under_cursor() " {{{2$/;"	f
tagbar#CloseWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#OpenWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#ToggleWindow	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow(...) abort$/;"	f
tagbar#autoopen	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#currentfile	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#currentfile() abort$/;"	f
tagbar#currenttag	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#debug#enabled	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#enabled() abort$/;"	f
tagbar#debug#log	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#log(msg) abort$/;"	f
tagbar#debug#log_ctags_output	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#log_ctags_output(output) abort$/;"	f
tagbar#debug#start_debug	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#start_debug(...) abort$/;"	f
tagbar#debug#stop_debug	plugged/tagbar/autoload/tagbar/debug.vim	/^function! tagbar#debug#stop_debug() abort$/;"	f
tagbar#gettypeconfig	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
tagbar#highlighttag	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#highlighttag(openfolds, force) abort$/;"	f
tagbar#inspect	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#inspect(var) abort$/;"	f
tagbar#is_paused	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#is_paused() abort$/;"	f
tagbar#prototypes#basetag#new	plugged/tagbar/autoload/tagbar/prototypes/basetag.vim	/^function! tagbar#prototypes#basetag#new(name) abort$/;"	f
tagbar#prototypes#fileinfo#new	plugged/tagbar/autoload/tagbar/prototypes/fileinfo.vim	/^function! tagbar#prototypes#fileinfo#new(fname, ftype, typeinfo) abort$/;"	f
tagbar#prototypes#kindheadertag#new	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! tagbar#prototypes#kindheadertag#new(name) abort$/;"	f
tagbar#prototypes#normaltag#new	plugged/tagbar/autoload/tagbar/prototypes/normaltag.vim	/^function! tagbar#prototypes#normaltag#new(name) abort$/;"	f
tagbar#prototypes#pseudotag#new	plugged/tagbar/autoload/tagbar/prototypes/pseudotag.vim	/^function! tagbar#prototypes#pseudotag#new(name) abort$/;"	f
tagbar#prototypes#splittag#new	plugged/tagbar/autoload/tagbar/prototypes/splittag.vim	/^function! tagbar#prototypes#splittag#new(name) abort$/;"	f
tagbar#prototypes#typeinfo#new	plugged/tagbar/autoload/tagbar/prototypes/typeinfo.vim	/^function! tagbar#prototypes#typeinfo#new(...) abort$/;"	f
tagbar#sorting#sort	plugged/tagbar/autoload/tagbar/sorting.vim	/^function! tagbar#sorting#sort(tags, compareby, compare_typeinfo) abort$/;"	f
tagbar#state#get_current_file	plugged/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#get_current_file(force_current) abort$/;"	f
tagbar#state#set_current_file	plugged/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#set_current_file(fileinfo) abort$/;"	f
tagbar#state#set_paused	plugged/tagbar/autoload/tagbar/state.vim	/^function! tagbar#state#set_paused() abort$/;"	f
tagbar#toggle_pause	plugged/tagbar/autoload/tagbar.vim	/^function! tagbar#toggle_pause() abort$/;"	f
tagbar#types#ctags#init	plugged/tagbar/autoload/tagbar/types/ctags.vim	/^function! tagbar#types#ctags#init(supported_types) abort$/;"	f
tagbar#types#uctags#init	plugged/tagbar/autoload/tagbar/types/uctags.vim	/^function! tagbar#types#uctags#init(supported_types) abort$/;"	f
tags_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:tags_sink(lines)$/;"	f
tagsfile	plugged/vim-easytags/misc/easytags/why-so-slow.py	/^    tagsfile = arg$/;"	v
tagsfile	plugged/vim-easytags/misc/easytags/why-so-slow.py	/^tagsfile = '~\/.vimtags'$/;"	v
take_while	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
take_while	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
target	plugged/vim-textobj-user/t/old-property-names.vim	/^function! s:target()$/;"	f
tb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal tb$/;"	m
tba	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal tba$/;"	m
tearDown	plugged/ultisnips/test/vim_test_case.py	/^    def tearDown(self):$/;"	m	class:VimTestCase
tearDown	plugged/vim-test/spec/fixtures/maven/MathTest.java	/^	protected void tearDown() throws Exception {$/;"	m	class:MathTest
tearDown	plugged/vim-test/spec/fixtures/maven/MathTestCase.java	/^	protected void tearDown() throws Exception {$/;"	m	class:MathTestCase
tearDown	plugged/vim-test/spec/fixtures/maven/MathTests.java	/^	protected void tearDown() throws Exception {$/;"	m	class:MathTests
tearDown	plugged/vim-test/spec/fixtures/maven/TestMath.java	/^	protected void tearDown() throws Exception {$/;"	m	class:TestMath
teardownMappings	plugged/vim-endwise/plugin/endwise.vim	/^function! s:teardownMappings()$/;"	f
tempfile	plugged/alchemist.vim/elixir_sense.py	/^import tempfile$/;"	i
tempfile	plugged/far.vim/rplugin/python3/far/sources/shell.py	/^import tempfile$/;"	i
tempfile	plugged/ultisnips/pythonx/UltiSnips/text_objects/_shell_code.py	/^import tempfile$/;"	i
tempfile	plugged/ultisnips/test/vim_interface.py	/^import tempfile$/;"	i
tempfile	plugged/ultisnips/test/vim_test_case.py	/^import tempfile$/;"	i
template_callback	plugged/vim-notes/autoload/xolox/notes/html.vim	/^function! s:template_callback(variables) " {{{1$/;"	f
termsep	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class termsep(nodes.Structural, nodes.Element):$/;"	c
tern_col	plugged/vim-polyglot/indent/typescript.vim	/^function s:tern_col(p)$/;"	f
tern_skip	plugged/vim-polyglot/indent/typescript.vim	/^function s:tern_skip(p)$/;"	f
terraformalign	plugged/vim-polyglot/after/ftplugin/terraform.vim	/^  function! s:terraformalign()$/;"	f
test	plugged/emmet-vim/unittest.vim	/^function! s:test(...)$/;"	f
test	plugged/vim-test/spec/fixtures/minitest/rails_unit_test.rb	/^  def self.test(name, &block)$/;"	F	class:MathTest
test	plugged/vim-test/spec/fixtures/tap/test/normal.js	/^var test = require('tape');$/;"	v
test	plugged/vim-test/spec/fixtures/tap/tests/normal.js	/^var test = require('tape');$/;"	v
test#base#build_args	plugged/vim-test/autoload/test/base.vim	/^function! test#base#build_args(runner, args) abort$/;"	f
test#base#build_position	plugged/vim-test/autoload/test/base.vim	/^function! test#base#build_position(runner, type, position) abort$/;"	f
test#base#escape_regex	plugged/vim-test/autoload/test/base.vim	/^function! test#base#escape_regex(string) abort$/;"	f
test#base#executable	plugged/vim-test/autoload/test/base.vim	/^function! test#base#executable(runner) abort$/;"	f
test#base#file_exists	plugged/vim-test/autoload/test/base.vim	/^function! test#base#file_exists(file) abort$/;"	f
test#base#nearest_test	plugged/vim-test/autoload/test/base.vim	/^function! test#base#nearest_test(position, patterns) abort$/;"	f
test#base#no_colors	plugged/vim-test/autoload/test/base.vim	/^function! test#base#no_colors() abort$/;"	f
test#base#options	plugged/vim-test/autoload/test/base.vim	/^function! test#base#options(runner, ...) abort$/;"	f
test#base#test_file	plugged/vim-test/autoload/test/base.vim	/^function! test#base#test_file(runner, file) abort$/;"	f
test#clojure#fireplacetest#build_args	plugged/vim-test/autoload/test/clojure/fireplacetest.vim	/^function! test#clojure#fireplacetest#build_args(args) abort$/;"	f
test#clojure#fireplacetest#build_position	plugged/vim-test/autoload/test/clojure/fireplacetest.vim	/^function! test#clojure#fireplacetest#build_position(type, position) abort$/;"	f
test#clojure#fireplacetest#executable	plugged/vim-test/autoload/test/clojure/fireplacetest.vim	/^function! test#clojure#fireplacetest#executable() abort$/;"	f
test#clojure#fireplacetest#test_file	plugged/vim-test/autoload/test/clojure/fireplacetest.vim	/^function! test#clojure#fireplacetest#test_file(file) abort$/;"	f
test#crystal#crystalspec#build_args	plugged/vim-test/autoload/test/crystal/crystalspec.vim	/^function! test#crystal#crystalspec#build_args(args) abort$/;"	f
test#crystal#crystalspec#build_position	plugged/vim-test/autoload/test/crystal/crystalspec.vim	/^function! test#crystal#crystalspec#build_position(type, position) abort$/;"	f
test#crystal#crystalspec#executable	plugged/vim-test/autoload/test/crystal/crystalspec.vim	/^function! test#crystal#crystalspec#executable() abort$/;"	f
test#crystal#crystalspec#test_file	plugged/vim-test/autoload/test/crystal/crystalspec.vim	/^function! test#crystal#crystalspec#test_file(file) abort$/;"	f
test#csharp#dotnettest#build_args	plugged/vim-test/autoload/test/csharp/dotnettest.vim	/^function! test#csharp#dotnettest#build_args(args) abort$/;"	f
test#csharp#dotnettest#build_position	plugged/vim-test/autoload/test/csharp/dotnettest.vim	/^function! test#csharp#dotnettest#build_position(type, position) abort$/;"	f
test#csharp#dotnettest#executable	plugged/vim-test/autoload/test/csharp/dotnettest.vim	/^function! test#csharp#dotnettest#executable() abort$/;"	f
test#csharp#dotnettest#test_file	plugged/vim-test/autoload/test/csharp/dotnettest.vim	/^function! test#csharp#dotnettest#test_file(file) abort$/;"	f
test#csharp#get_project_path	plugged/vim-test/autoload/test/csharp.vim	/^function! test#csharp#get_project_path(file) abort$/;"	f
test#csharp#xunit#build_args	plugged/vim-test/autoload/test/csharp/xunit.vim	/^function! test#csharp#xunit#build_args(args) abort$/;"	f
test#csharp#xunit#build_position	plugged/vim-test/autoload/test/csharp/xunit.vim	/^function! test#csharp#xunit#build_position(type, position) abort$/;"	f
test#csharp#xunit#executable	plugged/vim-test/autoload/test/csharp/xunit.vim	/^function! test#csharp#xunit#executable() abort$/;"	f
test#csharp#xunit#test_file	plugged/vim-test/autoload/test/csharp/xunit.vim	/^function! test#csharp#xunit#test_file(file) abort$/;"	f
test#determine_runner	plugged/vim-test/autoload/test.vim	/^function! test#determine_runner(file) abort$/;"	f
test#elixir#espec#build_args	plugged/vim-test/autoload/test/elixir/espec.vim	/^function! test#elixir#espec#build_args(args) abort$/;"	f
test#elixir#espec#build_position	plugged/vim-test/autoload/test/elixir/espec.vim	/^function! test#elixir#espec#build_position(type, position) abort$/;"	f
test#elixir#espec#executable	plugged/vim-test/autoload/test/elixir/espec.vim	/^function! test#elixir#espec#executable() abort$/;"	f
test#elixir#espec#test_file	plugged/vim-test/autoload/test/elixir/espec.vim	/^function! test#elixir#espec#test_file(file) abort$/;"	f
test#elixir#exunit#build_args	plugged/vim-test/autoload/test/elixir/exunit.vim	/^function! test#elixir#exunit#build_args(args) abort$/;"	f
test#elixir#exunit#build_position	plugged/vim-test/autoload/test/elixir/exunit.vim	/^function! test#elixir#exunit#build_position(type, position) abort$/;"	f
test#elixir#exunit#executable	plugged/vim-test/autoload/test/elixir/exunit.vim	/^function! test#elixir#exunit#executable() abort$/;"	f
test#elixir#exunit#test_file	plugged/vim-test/autoload/test/elixir/exunit.vim	/^function! test#elixir#exunit#test_file(file) abort$/;"	f
test#elm#elmtest#build_args	plugged/vim-test/autoload/test/elm/elmtest.vim	/^function! test#elm#elmtest#build_args(args) abort$/;"	f
test#elm#elmtest#build_position	plugged/vim-test/autoload/test/elm/elmtest.vim	/^function! test#elm#elmtest#build_position(type, position) abort$/;"	f
test#elm#elmtest#executable	plugged/vim-test/autoload/test/elm/elmtest.vim	/^function! test#elm#elmtest#executable() abort$/;"	f
test#elm#elmtest#test_file	plugged/vim-test/autoload/test/elm/elmtest.vim	/^function! test#elm#elmtest#test_file(file) abort$/;"	f
test#erlang#commontest#build_args	plugged/vim-test/autoload/test/erlang/commontest.vim	/^function! test#erlang#commontest#build_args(args) abort$/;"	f
test#erlang#commontest#build_position	plugged/vim-test/autoload/test/erlang/commontest.vim	/^function! test#erlang#commontest#build_position(type, position) abort$/;"	f
test#erlang#commontest#executable	plugged/vim-test/autoload/test/erlang/commontest.vim	/^function! test#erlang#commontest#executable() abort$/;"	f
test#erlang#commontest#test_file	plugged/vim-test/autoload/test/erlang/commontest.vim	/^function! test#erlang#commontest#test_file(file) abort$/;"	f
test#erlang#patterns	plugged/vim-test/autoload/test/erlang.vim	/^let test#erlang#patterns = {$/;"	v
test#execute	plugged/vim-test/autoload/test.vim	/^function! test#execute(runner, args, ...) abort$/;"	f
test#exists	plugged/vim-test/autoload/test.vim	/^function! test#exists() abort$/;"	f
test#get_runners	plugged/vim-test/autoload/test.vim	/^function! test#get_runners() abort$/;"	f
test#go#ginkgo#build_args	plugged/vim-test/autoload/test/go/ginkgo.vim	/^function! test#go#ginkgo#build_args(args) abort$/;"	f
test#go#ginkgo#build_position	plugged/vim-test/autoload/test/go/ginkgo.vim	/^function! test#go#ginkgo#build_position(type, position) abort$/;"	f
test#go#ginkgo#executable	plugged/vim-test/autoload/test/go/ginkgo.vim	/^function! test#go#ginkgo#executable() abort$/;"	f
test#go#ginkgo#patterns	plugged/vim-test/autoload/test/go/ginkgo.vim	/^let test#go#ginkgo#patterns = {$/;"	v
test#go#ginkgo#test_file	plugged/vim-test/autoload/test/go/ginkgo.vim	/^function! test#go#ginkgo#test_file(file) abort$/;"	f
test#go#gotest#build_args	plugged/vim-test/autoload/test/go/gotest.vim	/^function! test#go#gotest#build_args(args) abort$/;"	f
test#go#gotest#build_position	plugged/vim-test/autoload/test/go/gotest.vim	/^function! test#go#gotest#build_position(type, position) abort$/;"	f
test#go#gotest#executable	plugged/vim-test/autoload/test/go/gotest.vim	/^function! test#go#gotest#executable() abort$/;"	f
test#go#gotest#test_file	plugged/vim-test/autoload/test/go/gotest.vim	/^function! test#go#gotest#test_file(file) abort$/;"	f
test#go#patterns	plugged/vim-test/autoload/test/go.vim	/^let test#go#patterns = {$/;"	v
test#go#test_file	plugged/vim-test/autoload/test/go.vim	/^function! test#go#test_file(runner, file_pattern, file) abort$/;"	f
test#java#maventest#build_args	plugged/vim-test/autoload/test/java/maventest.vim	/^function! test#java#maventest#build_args(args) abort$/;"	f
test#java#maventest#build_position	plugged/vim-test/autoload/test/java/maventest.vim	/^function! test#java#maventest#build_position(type, position) abort$/;"	f
test#java#maventest#executable	plugged/vim-test/autoload/test/java/maventest.vim	/^function! test#java#maventest#executable() abort$/;"	f
test#java#maventest#test_file	plugged/vim-test/autoload/test/java/maventest.vim	/^function! test#java#maventest#test_file(file) abort$/;"	f
test#java#patterns	plugged/vim-test/autoload/test/java.vim	/^let test#java#patterns = {$/;"	v
test#javascript#ava#build_args	plugged/vim-test/autoload/test/javascript/ava.vim	/^function! test#javascript#ava#build_args(args) abort$/;"	f
test#javascript#ava#build_position	plugged/vim-test/autoload/test/javascript/ava.vim	/^function! test#javascript#ava#build_position(type, position) abort$/;"	f
test#javascript#ava#executable	plugged/vim-test/autoload/test/javascript/ava.vim	/^function! test#javascript#ava#executable() abort$/;"	f
test#javascript#ava#test_file	plugged/vim-test/autoload/test/javascript/ava.vim	/^function! test#javascript#ava#test_file(file) abort$/;"	f
test#javascript#cucumberjs#build_args	plugged/vim-test/autoload/test/javascript/cucumberjs.vim	/^function! test#javascript#cucumberjs#build_args(args) abort$/;"	f
test#javascript#cucumberjs#build_position	plugged/vim-test/autoload/test/javascript/cucumberjs.vim	/^function! test#javascript#cucumberjs#build_position(type, position) abort$/;"	f
test#javascript#cucumberjs#executable	plugged/vim-test/autoload/test/javascript/cucumberjs.vim	/^function! test#javascript#cucumberjs#executable() abort$/;"	f
test#javascript#cucumberjs#test_file	plugged/vim-test/autoload/test/javascript/cucumberjs.vim	/^function! test#javascript#cucumberjs#test_file(file) abort$/;"	f
test#javascript#has_package	plugged/vim-test/autoload/test/javascript.vim	/^function! test#javascript#has_package(package) abort$/;"	f
test#javascript#intern#build_args	plugged/vim-test/autoload/test/javascript/intern.vim	/^function! test#javascript#intern#build_args(args) abort$/;"	f
test#javascript#intern#build_position	plugged/vim-test/autoload/test/javascript/intern.vim	/^function! test#javascript#intern#build_position(type, position) abort$/;"	f
test#javascript#intern#executable	plugged/vim-test/autoload/test/javascript/intern.vim	/^function! test#javascript#intern#executable() abort$/;"	f
test#javascript#intern#test_file	plugged/vim-test/autoload/test/javascript/intern.vim	/^function! test#javascript#intern#test_file(file) abort$/;"	f
test#javascript#jasmine#build_args	plugged/vim-test/autoload/test/javascript/jasmine.vim	/^function! test#javascript#jasmine#build_args(args) abort$/;"	f
test#javascript#jasmine#build_position	plugged/vim-test/autoload/test/javascript/jasmine.vim	/^function! test#javascript#jasmine#build_position(type, position) abort$/;"	f
test#javascript#jasmine#executable	plugged/vim-test/autoload/test/javascript/jasmine.vim	/^function! test#javascript#jasmine#executable() abort$/;"	f
test#javascript#jasmine#test_file	plugged/vim-test/autoload/test/javascript/jasmine.vim	/^function! test#javascript#jasmine#test_file(file) abort$/;"	f
test#javascript#jest#build_args	plugged/vim-test/autoload/test/javascript/jest.vim	/^function! test#javascript#jest#build_args(args) abort$/;"	f
test#javascript#jest#build_position	plugged/vim-test/autoload/test/javascript/jest.vim	/^function! test#javascript#jest#build_position(type, position) abort$/;"	f
test#javascript#jest#executable	plugged/vim-test/autoload/test/javascript/jest.vim	/^function! test#javascript#jest#executable() abort$/;"	f
test#javascript#jest#test_file	plugged/vim-test/autoload/test/javascript/jest.vim	/^function! test#javascript#jest#test_file(file) abort$/;"	f
test#javascript#karma#build_args	plugged/vim-test/autoload/test/javascript/karma.vim	/^function! test#javascript#karma#build_args(args) abort$/;"	f
test#javascript#karma#build_position	plugged/vim-test/autoload/test/javascript/karma.vim	/^function! test#javascript#karma#build_position(type, position) abort$/;"	f
test#javascript#karma#executable	plugged/vim-test/autoload/test/javascript/karma.vim	/^function! test#javascript#karma#executable() abort$/;"	f
test#javascript#karma#test_file	plugged/vim-test/autoload/test/javascript/karma.vim	/^function! test#javascript#karma#test_file(file) abort$/;"	f
test#javascript#lab#build_args	plugged/vim-test/autoload/test/javascript/lab.vim	/^function! test#javascript#lab#build_args(args) abort$/;"	f
test#javascript#lab#build_position	plugged/vim-test/autoload/test/javascript/lab.vim	/^function! test#javascript#lab#build_position(type, position) abort$/;"	f
test#javascript#lab#executable	plugged/vim-test/autoload/test/javascript/lab.vim	/^function! test#javascript#lab#executable() abort$/;"	f
test#javascript#lab#test_file	plugged/vim-test/autoload/test/javascript/lab.vim	/^function! test#javascript#lab#test_file(file) abort$/;"	f
test#javascript#mocha#build_args	plugged/vim-test/autoload/test/javascript/mocha.vim	/^function! test#javascript#mocha#build_args(args) abort$/;"	f
test#javascript#mocha#build_position	plugged/vim-test/autoload/test/javascript/mocha.vim	/^function! test#javascript#mocha#build_position(type, position) abort$/;"	f
test#javascript#mocha#executable	plugged/vim-test/autoload/test/javascript/mocha.vim	/^function! test#javascript#mocha#executable() abort$/;"	f
test#javascript#mocha#test_file	plugged/vim-test/autoload/test/javascript/mocha.vim	/^function! test#javascript#mocha#test_file(file) abort$/;"	f
test#javascript#patterns	plugged/vim-test/autoload/test/javascript.vim	/^let test#javascript#patterns = {$/;"	v
test#javascript#tap#build_args	plugged/vim-test/autoload/test/javascript/tap.vim	/^function! test#javascript#tap#build_args(args) abort$/;"	f
test#javascript#tap#build_position	plugged/vim-test/autoload/test/javascript/tap.vim	/^function! test#javascript#tap#build_position(type, position) abort$/;"	f
test#javascript#tap#executable	plugged/vim-test/autoload/test/javascript/tap.vim	/^function! test#javascript#tap#executable() abort$/;"	f
test#javascript#tap#test_file	plugged/vim-test/autoload/test/javascript/tap.vim	/^function! test#javascript#tap#test_file(file) abort$/;"	f
test#javascript#webdriverio#build_args	plugged/vim-test/autoload/test/javascript/webdriverio.vim	/^function! test#javascript#webdriverio#build_args(args) abort$/;"	f
test#javascript#webdriverio#build_position	plugged/vim-test/autoload/test/javascript/webdriverio.vim	/^function! test#javascript#webdriverio#build_position(type, position) abort$/;"	f
test#javascript#webdriverio#executable	plugged/vim-test/autoload/test/javascript/webdriverio.vim	/^function! test#javascript#webdriverio#executable() abort$/;"	f
test#javascript#webdriverio#test_file	plugged/vim-test/autoload/test/javascript/webdriverio.vim	/^function! test#javascript#webdriverio#test_file(file) abort$/;"	f
test#lua#busted#build_args	plugged/vim-test/autoload/test/lua/busted.vim	/^function! test#lua#busted#build_args(args) abort$/;"	f
test#lua#busted#build_position	plugged/vim-test/autoload/test/lua/busted.vim	/^function! test#lua#busted#build_position(type, position) abort$/;"	f
test#lua#busted#executable	plugged/vim-test/autoload/test/lua/busted.vim	/^function! test#lua#busted#executable() abort$/;"	f
test#lua#busted#test_file	plugged/vim-test/autoload/test/lua/busted.vim	/^function! test#lua#busted#test_file(file) abort$/;"	f
test#perl#prove#build_args	plugged/vim-test/autoload/test/perl/prove.vim	/^function! test#perl#prove#build_args(args) abort$/;"	f
test#perl#prove#build_position	plugged/vim-test/autoload/test/perl/prove.vim	/^function! test#perl#prove#build_position(type, position) abort$/;"	f
test#perl#prove#executable	plugged/vim-test/autoload/test/perl/prove.vim	/^function! test#perl#prove#executable() abort$/;"	f
test#perl#prove#test_file	plugged/vim-test/autoload/test/perl/prove.vim	/^function! test#perl#prove#test_file(file) abort$/;"	f
test#php#behat#build_args	plugged/vim-test/autoload/test/php/behat.vim	/^function! test#php#behat#build_args(args) abort$/;"	f
test#php#behat#build_position	plugged/vim-test/autoload/test/php/behat.vim	/^function! test#php#behat#build_position(type, position) abort$/;"	f
test#php#behat#executable	plugged/vim-test/autoload/test/php/behat.vim	/^function! test#php#behat#executable() abort$/;"	f
test#php#behat#test_file	plugged/vim-test/autoload/test/php/behat.vim	/^function! test#php#behat#test_file(file) abort$/;"	f
test#php#codeception#build_args	plugged/vim-test/autoload/test/php/codeception.vim	/^function! test#php#codeception#build_args(args) abort$/;"	f
test#php#codeception#build_position	plugged/vim-test/autoload/test/php/codeception.vim	/^function! test#php#codeception#build_position(type, position) abort$/;"	f
test#php#codeception#executable	plugged/vim-test/autoload/test/php/codeception.vim	/^function! test#php#codeception#executable() abort$/;"	f
test#php#codeception#test_file	plugged/vim-test/autoload/test/php/codeception.vim	/^function! test#php#codeception#test_file(file) abort$/;"	f
test#php#dusk#build_args	plugged/vim-test/autoload/test/php/dusk.vim	/^function! test#php#dusk#build_args(args) abort$/;"	f
test#php#dusk#build_position	plugged/vim-test/autoload/test/php/dusk.vim	/^function! test#php#dusk#build_position(type, position) abort$/;"	f
test#php#dusk#executable	plugged/vim-test/autoload/test/php/dusk.vim	/^function! test#php#dusk#executable() abort$/;"	f
test#php#dusk#test_file	plugged/vim-test/autoload/test/php/dusk.vim	/^function! test#php#dusk#test_file(file) abort$/;"	f
test#php#kahlan#build_args	plugged/vim-test/autoload/test/php/kahlan.vim	/^function! test#php#kahlan#build_args(args) abort$/;"	f
test#php#kahlan#build_position	plugged/vim-test/autoload/test/php/kahlan.vim	/^function! test#php#kahlan#build_position(type, position) abort$/;"	f
test#php#kahlan#executable	plugged/vim-test/autoload/test/php/kahlan.vim	/^function! test#php#kahlan#executable() abort$/;"	f
test#php#kahlan#test_file	plugged/vim-test/autoload/test/php/kahlan.vim	/^function! test#php#kahlan#test_file(file) abort$/;"	f
test#php#patterns	plugged/vim-test/autoload/test/php.vim	/^let test#php#patterns = {$/;"	v
test#php#peridot#build_args	plugged/vim-test/autoload/test/php/peridot.vim	/^function! test#php#peridot#build_args(args) abort$/;"	f
test#php#peridot#build_position	plugged/vim-test/autoload/test/php/peridot.vim	/^function! test#php#peridot#build_position(type, position) abort$/;"	f
test#php#peridot#executable	plugged/vim-test/autoload/test/php/peridot.vim	/^function! test#php#peridot#executable() abort$/;"	f
test#php#peridot#test_file	plugged/vim-test/autoload/test/php/peridot.vim	/^function! test#php#peridot#test_file(file) abort$/;"	f
test#php#phpspec#build_args	plugged/vim-test/autoload/test/php/phpspec.vim	/^function! test#php#phpspec#build_args(args) abort$/;"	f
test#php#phpspec#build_position	plugged/vim-test/autoload/test/php/phpspec.vim	/^function! test#php#phpspec#build_position(type, position) abort$/;"	f
test#php#phpspec#executable	plugged/vim-test/autoload/test/php/phpspec.vim	/^function! test#php#phpspec#executable() abort$/;"	f
test#php#phpspec#test_file	plugged/vim-test/autoload/test/php/phpspec.vim	/^function! test#php#phpspec#test_file(file) abort$/;"	f
test#php#phpunit#build_args	plugged/vim-test/autoload/test/php/phpunit.vim	/^function! test#php#phpunit#build_args(args) abort$/;"	f
test#php#phpunit#build_position	plugged/vim-test/autoload/test/php/phpunit.vim	/^function! test#php#phpunit#build_position(type, position) abort$/;"	f
test#php#phpunit#executable	plugged/vim-test/autoload/test/php/phpunit.vim	/^function! test#php#phpunit#executable() abort$/;"	f
test#php#phpunit#test_file	plugged/vim-test/autoload/test/php/phpunit.vim	/^function! test#php#phpunit#test_file(file) abort$/;"	f
test#python#djangotest#build_args	plugged/vim-test/autoload/test/python/djangotest.vim	/^function! test#python#djangotest#build_args(args) abort$/;"	f
test#python#djangotest#build_position	plugged/vim-test/autoload/test/python/djangotest.vim	/^function! test#python#djangotest#build_position(type, position) abort$/;"	f
test#python#djangotest#executable	plugged/vim-test/autoload/test/python/djangotest.vim	/^function! test#python#djangotest#executable() abort$/;"	f
test#python#djangotest#test_file	plugged/vim-test/autoload/test/python/djangotest.vim	/^function! test#python#djangotest#test_file(file) abort$/;"	f
test#python#nose#build_args	plugged/vim-test/autoload/test/python/nose.vim	/^function! test#python#nose#build_args(args) abort$/;"	f
test#python#nose#build_position	plugged/vim-test/autoload/test/python/nose.vim	/^function! test#python#nose#build_position(type, position) abort$/;"	f
test#python#nose#executable	plugged/vim-test/autoload/test/python/nose.vim	/^function! test#python#nose#executable() abort$/;"	f
test#python#nose#test_file	plugged/vim-test/autoload/test/python/nose.vim	/^function! test#python#nose#test_file(file) abort$/;"	f
test#python#nose2#build_args	plugged/vim-test/autoload/test/python/nose2.vim	/^function! test#python#nose2#build_args(args) abort$/;"	f
test#python#nose2#build_position	plugged/vim-test/autoload/test/python/nose2.vim	/^function! test#python#nose2#build_position(type, position) abort$/;"	f
test#python#nose2#executable	plugged/vim-test/autoload/test/python/nose2.vim	/^function! test#python#nose2#executable() abort$/;"	f
test#python#nose2#test_file	plugged/vim-test/autoload/test/python/nose2.vim	/^function! test#python#nose2#test_file(file) abort$/;"	f
test#python#patterns	plugged/vim-test/autoload/test/python.vim	/^let test#python#patterns = {$/;"	v
test#python#pytest#build_args	plugged/vim-test/autoload/test/python/pytest.vim	/^function! test#python#pytest#build_args(args) abort$/;"	f
test#python#pytest#build_position	plugged/vim-test/autoload/test/python/pytest.vim	/^function! test#python#pytest#build_position(type, position) abort$/;"	f
test#python#pytest#executable	plugged/vim-test/autoload/test/python/pytest.vim	/^function! test#python#pytest#executable() abort$/;"	f
test#python#pytest#test_file	plugged/vim-test/autoload/test/python/pytest.vim	/^function! test#python#pytest#test_file(file) abort$/;"	f
test#python#pyunit#build_args	plugged/vim-test/autoload/test/python/pyunit.vim	/^function! test#python#pyunit#build_args(args) abort$/;"	f
test#python#pyunit#build_position	plugged/vim-test/autoload/test/python/pyunit.vim	/^function! test#python#pyunit#build_position(type, position) abort$/;"	f
test#python#pyunit#executable	plugged/vim-test/autoload/test/python/pyunit.vim	/^function! test#python#pyunit#executable() abort$/;"	f
test#python#pyunit#test_file	plugged/vim-test/autoload/test/python/pyunit.vim	/^function! test#python#pyunit#test_file(file) abort$/;"	f
test#racket#rackunit#build_args	plugged/vim-test/autoload/test/racket/rackunit.vim	/^function! test#racket#rackunit#build_args(args) abort$/;"	f
test#racket#rackunit#build_position	plugged/vim-test/autoload/test/racket/rackunit.vim	/^function! test#racket#rackunit#build_position(type, position) abort$/;"	f
test#racket#rackunit#executable	plugged/vim-test/autoload/test/racket/rackunit.vim	/^function! test#racket#rackunit#executable() abort$/;"	f
test#racket#rackunit#test_file	plugged/vim-test/autoload/test/racket/rackunit.vim	/^function! test#racket#rackunit#test_file(file) abort$/;"	f
test#ruby#cucumber#build_args	plugged/vim-test/autoload/test/ruby/cucumber.vim	/^function! test#ruby#cucumber#build_args(args) abort$/;"	f
test#ruby#cucumber#build_position	plugged/vim-test/autoload/test/ruby/cucumber.vim	/^function! test#ruby#cucumber#build_position(type, position) abort$/;"	f
test#ruby#cucumber#executable	plugged/vim-test/autoload/test/ruby/cucumber.vim	/^function! test#ruby#cucumber#executable() abort$/;"	f
test#ruby#cucumber#test_file	plugged/vim-test/autoload/test/ruby/cucumber.vim	/^function! test#ruby#cucumber#test_file(file) abort$/;"	f
test#ruby#m#build_args	plugged/vim-test/autoload/test/ruby/m.vim	/^function! test#ruby#m#build_args(args) abort$/;"	f
test#ruby#m#build_position	plugged/vim-test/autoload/test/ruby/m.vim	/^function! test#ruby#m#build_position(type, position) abort$/;"	f
test#ruby#m#executable	plugged/vim-test/autoload/test/ruby/m.vim	/^function! test#ruby#m#executable() abort$/;"	f
test#ruby#m#test_file	plugged/vim-test/autoload/test/ruby/m.vim	/^function! test#ruby#m#test_file(file) abort$/;"	f
test#ruby#minitest#build_args	plugged/vim-test/autoload/test/ruby/minitest.vim	/^function! test#ruby#minitest#build_args(args) abort$/;"	f
test#ruby#minitest#build_position	plugged/vim-test/autoload/test/ruby/minitest.vim	/^function! test#ruby#minitest#build_position(type, position) abort$/;"	f
test#ruby#minitest#executable	plugged/vim-test/autoload/test/ruby/minitest.vim	/^function! test#ruby#minitest#executable() abort$/;"	f
test#ruby#minitest#test_file	plugged/vim-test/autoload/test/ruby/minitest.vim	/^function! test#ruby#minitest#test_file(file) abort$/;"	f
test#ruby#patterns	plugged/vim-test/autoload/test/ruby.vim	/^let test#ruby#patterns = {$/;"	v
test#ruby#rails#build_args	plugged/vim-test/autoload/test/ruby/rails.vim	/^function! test#ruby#rails#build_args(args) abort$/;"	f
test#ruby#rails#build_position	plugged/vim-test/autoload/test/ruby/rails.vim	/^function! test#ruby#rails#build_position(type, position) abort$/;"	f
test#ruby#rails#executable	plugged/vim-test/autoload/test/ruby/rails.vim	/^function! test#ruby#rails#executable() abort$/;"	f
test#ruby#rails#test_file	plugged/vim-test/autoload/test/ruby/rails.vim	/^function! test#ruby#rails#test_file(file) abort$/;"	f
test#ruby#rspec#build_args	plugged/vim-test/autoload/test/ruby/rspec.vim	/^function! test#ruby#rspec#build_args(args) abort$/;"	f
test#ruby#rspec#build_position	plugged/vim-test/autoload/test/ruby/rspec.vim	/^function! test#ruby#rspec#build_position(type, position) abort$/;"	f
test#ruby#rspec#executable	plugged/vim-test/autoload/test/ruby/rspec.vim	/^function! test#ruby#rspec#executable() abort$/;"	f
test#ruby#rspec#test_file	plugged/vim-test/autoload/test/ruby/rspec.vim	/^function! test#ruby#rspec#test_file(file) abort$/;"	f
test#run	plugged/vim-test/autoload/test.vim	/^function! test#run(type, arguments) abort$/;"	f
test#run_last	plugged/vim-test/autoload/test.vim	/^function! test#run_last(arguments) abort$/;"	f
test#rust#cargotest#build_args	plugged/vim-test/autoload/test/rust/cargotest.vim	/^function! test#rust#cargotest#build_args(args) abort$/;"	f
test#rust#cargotest#build_position	plugged/vim-test/autoload/test/rust/cargotest.vim	/^function! test#rust#cargotest#build_position(type, position) abort$/;"	f
test#rust#cargotest#executable	plugged/vim-test/autoload/test/rust/cargotest.vim	/^function! test#rust#cargotest#executable() abort$/;"	f
test#rust#cargotest#test_file	plugged/vim-test/autoload/test/rust/cargotest.vim	/^function! test#rust#cargotest#test_file(file) abort$/;"	f
test#shell	plugged/vim-test/autoload/test.vim	/^function! test#shell(cmd, strategy) abort$/;"	f
test#shell#bats#build_args	plugged/vim-test/autoload/test/shell/bats.vim	/^function! test#shell#bats#build_args(args) abort$/;"	f
test#shell#bats#build_position	plugged/vim-test/autoload/test/shell/bats.vim	/^function! test#shell#bats#build_position(type, position) abort$/;"	f
test#shell#bats#executable	plugged/vim-test/autoload/test/shell/bats.vim	/^function! test#shell#bats#executable() abort$/;"	f
test#shell#bats#test_file	plugged/vim-test/autoload/test/shell/bats.vim	/^function! test#shell#bats#test_file(file) abort$/;"	f
test#strategy#asyncrun	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#asyncrun(cmd) abort$/;"	f
test#strategy#basic	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#basic(cmd) abort$/;"	f
test#strategy#basic	plugged/vim-test/spec/support/test/strategy.vim	/^function! test#strategy#basic(cmd)$/;"	f
test#strategy#dispatch	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#dispatch(cmd) abort$/;"	f
test#strategy#dispatch	plugged/vim-test/spec/support/test/strategy.vim	/^function! test#strategy#dispatch(cmd)$/;"	f
test#strategy#dispatch_background	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#dispatch_background(cmd) abort$/;"	f
test#strategy#iterm	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#iterm(cmd) abort$/;"	f
test#strategy#make	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#make(cmd) abort$/;"	f
test#strategy#make_bang	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#make_bang(cmd) abort$/;"	f
test#strategy#makegreen	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#makegreen(cmd) abort$/;"	f
test#strategy#neomake	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#neomake(cmd) abort$/;"	f
test#strategy#neoterm	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#neoterm(cmd) abort$/;"	f
test#strategy#neovim	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#neovim(cmd) abort$/;"	f
test#strategy#neovim	plugged/vim-test/spec/support/test/strategy.vim	/^function! test#strategy#neovim(cmd)$/;"	f
test#strategy#terminal	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#terminal(cmd) abort$/;"	f
test#strategy#tslime	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#tslime(cmd) abort$/;"	f
test#strategy#vimproc	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#vimproc(cmd) abort$/;"	f
test#strategy#vimscript	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#vimscript(cmd) abort$/;"	f
test#strategy#vimscript	plugged/vim-test/spec/strategy_spec.vim	/^    function! test#strategy#vimscript(cmd)$/;"	f
test#strategy#vimscript	plugged/vim-test/spec/support/test/strategy.vim	/^function! test#strategy#vimscript(cmd)$/;"	f
test#strategy#vimshell	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#vimshell(cmd) abort$/;"	f
test#strategy#vimterminal	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#vimterminal(cmd) abort$/;"	f
test#strategy#vimux	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#vimux(cmd) abort$/;"	f
test#strategy#vtr	plugged/vim-test/autoload/test/strategy.vim	/^function! test#strategy#vtr(cmd) abort$/;"	f
test#swift#swiftpm#build_args	plugged/vim-test/autoload/test/swift/swiftpm.vim	/^function! test#swift#swiftpm#build_args(args) abort$/;"	f
test#swift#swiftpm#build_position	plugged/vim-test/autoload/test/swift/swiftpm.vim	/^function! test#swift#swiftpm#build_position(type, position) abort$/;"	f
test#swift#swiftpm#executable	plugged/vim-test/autoload/test/swift/swiftpm.vim	/^function! test#swift#swiftpm#executable() abort$/;"	f
test#swift#swiftpm#test_file	plugged/vim-test/autoload/test/swift/swiftpm.vim	/^function! test#swift#swiftpm#test_file(file) abort$/;"	f
test#test_file	plugged/vim-test/autoload/test.vim	/^function! test#test_file(file) abort$/;"	f
test#viml#themis#build_args	plugged/vim-test/autoload/test/viml/themis.vim	/^function! test#viml#themis#build_args(args) abort$/;"	f
test#viml#themis#build_position	plugged/vim-test/autoload/test/viml/themis.vim	/^function! test#viml#themis#build_position(type, position) abort$/;"	f
test#viml#themis#executable	plugged/vim-test/autoload/test/viml/themis.vim	/^function! test#viml#themis#executable() abort$/;"	f
test#viml#themis#test_file	plugged/vim-test/autoload/test/viml/themis.vim	/^function! test#viml#themis#test_file(file) abort$/;"	f
test#viml#vader#build_args	plugged/vim-test/autoload/test/viml/vader.vim	/^function! test#viml#vader#build_args(args) abort$/;"	f
test#viml#vader#build_position	plugged/vim-test/autoload/test/viml/vader.vim	/^function! test#viml#vader#build_position(type, position) abort$/;"	f
test#viml#vader#executable	plugged/vim-test/autoload/test/viml/vader.vim	/^function! test#viml#vader#executable() abort$/;"	f
test#viml#vader#test_file	plugged/vim-test/autoload/test/viml/vader.vim	/^function! test#viml#vader#test_file(file) abort$/;"	f
test#viml#vspec#build_args	plugged/vim-test/autoload/test/viml/vspec.vim	/^function! test#viml#vspec#build_args(args) abort$/;"	f
test#viml#vspec#build_position	plugged/vim-test/autoload/test/viml/vspec.vim	/^function! test#viml#vspec#build_position(type, position) abort$/;"	f
test#viml#vspec#executable	plugged/vim-test/autoload/test/viml/vspec.vim	/^function! test#viml#vspec#executable() abort$/;"	f
test#viml#vspec#test_file	plugged/vim-test/autoload/test/viml/vspec.vim	/^function! test#viml#vspec#test_file(file) abort$/;"	f
test#visit	plugged/vim-test/autoload/test.vim	/^function! test#visit() abort$/;"	f
testAdd	plugged/vim-test/spec/fixtures/maven/MathTest.java	/^	public void testAdd() {$/;"	m	class:MathTest
testAdd	plugged/vim-test/spec/fixtures/maven/MathTestCase.java	/^	public void testAdd() {$/;"	m	class:MathTestCase
testAdd	plugged/vim-test/spec/fixtures/maven/MathTests.java	/^	public void testAdd() {$/;"	m	class:MathTests
testAdd	plugged/vim-test/spec/fixtures/maven/TestMath.java	/^	public void testAdd() {$/;"	m	class:TestMath
testFailedAdd	plugged/vim-test/spec/fixtures/maven/MathTest.java	/^	public void testFailedAdd() {$/;"	m	class:MathTest
testFailedAdd	plugged/vim-test/spec/fixtures/maven/MathTestCase.java	/^	public void testFailedAdd() {$/;"	m	class:MathTestCase
testFailedAdd	plugged/vim-test/spec/fixtures/maven/MathTests.java	/^	public void testFailedAdd() {$/;"	m	class:MathTests
testFailedAdd	plugged/vim-test/spec/fixtures/maven/TestMath.java	/^	public void testFailedAdd() {$/;"	m	class:TestMath
testMe	plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalTest.php	/^    public function testMe()$/;"	f
testShouldAddToExpectedValue	plugged/vim-test/spec/fixtures/dusk/BrowserTest.php	/^    public function testShouldAddToExpectedValue($a, $b, $expected)$/;"	f
testShouldAddToExpectedValue	plugged/vim-test/spec/fixtures/phpunit/NormalTest.php	/^    public function testShouldAddToExpectedValue($a, $b, $expected)$/;"	f
testShouldAddTwoNumbers	plugged/vim-test/spec/fixtures/dusk/BrowserTest.php	/^    public function testShouldAddTwoNumbers()$/;"	f
testShouldAddTwoNumbers	plugged/vim-test/spec/fixtures/phpunit/NormalTest.php	/^    public function testShouldAddTwoNumbers()$/;"	f
testShouldSubtractTwoNumbers	plugged/vim-test/spec/fixtures/dusk/BrowserTest.php	/^    public function testShouldSubtractTwoNumbers()$/;"	f
testShouldSubtractTwoNumbers	plugged/vim-test/spec/fixtures/phpunit/NormalTest.php	/^    public function testShouldSubtractTwoNumbers()$/;"	f
testSomethingElse	plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalTest.php	/^    public function testSomethingElse()$/;"	f
testSub	plugged/vim-test/spec/fixtures/maven/MathTest.java	/^	public void testSub() {$/;"	m	class:MathTest
testSub	plugged/vim-test/spec/fixtures/maven/MathTestCase.java	/^	public void testSub() {$/;"	m	class:MathTestCase
testSub	plugged/vim-test/spec/fixtures/maven/MathTests.java	/^	public void testSub() {$/;"	m	class:MathTests
testSub	plugged/vim-test/spec/fixtures/maven/TestMath.java	/^	public void testSub() {$/;"	m	class:TestMath
test_1	plugged/vim-test/spec/fixtures/commontest/test_SUITE.erl	/^test_1(_Config) ->$/;"	f	module:test_SUITE
test_2	plugged/vim-test/spec/fixtures/commontest/test_SUITE.erl	/^test_2(_Config) ->$/;"	f	module:test_SUITE
test_3	plugged/vim-test/spec/fixtures/commontest/test_SUITE.erl	/^test_3(_Config) ->$/;"	f	module:test_SUITE
test_SUITE	plugged/vim-test/spec/fixtures/commontest/test_SUITE.erl	/^-module(test_SUITE).$/;"	m
test_basic_atom	plugged/alchemist.vim/t/erl_terms_test.py	/^    def test_basic_atom(self):$/;"	m	class:Tests
test_basic_boolean	plugged/alchemist.vim/t/erl_terms_test.py	/^    def test_basic_boolean(self):$/;"	m	class:Tests
test_basic_int	plugged/alchemist.vim/t/erl_terms_test.py	/^    def test_basic_int(self):$/;"	m	class:Tests
test_basic_none	plugged/alchemist.vim/t/erl_terms_test.py	/^    def test_basic_none(self):$/;"	m	class:Tests
test_basic_string	plugged/alchemist.vim/t/erl_terms_test.py	/^    def test_basic_string(self):$/;"	m	class:Tests
test_binary_search	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_binary_search():$/;"	f
test_charwidth	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_charwidth():$/;"	f
test_command	plugged/vim-test/autoload/test/csharp/xunit.vim	/^function! s:test_command(name) abort$/;"	f
test_command_execution	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! s:test_command_execution()$/;"	f
test_custom	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_custom():$/;"	f
test_encode_decode	plugged/alchemist.vim/t/erl_terms_test.py	/^    def test_encode_decode(self):$/;"	m	class:Tests
test_foo	plugged/vim-test/spec/fixtures/nose/test_class.py	/^    def test_foo(self):$/;"	m	class:SomeTest
test_foo	plugged/vim-test/spec/fixtures/nose/test_method.py	/^def test_foo():$/;"	f
test_fuzzy_escapse	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_fuzzy_escapse():$/;"	f
test_globruntime	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_globruntime():$/;"	f
test_list	plugged/alchemist.vim/t/erl_terms_test.py	/^    def test_list(self):$/;"	m	class:Tests
test_list_handling	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! s:test_list_handling()$/;"	f
test_map	plugged/alchemist.vim/t/erl_terms_test.py	/^    def test_map(self):$/;"	m	class:Tests
test_matcher_full_fuzzy	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_full_fuzzy.py	/^def test_matcher_full_fuzzy():$/;"	f
test_matcher_fuzzy	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_matcher_fuzzy.py	/^def test_matcher_fuzzy():$/;"	f
test_method	plugged/vim-test/spec/fixtures/minitest/classic_unit_test.rb	/^    def test_method$/;"	f	class:Math.TestNumbers
test_numbers	plugged/vim-test/spec/fixtures/django/module/test_class.py	/^    def test_numbers(self):$/;"	m	class:TestNumbers
test_numbers	plugged/vim-test/spec/fixtures/django/module/test_class.py	/^    def test_numbers(self):$/;"	m	class:TestSubclass
test_numbers	plugged/vim-test/spec/fixtures/django/module/test_method.py	/^def test_numbers():$/;"	f
test_numbers	plugged/vim-test/spec/fixtures/nose/test_class.py	/^    def test_numbers(self):$/;"	m	class:TestNumbers
test_numbers	plugged/vim-test/spec/fixtures/nose/test_method.py	/^def test_numbers():$/;"	f
test_on_normal_mode	plugged/vim-textobj-user/t/move.vim	/^function! s:test_on_normal_mode(type, cases)$/;"	f
test_on_operator_pending_mode	plugged/vim-textobj-user/t/move.vim	/^function! s:test_on_operator_pending_mode(type, cases)$/;"	f
test_on_visual_mode	plugged/vim-textobj-user/t/move.vim	/^function! s:test_on_visual_mode(type, cases)$/;"	f
test_option_handling	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! s:test_option_handling()$/;"	f
test_overlap_length	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_overlap_length():$/;"	f
test_pos	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_pos():$/;"	f
test_skipping	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_skipping():$/;"	f
test_string_escaping	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! s:test_string_escaping()$/;"	f
test_string_handling	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! s:test_string_handling()$/;"	f
test_strwidth	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_strwidth():$/;"	f
test_subclass	plugged/vim-test/spec/fixtures/nose/test_class.py	/^    def test_subclass(self):$/;"	m	class:TestSubclass
test_truncate	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^def test_truncate():$/;"	f
test_underscores	plugged/vim-test/spec/fixtures/django/module/test_class.py	/^    def test_underscores(self):$/;"	m	class:Test_underscores_and_123
test_underscores	plugged/vim-test/spec/fixtures/nose/test_class.py	/^    def test_underscores(self):$/;"	m	class:Test_underscores_and_123
test_uniq_list_dict	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^def test_uniq_list_dict():$/;"	f
test_unittest	plugged/vim-test/spec/fixtures/nose/test_class.py	/^    def test_unittest(self):$/;"	m	class:UnittestClass
test_version_handling	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! s:test_version_handling()$/;"	f
tester	plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalTest.php	/^    protected $tester;$/;"	v
text	plugged/deoplete-jedi/tests/sphinx-3000.py	/^        text = ''$/;"	v
text	plugged/ultisnips/pythonx/UltiSnips/vim_state.py	/^    def text(self):$/;"	m	class:VisualContentPreserver
text_after	plugged/ultisnips/test/test_Format.py	/^    text_after = ''$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_after	plugged/ultisnips/test/vim_test_case.py	/^    text_after = '\\n\\n --- some text after --- '$/;"	v	class:VimTestCase
text_before	plugged/ultisnips/test/test_Format.py	/^    text_before = ''$/;"	v	class:ProperIndenting_FirstLineInFile_ECR
text_before	plugged/ultisnips/test/vim_test_case.py	/^    text_before = ' --- some text before --- \\n\\n'$/;"	v	class:VimTestCase
textobj#entire#select_a	plugged/vim-textobj-entire/autoload/textobj/entire.vim	/^function! textobj#entire#select_a()  "{{{2$/;"	f
textobj#entire#select_i	plugged/vim-textobj-entire/autoload/textobj/entire.vim	/^function! textobj#entire#select_i()  "{{{2$/;"	f
textobj#function#javascript#select	plugged/vim-textobj-function-javascript/autoload/textobj/function/javascript.vim	/^function! textobj#function#javascript#select(object_type)$/;"	f
textobj#indent#select_a	plugged/vim-textobj-indent/autoload/textobj/indent.vim	/^function! textobj#indent#select_a()  "{{{2$/;"	f
textobj#indent#select_i	plugged/vim-textobj-indent/autoload/textobj/indent.vim	/^function! textobj#indent#select_i()  "{{{2$/;"	f
textobj#indent#select_same_a	plugged/vim-textobj-indent/autoload/textobj/indent.vim	/^function! textobj#indent#select_same_a()  "{{{2$/;"	f
textobj#indent#select_same_i	plugged/vim-textobj-indent/autoload/textobj/indent.vim	/^function! textobj#indent#select_same_i()  "{{{2$/;"	f
textobj#ruby#any_select_a	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! textobj#ruby#any_select_a()$/;"	f
textobj#ruby#any_select_i	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! textobj#ruby#any_select_i() " {{{$/;"	f
textobj#ruby#control_block_select_a	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! textobj#ruby#control_block_select_a()$/;"	f
textobj#ruby#control_block_select_i	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! textobj#ruby#control_block_select_i() " {{{$/;"	f
textobj#ruby#do_block_select_a	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! textobj#ruby#do_block_select_a()$/;"	f
textobj#ruby#do_block_select_i	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! textobj#ruby#do_block_select_i() " {{{$/;"	f
textobj#ruby#loop_block_select_a	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! textobj#ruby#loop_block_select_a()$/;"	f
textobj#ruby#loop_block_select_i	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! textobj#ruby#loop_block_select_i() " {{{$/;"	f
textobj#ruby#object_definition_select_a	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! textobj#ruby#object_definition_select_a()$/;"	f
textobj#ruby#object_definition_select_i	plugged/vim-textobj-ruby/autoload/textobj/ruby.vim	/^function! textobj#ruby#object_definition_select_i() "{{{$/;"	f
textobj#user#_sid	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! textobj#user#_sid()$/;"	f
textobj#user#define	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! textobj#user#define(pat0, pat1, pat2, guideline)  "{{{2$/;"	f
textobj#user#map	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! textobj#user#map(plugin_name, obj_specs, ...)  "{{{2$/;"	f
textobj#user#move	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! textobj#user#move(pattern, flags, previous_mode)$/;"	f
textobj#user#plugin	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! textobj#user#plugin(plugin_name, obj_specs)  "{{{2$/;"	f
textobj#user#select	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! textobj#user#select(pattern, flags, previous_mode)$/;"	f
textobj#user#select_pair	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! textobj#user#select_pair(pattern1, pattern2, flags, previous_mode)$/;"	f
textobject	plugged/vim-commentary/plugin/commentary.vim	/^function! s:textobject(inner) abort$/;"	f
textwrap	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^import textwrap$/;"	i
textwrap	plugged/ultisnips/pythonx/UltiSnips/text_objects/_visual.py	/^import textwrap$/;"	i
textwrap	plugged/ultisnips/test/vim_interface.py	/^import textwrap$/;"	i
textwrap	plugged/ultisnips/test/vim_test_case.py	/^import textwrap$/;"	i
tfloat	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^class tfloat(float):$/;"	c
tha	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal tha$/;"	m
thb	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal thb$/;"	m
thc	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal thc$/;"	m
threading	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^import threading$/;"	i
threading	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^import threading$/;"	i
threading	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^import threading$/;"	i
threading	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    import threading$/;"	i
threading	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^import threading$/;"	i
throw	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:throw(message) abort$/;"	f
throw	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:throw(exp, where)$/;"	f
throw	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
throw_cmd	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:throw_cmd(exp, where)$/;"	f
tick	autoload/plug.vim	/^function! s:tick()$/;"	f
time	plugged/alchemist.vim/elixir_sense.py	/^import time$/;"	i
time	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^import time$/;"	i
time	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^import time$/;"	i
time	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^    import time$/;"	i
time	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^import time$/;"	i
time	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^import time$/;"	i
time	plugged/deoplete.nvim/rplugin/python3/deoplete/child.py	/^import time$/;"	i
time	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^import time$/;"	i
time	plugged/deoplete.nvim/rplugin/python3/deoplete/parent.py	/^import time$/;"	i
time	plugged/ultisnips/test/vim_interface.py	/^import time$/;"	i
time	plugged/ultisnips/test/vim_test_case.py	/^import time$/;"	i
time	plugged/vim-easytags/misc/easytags/normalize-tags.py	/^import os, sys, time$/;"	i
time	plugged/vim-notes/misc/notes/search-notes.py	/^import time$/;"	i
time	plugged/vim-polyglot/ftplugin/ocaml.vim	/^import time$/;"	m
time_now	plugged/deoplete-jedi/tests/test.py	/^time_now = localtime()$/;"	v
timeit	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^    import timeit$/;"	i
titles_allowed	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    titles_allowed = False$/;"	v	class:Documenter
titles_allowed	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    titles_allowed = True$/;"	v	class:ModuleDocumenter
tmux_navigator	plugged/vim-tmux-navigator/plugin/tmux_navigator.vim	/^augroup tmux_navigator$/;"	a
tmuxcomplete#complete	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#complete(findstart, base)$/;"	f
tmuxcomplete#completions	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#completions(base, capture_args, splitmode)$/;"	f
tmuxcomplete#findstartWORD	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#findstartWORD(line, max)$/;"	f
tmuxcomplete#findstartword	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#findstartword(line, max)$/;"	f
tmuxcomplete#gather_candidates	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#gather_candidates()$/;"	f
tmuxcomplete#getcommand	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#getcommand(base, splitmode)$/;"	f
tmuxcomplete#getcommandlist	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#getcommandlist(base, scrollback, splitmode)$/;"	f
tmuxcomplete#grepargs	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#grepargs(base)$/;"	f
tmuxcomplete#init	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#init()$/;"	f
tmuxcomplete#list	plugged/tmux-complete.vim/autoload/tmuxcomplete.vim	/^function! tmuxcomplete#list(splitmode, scrollback)$/;"	f
to_a	autoload/plug.vim	/^function! s:to_a(v)$/;"	f
to_be_snr_prefix.match	plugged/vim-textobj-user/t/snr-prefix.vim	/^function! s:to_be_snr_prefix.match(actual)$/;"	f
to_cursor.failure_message_for_should	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! s:to_cursor.failure_message_for_should(actual, expected)$/;"	f
to_cursor.match	plugged/vim-easymotion/t/compare_movements_spec.vim	/^function! s:to_cursor.match(actual, expected)$/;"	f
to_dict	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^    def to_dict(self):$/;"	m	class:CacheEntry
to_domain	plugged/deoplete-jedi/tests/sphinx-3000.py	/^        def to_domain(fpath):$/;"	f	function:Builder.compile_specific_catalogs
to_s	autoload/plug.vim	/^function! s:to_s(v)$/;"	f
to_string	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:to_string(expr)$/;"	f
to_vim	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def to_vim(self):$/;"	m	class:_VimCursor
to_vim_cursor	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def to_vim_cursor(self):$/;"	m	class:_SnippetUtilCursor
to_vim_definition	plugged/alchemist.vim/elixir_sense.py	/^    def to_vim_definition(self, source):$/;"	m	class:ElixirSenseClient
to_vim_suggestions	plugged/alchemist.vim/elixir_sense.py	/^    def to_vim_suggestions(self, suggestions):$/;"	m	class:ElixirSenseClient
toctree	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class toctree(nodes.General, nodes.Element):$/;"	c
toggleFold	plugged/tagbar/autoload/tagbar/prototypes/kindheadertag.vim	/^function! s:toggleFold(fileinfo) abort dict$/;"	f
toggleIgnoreFilter	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom()$/;"	f
toggle_off	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_off()$/;"	f
toggle_on	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:toggle_on()$/;"	f
toggle_width	config/plugins/nerdtree.vim	/^function! s:toggle_width()$/;"	f
token	plugged/vim-polyglot/indent/typescript.vim	/^function s:token()$/;"	f
tokenize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_base.py	/^from UltiSnips.snippet.parsing._lexer import tokenize, TabStopToken$/;"	i
tokenize	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^def tokenize(text, indent, offset, allowed_tokens):$/;"	f
tokenize	plugged/vim-notes/misc/notes/search-notes.py	/^    def tokenize(self, text):$/;"	m	class:NotesIndex
tokenize_snippet_text	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_base.py	/^def tokenize_snippet_text(snippet_instance, text, indent,$/;"	f
tokenize_snippet_text	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/snipmate.py	/^from UltiSnips.snippet.parsing._base import tokenize_snippet_text, finalize, resolve_ambiguity$/;"	i
tokenize_snippet_text	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/ulti_snips.py	/^from UltiSnips.snippet.parsing._base import tokenize_snippet_text, finalize, resolve_ambiguity$/;"	i
topfiles	plugged/vim-easytags/misc/easytags/why-so-slow.py	/^    topfiles = int(arg)$/;"	v
topfiles	plugged/vim-easytags/misc/easytags/why-so-slow.py	/^topfiles = 10$/;"	v
topindent	plugged/vim-polyglot/ftplugin/ocaml.vim	/^function s:topindent(lnum)$/;"	f
touch	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^    def touch(self):$/;"	m	class:CacheEntry
traceback	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^import traceback$/;"	i
traceback	plugged/ultisnips/pythonx/UltiSnips/debug.py	/^    import traceback$/;"	i
traceback	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^import traceback$/;"	i
traceback	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^import traceback$/;"	i
tranquilize	plugged/goyo.vim/autoload/goyo.vim	/^function! s:tranquilize()$/;"	f
transcode_utf8_latin1	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:transcode_utf8_latin1()$/;"	f
transform	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^def transform(a, cmds):$/;"	f
transform	plugged/vim-startify/autoload/startify.vim	/^function s:transform(absolute_path)$/;"	f
transformations.basename	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.basename(input, o) abort$/;"	f
transformations.blank	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.blank(input, o) abort$/;"	f
transformations.camelcase	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.camelcase(input, o) abort$/;"	f
transformations.capitalize	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.capitalize(input, o) abort$/;"	f
transformations.close	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.close(input, o) abort$/;"	f
transformations.colons	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.colons(input, o) abort$/;"	f
transformations.dirname	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.dirname(input, o) abort$/;"	f
transformations.dot	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.dot(input, o) abort$/;"	f
transformations.hyphenate	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.hyphenate(input, o) abort$/;"	f
transformations.nothing	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.nothing(input, o) abort$/;"	f
transformations.open	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.open(input, o) abort$/;"	f
transformations.plural	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.plural(input, o) abort$/;"	f
transformations.singular	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.singular(input, o) abort$/;"	f
transformations.underscore	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.underscore(input, o) abort$/;"	f
transformations.uppercase	plugged/vim-rails/autoload/rails.vim	/^function! s:transformations.uppercase(input, o) abort$/;"	f
translator	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                    as translator$/;"	i
translator	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                from sphinx.writers.html import HTMLTranslator as translator$/;"	i
translator	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                from sphinx.writers.latex import LaTeXTranslator as translator$/;"	i
translator	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                from sphinx.writers.text import TextTranslator as translator$/;"	i
trigger	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^    def trigger(self):$/;"	m	class:SnippetDefinition
trigger_gitgutter	plugged/vim-gitgutter/test/test_gitgutter.vim	/^function s:trigger_gitgutter()$/;"	f
trim	autoload/plug.vim	/^function! s:trim(str)$/;"	f
trim	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim(str) abort$/;"	f
trim_end	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim_end(str) abort$/;"	f
trim_start	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:trim_start(str) abort$/;"	f
truncate	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def truncate(string, max_width):$/;"	f
truncate	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate_skipping	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_abbr.py	/^from deoplete.util import truncate_skipping$/;"	i
truncate_skipping	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_kind.py	/^from deoplete.util import truncate_skipping$/;"	i
truncate_skipping	plugged/deoplete.nvim/rplugin/python3/deoplete/filter/converter_truncate_menu.py	/^from deoplete.util import truncate_skipping$/;"	i
truncate_skipping	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def truncate_skipping(string, max_width, footer, footer_len):$/;"	f
truncate_skipping	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
tryToTest	plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalCest.php	/^    public function tryToTest(FunctionalTester $I)$/;"	f
tryToTestSomethingElse	plugged/vim-test/spec/fixtures/codeception/tests/functional/NormalCest.php	/^    public function tryToTestSomethingElse(FunctionalTester $I)$/;"	f
turn_off_hl_error	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:turn_off_hl_error() "{{{$/;"	f
turn_on_hl_error	plugged/vim-easymotion/autoload/EasyMotion.vim	/^function! s:turn_on_hl_error() "{{{$/;"	f
type	plugged/deoplete-jedi/tests/sphinx-3000.py	/^                      type='str',$/;"	v
type	plugged/vim-multiple-cursors/spec/benchmark_spec.rb	/^def type(string)$/;"	f
type	plugged/vim-multiple-cursors/spec/multiple_cursors_spec.rb	/^def type(string)$/;"	f
type_doc	plugged/deoplete-ternjs/rplugin/python3/deoplete/sources/ternjs.py	/^    def type_doc(self, rec):$/;"	m	class:Source
u	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        normal! u$/;"	m
u	plugged/vim-repeat/autoload/repeat.vim	/^    nmap u <Plug>(RepeatUndo)$/;"	m
ultisnips_snippets	plugged/ultisnips/ftplugin/snippets.vim	/^augroup ultisnips_snippets.vim$/;"	a
unc_path	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:unc_path(bufnr)$/;"	f
undo	plugged/vim-gitgutter/autoload/gitgutter/hunk.vim	/^function! s:undo(hunk_diff)$/;"	f
undo_lock._save	plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! s:undo_lock._save() abort$/;"	f
undo_lock._save	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock._save() abort$/;"	f
undo_lock.restore	plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! s:undo_lock.restore() abort$/;"	f
undo_lock.restore	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.restore() abort$/;"	f
undo_lock.save	plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! s:undo_lock.save() abort$/;"	f
undo_lock.save	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.save() abort$/;"	f
undo_lock.undobreak	plugged/vim-easymotion/autoload/EasyMotion/undo.vim	/^function! s:undo_lock.undobreak() abort$/;"	f
undo_lock.undobreak	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:undo_lock.undobreak() abort$/;"	f
unescape	plugged/ultisnips/pythonx/UltiSnips/snippet/parsing/_lexer.py	/^from UltiSnips.text import unescape$/;"	i
unescape	plugged/ultisnips/pythonx/UltiSnips/text.py	/^def unescape(text):$/;"	f
unescape	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^from UltiSnips.text import unescape, fill_in_whitespace$/;"	i
unescape	plugged/ultisnips/utils/get_tm_snippets.py	/^def unescape(s):$/;"	f
unescape	plugged/vim-misc/autoload/xolox/misc/option.vim	/^function! s:unescape(s)$/;"	f
unescape	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:unescape(str, chars) abort$/;"	f
unescape_pattern	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:unescape_pattern(str) abort$/;"	f
unescape_tags	plugged/vim-misc/autoload/xolox/misc/option.vim	/^function! s:unescape_tags(s)$/;"	f
unicode_literals	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^from __future__ import unicode_literals$/;"	i
unicode_literals	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^from __future__ import (unicode_literals, division, absolute_import, print_function)$/;"	i
unicode_string	plugged/vim-notes/misc/notes/search-notes.py	/^    unicode_string = str$/;"	v
unicode_string	plugged/vim-notes/misc/notes/search-notes.py	/^    unicode_string = unicode$/;"	v
unicodedata	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^import unicodedata$/;"	i
unidecode	plugged/ultisnips/pythonx/UltiSnips/text_objects/_transformation.py	/^                import unidecode$/;"	i
unidecode	plugged/ultisnips/test/util.py	/^    import unidecode$/;"	i
uniq	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq	plugged/vim-gitgutter/autoload/gitgutter.vim	/^  function! s:uniq(list)$/;"	f
uniq	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq	plugged/vim-polyglot/ftplugin/latex-box/latexmk.vim	/^function! s:uniq(list)$/;"	f
uniq	plugged/vim-rails/autoload/rails.vim	/^function! s:uniq(list) abort$/;"	f
uniq_by	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
uniq_by	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
uniq_list_dict	plugged/deoplete.nvim/rplugin/python3/deoplete/util.py	/^def uniq_list_dict(l):$/;"	f
unique_name_temp	plugged/ultisnips/test/vim_interface.py	/^    def unique_name_temp(self, suffix='', prefix=''):$/;"	m	class:TempFileManager
unite#filters#converter_vim_bookmarks_long#define	plugged/vim-bookmarks/autoload/unite/filters/converter_vim_bookmarks_long.vim	/^function! unite#filters#converter_vim_bookmarks_long#define() " {{{$/;"	f
unite#filters#converter_vim_bookmarks_short#define	plugged/vim-bookmarks/autoload/unite/filters/converter_vim_bookmarks_short.vim	/^function! unite#filters#converter_vim_bookmarks_short#define() " {{{$/;"	f
unite#kinds#vim_bookmarks#define	plugged/vim-bookmarks/autoload/unite/kinds/vim_bookmarks.vim	/^function! unite#kinds#vim_bookmarks#define()$/;"	f
unite#sources#tmuxcomplete#define	plugged/tmux-complete.vim/autoload/unite/sources/tmuxcomplete.vim	/^function! unite#sources#tmuxcomplete#define()$/;"	f
unite#sources#ultisnips#define	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! unite#sources#ultisnips#define()$/;"	f
unite#sources#vim_bookmarks#define	plugged/vim-bookmarks/autoload/unite/sources/vim_bookmarks.vim	/^function! unite#sources#vim_bookmarks#define()$/;"	f
unite#sources#vim_bookmarks#define_highlights	plugged/vim-bookmarks/autoload/unite/sources/vim_bookmarks.vim	/^function! unite#sources#vim_bookmarks#define_highlights() abort " {{{$/;"	f
unite_source.action_table.expand.func	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.expand.func(candidate)$/;"	f
unite_source.action_table.preview.func	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.action_table.preview.func(candidate)$/;"	f
unite_source.gather_candidates	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.gather_candidates(args, context)$/;"	f
unite_source.get_longest_snippet_len	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.get_longest_snippet_len(snippet_list)$/;"	f
unite_source.hooks.on_syntax	plugged/ultisnips/autoload/unite/sources/ultisnips.vim	/^function! s:unite_source.hooks.on_syntax(args, context) abort$/;"	f
unittest	plugged/alchemist.vim/t/erl_terms_test.py	/^import unittest$/;"	i
unittest	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^import unittest$/;"	i
unittest	plugged/ultisnips/pythonx/UltiSnips/test_position.py	/^import unittest$/;"	i
unittest	plugged/ultisnips/test/vim_test_case.py	/^import unittest$/;"	i
unittest	plugged/ultisnips/test_all.py	/^import unittest$/;"	i
unload	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:unload() abort dict$/;"	f
unload	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:unload() abort dict$/;"	f
unmap	plugged/vim-polyglot/autoload/julia_blocks.vim	/^function! s:unmap(function)$/;"	f
unmapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:unmapping(keymapping, key, ...)$/;"	f
unregister_snippet_source	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^    def unregister_snippet_source(self, name):$/;"	m	class:SnippetManager
unshift	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def unshift(self, amount=1):$/;"	m	class:SnippetUtil
unshift	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
unshift	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
untracked_output	plugged/vim-airline/autoload/airline/async.vim	/^function! s:untracked_output(dict, buf)$/;"	f
unused	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^from vim import error  # pylint:disable=import-error,unused-import$/;"	i
upDirCurrentRootClosed	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	plugged/nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
update	autoload/plug.vim	/^function! s:update(force, names)$/;"	f
update_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_branch()$/;"	f
update_extends	plugged/ultisnips/pythonx/UltiSnips/snippet/source/_base.py	/^    def update_extends(self, child_ft, parent_fts):$/;"	m	class:SnippetSource
update_far_buffer	plugged/far.vim/autoload/far.vim	/^function! s:update_far_buffer(far_ctx, bufnr) abort "{{{$/;"	f
update_finish	autoload/plug.vim	/^function! s:update_finish()$/;"	f
update_from	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^    def update_from(self, other):$/;"	m	class:CacheEntry
update_git_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_git_branch()$/;"	f
update_hg_branch	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_hg_branch()$/;"	f
update_impl	autoload/plug.vim	/^function! s:update_impl(pull, force, args) abort$/;"	f
update_index	plugged/vim-notes/misc/notes/search-notes.py	/^    def update_index(self):$/;"	m	class:NotesIndex
update_oldfiles	plugged/vim-startify/plugin/startify.vim	/^function! s:update_oldfiles(file)$/;"	f
update_python	autoload/plug.vim	/^function! s:update_python()$/;"	f
update_readme	plugged/vim-polyglot/build	/^update_readme() {$/;"	f
update_ruby	autoload/plug.vim	/^function! s:update_ruby()$/;"	f
update_tabline	plugged/vim-airline/autoload/airline/extensions/tabline.vim	/^function! s:update_tabline()$/;"	f
update_textobjects	plugged/ultisnips/pythonx/UltiSnips/text_objects/_snippet_instance.py	/^    def update_textobjects(self, buf):$/;"	m	class:SnippetInstance
update_untracked	plugged/vim-airline/autoload/airline/extensions/branch.vim	/^function! s:update_untracked()$/;"	f
update_vim	autoload/plug.vim	/^function! s:update_vim()$/;"	f
update_visual_markers	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:update_visual_markers(region)$/;"	f
upgrade	autoload/plug.vim	/^function! s:upgrade()$/;"	f
upgrade_specs	autoload/plug.vim	/^function! s:upgrade_specs()$/;"	f
upsert_new_gitgutter_signs	plugged/vim-gitgutter/autoload/gitgutter/sign.vim	/^function! s:upsert_new_gitgutter_signs(bufnr, modified_lines) abort$/;"	f
url_callback	plugged/vim-notes/autoload/xolox/notes/markdown.vim	/^function! s:url_callback(url)$/;"	f
url_callback	plugged/vim-notes/autoload/xolox/notes/mediawiki.vim	/^function! s:url_callback(url)$/;"	f
url_encode	plugged/vim-rails/autoload/rails.vim	/^function! s:url_encode(str, ...) abort$/;"	f
urllib	plugged/ultisnips/utils/get_tm_snippets.py	/^import urllib$/;"	i
usage	plugged/fzf.vim/bin/preview.rb	/^def usage$/;"	f
usage	plugged/vim-notes/misc/notes/search-notes.py	/^    def usage(self):$/;"	m	class:NotesIndex
use_known_shell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:use_known_shell() abort$/;"	f
use_proxy_buffer	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^def use_proxy_buffer(snippets_stack, vstate):$/;"	f
use_proxy_buffer	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from UltiSnips.buffer_proxy import use_proxy_buffer, suspend_proxy_edits$/;"	i
util	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_filter.py	/^import deoplete.util as util$/;"	i
util	plugged/deoplete.nvim/test/rplugin/python3/deoplete/test_util.py	/^import deoplete.util as util$/;"	i
util#redir_execute	plugged/vim-bookmarks/autoload/util.vim	/^function! util#redir_execute(command)$/;"	f
utils	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^from deoplete_jedi import cache, profiler, utils, worker$/;"	i
utils	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^from deoplete_jedi import utils$/;"	i
utils	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^from deoplete_jedi import utils$/;"	i
v	plugged/ultisnips/pythonx/UltiSnips/text_objects/_python_code.py	/^    def v(self):  # pylint:disable=invalid-name$/;"	m	class:SnippetUtil
valid_dir	plugged/vim-airline/autoload/airline/async.vim	/^function! s:valid_dir(dir)$/;"	f
validateName	plugged/deoplete-ternjs/tests/test.js	/^  validateName: function(name){$/;"	m	class:MYAPP.commonMethod
validatePhoneNo	plugged/deoplete-ternjs/tests/test.js	/^  validatePhoneNo: function(phoneNo){$/;"	m	class:MYAPP.commonMethod
validate_buffer	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^    def validate_buffer(self):$/;"	m	class:VimBufferProxy
value1	plugged/vim-test/spec/fixtures/maven/MathTest.java	/^	private int value1;$/;"	f	class:MathTest	file:
value1	plugged/vim-test/spec/fixtures/maven/MathTestCase.java	/^	private int value1;$/;"	f	class:MathTestCase	file:
value1	plugged/vim-test/spec/fixtures/maven/MathTests.java	/^	private int value1;$/;"	f	class:MathTests	file:
value1	plugged/vim-test/spec/fixtures/maven/TestMath.java	/^	private int value1;$/;"	f	class:TestMath	file:
value2	plugged/vim-test/spec/fixtures/maven/MathTest.java	/^	private int value2;$/;"	f	class:MathTest	file:
value2	plugged/vim-test/spec/fixtures/maven/MathTestCase.java	/^	private int value2;$/;"	f	class:MathTestCase	file:
value2	plugged/vim-test/spec/fixtures/maven/MathTests.java	/^	private int value2;$/;"	f	class:MathTests	file:
value2	plugged/vim-test/spec/fixtures/maven/TestMath.java	/^	private int value2;$/;"	f	class:TestMath	file:
variable.restore	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^function! s:variable.restore() abort$/;"	f
verbose	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def verbose(self, message, *args, **kwargs):$/;"	m	class:Sphinx
version	plugged/deoplete-jedi/tests/sphinx-3000.py	/^            version = opts.version or '',$/;"	v
version	plugged/ultisnips/test/vim_test_case.py	/^    version = None  # Will be set to vim --version output$/;"	v	class:VimTestCase
version_requirement	autoload/plug.vim	/^function! s:version_requirement(val, min)$/;"	f
versioning_compare	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    versioning_compare = False$/;"	v	class:Builder
versioning_method	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    versioning_method = 'none'$/;"	v	class:Builder
versionmodified	plugged/deoplete-jedi/tests/sphinx-3000.py	/^class versionmodified(nodes.Admonition, nodes.TextElement):$/;"	c
vfha	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal vfha$/;"	m
viewEdit	plugged/vim-rails/autoload/rails.vim	/^function! s:viewEdit(cmd, ...) abort$/;"	f
viewList	plugged/vim-rails/autoload/rails.vim	/^function! s:viewList(A,L,P)$/;"	f
vifm#edit#Init	plugged/vim-polyglot/autoload/vifm/edit.vim	/^function! vifm#edit#Init()$/;"	f
vifm#globals#Init	plugged/vim-polyglot/autoload/vifm/globals.vim	/^function! vifm#globals#Init()$/;"	f
vim	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    import vim$/;"	i
vim	plugged/deoplete.nvim/rplugin/python3/deoplete/__init__.py	/^    vim = neovim$/;"	v
vim	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^import vim  # pylint:disable=import-error$/;"	i
vim	plugged/ultisnips/pythonx/UltiSnips/buffer_proxy.py	/^import vim$/;"	i
vim	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^import vim  # pylint:disable=import-error$/;"	i
vim	plugged/ultisnips/pythonx/UltiSnips/snippet/definition/_base.py	/^import vim$/;"	i
vim	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^import vim$/;"	i
vim	plugged/ultisnips/test/vim_interface.py	/^        post_config.append('import vim, sys')$/;"	i
vim	plugged/ultisnips/test/vim_test_case.py	/^        vim_config.append('import vim\\n')$/;"	i
vim	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^	import vim$/;"	i
vim	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^	vim = {}$/;"	v
vim	plugged/vim-easytags/misc/easytags/highlight.py	/^import vim$/;"	i
vim	plugged/vim-polyglot/ftplugin/ocaml.vim	/^import vim$/;"	m
vim	plugged/vim-polyglot/syntax/go.vim	/^augroup vim-go-hi$/;"	a
vim	plugged/vim-snippets/pythonx/vimsnippets.py	/^import string, vim$/;"	i
vim_cmdline_mapping.keymapping	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.keymapping(cmdline)$/;"	f
vim_cmdline_mapping.on_enter	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.on_enter(cmdline)$/;"	f
vim_executable	plugged/ultisnips/test/vim_interface.py	/^    def vim_executable(self):$/;"	m	class:VimInterface
vim_flavor	plugged/ultisnips/test/vim_test_case.py	/^    vim_flavor = None # will be 'vim' or 'neovim'.$/;"	v	class:VimTestCase
vim_get_func	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^from powerline.bindings.vim import (vim_get_func, buffer_name)$/;"	i
vim_snippets#Filename	plugged/vim-snippets/autoload/vim_snippets.vim	/^fun! vim_snippets#Filename(...)$/;"	f
vim_version	plugged/vim-gitgutter/autoload/gitgutter/debug.vim	/^function! s:vim_version()$/;"	f
vimfiler#columns#devicons#define	plugged/vim-devicons/autoload/vimfiler/columns/devicons.vim	/^function! vimfiler#columns#devicons#define()$/;"	f
vimgrep_wrapper	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:vimgrep_wrapper(bang, pattern, files) " {{{2$/;"	f
vimoption2python	plugged/deoplete.nvim/autoload/deoplete/util.vim	/^function! s:vimoption2python(option) abort$/;"	f
virtual_position	plugged/ultisnips/pythonx/UltiSnips/_vim.py	/^def virtual_position(line, col):$/;"	f
vital	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^augroup vital-hit-a-hint-motion-default-highlight$/;"	a
vital#	plugged/vim-easymotion/autoload/vital/_easymotion.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/_crystal.vim	/^function! vital#{s:_plugin_name}#function(funcname) abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/_crystal.vim	/^function! vital#{s:_plugin_name}#new() abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! vital#{s:plugin_name}#import(...) abort$/;"	f
vital#	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! vital#{s:plugin_name}#new() abort$/;"	f
vital#_easymotion#Data#Dict#import	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Dict.vim	/^  function! vital#_easymotion#Data#Dict#import() abort$/;"	f
vital#_easymotion#Data#List#import	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^  function! vital#_easymotion#Data#List#import() abort$/;"	f
vital#_easymotion#Data#Set#import	plugged/vim-easymotion/autoload/vital/_easymotion/Data/Set.vim	/^  function! vital#_easymotion#Data#Set#import() abort$/;"	f
vital#_easymotion#HitAHint#Hint#import	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Hint.vim	/^  function! vital#_easymotion#HitAHint#Hint#import() abort$/;"	f
vital#_easymotion#HitAHint#Motion#import	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^  function! vital#_easymotion#HitAHint#Motion#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Base#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^  function! vital#_easymotion#Over#Commandline#Base#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#BufferComplete#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#BufferComplete#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Cancel#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Cancel#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#CursorMove#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#CursorMove#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Delete#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Delete#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Doautocmd#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Doautocmd#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#DrawCommandline#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#DrawCommandline#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#ExceptionExit#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#ExceptionExit#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#ExceptionMessage#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#ExceptionMessage#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Exit#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Exit#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#History#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#History#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#InsertRegister#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#InsertRegister#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#KeyMapping#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#KeyMapping#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#NoInsert#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#NoInsert#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Paste#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Paste#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#Redraw#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#Redraw#import() abort$/;"	f
vital#_easymotion#Over#Commandline#Modules#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^  function! vital#_easymotion#Over#Commandline#Modules#import() abort$/;"	f
vital#_easymotion#Over#Exception#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^  function! vital#_easymotion#Over#Exception#import() abort$/;"	f
vital#_easymotion#Over#Input#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^  function! vital#_easymotion#Over#Input#import() abort$/;"	f
vital#_easymotion#Over#Keymapping#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^  function! vital#_easymotion#Over#Keymapping#import() abort$/;"	f
vital#_easymotion#Over#Signals#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^  function! vital#_easymotion#Over#Signals#import() abort$/;"	f
vital#_easymotion#Over#String#import	plugged/vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^  function! vital#_easymotion#Over#String#import() abort$/;"	f
vital#_easymotion#Palette#Capture#import	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^  function! vital#_easymotion#Palette#Capture#import() abort$/;"	f
vital#_easymotion#Palette#Highlight#import	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^  function! vital#_easymotion#Palette#Highlight#import() abort$/;"	f
vital#_easymotion#Palette#Keymapping#import	plugged/vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^  function! vital#_easymotion#Palette#Keymapping#import() abort$/;"	f
vital#_easymotion#Prelude#import	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! vital#_easymotion#Prelude#import() abort$/;"	f
vital#_easymotion#Vim#Buffer#import	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Buffer.vim	/^  function! vital#_easymotion#Vim#Buffer#import() abort$/;"	f
vital#_easymotion#Vim#Guard#import	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Guard.vim	/^  function! vital#_easymotion#Vim#Guard#import() abort$/;"	f
vital#_easymotion#Vim#Message#import	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^  function! vital#_easymotion#Vim#Message#import() abort$/;"	f
vital#of	plugged/vim-easymotion/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital_files	plugged/vim-easymotion/autoload/vital/easymotion.vim	/^function! s:vital_files() abort$/;"	f
vital_files	plugged/vim-polyglot/autoload/vital/crystal.vim	/^function! s:vital_files() abort$/;"	f
w	plugged/vim-easymotion/t/easymotion_spec.vim	/^        map w <Plug>(easymotion-w)$/;"	m
w	plugged/vim-easymotion/t/operator_pending_spec.vim	/^        omap w <Plug>(easymotion-w)$/;"	m
wait_for_user_input	plugged/vim-multiple-cursors/autoload/multiple_cursors.vim	/^function! s:wait_for_user_input(mode)$/;"	f
wait_until_file_exists	plugged/ultisnips/test/vim_interface.py	/^def wait_until_file_exists(file_path, times=None, interval=0.01):$/;"	f
wait_with_timeout	plugged/vim-peekaboo/autoload/peekaboo.vim	/^function! s:wait_with_timeout(timeout)$/;"	f
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:MatchIsTooCheap
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:MultiLine
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestCheapDelete
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestCommonCharacters
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestCrash
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_BackspaceOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_DeleteOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_InsertOneChar
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestGuessing_InsertOneChar1
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestLotsaNewlines
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestNoSubstring
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestRealLife
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestRealLife1
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestUltiSnipsProblem
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ($/;"	v	class:TestWithNewline
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestAllMatch
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestEmptyString
wanted	plugged/ultisnips/pythonx/UltiSnips/test_diff.py	/^    wanted = ()$/;"	v	class:TestGuessing_Noop0
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = ' :latex:`Hello`World'$/;"	v	class:Anon_NoTrigger_FirstCharOfLine
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = '123 simple 123 expand 123 456'$/;"	v	class:Anon_Trigger_Multi
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = ':latex:`Hello`World'$/;"	v	class:Anon_NoTrigger_BeginningOfLine
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = 'abc simple expand'$/;"	v	class:Anon_NoTrigger_AfterSpace
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = 'abcsimple 123 expand 123 456'$/;"	v	class:Anon_NoTrigger_Multi
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = 'abcsimple expand'$/;"	v	class:Anon_NoTrigger_Simple
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = 'simple expand'$/;"	v	class:Anon_Trigger_Opts
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = 'simple expand'$/;"	v	class:Anon_Trigger_Simple
wanted	plugged/ultisnips/test/test_AnonymousExpansion.py	/^    wanted = 'simple expand\\nabc' + EX$/;"	v	class:Anon_Trigger_Twice
wanted	plugged/ultisnips/test/test_Autocommands.py	/^    wanted = '[ [ bar ] ] done M1U1'$/;"	v	class:Autocommands
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = 'abc'$/;"	v	class:Autotrigger_WillProduceNoExceptionWithVimLowerThan214
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = 'autotriggered'$/;"	v	class:Autotrigger_CanExpandOnTriggerWithLengthMoreThanOne
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = 'autotriggered'$/;"	v	class:Autotrigger_CanMatchSimpleTrigger
wanted	plugged/ultisnips/test/test_Autotrigger.py	/^    wanted = 'autotriggered\\na'$/;"	v	class:Autotrigger_CanMatchContext
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me'!"$/;"	v	class:Snippet_With_SingleQuote_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me\\"!"$/;"	v	class:Snippet_With_DoubleQuote
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = "Expand me\\"!"$/;"	v	class:Snippet_With_DoubleQuote_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand meü!'$/;"	v	class:Snippet_With_Umlauts
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'Expand meü!'$/;"	v	class:Snippet_With_Umlauts_List
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'oouu success b'$/;"	v	class:NoUmlautsBeforeTriggerAndCharsAfter
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'te üü hello üü hello'$/;"	v	class:Snippet_With_Umlauts_Mirrors
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'te üü hüüll üü aaaaa'$/;"	v	class:Snippet_With_Umlauts_Python
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'te üü more text üü helloßß\\nüüüüend'$/;"	v	class:Snippet_With_Umlauts_OverwriteFirst
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'te üü world üü helloßß\\nüüüüend'$/;"	v	class:Snippet_With_Umlauts_OverwriteNone
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'te üü world üü more textßß\\nüüüüend'$/;"	v	class:Snippet_With_Umlauts_OverwriteSecond
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'te üüüüüßßßßmore text'$/;"	v	class:Snippet_With_Umlauts_TypeOn
wanted	plugged/ultisnips/test/test_Chars.py	/^    wanted = 'ööuu success b'$/;"	v	class:UmlautsBeforeTriggerAndCharsAfter
wanted	plugged/ultisnips/test/test_Completion.py	/^        'superkallifragilistik some more'$/;"	v	class:Completion_SimpleExample_ECR
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + 'completion1 foo'$/;"	v	class:Completion_ForwardsJumpWithoutCOMPL_ACCEPT
wanted	plugged/ultisnips/test/test_Completion.py	/^    wanted = COMPLETION_OPTIONS + 'foo completion1'$/;"	v	class:Completion_BackwardsJumpWithoutCOMPL_ACCEPT
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "(2, 1)"$/;"	v	class:ContextSnippets_CursorIsZeroBased
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "1 1"$/;"	v	class:ContextSnippets_ContextIsClearedBeforeExpand
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = "Yes No"$/;"	v	class:ContextSnippets_ContextHasAccessToVisual
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = 'abc'$/;"	v	class:ContextSnippets_ExpandOnTrue
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = 'abc'$/;"	v	class:ContextSnippets_Header_ExpandOnTrue
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = 'abc'$/;"	v	class:ContextSnippets_SimpleSnippet
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = 'b'$/;"	v	class:ContextSnippets_PriorityKeyword
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = 'e' + EX$/;"	v	class:ContextSnippets_ReportError
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = 'e' + EX$/;"	v	class:ContextSnippets_ReportErrorOnIndexOutOfRange
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = '{ < a > }'$/;"	v	class:ContextSnippets_UseContext
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_DoNotExpandOnFalse
wanted	plugged/ultisnips/test/test_ContextSnippets.py	/^    wanted = keys$/;"	v	class:ContextSnippets_Header_DoNotExpandOnFalse
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = ''$/;"	v	class:Undo_CompletelyUndoSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'AA BBB'$/;"	v	class:Backspace_TabStop_NotZero
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'AA BBB'$/;"	v	class:Backspace_TabStop_Zero
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'a b c\\na\\nb\\nc\\n\\nshallnot'$/;"	v	class:JumpForward_DefSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'aaaaa()3333'$/;"	v	class:UpdateModifiedSnippetWithoutCursorMove1
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'end'$/;"	v	class:DeleteCurrentTabStop1_JumpBack
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'first line\\n\\n\\ntest\\n\\n\\nthird line'$/;"	v	class:Undo_RemoveWholeSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'hello upsi Hello\\naaa upsi bbb\\nWorld'$/;"	v	class:Undo_RemoveEditInTabstop
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'hello'$/;"	v	class:DeleteLastTwoLinesInSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'hello\\nend'$/;"	v	class:DeleteCurrentTabStop2_JumpBack
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'hello\\nendworld'$/;"	v	class:DeleteCurrentTabStop3_JumpAround
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'if :\\n\\t'$/;"	v	class:Undo_ChangesInPlaceholder
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'if a: test'$/;"	v	class:DoNotCrashOnUndoAndJumpInNestedSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'if:\\n\\t'$/;"	v	class:Undo_RemoveOneSnippetByTime2
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'if:\\n\\ti'$/;"	v	class:Undo_RemoveOneSnippetByTime
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'test'$/;"	v	class:DeleteSnippetInsertion1
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'test'$/;"	v	class:Undo_RemoveMultilineSnippet
wanted	plugged/ultisnips/test/test_Editing.py	/^    wanted = 'world'$/;"	v	class:DeleteSnippetInsertion0
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Hallo Welt!'$/;"	v	class:SimpleExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Hallo Welt!\\nHallo We'$/;"	v	class:SimpleExpandNewLineAndBackspae_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Hallo Welt!\\nHallo Welt!'$/;"	v	class:SimpleExpandTwice_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Hallo Welt!and again'$/;"	v	class:SimpleExpandTypeAfterExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Hallo Welt\\n\\nAnd more'$/;"	v	class:SimpleExpandEndingWithNewline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'SimpleText' + EX$/;"	v	class:ExitSnippetModeAfterTabstopZero
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Wie Hallo Welt! gehts'$/;"	v	class:ExpandInTheMiddleOfLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Wie Hallo Welt!\\nUnd Wie gehts gehts'$/;"	v	class:MultilineExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'Wie Hallo Welt!\\nUnd Wie gehtsHuiui! gehts'$/;"	v	class:MultilineExpandTestTyping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'hallo ' + EX$/;"	v	class:DoNotExpandAfterSpace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Expand.py	/^    wanted = 'na du Hallo Welt!and blub'$/;"	v	class:SimpleExpandTypeAndDelete_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = '  world hello;blub'$/;"	v	class:Bug1251994
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = '\\nblah\\nhello world '$/;"	v	class:RetainsTheUnnamedRegister_ButOnlyOnce
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = '\\t\\t\\tpadding: 2px'$/;"	v	class:VirtualEdit
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = '\\tfoo'$/;"	v	class:ShiftWidthZero
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = 'hello'$/;"	v	class:NonUnicodeDataInUnnamedRegister
wanted	plugged/ultisnips/test/test_Fixes.py	/^    wanted = 'yank HELLO world yank'$/;"	v	class:RetainsTheUnnamedRegister
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = '# hi  {{{\\n\\n# End: hi  }}}'$/;"	v
wanted	plugged/ultisnips/test/test_Folding.py	/^    wanted = 'package c03;\\nsub junk {}\\n1;'$/;"	v
wanted	plugged/ultisnips/test/test_Format.py	/^        'end'$/;"	v	class:FOSimple_Break_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = '    for\\n        blahHui'$/;"	v	class:ProperIndenting_SimpleCase_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = '    hui\\n    blah'$/;"	v	class:ProperIndenting_AutoIndentAndNewline_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = '    huiblah'$/;"	v	class:ProperIndenting_SingleLineNoReindenting_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = '   Blaahblah \\t\\t  '$/;"	v	class:RecTabStopsWithExpandtab_SimpleExample_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = '   Something\\n        Hallo'$/;"	v	class:RecTabStopsWithExpandtab_SpecialIndentProblem_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = '#include <cstdlib>'$/;"	v	class:ProperIndenting_FirstLineInFileComplete_ECR
wanted	plugged/ultisnips/test/test_Format.py	/^    wanted = '#include <foo>'$/;"	v
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = "bl-\\n\\tah, bah"$/;"	v	class:PythonCode_CanOverwriteTabstop
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = '    hi 4 End'$/;"	v	class:TabStop_VimScriptInterpolation_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = '    start b isbigger a end'$/;"	v	class:PythonCodeOld_IndentedMultiline
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = '    start b isbigger a end'$/;"	v	class:PythonCode_MultilineIndented
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = '##########\\nHallo Welt'$/;"	v	class:PythonCodeOld_ReferencePlaceholderBefore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = '##########\\nHallo Welt'$/;"	v	class:PythonCode_ReferencePlaceholderBefore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = '$hi'$/;"	v	class:TabStop_Shell_TestEscapedChars_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'Hallo now Hallo Welt endand more'$/;"	v
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'Hallo now fromecho endand more'$/;"	v	class:TabStop_Shell_InDefValue_Leave
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'Hallo overwrite endand more'$/;"	v	class:TabStop_Shell_InDefValue_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'OKAYhokayoOKAY'$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteSecond
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'aaa'$/;"	v	class:PythonCode_AccessKilledTabstop_OverwriteFirst
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'blah'$/;"	v	class:TabStop_Shell_TestEscapedCharsAndShellVars_Overwrite
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'egal Hallo End'$/;"	v	class:PythonCodeOld_TransformedBeforeMultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'egal Hallo End'$/;"	v	class:PythonCode_TransformedBeforeMultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'h5b'$/;"	v	class:Python_WeirdScoping_Error
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hVhello\\nnice\\nworld\\nb'$/;"	v	class:PythonVisual_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hbabc'$/;"	v	class:PythonVisual_NoVisualSelection_Ignore
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi Hallo End'$/;"	v	class:PythonCodeOld_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi Hallo End'$/;"	v	class:PythonCode_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi Hallo1\\nHallo2 End'$/;"	v	class:PythonCode_SimpleAppend
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi Hallo1\\nHallo2\\nHallo3 End'$/;"	v	class:PythonCode_MultiAppend
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi New End'$/;"	v	class:PythonCode_UseNewOverOld
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi hallo you!and more'$/;"	v	class:TabStop_Shell_SimpleExample
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi hallo\\nWeiterand more'$/;"	v	class:TabStop_Shell_TextInNextLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi höüäh you!and more'$/;"	v	class:TabStop_Shell_WithUmlauts
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi' + 100 * 'a' + 'endups'$/;"	v	class:PythonCode_LongerTextThanSource_Chars
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hi' + 100 * 'a' + 100 * '\\n' + 100 * 'a' + 'endups'$/;"	v	class:PythonCode_LongerTextThanSource_MultiLine
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hiEnd'$/;"	v	class:PythonCode_SimpleExample_ReturnValueIsEmptyString
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'ho ho.blah End'$/;"	v	class:PythonCodeOld_ReferencePlaceholderAfter
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'ho ho.blah End'$/;"	v	class:PythonCode_ReferencePlaceholder
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'hvblablubb'$/;"	v	class:PythonVisual_SelectOneWord
wanted	plugged/ultisnips/test/test_Interpolation.py	/^    wanted = 'ups egal hi hi'$/;"	v	class:PythonCode_TrickyReferences
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = ' BLAAH'$/;"	v	class:ListAllAvailable_SpaceInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = 'BLAAH'$/;"	v	class:ListAllAvailable_NothingTyped_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = 'hallo BLAAH'$/;"	v	class:ListAllAvailable_testtyped_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = 'hallo TEST ONE'$/;"	v	class:ListAllAvailable_testtypedSecondOpt_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = 'hallo qualleHi'$/;"	v	class:ListAllAvailable_NonDefined_NoExpectionShouldBeRaised
wanted	plugged/ultisnips/test/test_ListSnippets.py	/^    wanted = '} BLAAH'$/;"	v	class:ListAllAvailable_BraceInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^        ' hallo du\\nwie gehts'$/;"	v	class:SimpleMirrorSameLineManyMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = '    hallo\\nhallo\\nahallob\\nhallo\\ntest hallo mich'$/;"	v	class:SimpleMirrorMultilineMany_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ObenVorne hallo welt ObenHinten\\nVorne hallo welt Hinten'$/;"	v	class:TextTabStopAllSurrounded_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'Vorne hallo test Hinten\\nhallo test'$/;"	v	class:TextTabStopTextSurroundedTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'Vorne hallo\\nhallo'$/;"	v	class:TextTabStopTextBeforeTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'a a a'$/;"	v	class:MirrorBeforeTabstopOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha blah hi hulla end hu hi hub hulla'$/;"	v	class:TabstopWithMirrorManyFromAll_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha blub blub'$/;"	v	class:TabstopWithMirrorInDefaultNoType1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha blub blub.h'$/;"	v	class:TabstopWithMirrorInDefaultNoType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha defa\\ndefa'$/;"	v	class:SimpleTabstopWithDefaultSimpelKeep_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha default value default value\\nanother: default value mirror'$/;"	v	class:SimpleTabstopWithDefaultComplexKeep_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha stdin do snap stdin.h do snap'$/;"	v	class:TabstopWithMirrorInDefaultMultipleOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha stdin overwritten'$/;"	v	class:TabstopWithMirrorInDefaultOverwrite1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha stdin overwritten'$/;"	v	class:TabstopWithMirrorInDefaultOverwrite_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha stdin snip stdin.h snip'$/;"	v	class:TabstopWithMirrorInDefaultMultipleLeave_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha stdin stdin.h stdin.c\\ntest stdin'$/;"	v	class:TabstopWithMirrorInDefaultTwiceAndExtra_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha stdin stdinend'$/;"	v	class:TabstopWithMirrorInDefaultNoOverwrite1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha world world\\nanother: world mirror'$/;"	v	class:SimpleTabstopWithDefaultComplexType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ha world\\nworld'$/;"	v	class:SimpleTabstopWithDefaultSimpelType_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hal\\nhal'$/;"	v	class:SimpleMirrorDelete_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'halhups\\nhalhups'$/;"	v	class:SimpleMirrorDeleteSomeEnterSome_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo Du\\nAch Blah\\nhallo Du\\nAch Blah\\nhallo Du\\nAch Blah'$/;"	v	class:MultilineTabStopSimpleMirrorDeleteInLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo Du\\nHi\\n\\nhallo Du\\nHi\\n\\nhallo Du\\nHi'$/;"	v	class:MultilineTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo Du\\nHi\\nhallo Du\\nHi\\nhallo Du\\nHi'$/;"	v	class:MultilineTabStopSimpleMirrorMultiline1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo Hinten\\nhallo'$/;"	v	class:TextTabStopTextAfterTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo du hallo du hallo du hallo du'$/;"	v	class:SimpleMirrorSameLineMany_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo foo hallo foo'$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_DelB4Typing_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo foo hallo foo'$/;"	v	class:SimpleMirrorSameLineBeforeTabDefVal_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo hallo'$/;"	v	class:SimpleMirrorSameLine_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo noauch ahiuch_end'$/;"	v	class:Mirror_TestKill_InsertBeginning_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo noauch auchih_end'$/;"	v	class:Mirror_TestKill_InsertEnd_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo noauch hinoauch_end'$/;"	v	class:Mirror_TestKill_InsertBefore_NoKill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo noauch noauchab_end'$/;"	v	class:Mirror_TestKill_InsertAfter_NoKill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo welt\\nVorne hallo welt Hinten'$/;"	v	class:TextTabStopSurroundMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo weltelt '$/;"	v	class:Mirror_TestKillTabstop_Kill
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo\\nVorne hallo'$/;"	v	class:TextTabStopTextBeforeMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo\\nagain\\nhallo\\nagain'$/;"	v	class:TextTabStopSimpleMirrorMultilineMirrorInFront_ECR
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo\\nhallo Hinten'$/;"	v	class:TextTabStopAfterMirror_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'hallo\\nhallo'$/;"	v	class:TextTabStopSimpleMirrorMultiline_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'this is it this is it this is it'$/;"	v	class:MirrorBeforeTabstopLeave_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Mirror.py	/^    wanted = 'ups hallo hallo blah'$/;"	v	class:SimpleMirrorSameLine_InText_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Movement.py	/^        'this is something\\nvery nice\\nnotmore text'$/;"	v	class:CursorMovement_Multiline_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = '<tr>\\n\\t<th>blah<\/th>\\n<\/tr>\\nend'$/;"	v	class:CursorMovement_BS_InEditMode
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'hello tab blub tab ' + JF + 'hallothis'$/;"	v	class:IMMoving_ExitWhenOutsideRight_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'hello tab hallo tab this'$/;"	v	class:IMMoving_NoExitingEventAtEnd_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'hello tab hallo tab this'$/;"	v	class:IMMoving_NoExiting_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'hello tab hallo this'$/;"	v	class:IMMoving_NotExitingWhenBarelyOutsideLeft_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'hello tab\\nblub this\\n' + JF + 'testhallo'$/;"	v	class:IMMoving_ExitWhenOutsideBelow_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'hello' + JF + 'hallo tab blub this'$/;"	v	class:IMMoving_ExitWhenOutsideLeft_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'text'$/;"	v	class:IMMoving_CursorsKeys_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = 'thhallo\\nweltis thhallo\\nweltis'$/;"	v	class:IMMoving_AcceptInputWhenMoved_ECR
wanted	plugged/ultisnips/test/test_Movement.py	/^    wanted = JF + 'hallo\\nhello tab\\nblub this'$/;"	v	class:IMMoving_ExitWhenOutsideAbove_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = 'Case1'$/;"	v	class:Multiple_SimpleCaseSelectFirst_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = 'Case2'$/;"	v	class:Multiple_SimpleCaseSelectSecond_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = 'Case2'$/;"	v	class:Multiple_SimpleCaseSelectTooHigh_ESelectLast
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = 'testhi'$/;"	v	class:Multiple_ManySnippetsOneTrigger_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = 'testhi'$/;"	v	class:Multiple_SimpleCaseEscapeOut_ECR
wanted	plugged/ultisnips/test/test_MultipleMatches.py	/^    wanted = 'testhi'$/;"	v	class:Multiple_SimpleCaseSelectZero_EEscape
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'This is a test snippet!'$/;"	v	class:ParseSnippets_SimpleSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'This is a test.'$/;"	v	class:ParseSnippets_MultiWord_Quotes
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'This is a test.'$/;"	v	class:ParseSnippets_MultiWord_Simple
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'This is a test.'$/;"	v	class:ParseSnippets_MultiWord_WithQuotes
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'This is another test.'$/;"	v	class:ParseSnippets_MultiWord_Description
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'This is yet another test.'$/;"	v	class:ParseSnippets_MultiWord_Description_Option
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'abc az test'$/;"	v	class:ParseSnippets_MultiWord_RE1
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'foo-bar test bar\\t\\nfoo-bar test'$/;"	v	class:ParseSnippets_MultiWord_RE2
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 're-test'$/;"	v	class:ParseSnippets_MultiWord_RE3
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearAll
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_ExtendsWithoutFiletype
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_InvalidPriorityLine1
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_MissingEndSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'testsnip' + EX$/;"	v	class:ParseSnippets_UnknownDirective
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'toclear' + EX + '\\n' + 'This is a test.'$/;"	v	class:ParseSnippets_ClearOne
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'toclear' + EX + '\\n' + 'testsnip' + EX$/;"	v	class:ParseSnippets_ClearTwo
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'x a bob b y\\nx a jon b y'$/;"	v	class:ParseSnippets_Global_Python
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = 'x first a bob b y'$/;"	v	class:ParseSnippets_Global_Local_Python
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_NoContainer
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_MultiWord_UnmatchedContainer
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippet
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetContext
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetLocation
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPostAction
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintErroneousSnippetPreAction
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktrace
wanted	plugged/ultisnips/test/test_ParseSnippets.py	/^    wanted = keys$/;"	v	class:ParseSnippets_PrintPythonStacktraceMultiline
wanted	plugged/ultisnips/test/test_Plugin.py	/^    wanted = 'longtextlongtext\\nlongtextlongtext\\nHello'$/;"	v	class:Plugin_SuperTab_SimpleTest
wanted	plugged/ultisnips/test/test_Recursive.py	/^        'M END -> end'$/;"	v	class:RecTabStops_InNewlineMultilineWithNonZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'A A AB B C CD D DE E B hi'$/;"	v	class:RecTabStops_ExpandedInZeroTSSecondTime_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'A A C CD D DE E B again B hi'$/;"	v	class:RecTabStops_ExpandedInZeroTSTwice_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'A C CD D DE E B hi'$/;"	v	class:RecTabStops_ExpandedInZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'A C CD D DE E B'$/;"	v	class:RecTabStops_OuterOnlyWithZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'A C CD D DE E B'$/;"	v	class:RecTabStops_OuterOnlyWithZero_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'M START\\n    M START\\n        hi\\n    M END\\nM END'$/;"	v	class:RecTabStops_InNewlineMultilineWithIndent_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'M START\\n    M START\\n    hi\\n    M END\\nM END'$/;"	v	class:RecTabStops_InNewlineManualIndent_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'M START\\n    hallo M START\\n    hi\\n    M END\\nM END'$/;"	v	class:RecTabStops_InNewlineManualIndentTextInFront_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'M START\\nM START\\n\\nM END\\nM END'$/;"	v	class:RecTabStops_InNewlineMultiline_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ ASnip Hallo ASnip Hi ASnipendone two ] ASnip Hallo ASnip Hi ASnipendonetotalend'$/;"	v	class:RecTabStops_MirrorInnerSnippet_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ JST  JSThi ]end'$/;"	v	class:RecTabStops_InnerWOTabStopTwice_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ JST JSThi  two ]end'$/;"	v	class:RecTabStops_InnerWOTabStopTwiceDirectly_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ Just some Texthi  two ]end'$/;"	v	class:RecTabStops_InnerWOTabStop_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ [ a sec ] hallo ]ups world ]end'$/;"	v	class:RecTabStops_LeavingInnerInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ [ a sec ] sec ] hallo ]end'$/;"	v	class:RecTabStops_LeavingInnerInnerTwo_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ a hallo ]ups world ]end'$/;"	v	class:RecTabStops_BarelyNotLeavingInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ a sec ] hallo ]world'$/;"	v	class:RecTabStops_LeavingInner_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ hello  sec ]  world ]end'$/;"	v	class:RecTabStops_SimpleCaseLeaveFirstSecond_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ hello  world ]  sec ]end'$/;"	v	class:RecTabStops_SimpleCaseLeaveSecondSecond_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ hello  world ]ups  end ]'$/;"	v	class:RecTabStops_SimpleCase_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ one three three two ] four ]end'$/;"	v	class:RecTabStops_MirroredZeroTS_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ [ one three two ] four ]end'$/;"	v	class:RecTabStops_ZeroTSisNothingSpecial_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ hello [ hi  two ]ups  three ]end'$/;"	v	class:RecTabStops_NotAtBeginningOfTS_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ hello\\n[ hi  two ]ups  three ]end'$/;"	v	class:RecTabStops_InNewlineInTabstop_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = '[ hello\\nhello again [ hi  two ]ups  three ]end'$/;"	v	class:RecTabStops_InNewlineInTabstopNotAtBeginOfLine_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = 'form_for user, namespace: some_namespace, html: {(id: |class: |title:  )d: '$/;"	v	class:RecTabStops_ChildTriggerContainsParentTextObjects
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"\\vec{\\frac{a}\\frac{aa}cc{two}{b}}hello \\frac{one}world{two}"$/;"	v	class:RecTabsStops_TypeInZero_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"_hello _world _end"$/;"	v	class:RecTabsStops_TypeInZero2_ECR
wanted	plugged/ultisnips/test/test_Recursive.py	/^    wanted = r"oneoneexplicit zerotwotwo"$/;"	v	class:RecTabsStops_BackspaceZero_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'Hello'$/;"	v	class:SelectModeMappings_BufferLocalMappings_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'Hello'$/;"	v	class:SelectModeMappings_IgnoreMappings_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'Hello'$/;"	v	class:SelectModeMappings_RemoveBeforeSelecting_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'Hello'$/;"	v	class:_SelectModeMappings
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'huiw ui'$/;"	v	class:ExclusiveSelection_SimpleTabstop_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'huiw ui'$/;"	v	class:OldSelection_SimpleTabstop_Test
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'xello'$/;"	v	class:SelectModeMappings_DisableRemoveBeforeSelecting_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'xello'$/;"	v	class:SelectModeMappings_IgnoreMappings1_ECR
wanted	plugged/ultisnips/test/test_Selection.py	/^    wanted = 'xello'$/;"	v	class:SelectModeMappings_IgnoreMappings2_ECR
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'This is a stand alone snippet\\nThis is two stand alone snippet\\nThree'$/;"	v	class:snipMate_SimpleSnippetInSnippetFile
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'This is a test snippet'$/;"	v	class:snipMate_SimpleSnippetSubDirectory
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'This is a test snippet\\n# With a comment'$/;"	v	class:snipMate_SimpleSnippet
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'blah'$/;"	v	class:snipMate_Extends
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'blub is blah'$/;"	v	class:snipMate_TestNoBraceTabstops
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'blub is blub, blah is blah'$/;"	v	class:snipMate_TestNoBraceTabstopsAndMirrors
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'blub\\n\\nblah\\n'$/;"	v	class:snipMate_EmptyLinesContinueSnippets
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'for (j; j < blub; blub++) {\\n\\thi\\n}'$/;"	v	class:snipMate_TestMirrors
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'h$${2:blub}$$hi'$/;"	v	class:snipMate_NoNestedTabstops
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'hblablubb'$/;"	v	class:snipMate_Visual_Simple
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'hello' + EX + '\\nworked'$/;"	v	class:snipMate_OtherFiletype
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'hello' + EX$/;"	v	class:snipMate_Disabled
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'lac03lu'$/;"	v	class:snipMate_Interpolation
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'laöäülu'$/;"	v	class:snipMate_InterpolationWithSystem
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'two'$/;"	v	class:snipMate_MultiMatches
wanted	plugged/ultisnips/test/test_SnipMate.py	/^    wanted = 'ultisnips'$/;"	v	class:snipMate_OverwrittenByRegExpTrigger
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = '1: 1\\n2'$/;"	v	class:SnippetActions_PostActionModifiesLineAfterSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = '[(1)2'$/;"	v	class:SnippetActions_PostActionModifiesCharAfterSnippet
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = '\\nabc'$/;"	v	class:SnippetActions_PreActionModifiesBuffer
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = 'abc\\n'$/;"	v	class:SnippetActions_PostActionModifiesBuffer
wanted	plugged/ultisnips/test/test_SnippetActions.py	/^    wanted = 'def123'$/;"	v	class:SnippetActions_DoNotBreakCursorOnSingleLikeChange
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '   Expand me!'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '   Expand me!'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '  Expand me!'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '  Expand me!'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWOChoose
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '  \\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_ET_Leading_Spaces
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '  \\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_Leading_Spaces
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = ' .a' + EX$/;"	v	class:SnippetOptions_Regex_Self_TextAfter
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = ' self.'$/;"	v	class:SnippetOptions_Regex_Self_Space
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '$Expand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '-Expand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:MultiWordSnippet_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippets_ExpandSingle
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_ExpandWordSnippets_NormalExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_Expand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_Multiple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_SameLine_Long_End
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_SameLine_Long_Start
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'Expand me!'$/;"	v	class:SnippetOptions_Regex_WithSpace
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '[[Expand me!'$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix3
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_ET
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_ET_SW
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_ET_SW_TS
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_No_TS
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = '\\t\\t\\tExpand\\tme!\\t'$/;"	v	class:No_Tab_Expand_Leading_Tabs
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a not at beginning'$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a not at beginning'$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_OneWithOneWO
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a test it' + EX$/;"	v	class:MultiWord_SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a test' + EX$/;"	v	class:SnippetOptions_OnlyExpandWhenWSInFront_DontExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a(Expand me!'$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix2
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a-Expand me!'$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a-Expand me!'$/;"	v	class:SnippetOptions_ExpandWordSnippets_ExpandSuffix
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'a.' + EX$/;"	v	class:SnippetOptions_Regex_Self_TextBefore
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'aExpand me!'$/;"	v	class:MultiWord_SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'aExpand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippets_SimpleExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'abc test Expand me!'$/;"	v	class:SnippetOptions_Regex_SameLine_Simple
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'atest it' + EX$/;"	v	class:MultiWord_SnippetOptions_ExpandWordSnippets_NoExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'atest' + EX$/;"	v	class:SnippetOptions_ExpandWordSnippets_NoExpand
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'self.'$/;"	v	class:SnippetOptions_Regex_Self_Start
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'test No match'$/;"	v	class:SnippetOptions_Regex_PythonBlockNoMatch
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'test fedcab'$/;"	v	class:SnippetOptions_Regex_PythonBlockMatch
wanted	plugged/ultisnips/test/test_SnippetOptions.py	/^    wanted = 'ßßExpand me!'$/;"	v	class:SnippetOptions_ExpandInwordSnippetsWithOtherChars_Expand3
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'Hallo'$/;"	v	class:SnippetPriorities_DoNotCareAboutNonMatchings
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'Should only expand in p.\\ntest' + EX$/;"	v	class:SnippetPriorities_ClearedByChild
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'This is a test snippet'$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'This is a test snippet'$/;"	v	class:SnippetPriorities_FileHasHigherThanAdded_neg_prio
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'We overwrite'$/;"	v	class:SnippetPriorities_AddedHasHigherThanFile
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'We overwrite'$/;"	v	class:SnippetPriorities_MultiWordTriggerOverwriteExisting
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'We overwrite'$/;"	v	class:SnippetPriorities_OverwriteExisting
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'We overwrite\\nNo overwrite'$/;"	v	class:SnippetPriorities_OverwriteThenChoose_ECR
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'again'$/;"	v	class:SnippetPriorities_OverwriteTwice_ECR
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'test' + EX$/;"	v	class:SnippetPriorities_ClearedByParent
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'test' + EX$/;"	v	class:SnippetPriorities_SimpleClear
wanted	plugged/ultisnips/test/test_SnippetPriorities.py	/^    wanted = 'test' + EX$/;"	v	class:SnippetPriorities_SimpleClear2
wanted	plugged/ultisnips/test/test_TabStop.py	/^        'test try\\nSeem to work World'$/;"	v	class:TabStopTestMultilineExpand_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteFirstSwitchNumbers
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "'Hallo': 'Hallo' Hallo"$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: blub\\nTrailing texthello"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop_Override
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = "Test: snippet start\\nNested tabstop: hello\\nsnippet end\\nTrailing text"$/;"	v	class:TabStop_TSInDefaultText_ZeroLengthZerothTabstop
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = '${1:literal}'$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfDefinitionText
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = ':latex:`Hello`World'$/;"	v	class:TabStopSimpleReplaceZeroLengthTabstops_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'Hallo haselnhipsut upsend'$/;"	v	class:TabStopNavigatingInInsertModeSimple_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'Hallo: Hallo '$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'This \\\\ is a backslash!'$/;"	v	class:TabStop_EscapingChars_Backslash
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = '[ HelloWorld ] Hello'$/;"	v	class:TabStop_AdjacentTabStopAddText_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = '\\n${1:literal}'$/;"	v	class:TabStop_EscapingCharsDollars_BeginningOfLine
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'a${1:literal}'$/;"	v	class:TabStop_EscapingCharsDollars1
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'each_byte { |byte| Blah }'$/;"	v	class:TabStopTestJumpingRLExampleWithZeroTab_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'echo Hallo'$/;"	v	class:TabStopNoReplace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Blah Lets replace it again' + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping2_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Blah mitteLets replace it again' + JB * 2 + JF$/;"	v	class:TabStopTestBackwardJumping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Du Nase na'$/;"	v	class:TabStopSimpleReplace_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Hi' + 2 * JF + 'du Test'$/;"	v	class:TabStopTestJumpingDontJumpToEndIfThereIsTabZero_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Nase a small feed'$/;"	v	class:TabStopSimpleReplaceSurrounded1_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Nase a small feed'$/;"	v	class:TabStopSimpleReplaceSurrounded_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Test Hi'$/;"	v	class:TabStopTestJumping2_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo Test mitte BeginningHi'$/;"	v	class:TabStopTestJumping_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hallo na Du Nase'$/;"	v	class:TabStopSimpleReplaceReversed_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi  Nothing  Nothing world'$/;"	v	class:TabStop_Multiline_DelFirstOverwriteSecond_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi Blah Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpAround
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi Hallo '$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_Overwrite0
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi Nothing Nothing world'$/;"	v	class:TabStop_Multiline_MirrorInFront_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi Nothing world'$/;"	v	class:TabStop_Multiline_Overwrite
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi first line\\nsecond line first line\\nsecond line world'$/;"	v	class:TabStop_Multiline_MirrorInFront_Leave
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi first line\\nsecond line world'$/;"	v	class:TabStop_Multiline_Leave
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi this Hallo Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpBackToOther
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi this Hallo Hallo'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_OverwriteSecond
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi this second Hallo Ende'$/;"	v	class:TabStop_TSInDefaultNested_OverwriteOneJumpToThird
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hi this second second'$/;"	v	class:TabStop_TSInDefault_MirrorsOutside_DoNothing
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hisnip '$/;"	v	class:TabStopEscapingWhenSelectedNoCharTS_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hisnip default'$/;"	v	class:TabStopEscapingWhenSelected_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'hisnip i'$/;"	v	class:TabStopEscapingWhenSelectedSingleCharTS_ECR
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'ia(1, 2) after: 3'$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippet
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'ia(1, 2) after: 3'$/;"	v	class:TabStop_KeepCorrectJumpListOnOverwriteOfPartOfSnippetRE
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'nothing ship hups'$/;"	v	class:TabStopWithOneChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'snip $0 $hi end'$/;"	v	class:TabStop_EscapingCharsDollars
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'snip ` literal'$/;"	v	class:TabStop_EscapingCharsBackticks
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'test run'$/;"	v	class:TabStop_Exit_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'tt\\nt{\\n\\tt\\n}'$/;"	v	class:TabStop_CROnlyOnSelectedNear
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = 'usage: `basename $0` [ -u -v -d ]'$/;"	v	class:TabStop_EscapingChars_RealLife
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"These are two backslashes \\\\ done"$/;"	v	class:TabStop_EscapingChars_Backslash3
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"This is a backslash \\ done"$/;"	v	class:TabStop_EscapingChars_Backslash2
wanted	plugged/ultisnips/test/test_TabStop.py	/^    wanted = r"\\hello{world}"$/;"	v	class:TabStop_EscapingChars_Backslash4
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = '* test\\n* test\\n* test'$/;"	v	class:Transformation_OptionMultiline_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'HALLO hallo'$/;"	v	class:Transformation_CleverTransformLongLower_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'Hallo hallo'$/;"	v	class:Transformation_CleverTransformLowercaseChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'SomE tExt SOME TEXT \\nsome text '$/;"	v	class:Transformation_MultipleTransformations_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'TEST blah'$/;"	v	class:Transformation_OptionIgnoreCase_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'a b  c d e f ghhh h oha a b  c d e f ghhh h...'$/;"	v	class:Transformation_ConditionalInsertRWEllipsis_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'a some more text began with an a'$/;"	v	class:Transformation_ConditionalInsertionSimple_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'a some yes'$/;"	v	class:Transformation_CIBothDefinedPositive_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'a, nice,   building a, nice, building'$/;"	v	class:Transformation_OptionReplaceGlobalMatchInReplace_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'a, nice, building a-nice-building'$/;"	v	class:Transformation_OptionReplaceGlobal_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'aa yes:no)'$/;"	v	class:Transformation_ConditionalWithEscapedDelimiter
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'aa yes\\\\'$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'ab no\\\\'$/;"	v	class:Transformation_ConditionalWithBackslashBeforeDelimiter1
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'b some no'$/;"	v	class:Transformation_CIBothDefinedNegative_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'dead parrot this parrot is a bit dead'$/;"	v	class:Transformation_BackreferenceTwice_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'foo boo aoo foo bull aoo'$/;"	v	class:Transformation_Backreference_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo '$/;"	v	class:Transformation_TabIsAtEndAndDeleted_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo '$/;"	v	class:Transformation_TabIsAtEndNoTextLeave_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo .\\nhallo- >\\nhallo-> '$/;"	v	class:Transformation_ConditionalInConditional_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo HALLO'$/;"	v	class:Transformation_CleverTransformLongUpper_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo Hallo'$/;"	v	class:Transformation_CleverTransformUpercaseChar_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo batzl hallo foo'$/;"	v	class:Transformation_SimpleCaseTransformInFrontDefVal_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo batzl hallo foo'$/;"	v	class:Transformation_SimpleCaseTransformInFront_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo foo boy hallo batzl boy'$/;"	v	class:Transformation_SimpleCase_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo hallo'$/;"	v	class:Transformation_SimpleCaseNoTransform_ExpectCorrectResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo is somethingb'$/;"	v	class:Transformation_TabIsAtEndNoTextType_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo is somethingmore'$/;"	v	class:Transformation_TabIsAtEndAndDeleted1_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo noAUCH ahiuchauch_end'$/;"	v	class:Transformation_TestKill_InsertBeginning_Kill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo noAUCH auchauchih_end'$/;"	v	class:Transformation_TestKill_InsertEnd_Kill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo noAUCH hinoauchnoauch_end'$/;"	v	class:Transformation_TestKill_InsertBefore_NoKill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'hallo noAUCH noauchnoauchab_end'$/;"	v	class:Transformation_TestKill_InsertAfter_NoKill
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'snip  '$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValue_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'snip  m2  hi'$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInFirstTab_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'snip m1  hi '$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueInSecondTab_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'snip matched hallo'$/;"	v	class:TransformationUsingBackspaceToDeleteDefaultValueTypeSomethingThen_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'sometext defined sometext'$/;"	v	class:Transformation_InsideTabLeaveAtDefault_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'sometext overwrite'$/;"	v	class:Transformation_InsideTabOvertype_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'test, hallo test\\nhallo'$/;"	v	class:Transformation_CINewlines_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'test, hallo test\\thallo'$/;"	v	class:Transformation_CITabstop_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'test, halul test, ha(ul)'$/;"	v	class:Transformation_CIEscapedParensinReplace_ECR
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'éèàçôïÉÈÀÇÔÏ€ eeacoiEEACOIEUR'$/;"	v	class:Transformation_SimpleCaseAsciiResult
wanted	plugged/ultisnips/test/test_Transformation.py	/^    wanted = 'éèàçôïÉÈÀÇÔÏ€ eeacoieeacoieur'$/;"	v	class:Transformation_LowerCaseAsciiResult
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = "te'123êabc"$/;"	v	class:VerifyVimDict3
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = 'abc simple expand'$/;"	v	class:AddFunc_Simple
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = 'simple expand'$/;"	v	class:AddFunc_Opt
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = 'te"123êabc'$/;"	v	class:VerifyVimDict2
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = 'test41123\\'êabc0'$/;"	v	class:VerifyVimDict1
wanted	plugged/ultisnips/test/test_UltiSnipFunc.py	/^    wanted = ($/;"	v	class:AddNewSnippetSource
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = '\\tbhlablbub'$/;"	v	class:Visual_SelectOneWord_ProblemAfterTab
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'beg\\n\\t    hello\\n\\t    nice\\n\\t\\tworld\\nend'$/;"	v	class:Visual_LineSelect_CheckIndentTwice
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'beg\\n\\thello\\n\\tnice\\n\\tworld\\n\\tsuper\\nenddone'$/;"	v	class:Visual_LineSelect_WithTabStop
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'beg\\n\\thello\\n\\tnice\\n\\tworld\\nend'$/;"	v	class:Visual_LineSelect_CheckIndentSimple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'beg\\n\\thello\\n\\tnice\\n\\tworld\\nend'$/;"	v	class:Visual_LineSelect_CheckIndentWithTS_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'bhlablubb'$/;"	v	class:Visual_SelectOneWord_Inword
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'bla hblub\\n  hellobi'$/;"	v	class:Visual_CrossOneLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hBLABLUBb'$/;"	v	class:VisualTransformationWithDefault_ExpandWithVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hBLABLUBb'$/;"	v	class:VisualTransformation_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hHELLO\\n NICE\\n WORLDb'$/;"	v	class:VisualTransformation_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hWORLDbhi'$/;"	v	class:VisualTransformationWithDefault_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'h\/\/ bodybhi'$/;"	v	class:VisualWithDefaultWithSlashes_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hbabc'$/;"	v	class:Visual_NoVisualSelection_Ignore
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hbefHELLO\\n    NICE\\n    WORLDaftbhi'$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hbefhello\\n    nice\\n    worldaftbhi'$/;"	v	class:Visual_InDefaultText_LineSelect_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hbeforeaaahello\\n\\t  nice\\n\\t  worldaftbhi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite1
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hbeforeahello\\n\\tnice\\n\\tworldaftbhi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hblablub\\nb'$/;"	v	class:Visual_SelectOneWord_TillEndOfLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hblablubb'$/;"	v	class:VisualWithDefault_ExpandWithVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hblablubb'$/;"	v	class:Visual_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hblablubb\\nhb'$/;"	v	class:Visual_ExpandTwice
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hblablubbblabluba'$/;"	v	class:Visual_SelectOneWord_TwiceVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hblablubbhello'$/;"	v	class:Visual_InDefaultText_SelectOneWord_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hello\\n\\t hello\\n\\t nice\\n\\t world\\nendhi'$/;"	v	class:Visual_InDefaultText_IndentBeforeTabstop_NoOverwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hhello\\n nice\\n worldb'$/;"	v	class:Visual_LineSelect_Simple
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hhellob'$/;"	v	class:Visual_InDefaultText_SelectOneWord
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hjupbhi'$/;"	v	class:VisualTransformation_InDefaultText_LineSelect_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hjupbhi'$/;"	v	class:Visual_InDefaultText_LineSelect_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hnblablub\\nmmmbdone'$/;"	v	class:Visual_SelectOneWordWithTabstop_TillEndOfLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hupsbhi'$/;"	v	class:Visual_InDefaultText_IndentSpacesToTabstop_Overwrite
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'hworldbhi'$/;"	v	class:VisualWithDefault_ExpandWithoutVisual
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'if {\\n\\tif {\\n\\t\\tone\\n\\t\\ttwo\\n\\t}\\n\\tthree\\n}'$/;"	v	class:Visual_LineSelect_DedentLine
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'xxxhyyybyxxx'$/;"	v	class:Visual_SelectOneWordExclusive
wanted	plugged/ultisnips/test/test_Visual.py	/^    wanted = 'xxxhyyyybxxx'$/;"	v	class:Visual_SelectOneWordInclusive
wanted	plugged/ultisnips/test/vim_test_case.py	/^    wanted = ''$/;"	v	class:VimTestCase
warn	autoload/plug.vim	/^function! s:warn(cmd, msg)$/;"	f
warn	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def warn(self, message, location=None, prefix='WARNING: '):$/;"	m	class:Sphinx
warn	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    warn = warning$/;"	v	class:LoggingMixin
warn	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:warn(message)$/;"	f
warn	plugged/vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
warn	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str) abort$/;"	f
warn	plugged/vim-rails/autoload/rails.vim	/^function! s:warn(str) abort$/;"	f
warn	plugged/vim-startify/autoload/startify.vim	/^function! s:warn(msg) abort$/;"	f
warning	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def warning(self, *args, **kwargs):$/;"	m	class:AutodocReporter
warning	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def warning(self, msg, *args, **kwargs):$/;"	m	class:LoggingMixin
warning	plugged/tagbar/autoload/tagbar.vim	/^function! s:warning(msg) abort$/;"	f
warning	plugged/vim-polyglot/ftplugin/latex-box/common.vim	/^		let warning = escape(substitute(w, '[\\,]', '%\\\\\\\\&', 'g'), ' ')$/;"	v
warnings	plugged/ultisnips/pythonx/UltiSnips/compatibility.py	/^    import warnings$/;"	i
wc	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal wc$/;"	m
wcswidth	plugged/vim-easymotion/autoload/vital/_easymotion/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
webcat	plugged/vim-rails/autoload/rails.vim	/^function! s:webcat() abort$/;"	f
webdevicons	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^def webdevicons(pl, segment_info):$/;"	f
webdevicons#hardRefresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#hardRefresh()$/;"	f
webdevicons#refresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#refresh()$/;"	f
webdevicons#softRefresh	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#softRefresh()$/;"	f
webdevicons#version	plugged/vim-devicons/plugin/webdevicons.vim	/^function! webdevicons#version()$/;"	f
webdevicons_file_format	plugged/vim-devicons/pythonx/vim_devicons/powerline/segments.py	/^def webdevicons_file_format(pl, segment_info):$/;"	f
wh	plugged/vim-easymotion/t/easymotion_spec.vim	/^        normal wh$/;"	m
where_am_i	plugged/alchemist.vim/elixir_sense_client	/^def where_am_i():$/;"	f
whitespace	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/cache.py	/^from string import whitespace$/;"	i
widget_attributes	plugged/vim-polyglot/autoload/xml/aria.vim	/^let widget_attributes = {$/;"	v
widget_role	plugged/vim-polyglot/autoload/xml/aria.vim	/^let widget_role = [$/;"	v
widget_role	plugged/vim-polyglot/autoload/xml/html5.vim	/^    let widget_role = ['alert', 'alertdialog', 'button', 'checkbox', 'combobox', 'dialog', 'gridcell', 'link', 'log', 'marquee', 'menuitem', 'menuitemcheckbox', 'menuitemradio', 'option', 'progressbar', 'radio', 'radiogroup', 'scrollbar', 'searchbox', 'slider', 'spinbutton', 'status', 'switch', 'tab', 'tabpanel', 'textbox', 'timer', 'tooltip', 'treeitem', 'combobox', 'grid', 'listbox', 'menu', 'menubar', 'radiogroup', 'tablist', 'tree', 'treegrid']$/;"	v
win2pos2hint_to_w2l2c2h	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:win2pos2hint_to_w2l2c2h(win2pos2hint) abort$/;"	f
win32com	plugged/ultisnips/test/vim_interface.py	/^        import win32com.client$/;"	i
win32gui	plugged/ultisnips/test/vim_interface.py	/^        import win32gui$/;"	i
wincall	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:wincall(func, arglist, ...) abort$/;"	f
windows_sink	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:windows_sink(line)$/;"	f
winnr2poses_to_list	plugged/vim-easymotion/autoload/vital/_easymotion/HitAHint/Motion.vim	/^function! s:winnr2poses_to_list(winnr2poses, ...) abort$/;"	f
winshell	plugged/vim-fugitive/plugin/fugitive.vim	/^function! s:winshell() abort$/;"	f
winshell	plugged/vim-gitgutter/autoload/gitgutter/utility.vim	/^function! s:winshell()$/;"	f
wise	plugged/vim-textobj-user/autoload/textobj/user.vim	/^function! s:wise(default)$/;"	f
with_cd	autoload/plug.vim	/^function! s:with_cd(cmd, dir)$/;"	f
with_index	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
with_index	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
wordcount	plugged/vim-airline/autoload/airline/extensions/wordcount/formatters/default.vim	/^function! s:wordcount()$/;"	f
wordcount_update	plugged/vim-airline/autoload/airline/extensions/wordcount.vim	/^function! s:wordcount_update()$/;"	f
words.gather_candidates	plugged/tmux-complete.vim/autoload/unite/sources/tmuxcomplete.vim	/^function! s:words.gather_candidates(args, context)$/;"	f
words_to_pattern	plugged/vim-notes/autoload/xolox/notes.vim	/^function! s:words_to_pattern(words)$/;"	f
work_queue	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^work_queue = queue.Queue()$/;"	v
worker	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi.py	/^from deoplete_jedi import cache, profiler, utils, worker$/;"	i
workers	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/worker.py	/^workers = []$/;"	v
wrap	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:wrap(name, opts, bang)$/;"	f
wrap	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^def wrap(func):$/;"	f
wrap	plugged/vim-polyglot/autoload/vital/_crystal/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrap	plugged/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
wrap_a	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward) abort$/;"	f
wrap_a	plugged/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_a(back,forward) abort$/;"	f
wrap_accent	plugged/vim-airline/autoload/airline/section.vim	/^function! s:wrap_accent(part, value)$/;"	f
wrap_around	plugged/vim-polyglot/ftplugin/mustache.vim	/^function! s:wrap_around()$/;"	f
wrap_exec_test	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! s:wrap_exec_test(function)$/;"	f
wrap_i	plugged/vim-polyglot/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward) abort$/;"	f
wrap_i	plugged/vim-ruby/ftplugin/ruby.vim	/^function! s:wrap_i(back,forward) abort$/;"	f
wrap_inside	plugged/vim-polyglot/ftplugin/mustache.vim	/^function! s:wrap_inside()$/;"	f
wrapped	plugged/fzf.vim/autoload/fzf/vim.vim	/^  let wrapped['sink*'] = remove(wrapped, 'newsink')$/;"	v
wrapper	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/profiler.py	/^    def wrapper(self, *args, **kwargs):$/;"	f	function:profile
wrapper	plugged/deoplete-jedi/rplugin/python3/deoplete/sources/deoplete_jedi/server.py	/^    def wrapper(self, source, *args, **kwargs):$/;"	f	function:retry_completion
wrapper	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^    def wrapper(self, *args, **kwargs):$/;"	f	function:logmethod
wrapper	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^    def wrapper(self, *args, **kwds):$/;"	f	function:wrap
wrapreg	plugged/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
wraps	plugged/deoplete.nvim/rplugin/python3/deoplete/logger.py	/^from functools import wraps$/;"	i
wraps	plugged/ultisnips/pythonx/UltiSnips/err_to_scratch_buffer.py	/^from functools import wraps$/;"	i
wraps	plugged/ultisnips/pythonx/UltiSnips/snippet_manager.py	/^from functools import wraps$/;"	i
write	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def write(self, build_docnames, updated_docnames, method='update'):$/;"	m	class:Builder
write	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^    def write(self, line):$/;"	m	class:RedirectStream
write_buffer	plugged/vim-gitgutter/autoload/gitgutter/diff.vim	/^function! s:write_buffer(bufnr, file)$/;"	f
write_doc	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def write_doc(self, docname, doctree):$/;"	m	class:Builder
write_doc_serialized	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    def write_doc_serialized(self, docname, doctree):$/;"	m	class:Builder
write_file	plugged/deoplete-jedi/tests/sphinx-3000.py	/^def write_file(name, text, opts):$/;"	f
write_plist	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    write_plist = plistlib.dump$/;"	v
write_plist	plugged/deoplete-jedi/tests/sphinx-3000.py	/^    write_plist = plistlib.writePlist$/;"	v
write_process	plugged/deoplete-jedi/tests/sphinx-3000.py	/^        def write_process(docs):$/;"	f	function:Builder._write_parallel
write_snippets	plugged/ultisnips/utils/get_tm_snippets.py	/^def write_snippets(snip_descr, f):$/;"	f
write_temp	plugged/ultisnips/test/vim_interface.py	/^    def write_temp(self, file_path, content):$/;"	m	class:TempFileManager
writelines	plugged/deoplete.nvim/rplugin/python3/deoplete/dp_main.py	/^    def writelines(self, lines):$/;"	m	class:RedirectStream
writer	plugged/deoplete-jedi/tests/test.py	/^writer = csv.writer(open('stocks.csv', 'wb', buffering=0))$/;"	v
ws_refresh	plugged/vim-airline/autoload/airline/extensions/whitespace.vim	/^function! s:ws_refresh()$/;"	f
x	plugged/vim-textobj-user/t/plugin.vim	/^    let x = ''$/;"	v
xml_attributes	plugged/vim-polyglot/autoload/xml/html5.vim	/^let xml_attributes = {'xml:lang': lang_tag, 'xml:space': ['preserve'], 'xml:base': [], 'xmlns': ['http:\/\/www.w3.org\/1999\/xhtml', 'http:\/\/www.w3.org\/1998\/Math\/MathML', 'http:\/\/www.w3.org\/2000\/svg', 'http:\/\/www.w3.org\/1999\/xlink']}$/;"	v
xolox#easytags#async_callback	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#async_callback(response) " {{{2$/;"	f
xolox#easytags#autoload	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#autoload(event) " {{{2$/;"	f
xolox#easytags#check_ctags_compatible	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#check_ctags_compatible(name, min_version) " {{{2$/;"	f
xolox#easytags#ctags_command	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#ctags_command() " {{{2$/;"	f
xolox#easytags#define_tagkind	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#define_tagkind(object) " {{{2$/;"	f
xolox#easytags#disable_automatic_updates	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#disable_automatic_updates() " {{{2$/;"	f
xolox#easytags#filetypes#add_group	plugged/vim-easytags/autoload/xolox/easytags/filetypes.vim	/^function! xolox#easytags#filetypes#add_group(...) " {{{1$/;"	f
xolox#easytags#filetypes#add_mapping	plugged/vim-easytags/autoload/xolox/easytags/filetypes.vim	/^function! xolox#easytags#filetypes#add_mapping(vim_filetype, ctags_language) " {{{1$/;"	f
xolox#easytags#filetypes#canonicalize	plugged/vim-easytags/autoload/xolox/easytags/filetypes.vim	/^function! xolox#easytags#filetypes#canonicalize(vim_filetype_value) " {{{1$/;"	f
xolox#easytags#filetypes#find_ctags_aliases	plugged/vim-easytags/autoload/xolox/easytags/filetypes.vim	/^function! xolox#easytags#filetypes#find_ctags_aliases(canonical_vim_filetype) " {{{1$/;"	f
xolox#easytags#filetypes#to_ctags	plugged/vim-easytags/autoload/xolox/easytags/filetypes.vim	/^function! xolox#easytags#filetypes#to_ctags(vim_filetype) " {{{1$/;"	f
xolox#easytags#filetypes#to_vim	plugged/vim-easytags/autoload/xolox/easytags/filetypes.vim	/^function! xolox#easytags#filetypes#to_vim(ctags_language) " {{{1$/;"	f
xolox#easytags#get_dynamic_tagsfile	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#get_dynamic_tagsfile() " {{{2$/;"	f
xolox#easytags#get_file_type_specific_tagsfile	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#get_file_type_specific_tagsfile() " {{{2$/;"	f
xolox#easytags#get_global_tagsfile	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#get_global_tagsfile() " {{{2$/;"	f
xolox#easytags#get_tagsfile	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#get_tagsfile() " {{{2$/;"	f
xolox#easytags#highlight	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#highlight() " {{{2$/;"	f
xolox#easytags#initialize	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#initialize(min_version) " {{{2$/;"	f
xolox#easytags#register	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#register(global) " {{{2$/;"	f
xolox#easytags#restore_automatic_updates	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#restore_automatic_updates() " {{{2$/;"	f
xolox#easytags#session_is_loading	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#session_is_loading() " {{{2$/;"	f
xolox#easytags#syntax_groups_to_ignore	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#syntax_groups_to_ignore() " {{{2$/;"	f
xolox#easytags#update	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#update(silent, filter_tags, filenames) " {{{2$/;"	f
xolox#easytags#update#convert_by_filetype	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^function! xolox#easytags#update#convert_by_filetype(undo) " {{{1$/;"	f
xolox#easytags#update#foldcase_compare	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^function! xolox#easytags#update#foldcase_compare(a, b) " {{{1$/;"	f
xolox#easytags#update#join_entries	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^function! xolox#easytags#update#join_entries(values) " {{{1$/;"	f
xolox#easytags#update#join_entry	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^function! xolox#easytags#update#join_entry(value) " {{{1$/;"	f
xolox#easytags#update#parse_entries	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^function! xolox#easytags#update#parse_entries(lines) " {{{1$/;"	f
xolox#easytags#update#parse_entry	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^function! xolox#easytags#update#parse_entry(line) " {{{1$/;"	f
xolox#easytags#update#read_tagsfile	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^function! xolox#easytags#update#read_tagsfile(tagsfile) " {{{1$/;"	f
xolox#easytags#update#with_vim	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^function! xolox#easytags#update#with_vim(params) " {{{1$/;"	f
xolox#easytags#update#write_tagsfile	plugged/vim-easytags/autoload/xolox/easytags/update.vim	/^function! xolox#easytags#update#write_tagsfile(tagsfile, headers, entries) " {{{1$/;"	f
xolox#easytags#utils#canonicalize	plugged/vim-easytags/autoload/xolox/easytags/utils.vim	/^function! xolox#easytags#utils#canonicalize(pathname)$/;"	f
xolox#easytags#utils#resolve	plugged/vim-easytags/autoload/xolox/easytags/utils.vim	/^function! xolox#easytags#utils#resolve(pathname)$/;"	f
xolox#easytags#why_so_slow	plugged/vim-easytags/autoload/xolox/easytags.vim	/^function! xolox#easytags#why_so_slow() " {{{2$/;"	f
xolox#misc#async#call	plugged/vim-misc/autoload/xolox/misc/async.vim	/^function! xolox#misc#async#call(options) " {{{1$/;"	f
xolox#misc#async#callback_to_parent	plugged/vim-misc/autoload/xolox/misc/async.vim	/^function! xolox#misc#async#callback_to_parent(response) " {{{1$/;"	f
xolox#misc#async#inside_child	plugged/vim-misc/autoload/xolox/misc/async.vim	/^function! xolox#misc#async#inside_child(request) " {{{1$/;"	f
xolox#misc#async#periodic_callback	plugged/vim-misc/autoload/xolox/misc/async.vim	/^function! xolox#misc#async#periodic_callback() " {{{1$/;"	f
xolox#misc#buffer#is_empty	plugged/vim-misc/autoload/xolox/misc/buffer.vim	/^function! xolox#misc#buffer#is_empty() " {{{1$/;"	f
xolox#misc#buffer#lock	plugged/vim-misc/autoload/xolox/misc/buffer.vim	/^function! xolox#misc#buffer#lock() " {{{1$/;"	f
xolox#misc#buffer#prepare	plugged/vim-misc/autoload/xolox/misc/buffer.vim	/^function! xolox#misc#buffer#prepare(...) " {{{1$/;"	f
xolox#misc#buffer#unlock	plugged/vim-misc/autoload/xolox/misc/buffer.vim	/^function! xolox#misc#buffer#unlock() " {{{1$/;"	f
xolox#misc#complete#keywords	plugged/vim-misc/autoload/xolox/misc/complete.vim	/^function! xolox#misc#complete#keywords(arglead, cmdline, cursorpos)$/;"	f
xolox#misc#cursorhold#autocmd	plugged/vim-misc/autoload/xolox/misc/cursorhold.vim	/^function! xolox#misc#cursorhold#autocmd()$/;"	f
xolox#misc#cursorhold#register	plugged/vim-misc/autoload/xolox/misc/cursorhold.vim	/^function! xolox#misc#cursorhold#register(options)$/;"	f
xolox#misc#escape#pattern	plugged/vim-misc/autoload/xolox/misc/escape.vim	/^function! xolox#misc#escape#pattern(string) " {{{1$/;"	f
xolox#misc#escape#shell	plugged/vim-misc/autoload/xolox/misc/escape.vim	/^function! xolox#misc#escape#shell(string) " {{{1$/;"	f
xolox#misc#escape#substitute	plugged/vim-misc/autoload/xolox/misc/escape.vim	/^function! xolox#misc#escape#substitute(string) " {{{1$/;"	f
xolox#misc#format#pluralize	plugged/vim-misc/autoload/xolox/misc/format.vim	/^function! xolox#misc#format#pluralize(count, singular, plural) " {{{1$/;"	f
xolox#misc#format#timestamp	plugged/vim-misc/autoload/xolox/misc/format.vim	/^function! xolox#misc#format#timestamp(ts) " {{{1$/;"	f
xolox#misc#list#binsert	plugged/vim-misc/autoload/xolox/misc/list.vim	/^function! xolox#misc#list#binsert(list, value, ...) " {{{1$/;"	f
xolox#misc#list#unique	plugged/vim-misc/autoload/xolox/misc/list.vim	/^function! xolox#misc#list#unique(list) " {{{1$/;"	f
xolox#misc#msg#debug	plugged/vim-misc/autoload/xolox/misc/msg.vim	/^function! xolox#misc#msg#debug(...) " {{{1$/;"	f
xolox#misc#msg#info	plugged/vim-misc/autoload/xolox/misc/msg.vim	/^function! xolox#misc#msg#info(...) " {{{1$/;"	f
xolox#misc#msg#warn	plugged/vim-misc/autoload/xolox/misc/msg.vim	/^function! xolox#misc#msg#warn(...) " {{{1$/;"	f
xolox#misc#open#file	plugged/vim-misc/autoload/xolox/misc/open.vim	/^function! xolox#misc#open#file(location, ...) " {{{1$/;"	f
xolox#misc#open#url	plugged/vim-misc/autoload/xolox/misc/open.vim	/^function! xolox#misc#open#url(url) " {{{1$/;"	f
xolox#misc#option#eval_tags	plugged/vim-misc/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#eval_tags(value, ...) " {{{1$/;"	f
xolox#misc#option#get	plugged/vim-misc/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#get(name, ...) " {{{1$/;"	f
xolox#misc#option#join	plugged/vim-misc/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#join(values) " {{{1$/;"	f
xolox#misc#option#join_tags	plugged/vim-misc/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#join_tags(values) " {{{1$/;"	f
xolox#misc#option#split	plugged/vim-misc/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#split(value) " {{{1$/;"	f
xolox#misc#option#split_tags	plugged/vim-misc/autoload/xolox/misc/option.vim	/^function! xolox#misc#option#split_tags(value) " {{{1$/;"	f
xolox#misc#os#can_use_dll	plugged/vim-misc/autoload/xolox/misc/os.vim	/^function! xolox#misc#os#can_use_dll() " {{{1$/;"	f
xolox#misc#os#exec	plugged/vim-misc/autoload/xolox/misc/os.vim	/^function! xolox#misc#os#exec(options) " {{{1$/;"	f
xolox#misc#os#find_vim	plugged/vim-misc/autoload/xolox/misc/os.vim	/^function! xolox#misc#os#find_vim(...) " {{{1$/;"	f
xolox#misc#os#is_mac	plugged/vim-misc/autoload/xolox/misc/os.vim	/^function! xolox#misc#os#is_mac() " {{{1$/;"	f
xolox#misc#os#is_win	plugged/vim-misc/autoload/xolox/misc/os.vim	/^function! xolox#misc#os#is_win() " {{{1$/;"	f
xolox#misc#path#absolute	plugged/vim-misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#absolute(path) " {{{1$/;"	f
xolox#misc#path#commonprefix	plugged/vim-misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#commonprefix(paths) " {{{1$/;"	f
xolox#misc#path#decode	plugged/vim-misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#decode(encoded_path) " {{{1$/;"	f
xolox#misc#path#directory_separator	plugged/vim-misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#directory_separator() " {{{1$/;"	f
xolox#misc#path#encode	plugged/vim-misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#encode(path) " {{{1$/;"	f
xolox#misc#path#equals	plugged/vim-misc/autoload/xolox/misc/path.vim	/^  function! xolox#misc#path#equals(a, b)$/;"	f
xolox#misc#path#is_relative	plugged/vim-misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#is_relative(path) " {{{1$/;"	f
xolox#misc#path#join	plugged/vim-misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#join(parts) " {{{1$/;"	f
xolox#misc#path#merge	plugged/vim-misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#merge(parent, child, ...) " {{{1$/;"	f
xolox#misc#path#relative	plugged/vim-misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#relative(path, base) " {{{1$/;"	f
xolox#misc#path#split	plugged/vim-misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#split(path) " {{{1$/;"	f
xolox#misc#path#starts_with	plugged/vim-misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#starts_with(a, b) " {{{1$/;"	f
xolox#misc#path#tempdir	plugged/vim-misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#tempdir() " {{{1$/;"	f
xolox#misc#path#which	plugged/vim-misc/autoload/xolox/misc/path.vim	/^function! xolox#misc#path#which(...) " {{{1$/;"	f
xolox#misc#perm#get	plugged/vim-misc/autoload/xolox/misc/perm.vim	/^function! xolox#misc#perm#get(fname)$/;"	f
xolox#misc#perm#set	plugged/vim-misc/autoload/xolox/misc/perm.vim	/^function! xolox#misc#perm#set(fname, perms)$/;"	f
xolox#misc#perm#update	plugged/vim-misc/autoload/xolox/misc/perm.vim	/^function! xolox#misc#perm#update(fname, contents)$/;"	f
xolox#misc#persist#load	plugged/vim-misc/autoload/xolox/misc/persist.vim	/^function! xolox#misc#persist#load(filename, ...) " {{{1$/;"	f
xolox#misc#persist#save	plugged/vim-misc/autoload/xolox/misc/persist.vim	/^function! xolox#misc#persist#save(filename, value) " {{{1$/;"	f
xolox#misc#str#compact	plugged/vim-misc/autoload/xolox/misc/str.vim	/^function! xolox#misc#str#compact(s) " {{{1$/;"	f
xolox#misc#str#dedent	plugged/vim-misc/autoload/xolox/misc/str.vim	/^function! xolox#misc#str#dedent(text) " {{{1$/;"	f
xolox#misc#str#indent	plugged/vim-misc/autoload/xolox/misc/str.vim	/^function! xolox#misc#str#indent(text, num_spaces) " {{{1$/;"	f
xolox#misc#str#slug	plugged/vim-misc/autoload/xolox/misc/str.vim	/^function! xolox#misc#str#slug(s) " {{{1$/;"	f
xolox#misc#str#trim	plugged/vim-misc/autoload/xolox/misc/str.vim	/^function! xolox#misc#str#trim(s) " {{{1$/;"	f
xolox#misc#str#ucfirst	plugged/vim-misc/autoload/xolox/misc/str.vim	/^function! xolox#misc#str#ucfirst(s) " {{{1$/;"	f
xolox#misc#str#unescape	plugged/vim-misc/autoload/xolox/misc/str.vim	/^function! xolox#misc#str#unescape(s) " {{{1$/;"	f
xolox#misc#test#assert_equals	plugged/vim-misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#assert_equals(expected, received) " {{{1$/;"	f
xolox#misc#test#assert_same_type	plugged/vim-misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#assert_same_type(expected, received) " {{{1$/;"	f
xolox#misc#test#assert_true	plugged/vim-misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#assert_true(expr) " {{{1$/;"	f
xolox#misc#test#failed	plugged/vim-misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#failed() " {{{1$/;"	f
xolox#misc#test#passed	plugged/vim-misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#passed() " {{{1$/;"	f
xolox#misc#test#reset	plugged/vim-misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#reset() " {{{1$/;"	f
xolox#misc#test#summarize	plugged/vim-misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#summarize() " {{{1$/;"	f
xolox#misc#test#wrap	plugged/vim-misc/autoload/xolox/misc/test.vim	/^function! xolox#misc#test#wrap(function) " {{{1$/;"	f
xolox#misc#tests#asynchronous_command_execution	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#asynchronous_command_execution() " {{{2$/;"	f
xolox#misc#tests#binary_insertion	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#binary_insertion() " {{{2$/;"	f
xolox#misc#tests#finding_vim_on_the_search_path	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#finding_vim_on_the_search_path() " {{{2$/;"	f
xolox#misc#tests#getting_configuration_options	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#getting_configuration_options() " {{{2$/;"	f
xolox#misc#tests#joining_of_multi_valued_options	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#joining_of_multi_valued_options() " {{{2$/;"	f
xolox#misc#tests#making_a_list_unique	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#making_a_list_unique() " {{{2$/;"	f
xolox#misc#tests#multiline_string_dedent	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#multiline_string_dedent()$/;"	f
xolox#misc#tests#pattern_escaping	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#pattern_escaping() " {{{2$/;"	f
xolox#misc#tests#run	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#run() " {{{1$/;"	f
xolox#misc#tests#shell_escaping	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#shell_escaping() " {{{2$/;"	f
xolox#misc#tests#splitting_of_multi_valued_options	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#splitting_of_multi_valued_options() " {{{2$/;"	f
xolox#misc#tests#string_case_transformation	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#string_case_transformation()$/;"	f
xolox#misc#tests#string_whitespace_compaction	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#string_whitespace_compaction()$/;"	f
xolox#misc#tests#string_whitespace_trimming	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#string_whitespace_trimming()$/;"	f
xolox#misc#tests#substitute_escaping	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#substitute_escaping() " {{{2$/;"	f
xolox#misc#tests#synchronous_command_execution	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#synchronous_command_execution() " {{{2$/;"	f
xolox#misc#tests#synchronous_command_execution_with_raising_of_errors	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#synchronous_command_execution_with_raising_of_errors() " {{{2$/;"	f
xolox#misc#tests#synchronous_command_execution_with_stderr	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#synchronous_command_execution_with_stderr() " {{{2$/;"	f
xolox#misc#tests#synchronous_command_execution_without_raising_errors	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#synchronous_command_execution_without_raising_errors() " {{{2$/;"	f
xolox#misc#tests#version_string_comparison	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#version_string_comparison() " {{{2$/;"	f
xolox#misc#tests#version_string_parsing	plugged/vim-misc/autoload/xolox/misc/tests.vim	/^function! xolox#misc#tests#version_string_parsing() " {{{2$/;"	f
xolox#misc#timer#convert	plugged/vim-misc/autoload/xolox/misc/timer.vim	/^function! xolox#misc#timer#convert(value) " {{{1$/;"	f
xolox#misc#timer#force	plugged/vim-misc/autoload/xolox/misc/timer.vim	/^function! xolox#misc#timer#force(...) " {{{1$/;"	f
xolox#misc#timer#resumable	plugged/vim-misc/autoload/xolox/misc/timer.vim	/^function! xolox#misc#timer#resumable() " {{{1$/;"	f
xolox#misc#timer#start	plugged/vim-misc/autoload/xolox/misc/timer.vim	/^function! xolox#misc#timer#start() " {{{1$/;"	f
xolox#misc#timer#stop	plugged/vim-misc/autoload/xolox/misc/timer.vim	/^function! xolox#misc#timer#stop(...) " {{{1$/;"	f
xolox#misc#version#at_least	plugged/vim-misc/autoload/xolox/misc/version.vim	/^function! xolox#misc#version#at_least(expected_version, available_version)$/;"	f
xolox#misc#version#parse	plugged/vim-misc/autoload/xolox/misc/version.vim	/^function! xolox#misc#version#parse(version_string)$/;"	f
xolox#notes#auto_complete_tags	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#auto_complete_tags() " {{{1$/;"	f
xolox#notes#autocmd_pattern	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#autocmd_pattern(directory, use_extension) " {{{2$/;"	f
xolox#notes#buffer_is_note	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#buffer_is_note() " {{{2$/;"	f
xolox#notes#cache_add	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#cache_add(filename, title) " {{{3$/;"	f
xolox#notes#cache_del	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#cache_del(filename) " {{{3$/;"	f
xolox#notes#check_sync_title	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#check_sync_title() " {{{1$/;"	f
xolox#notes#cleanup_list	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#cleanup_list() " {{{3$/;"	f
xolox#notes#cmd_complete	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#cmd_complete(arglead, cmdline, cursorpos) " {{{1$/;"	f
xolox#notes#current_title	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#current_title() " {{{2$/;"	f
xolox#notes#currently_inside_snippet	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#currently_inside_snippet() " {{{3$/;"	f
xolox#notes#delete	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#delete(bang, title) " {{{1$/;"	f
xolox#notes#edit	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#edit(bang, title) abort " {{{1$/;"	f
xolox#notes#edit_shadow	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#edit_shadow() " {{{1$/;"	f
xolox#notes#exists	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#exists(title) " {{{3$/;"	f
xolox#notes#filetype_is_note	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#filetype_is_note(ft) " {{{2$/;"	f
xolox#notes#find_directories	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#find_directories(include_shadow_directory) " {{{2$/;"	f
xolox#notes#fname_to_title	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#fname_to_title(filename) " {{{3$/;"	f
xolox#notes#foldexpr	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#foldexpr() " {{{3$/;"	f
xolox#notes#foldtext	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#foldtext() " {{{3$/;"	f
xolox#notes#friendly_date	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#friendly_date(time) " {{{2$/;"	f
xolox#notes#from_selection	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#from_selection(bang, cmd) " {{{1$/;"	f
xolox#notes#get_bullet	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#get_bullet(chr)$/;"	f
xolox#notes#get_comments_option	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#get_comments_option()$/;"	f
xolox#notes#get_fnames	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#get_fnames(include_shadow_notes) " {{{3$/;"	f
xolox#notes#get_fnames_and_titles	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#get_fnames_and_titles(include_shadow_notes) " {{{3$/;"	f
xolox#notes#get_list_level	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#get_list_level(line)$/;"	f
xolox#notes#get_titles	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#get_titles(include_shadow_notes) " {{{3$/;"	f
xolox#notes#highlight_names	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#highlight_names(force) " {{{3$/;"	f
xolox#notes#highlight_sources	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#highlight_sources(force) " {{{3$/;"	f
xolox#notes#html#apply_template	plugged/vim-notes/autoload/xolox/notes/html.vim	/^function! xolox#notes#html#apply_template(variables) " {{{1$/;"	f
xolox#notes#html#convert_note	plugged/vim-notes/autoload/xolox/notes/html.vim	/^function! xolox#notes#html#convert_note(note_text) " {{{1$/;"	f
xolox#notes#html#view	plugged/vim-notes/autoload/xolox/notes/html.vim	/^function! xolox#notes#html#view(open_in) " {{{1$/;"	f
xolox#notes#include_expr	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#include_expr(fname) " {{{3$/;"	f
xolox#notes#indent_list	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#indent_list(direction, line1, line2) " {{{3$/;"	f
xolox#notes#init	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#init() " {{{1$/;"	f
xolox#notes#insert_bidi_arrow	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#insert_bidi_arrow() " {{{3$/;"	f
xolox#notes#insert_bullet	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#insert_bullet(chr) " {{{3$/;"	f
xolox#notes#insert_em_dash	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#insert_em_dash() " {{{3$/;"	f
xolox#notes#insert_left_arrow	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#insert_left_arrow() " {{{3$/;"	f
xolox#notes#insert_quote	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#insert_quote(chr) " {{{3$/;"	f
xolox#notes#insert_right_arrow	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#insert_right_arrow() " {{{3$/;"	f
xolox#notes#insert_ruler	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#insert_ruler() " {{{3$/;"	f
xolox#notes#inside_snippet	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#inside_snippet(lnum, col) " {{{3$/;"	f
xolox#notes#is_shadow	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#is_shadow() " {{{1$/;"	f
xolox#notes#keyword_complete	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#keyword_complete(arglead, cmdline, cursorpos) " {{{2$/;"	f
xolox#notes#leading_bullet_pattern	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#leading_bullet_pattern()$/;"	f
xolox#notes#markdown#convert_block	plugged/vim-notes/autoload/xolox/notes/markdown.vim	/^function! xolox#notes#markdown#convert_block(block) " {{{1$/;"	f
xolox#notes#markdown#convert_note	plugged/vim-notes/autoload/xolox/notes/markdown.vim	/^function! xolox#notes#markdown#convert_note(note_text) " {{{1$/;"	f
xolox#notes#markdown#view	plugged/vim-notes/autoload/xolox/notes/markdown.vim	/^function! xolox#notes#markdown#view() " {{{1$/;"	f
xolox#notes#mediawiki#convert_block	plugged/vim-notes/autoload/xolox/notes/mediawiki.vim	/^function! xolox#notes#mediawiki#convert_block(block) " {{{1$/;"	f
xolox#notes#mediawiki#convert_note	plugged/vim-notes/autoload/xolox/notes/mediawiki.vim	/^function! xolox#notes#mediawiki#convert_note(note_text) " {{{1$/;"	f
xolox#notes#mediawiki#view	plugged/vim-notes/autoload/xolox/notes/mediawiki.vim	/^function! xolox#notes#mediawiki#view() " {{{1$/;"	f
xolox#notes#omni_complete	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#omni_complete(findstart, base) " {{{1$/;"	f
xolox#notes#parser#parse_note	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! xolox#notes#parser#parse_note(text) " {{{1$/;"	f
xolox#notes#parser#run_tests	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! xolox#notes#parser#run_tests() " {{{1$/;"	f
xolox#notes#parser#test_parsing_of_block_quotes	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! xolox#notes#parser#test_parsing_of_block_quotes()$/;"	f
xolox#notes#parser#test_parsing_of_code_blocks	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! xolox#notes#parser#test_parsing_of_code_blocks()$/;"	f
xolox#notes#parser#test_parsing_of_headings	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! xolox#notes#parser#test_parsing_of_headings()$/;"	f
xolox#notes#parser#test_parsing_of_list_items	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! xolox#notes#parser#test_parsing_of_list_items()$/;"	f
xolox#notes#parser#test_parsing_of_note_titles	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! xolox#notes#parser#test_parsing_of_note_titles()$/;"	f
xolox#notes#parser#test_parsing_of_paragraphs	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! xolox#notes#parser#test_parsing_of_paragraphs()$/;"	f
xolox#notes#parser#view_parse_nodes	plugged/vim-notes/autoload/xolox/notes/parser.vim	/^function! xolox#notes#parser#view_parse_nodes() " {{{1$/;"	f
xolox#notes#recent#edit	plugged/vim-notes/autoload/xolox/notes/recent.vim	/^function! xolox#notes#recent#edit(bang) " {{{1$/;"	f
xolox#notes#recent#show	plugged/vim-notes/autoload/xolox/notes/recent.vim	/^function! xolox#notes#recent#show(bang, title_filter) " {{{1$/;"	f
xolox#notes#recent#track	plugged/vim-notes/autoload/xolox/notes/recent.vim	/^function! xolox#notes#recent#track() " {{{1$/;"	f
xolox#notes#refresh_syntax	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#refresh_syntax() " {{{3$/;"	f
xolox#notes#related	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#related(bang) " {{{1$/;"	f
xolox#notes#save	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#save() abort " {{{1$/;"	f
xolox#notes#search	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#search(bang, input) " {{{1$/;"	f
xolox#notes#select	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#select(filter) " {{{1$/;"	f
xolox#notes#select_directory	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#select_directory() " {{{3$/;"	f
xolox#notes#set_filetype	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#set_filetype() " {{{2$/;"	f
xolox#notes#shortcut	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#shortcut() " {{{1$/;"	f
xolox#notes#swaphack	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#swaphack() " {{{2$/;"	f
xolox#notes#tags#create_index	plugged/vim-notes/autoload/xolox/notes/tags.vim	/^function! xolox#notes#tags#create_index() " {{{1$/;"	f
xolox#notes#tags#forget_note	plugged/vim-notes/autoload/xolox/notes/tags.vim	/^function! xolox#notes#tags#forget_note(title) " {{{1$/;"	f
xolox#notes#tags#friendly_name	plugged/vim-notes/autoload/xolox/notes/tags.vim	/^function! xolox#notes#tags#friendly_name(tagname) " {{{1$/;"	f
xolox#notes#tags#load_index	plugged/vim-notes/autoload/xolox/notes/tags.vim	/^function! xolox#notes#tags#load_index() " {{{1$/;"	f
xolox#notes#tags#save_index	plugged/vim-notes/autoload/xolox/notes/tags.vim	/^function! xolox#notes#tags#save_index() " {{{1$/;"	f
xolox#notes#tags#scan_note	plugged/vim-notes/autoload/xolox/notes/tags.vim	/^function! xolox#notes#tags#scan_note(title, text) " {{{1$/;"	f
xolox#notes#tags#show_tags	plugged/vim-notes/autoload/xolox/notes/tags.vim	/^function! xolox#notes#tags#show_tags(minsize) " {{{1$/;"	f
xolox#notes#title_to_fname	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#title_to_fname(title) " {{{3$/;"	f
xolox#notes#trailing_bullet_pattern	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#trailing_bullet_pattern()$/;"	f
xolox#notes#unicode_enabled	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#unicode_enabled() " {{{1$/;"	f
xolox#notes#unload_from_cache	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#unload_from_cache() " {{{3$/;"	f
xolox#notes#user_complete	plugged/vim-notes/autoload/xolox/notes.vim	/^function! xolox#notes#user_complete(findstart, base) " {{{1$/;"	f
xrange	plugged/alchemist.vim/erl_terms.py	/^    xrange = range$/;"	v
yS	plugged/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	plugged/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	plugged/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
yank	plugged/vim-bookmarks/autoload/unite/kinds/vim_bookmarks.vim	/^function! s:yank(text)$/;"	f
yank_to_register	plugged/fzf.vim/autoload/fzf/vim.vim	/^function! s:yank_to_register(data)$/;"	f
yansfg	plugged/vim-textobj-user/t/old-property-names.vim	/^    normal yansfg$/;"	m
yansfs	plugged/vim-textobj-user/t/old-property-names.vim	/^    normal yansfs$/;"	m
yansp	plugged/vim-textobj-user/t/old-property-names.vim	/^    normal yansp$/;"	m
yaosfg	plugged/vim-textobj-user/t/old-property-names.vim	/^    normal yaosfg$/;"	m
yaosfs	plugged/vim-textobj-user/t/old-property-names.vim	/^    normal yaosfs$/;"	m
yaosp	plugged/vim-textobj-user/t/old-property-names.vim	/^    normal yaosp$/;"	m
ys	plugged/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	plugged/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
zip	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip_fill	plugged/vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zip_fill	plugged/vim-polyglot/autoload/vital/_crystal/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zoom#toggle	plugged/vim-zoom/autoload/zoom.vim	/^function! zoom#toggle()$/;"	f
zoom_session_file	plugged/vim-zoom/autoload/zoom.vim	/^function! s:zoom_session_file()$/;"	f
{{	plugged/vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{ {{}}<left><left>$/;"	m
{{!	plugged/vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{! {{!}}<left><left>$/;"	m
{{#	plugged/vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{# {{#}}<cr>{{\/}}<up><left><left>$/;"	m
{{<	plugged/vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{< {{<}}<left><left>$/;"	m
{{>	plugged/vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{> {{>}}<left><left>$/;"	m
{{if	plugged/vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{if {{#if }}<cr>{{\/if}}<up><left>$/;"	m
{{ife	plugged/vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{ife {{#if }}<cr>{{else}}<cr>{{\/if}}<up><up><left>$/;"	m
{{{	plugged/vim-polyglot/ftplugin/mustache.vim	/^  inoremap <buffer> {{{ {{{}}}<left><left><left>$/;"	m
